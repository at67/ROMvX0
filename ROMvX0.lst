* source: Core/ROMvX0.asm.py
                                          163   enableListing()
                                          164   #-----------------------------------------------------------------------
                                          165   #
                                          166   #  Start of core
                                          167   #
                                          168   #-----------------------------------------------------------------------
                                          169
                                          170   # Pre-loading the formal interface as a way to get warnings when
                                          171   # accidentally redefined with a different value
                                          172   loadBindings('ROMvX0_interface.json')
                                          173   loadBindings('Core/interface-dev.json') # Provisional values for DEVROM
                                          174
                                          175   # Gigatron clock
                                          176   cpuClock = 6.250e+06
                                          177
                                          178   # Output pin assignment for VGA
                                          179   R, G, B, hSync, vSync = 1, 4, 16, 64, 128
                                          180   syncBits = hSync+vSync # Both pulses negative
                                          181
                                          182   # When the XOUT register is in the circuit, the rising edge triggers its update.
                                          183   # The loop can therefore not be agnostic to the horizontal pulse polarity.
                                          184   assert syncBits & hSync != 0
                                          185
                                          186   # VGA 640x480 defaults (to be adjusted below!)
                                          187   vFront = 10     # Vertical front porch
                                          188   vPulse = 2      # Vertical sync pulse
                                          189   vBack  = 33     # Vertical back porch
                                          190   vgaLines = vFront + vPulse + vBack + 480
                                          191   vgaClock = 25.175e+06
                                          192
                                          193   # Video adjustments for Gigatron
                                          194   # 1. Our clock is (slightly) slower than 1/4th VGA clock. Not all monitors will
                                          195   #    accept the decreased frame rate, so we restore the frame rate to above
                                          196   #    minimum 59.94 Hz by cutting some lines from the vertical front porch.
                                          197   vFrontAdjust = vgaLines - int(4 * cpuClock / vgaClock * vgaLines)
                                          198   vFront -= vFrontAdjust
                                          199   # 2. Extend vertical sync pulse so we can feed the game controller the same
                                          200   #    signal. This is needed for controllers based on the 4021 instead of 74165
                                          201   vPulseExtension = max(0, 8-vPulse)
                                          202   vPulse += vPulseExtension
                                          203   # 3. Borrow these lines from the back porch so the refresh rate remains
                                          204   #    unaffected
                                          205   vBack -= vPulseExtension
                                          206
                                          207   # Start value of vertical blank counter
                                          208   videoYline0 = 1-2*(vFront+vPulse+vBack-2)
                                          209
                                          210   # Mismatch between video lines and sound channels
                                          211   soundDiscontinuity = (vFront+vPulse+vBack) % 4
                                          212
                                          213   # QQVGA resolution
                                          214   qqVgaWidth      = 160
                                          215   qqVgaHeight     = 120
                                          216
                                          217   # Game controller bits (actual controllers in kit have negative output)
                                          218   # +----------------------------------------+
                                          219   # |       Up                        B*     |
                                          220   # |  Left    Right               B     A*  |
                                          221   # |      Down      Select Start     A      |
                                          222   # +----------------------------------------+ *=Auto fire
                                          223   buttonRight     = 1
                                          224   buttonLeft      = 2
                                          225   buttonDown      = 4
                                          226   buttonUp        = 8
                                          227   buttonStart     = 16
                                          228   buttonSelect    = 32
                                          229   buttonB         = 64
                                          230   buttonA         = 128
                                          231
                                          232   #-----------------------------------------------------------------------
                                          233   #
                                          234   #  RAM page 0: zero-page variables
                                          235   #
                                          236   #-----------------------------------------------------------------------
                                          237
                                          238   # Memory size in pages from auto-detect
                                          239   memSize         = zpByte()
                                          240
                                          241   # Active interpreter page, swapped with channel, so that we can do a one
                                          242   # instruction vCpuSelect reset, i.e. st(vCpuSelect,[vCpuSelect])
                                          243   vCpuSelect      = zpByte()
                                          244
                                          245   # Next sound sample being synthesized
                                          246   sample          = zpByte()
                                          247   # To save one instruction in the critical inner loop, `sample' is always
                                          248   # reset with its own address instead of, for example, the value 0. Compare:
                                          249   # 1 instruction reset
                                          250   #       st sample,[sample]
                                          251   # 2 instruction reset:
                                          252   #       ld 0
                                          253   #       st [sample]
                                          254   # The difference is not audible. This is fine when the reset/address
                                          255   # value is low and doesn't overflow with 4 channels added to it.
                                          256   # There is an alternative, but it requires pull-down diodes on the data bus:
                                          257   #       st [sample],[sample]
                                          258   assert 4*63 + sample < 256
                                          259   # We pin this reset/address value to 3, so `sample' swings from 3 to 255
                                          260   assert sample == 3
                                          261
                                          262   # Former bootCount and bootCheck (<= ROMv3)
                                          263   vSPH             = zpByte()
                                          264   #zpReserved      = zpByte() # Recycled and still unused. Candidate future uses:
                                          265                              # - Video driver high address (for alternative video modes)
                                          266                              # - v6502: ADH offset ("MMU")
                                          267                              # - v8080: ???
                                          268
                                          269   # The current channel number for sound generation. Advanced every scan line
                                          270   # and independent of the vertical refresh to maintain constant oscillation.
                                          271   channel         = zpByte()
                                          272
                                          273   # Entropy harvested from SRAM startup and controller input
                                          274   entropy         = zpByte(3)
                                          275
                                          276   # Visible video
                                          277   videoY          = zpByte() # Counts up from 0 to 238 in steps of 2
                                          278                              # Counts up (and is odd) during vertical blank
                                          279   videoModeB      = zpByte() # Handler for every 2nd line (pixel burst or vCPU)
                                          280   videoModeC      = zpByte() # Handler for every 3rd line (pixel burst or vCPU)
                                          281   videoModeD      = zpByte() # Handler for every 4th line (pixel burst or vCPU)
                                          282
                                          283   nextVideo       = zpByte() # Jump offset to scan line handler (videoA, B, C...)
                                          284   videoPulse      = nextVideo # Used for pulse width modulation
                                          285
                                          286   # Frame counter is good enough as system clock
                                          287   frameCount      = zpByte(1)
                                          288
                                          289   # Serial input (game controller)
                                          290   serialRaw       = zpByte() # New raw serial read
                                          291   serialLast      = zpByte() # Previous serial read
                                          292   buttonState     = zpByte() # Clearable button state
                                          293   resetTimer      = zpByte() # After 2 seconds of holding 'Start', do a soft reset
                                          294                              # XXX move to page 1 to free up space
                                          295
                                          296   # Extended output (blinkenlights in bit 0:3 and audio in bit 4:7). This
                                          297   # value must be present in AC during a rising hSync edge. It then gets
                                          298   # copied to the XOUT register by the hardware. The XOUT register is only
                                          299   # accessible in this indirect manner because it isn't part of the core
                                          300   # CPU architecture.
                                          301   xout            = zpByte()
                                          302   xoutMask        = zpByte() # The blinkenlights and sound on/off state
                                          303
                                          304   # vCPU interpreter
                                          305   vTicks          = zpByte()  # Interpreter ticks are units of 2 clocks
                                          306   vPC             = zpByte(2) # Interpreter program counter, points into RAM
                                          307   vAC             = zpByte(2) # Interpreter accumulator, 16-bits
                                          308   vLR             = zpByte(2) # Return address, for returning after CALL
                                          309   vSP             = zpByte(1) # Stack pointer
                                          310   vTmp            = zpByte()
                                          311   vReturn         = zpByte()  # Return into video loop (in page of vBlankStart)
                                          312
                                          313   # Scratch
                                          314   frameX          = zpByte() # Starting byte within page
                                          315   frameY          = zpByte() # Page of current pixel line (updated by videoA)
                                          316
                                          317   # Vertical blank (reuse some variables used in the visible part)
                                          318   videoSync0      = frameX   # Vertical sync type on current line (0xc0 or 0x40)
                                          319   videoSync1      = frameY   # Same during horizontal pulse (0x80 or 0x00)
                                          320
                                          321   # Versioning for GT1 compatibility
                                          322   # Please refer to Docs/GT1-files.txt for interpreting this variable
                                          323   romType         = zpByte(1)
                                          324
                                          325   # The low 3 bits are repurposed to select the actively updated sound channels.
                                          326   # Valid bit combinations are:
                                          327   #  xxxxx011     Default after reset: 4 channels (page 1,2,3,4)
                                          328   #  xxxxx001     2 channels at double update rate (page 1,2)
                                          329   #  xxxxx000     1 channel at quadruple update rate (page 1)
                                          330   # The main application for this is to free up the high bytes of page 2,3,4.
                                          331   channelMask = symbol('channelMask_v4')
                                          332   assert romType == channelMask
                                          333
                                          334   # SYS function arguments and results/scratch
                                          335   sysFn           = zpByte(2)
                                          336   sysArgs         = zpByte(8)
                                          337
                                          338   # Play sound if non-zero, count down and stop sound when zero
                                          339   soundTimer      = zpByte()
                                          340
                                          341   # Fow now the LED state machine itself is hard-coded in the program ROM
                                          342   ledTimer        = zpByte() # Number of ticks until next LED change
                                          343   ledState_v2     = zpByte() # Current LED state
                                          344   ledTempo        = zpByte() # Next value for ledTimer after LED state change
                                          345
                                          346   # All bytes above, except 0x80, are free for temporary/scratch/stacks etc
                                          347   userVars        = zpByte(0)
                                          348
                                          349   #-----------------------------------------------------------------------
                                          350   #
                                          351   #  RAM page 1: video line table
                                          352   #
                                          353   #-----------------------------------------------------------------------
                                          354
                                          355   # Byte 0-239 define the video lines
                                          356   videoTable      = 0x0100 # Indirection table: Y[0] dX[0]  ..., Y[119] dX[119]
                                          357
                                          358   vReset          = 0x01f0
                                          359   vIRQ_v5         = 0x01f6
                                          360   ctrlBits        = 0x01f8
                                          361   videoTop_v5     = 0x01f9 # Number of skip lines
                                          362
                                          363   # Highest bytes are for sound channel variables
                                          364   wavA = 250      # Waveform modulation with `adda'
                                          365   wavX = 251      # Waveform modulation with `xora'
                                          366   keyL = 252      # Frequency low 7 bits (bit7 == 0)
                                          367   keyH = 253      # Frequency high 8 bits
                                          368   oscL = 254      # Phase low 7 bits
                                          369   oscH = 255      # Phase high 8 bits
                                          370
                                          371   #-----------------------------------------------------------------------
                                          372   #  Memory layout
                                          373   #-----------------------------------------------------------------------
                                          374
                                          375   userCode = 0x0200       # Application vCPU code
                                          376   soundTable = 0x0700     # Wave form tables (doubles as right-shift-2 table)
                                          377   screenMemory = 0x0800   # Default start of screen memory: 0x0800 to 0x7fff
                                          378
                                          379   #-----------------------------------------------------------------------
                                          380   #  Application definitions
                                          381   #-----------------------------------------------------------------------
                                          382
                                          383   maxTicks = 30//2                 # Duration of vCPU's slowest virtual opcode (ticks)
                                          384   minTicks = 14//2                 # vcPU's fastest instruction
                                          385   v6502_maxTicks = 38//2           # Max duration of v6502 processing phase (ticks)
                                          386
                                          387   runVcpu_overhead = 5            # Caller overhead (cycles)
                                          388   vCPU_overhead = 9               # Callee overhead of jumping in and out (cycles)
                                          389   v6502_overhead = 11             # Callee overhead for v6502 (cycles)
                                          390
                                          391   v6502_adjust = (v6502_maxTicks - maxTicks) + (v6502_overhead - vCPU_overhead)//2
                                          392   assert v6502_adjust >= 0        # v6502's overhead is a bit more than vCPU
                                          393
                                          394   def runVcpu(n, ref=None, returnTo=None):
                                          395     """Macro to run interpreter for exactly n cycles. Returns 0 in AC.
                                          396
                                          397     - `n' is the number of available Gigatron cycles including overhead.
                                          398       This is converted into interpreter ticks and takes into account
                                          399       the vCPU calling overheads. A `nop' is inserted when necessary
                                          400       for alignment between cycles and ticks.
                                          401     - `returnTo' is where program flow continues after return. If not set
                                          402        explicitely, it will be the first instruction behind the expansion.
                                          403     - If another interpreter than vCPU is active (v6502...), that one
                                          404       must adjust for the timing differences, because runVcpu wouldn't know."""
                                          405
                                          406     overhead = runVcpu_overhead + vCPU_overhead
                                          407     if returnTo == 0x100:         # Special case for videoZ
                                          408       overhead -= 2
                                          409
                                          410     if n is None:
                                          411       # (Clumsily) create a maximum time slice, corresponding to a vTicks
                                          412       # value of 127 (giving 282 cycles). A higher value doesn't work because
                                          413       # then SYS functions that just need 28 cycles (0 excess) won't start.
                                          414       n = (127 + maxTicks) * 2 + overhead
                                          415
                                          416     n -= overhead
                                          417     assert n > 0
                                          418
                                          419     if n % 2 == 1:
                                          420       nop()                       # Tick alignment
                                          421       n -= 1
                                          422     assert n % 2 == 0
                                          423
                                          424     print('runVcpu at $%04x net cycles %3s info %s' % (pc(), n, ref))
                                          425
                                          426     if returnTo != 0x100:
                                          427       if returnTo is None:
                                          428         returnTo = pc() + 5       # Next instruction
                                          429       ld(lo(returnTo))            #0
                                          430       st([vReturn])               #1
                                          431
                                          432     n //= 2
                                          433     n -= maxTicks                 # First instruction always runs
                                          434     assert n < 128
                                          435     assert n >= v6502_adjust
                                          436
                                          437     ld([vCpuSelect],Y)            #2
                                          438     jmp(Y,'ENTER')                #3
                                          439     ld(n)                         #4
                                          440   assert runVcpu_overhead ==       5
                                          441
                                          442   #-----------------------------------------------------------------------
                                          443   #       v6502 definitions
                                          444   #-----------------------------------------------------------------------
                                          445
                                          446   # Registers are zero page variables
                                          447   v6502_PC        = vLR           # Program Counter
                                          448   v6502_PCL       = vLR+0         # Program Counter Low
                                          449   v6502_PCH       = vLR+1         # Program Counter High
                                          450   v6502_S         = vSP           # Stack Pointer (kept as "S+1")
                                          451   v6502_A         = vAC+0         # Accumulator
                                          452   v6502_BI        = vAC+1         # B Input Register (used by SBC)
                                          453   v6502_ADL       = sysArgs+0     # Low Address Register
                                          454   v6502_ADH       = sysArgs+1     # High Address Register
                                          455   v6502_IR        = sysArgs+2     # Instruction Register
                                          456   v6502_P         = sysArgs+3     # Processor Status Register (V flag in bit 7)
                                          457   v6502_Qz        = sysArgs+4     # Quick Status Register for Z flag
                                          458   v6502_Qn        = sysArgs+5     # Quick Status Register for N flag
                                          459   v6502_X         = sysArgs+6     # Index Register X
                                          460   v6502_Y         = sysArgs+7     # Index Register Y
                                          461   v6502_Tmp       = vTmp          # Scratch (may be clobbered outside v6502)
                                          462
                                          463   # MOS 6502 definitions for P register
                                          464   v6502_Cflag = 1                 # Carry Flag (unsigned overflow)
                                          465   v6502_Zflag = 2                 # Zero Flag (all bits zero)
                                          466   v6502_Iflag = 4                 # Interrupt Enable Flag (1=Disable)
                                          467   v6502_Dflag = 8                 # Decimal Enable Flag (aka BCD mode, 1=Enable)
                                          468   v6502_Bflag = 16                # Break (or PHP) Instruction Flag
                                          469   v6502_Uflag = 32                # Unused (always 1)
                                          470   v6502_Vflag = 64                # Overflow Flag (signed overflow)
                                          471   v6502_Nflag = 128               # Negative Flag (bit 7 of result)
                                          472
                                          473   # In emulation it is much faster to keep the V flag in bit 7
                                          474   # This can be corrected when importing/exporting with PHP, PLP, etc
                                          475   v6502_Vemu = 128
                                          476
                                          477   # On overflow:
                                          478   #       """Overflow is set if two inputs with the same sign produce
                                          479   #          a result with a different sign. Otherwise it is clear."""
                                          480   # Formula (without carry/borrow in!):
                                          481   #       (A ^ (A+B)) & (B ^ (A+B)) & 0x80
                                          482   # References:
                                          483   #       http://www.righto.com/2012/12/the-6502-overflow-flag-explained.html
                                          484   #       http://6502.org/tutorials/vflag.html
                                          485
                                          486   # Memory layout
                                          487   v6502_Stack     = 0x0000        # 0x0100 is already used in the Gigatron
                                          488   #v6502_NMI      = 0xfffa
                                          489   #v6502_RESET    = 0xfffc
                                          490   #v6502_IRQ      = 0xfffe
                                          491
                                          492   #-----------------------------------------------------------------------
                                          493   #
                                          494   #  $0000 ROM page 0: Boot
                                          495   #
                                          496   #-----------------------------------------------------------------------
                                          497
                                          498   align(0x100, size=0x80)
                                          499
                                          500   # Give a first sign of life that can be checked with a voltmeter
              address
              |    encoding
              |    |     instruction
              |    |     |    operands
              |    |     |    |
              V    V     V    V
              0000 0000  ld   $00         501   ld(0b0000)                      # LEDs |OOOO|
              0001 1880  ld   $80,out     502   ld(syncBits^hSync,OUT)          # Prepare XOUT update, hSync goes down, RGB to black
              0002 18c0  ld   $c0,out     503   ld(syncBits,OUT)                # hSync goes up, updating XOUT
                                          504
                                          505   # Setup I/O and RAM expander
              0003 c17c  ctrl $7c         506   ctrl(0b01111100)                # Disable SPI slaves, enable RAM, bank 1
                                          507   #      ^^^^^^^^
                                          508   #      |||||||`-- SCLK
                                          509   #      ||||||`--- Not connected
                                          510   #      |||||`---- /SS0
                                          511   #      ||||`----- /SS1
                                          512   #      |||`------ /SS2
                                          513   #      ||`------- /SS3
                                          514   #      |`-------- B0
                                          515   #      `--------- B1
                                          516   # bit15 --------- MOSI = 0
                                          517
                                          518   # Simple RAM test and size check by writing to [1<<n] and see if [0] changes or not.
              0004 0001  ld   $01         519   ld(1)                           # Quick RAM test and count
                                          520   label('.countMem0')
.countMem0:   0005 d601  st   [$01],y     521   st([memSize],Y)                 # Store in RAM and load AC in Y
              0006 00ff  ld   $ff         522   ld(255)
              0007 6900  xora [y,$00]     523   xora([Y,0])                     # Invert value from memory
              0008 ca00  st   [y,$00]     524   st([Y,0])                       # Test RAM by writing the new value
              0009 c200  st   [$00]       525   st([0])                         # Copy result in [0]
              000a 6900  xora [y,$00]     526   xora([Y,0])                     # Read back and compare if written ok
              000b ec0b  bne  $000b       527   bne(pc())                       # Loop forever on RAM failure here
              000c 00ff  ld   $ff         528   ld(255)
              000d 6900  xora [y,$00]     529   xora([Y,0])                     # Invert memory value again
              000e ca00  st   [y,$00]     530   st([Y,0])                       # To restore original value
              000f 6100  xora [$00]       531   xora([0])                       # Compare with inverted copy
              0010 f014  beq  .countMem1  532   beq('.countMem1')               # If equal, we wrapped around
              0011 0101  ld   [$01]       533   ld([memSize])
              0012 fc05  bra  .countMem0  534   bra('.countMem0')               # Loop to test next address line
              0013 8200  adda ac          535   adda(AC)                        # Executes in the branch delay slot!
                                          536   label('.countMem1')
                                          537
                                          538   # Momentarily wait to allow for debouncing of the reset switch by spinning
                                          539   # roughly 2^15 times at 2 clocks per loop: 6.5ms@10MHz to 10ms@6.3MHz
                                          540   # Real-world switches normally bounce shorter than that.
                                          541   # "[...] 16 switches exhibited an average 1557 usec of bouncing, with,
                                          542   #  as I said, a max of 6200 usec" (From: http://www.ganssle.com/debouncing.htm)
                                          543   # Relevant for the breadboard version, as the kit doesn't have a reset switch.
                                          544
.countMem1:   0014 00ff  ld   $ff         545   ld(255)                         # Debounce reset button
                                          546   label('.debounce')
.debounce:    0015 c200  st   [$00]       547   st([0])
              0016 ec16  bne  $0016       548   bne(pc())
              0017 a001  suba $01         549   suba(1)                         # Branch delay slot
              0018 0100  ld   [$00]       550   ld([0])
              0019 ec15  bne  .debounce   551   bne('.debounce')
              001a a001  suba $01         552   suba(1)                         # Branch delay slot
                                          553
                                          554   # Update LEDs (memory is present and counted, reset is stable)
              001b 0001  ld   $01         555   ld(0b0001)                      # LEDs |*OOO|
              001c 1880  ld   $80,out     556   ld(syncBits^hSync,OUT)
              001d 18c0  ld   $c0,out     557   ld(syncBits,OUT)
                                          558
                                          559   # Scan the entire RAM space to collect entropy for a random number generator.
                                          560   # The 16-bit address space is scanned, even if less RAM was detected.
              001e 0000  ld   $00         561   ld(0)                           # Collect entropy from RAM
              001f d218  st   [$18],x     562   st([vAC+0],X)
              0020 d619  st   [$19],y     563   st([vAC+1],Y)
                                          564   label('.initEnt0')
.initEnt0:    0021 0106  ld   [$06]       565   ld([entropy+0])
              0022 f425  bge  .initEnt1   566   bpl('.initEnt1')
              0023 8d00  adda [y,x]       567   adda([Y,X])
              0024 60bf  xora $bf         568   xora(191)
                                          569   label('.initEnt1')
.initEnt1:    0025 c206  st   [$06]       570   st([entropy+0])
              0026 0107  ld   [$07]       571   ld([entropy+1])
              0027 f42a  bge  .initEnt2   572   bpl('.initEnt2')
              0028 8106  adda [$06]       573   adda([entropy+0])
              0029 60c1  xora $c1         574   xora(193)
                                          575   label('.initEnt2')
.initEnt2:    002a c207  st   [$07]       576   st([entropy+1])
              002b 8108  adda [$08]       577   adda([entropy+2])
              002c c208  st   [$08]       578   st([entropy+2])
              002d 0118  ld   [$18]       579   ld([vAC+0])
              002e 8001  adda $01         580   adda(1)
              002f ec21  bne  .initEnt0   581   bne('.initEnt0')
              0030 d218  st   [$18],x     582   st([vAC+0],X)
              0031 0119  ld   [$19]       583   ld([vAC+1])
              0032 8001  adda $01         584   adda(1)
              0033 ec21  bne  .initEnt0   585   bne('.initEnt0')
              0034 d619  st   [$19],y     586   st([vAC+1],Y)
                                          587
                                          588   # Update LEDs
              0035 0003  ld   $03         589   ld(0b0011)                      # LEDs |**OO|
              0036 1880  ld   $80,out     590   ld(syncBits^hSync,OUT)
              0037 18c0  ld   $c0,out     591   ld(syncBits,OUT)
                                          592
                                          593   # vCPU reset handler
              0038 00ee  ld   $ee         594   ld((vReset&255)-2)              # Setup vCPU reset handler
              0039 c216  st   [$16]       595   st([vPC])
              003a 9002  adda $02,x       596   adda(2,X)
              003b 0001  ld   $01         597   ld(vReset>>8)
              003c d617  st   [$17],y     598   st([vPC+1],Y)
              003d dc59  st   $59,[y,x++] 599   st('LDI',             [Y,Xpp])
              003e dc5e  st   $5e,[y,x++] 600   st('SYS_Reset_88',    [Y,Xpp])
              003f dc2b  st   $2b,[y,x++] 601   st('STW',             [Y,Xpp])
              0040 dc22  st   $22,[y,x++] 602   st(sysFn,             [Y,Xpp])
              0041 dcb4  st   $b4,[y,x++] 603   st('SYS',             [Y,Xpp])  # SYS -> SYS_Reset_88 -> SYS_Exec_88
              0042 dce3  st   $e3,[y,x++] 604   st(256-88//2+maxTicks,[Y,Xpp])
              0043 dc00  st   $00,[y,x++] 605   st(0,                 [Y,Xpp])  # vIRQ_v5: Disable interrupts
              0044 dc00  st   $00,[y,x++] 606   st(0,                 [Y,Xpp])  # vIRQ_v5
              0045 dcfc  st   $fc,[y,x++] 607   st(0b11111100,        [Y,Xpp])  # Control register
              0046 dc00  st   $00,[y,x++] 608   st(0,                 [Y,Xpp])  # videoTop
                                          609
              0047 0002  ld   $02         610   ld(hi('ENTER'))                 # Active interpreter (vCPU,v6502) = vCPU
              0048 c202  st   [$02]       611   st([vCpuSelect])
                                          612
              0049 00ff  ld   $ff         613   ld(255)                         # Setup serial input
              004a c20e  st   [$0e]       614   st([frameCount])
              004b c20f  st   [$0f]       615   st([serialRaw])
              004c c210  st   [$10]       616   st([serialLast])
              004d c211  st   [$11]       617   st([buttonState])
              004e c212  st   [$12]       618   st([resetTimer])                # resetTimer<0 when entering Main.gcl
                                          619
              004f 0007  ld   $07         620   ld(0b0111)                      # LEDs |***O|
              0050 1880  ld   $80,out     621   ld(syncBits^hSync,OUT)
              0051 18c0  ld   $c0,out     622   ld(syncBits,OUT)
                                          623
              0052 0000  ld   $00         624   ld(0)
              0053 c200  st   [$00]       625   st([0])                         # Carry lookup ([0x80] in 1st line of vBlank)
              0054 c205  st   [$05]       626   st([channel])
              0055 c22c  st   [$2c]       627   st([soundTimer])
                                          628
              0056 000f  ld   $0f         629   ld(0b1111)                      # LEDs |****|
              0057 1880  ld   $80,out     630   ld(syncBits^hSync,OUT)
              0058 18c0  ld   $c0,out     631   ld(syncBits,OUT)
              0059 c213  st   [$13]       632   st([xout])                      # Setup for control by video loop
              005a c214  st   [$14]       633   st([xoutMask])
                                          634
              005b 1401  ld   $01,y       635   ld(hi('startVideo'),Y)          # Enter video loop at vertical blank
              005c e003  jmp  y,$03       636   jmp(Y,'startVideo')
              005d c22e  st   [$2e]       637   st([ledState_v2])               # Setting to 1..126 means "stopped"
                                          638
                                          639   #-----------------------------------------------------------------------
                                          640   # Extension SYS_Reset_88: Soft reset
                                          641   #-----------------------------------------------------------------------
                                          642
                                          643   # SYS_Reset_88 initiates an immediate Gigatron reset from within the vCPU.
                                          644   # The reset sequence itself is mostly implemented in GCL by Reset.gcl,
                                          645   # which must first be loaded into RAM. But as that takes more than 1 scanline,
                                          646   # some vCPU bootstrapping code gets loaded with SYS_Exec_88.
                                          647   # !!! This function was REMOVED from interface.json
                                          648   # !!! Better use vReset as generic entry point for soft reset
                                          649
                                          650   # ROM type (see also Docs/GT1-files.txt)
                                          651   romTypeValue = symbol('romTypeValue_ROMvX0')
                                          652
                                          653   label('SYS_Reset_88')
                                          654   assert pc()>>8 == 0
                                          655   assert (romTypeValue & 7) == 0
SYS_Reset_88: 005e 141f  ld   $1f,y       656   ld(hi('sys_Reset_88'),Y)        #15
              005f e041  jmp  y,$41       657   jmp(Y,'sys_Reset_88')           #16
              0060 0080  ld   $80         658   ld(romTypeValue)                #17 Set ROM type/version and clear channel mask
                                          659
                                          660
                                          661   # STPX implementation
                                          662   label('stpx#13')
stpx#13:      0061 0500  ld   [x]         663   ld([X])                         #13,
              0062 c21d  st   [$1d]       664   st([vTmp])                      #14,
              0063 de00  st   [y,x++]     665   st([Y,Xpp])                     #15, relies on being in page 0!
              0064 0500  ld   [x]         666   ld([X])                         #16, y
              0065 8500  adda [x]         667   adda([X])                       #17, y*2
              0066 1200  ld   ac,x        668   ld(AC,X)                        #18,
              0067 1401  ld   $01,y       669   ld(1,Y)                         #19, Y,X = 0x0100 + 2*y, (0 >= y <= 127)
              0068 0d00  ld   [y,x]       670   ld([Y,X])                       #20,
              0069 1600  ld   ac,y        671   ld(AC,Y)                        #21, Y = [Y,X]
              006a 112b  ld   [$2b],x     672   ld([sysArgs+7],X)               #22,
              006b 0500  ld   [x]         673   ld([X])                         #23, colour
              006c 111d  ld   [$1d],x     674   ld([vTmp],X)                    #24,
              006d ce00  st   [y,x]       675   st([Y,X])                       #25, [Y,X] = colour
              006e 1403  ld   $03,y       676   ld(hi('NEXTY'),Y)               #26,
              006f e000  jmp  y,$00       677   jmp(Y,'NEXTY')                  #27,
              0070 00f1  ld   $f1         678   ld(-30/2)                       #28,
                                          679
                                          680
              0071 0200  nop              681   align(0x80, size=0x80)
              0072 0200  nop
              0073 0200  nop
              * 15 times
                                          682   assert pc() == 0x80
                                          683
                                          684
                                          685   # ADDW moved to page0 to free up room for more instruction slots in page3
                                          686   # This implemetation of ADDW relies on Y=0 and hence cannot be dispatched from any other page
                                          687   label('addw#13')
addw#13:      0080 0118  ld   [$18]       688   ld([vAC])                       #13 Low byte
              0081 c21d  st   [$1d]       689   st([vTmp])                      #14 Store low result
              0082 8500  adda [x]         690   adda([X])                       #15
              0083 c218  st   [$18]       691   st([vAC])                       #16
              0084 e88f  blt  .addw#19    692   bmi('.addw#19')                 #17 Now figure out if there was a carry
              0085 0500  ld   [x]         693   ld([X])                         #18
              0086 de00  st   [y,x++]     694   st([Y,Xpp])                     #29
              0087 411d  ora  [$1d]       695   ora([vTmp])                     #20
              0088 e898  blt  .addw#23    696   bmi('.addw#23')                 #21 If Carry == 1
              0089 0500  ld   [x]         697   ld([X])                         #22
              008a 8119  adda [$19]       698   adda([vAC+1])                   #23
              008b c219  st   [$19]       699   st([vAC+1])                     #24 Store high result
              008c 1403  ld   $03,y       700   ld(hi('REENTER'),Y)             #25
              008d e0cb  jmp  y,$cb       701   jmp(Y,'REENTER')                #26
              008e 00f1  ld   $f1         702   ld(-30/2)                       #27
                                          703   label('.addw#19')
.addw#19:     008f de00  st   [y,x++]     704   st([Y,Xpp])                     #19
              0090 211d  anda [$1d]       705   anda([vTmp])                    #20
              0091 e898  blt  .addw#23    706   bmi('.addw#23')                 #21 If Carry == 1
              0092 0500  ld   [x]         707   ld([X])                         #22
              0093 8119  adda [$19]       708   adda([vAC+1])                   #23
              0094 c219  st   [$19]       709   st([vAC+1])                     #24 Store high result
              0095 1403  ld   $03,y       710   ld(hi('REENTER'),Y)             #25
              0096 e0cb  jmp  y,$cb       711   jmp(Y,'REENTER')                #26
              0097 00f1  ld   $f1         712   ld(-30/2)                       #27
                                          713   label('.addw#23')
.addw#23:     0098 8001  adda $01         714   adda(1)                         #23
              0099 8119  adda [$19]       715   adda([vAC+1])                   #24
              009a c219  st   [$19]       716   st([vAC+1])                     #25 Store high result
              009b 1403  ld   $03,y       717   ld(hi('NEXTY'),Y)               #26
              009c e000  jmp  y,$00       718   jmp(Y,'NEXTY')                  #27
              009d 00f1  ld   $f1         719   ld(-30/2)                       #28
                                          720
                                          721
                                          722   #-----------------------------------------------------------------------
                                          723   # Placeholders for future SYS functions. This works as a kind of jump
                                          724   # table. The indirection allows SYS implementations to be moved around
                                          725   # between ROM versions, at the expense of 2 clock cycles (or 1). When
                                          726   # the function is not present it just acts as a NOP. Of course, when a
                                          727   # SYS function must be patched or extended it needs to have budget for
                                          728   # that in its declared maximum cycle count.
                                          729   #
                                          730   # Technically the same goal can be achieved by starting each function
                                          731   # with 2 nop's, or by overdeclaring their duration in the first place
                                          732   # (a bit is still wise to do). But this can result in fragmentation
                                          733   # of future ROM images. The indirection avoids that.
                                          734   #
                                          735   # An added advantage of having these in ROM page 0 is that it saves one
                                          736   # byte when setting sysFn: LDI+STW (4 bytes) instead of LDWI+STW (5 bytes)
                                          737   #-----------------------------------------------------------------------
                                          738
                                          739   label('SYS_Multiply_s16_vX_66')
SYS_Multiply_s16_vX_66:
              009e 1419  ld   $19,y       740   ld(hi('sys_Multiply_s16'),Y)    #15 slot 0x9e
              009f e000  jmp  y,$00       741   jmp(Y,'sys_Multiply_s16')       #16
              00a0 012a  ld   [$2a]       742   ld([sysArgs+6])                 #17 load mask.lo
                                          743
                                          744   label('SYS_Divide_s16_vX_80')
SYS_Divide_s16_vX_80:
              00a1 1419  ld   $19,y       745   ld(hi('sys_Divide_s16'),Y)      #15 slot 0xa1
              00a2 e038  jmp  y,$38       746   jmp(Y,'sys_Divide_s16')         #16
              00a3 0128  ld   [$28]       747   ld([sysArgs+4])                 #17
                                          748
                                          749   label('SYS_DrawLine_vX_86')
SYS_DrawLine_vX_86:
              00a4 1419  ld   $19,y       750   ld(hi('sys_DrawLine'),Y)        #15 slot 0xa4
              00a5 e07f  jmp  y,$7f       751   jmp(Y,'sys_DrawLine')           #16
              00a6 01a3  ld   [$a3]       752   ld([0xA3])                      #17 fgcolour
                                          753
              00a7 1403  ld   $03,y       754   ld(hi('REENTER'),Y)             #15 slot 0xa7
              00a8 e0cb  jmp  y,$cb       755   jmp(Y,'REENTER')                #16
              00a9 00f6  ld   $f6         756   ld(-20/2)                       #17
                                          757
                                          758   label('SYS_WaitVBlank_vX_28')
SYS_WaitVBlank_vX_28:
              00aa 141a  ld   $1a,y       759   ld(hi('sys_WaitVBlank'),Y)      #15 slot 0xaa
              00ab e000  jmp  y,$00       760   jmp(Y,'sys_WaitVBlank')         #16
              00ac 0109  ld   [$09]       761   ld([videoY])                    #17 scanline Y
                                          762
                                          763   #-----------------------------------------------------------------------
                                          764   # Extension SYS_Exec_88: Load code from ROM into memory and execute it
                                          765   #-----------------------------------------------------------------------
                                          766   #
                                          767   # This loads the vCPU code with consideration of the current vSP
                                          768   # Used during reset, but also for switching between applications or for
                                          769   # loading data from ROM from within an application (overlays).
                                          770   #
                                          771   # ROM stream format is [<addrH> <addrL> <n&255> n*<byte>]* 0
                                          772   # on top of lookup tables.
                                          773   #
                                          774   # Variables:
                                          775   #       sysArgs[0:1]    ROM pointer (in)
                                          776   #       sysArgs[2:3]    RAM pointer (changed)
                                          777   #       sysArgs[4]      State counter (changed)
                                          778   #       vLR             vCPU continues here (in)
                                          779
                                          780   label('SYS_Exec_88')
SYS_Exec_88:  00ad 1412  ld   $12,y       781   ld(hi('sys_Exec'),Y)            #15 slot 0xad
              00ae e04f  jmp  y,$4f       782   jmp(Y,'sys_Exec')               #16
              00af 0000  ld   $00         783   ld(0)                           #17 Address of loader on zero page
                                          784
              00b0 1403  ld   $03,y       785   ld(hi('REENTER'),Y)             #15 slot 0xb0
              00b1 e0cb  jmp  y,$cb       786   jmp(Y,'REENTER')                #16
              00b2 00f6  ld   $f6         787   ld(-20/2)                       #17
                                          788
              00b3 1403  ld   $03,y       789   ld(hi('REENTER'),Y)             #15 slot 0xb3
              00b4 e0cb  jmp  y,$cb       790   jmp(Y,'REENTER')                #16
              00b5 00f6  ld   $f6         791   ld(-20/2)                       #17
                                          792
                                          793   label('SYS_SpritePattern_vX_134')
SYS_SpritePattern_vX_134:
              00b6 141e  ld   $1e,y       794   ld(hi('sys_SpritePattern'),Y)   #15 slot 0xb6
              00b7 e000  jmp  y,$00       795   jmp(Y,'sys_SpritePattern')      #16
              00b8 1124  ld   [$24],x     796   ld([sysArgs+0],X)               #17 src.lo
                                          797
                                          798   label('SYS_SortUint8Array_vX_52')
SYS_SortUint8Array_vX_52:
              00b9 141a  ld   $1a,y       799   ld(hi('sys_SortUint8Array'),Y)  #15 slot 0xb9
              00ba e00b  jmp  y,$0b       800   jmp(Y,'sys_SortUint8Array')     #16
              00bb 1525  ld   [$25],y     801   ld([sysArgs+1],Y)               #17 array pointer is in sysArgs0
                                          802
                                          803   label('SYS_SortSprites_vX_62')
SYS_SortSprites_vX_62:
              00bc 141c  ld   $1c,y       804   ld(hi('sys_SortSprites'),Y)     #15 slot 0xbc
              00bd e000  jmp  y,$00       805   jmp(Y,'sys_SortSprites')        #16
              00be 1525  ld   [$25],y     806   ld([sysArgs+1],Y)               #17 array pointer is in sysArgs0
                                          807
                                          808   label('SYS_SortViaIndices_vX_44')
SYS_SortViaIndices_vX_44:
              00bf 141a  ld   $1a,y       809   ld(hi('sys_SortViaIndices'),Y)  #15 slot 0xbf
              00c0 e052  jmp  y,$52       810   jmp(Y,'sys_SortViaIndices')     #16
              00c1 1525  ld   [$25],y     811   ld([sysArgs+1],Y)               #17 src pointer
                                          812
                                          813   label('SYS_MemCopyByte_vX_40')
SYS_MemCopyByte_vX_40:
              00c2 141b  ld   $1b,y       814   ld(hi('sys_MemCopyByte'),Y)     #15 slot 0xc2
              00c3 e000  jmp  y,$00       815   jmp(Y,'sys_MemCopyByte')        #16
              00c4 1525  ld   [$25],y     816   ld([sysArgs+1],Y)               #17 src pointer
                                          817
                                          818   label('SYS_MemCopyWord_vX_48')
SYS_MemCopyWord_vX_48:
              00c5 141b  ld   $1b,y       819   ld(hi('sys_MemCopyWord'),Y)     #15 slot 0xc5
              00c6 e018  jmp  y,$18       820   jmp(Y,'sys_MemCopyWord')        #16
              00c7 1525  ld   [$25],y     821   ld([sysArgs+1],Y)               #17 src pointer
                                          822
                                          823   label('SYS_MemCopyDWord_vX_58')
SYS_MemCopyDWord_vX_58:
              00c8 141b  ld   $1b,y       824   ld(hi('sys_MemCopyDWord'),Y)    #15 slot 0xc8
              00c9 e037  jmp  y,$37       825   jmp(Y,'sys_MemCopyDWord')       #16
              00ca 1525  ld   [$25],y     826   ld([sysArgs+1],Y)               #17 src pointer
                                          827
                                          828   label('SYS_DrawVLine_vX_66')
SYS_DrawVLine_vX_66:
              00cb 141d  ld   $1d,y       829   ld(hi('sys_DrawVLine'),Y)       #15 slot 0xcb
              00cc e085  jmp  y,$85       830   jmp(Y,'sys_DrawVLine')          #16
              00cd 1527  ld   [$27],y     831   ld([sysArgs+3],Y)               #17
                                          832
                                          833   label('SYS_DrawSprite_vX_132')
SYS_DrawSprite_vX_132:
              00ce 141d  ld   $1d,y       834   ld(hi('sys_DrawSprite'),Y)      #15 slot 0xce
              00cf e000  jmp  y,$00       835   jmp(Y,'sys_DrawSprite')         #16
              00d0 1182  ld   [$82],x     836   ld([0x82],X)                    #17 spriteX
                                          837
                                          838   label('SYS_DrawBullet_vX_140')
SYS_DrawBullet_vX_140:
              00d1 141e  ld   $1e,y       839   ld(hi('sys_DrawBullet'),Y)      #15 slot 0xd1
              00d2 e076  jmp  y,$76       840   jmp(Y,'sys_DrawBullet')         #16
              00d3 1182  ld   [$82],x     841   ld([0x82],X)                    #17, bulletX
                                          842
                                          843   label('SYS_CmpByteBounds_vX_54')
SYS_CmpByteBounds_vX_54:
              00d4 141f  ld   $1f,y       844   ld(hi('sys_CmpByteBounds'),Y)   #15 slot 0xd4
              00d5 e000  jmp  y,$00       845   jmp(Y,'sys_CmpByteBounds')      #16
              00d6 01bf  ld   [$bf]       846   ld([0xBF])                      #17 count
                                          847
                                          848   label('SYS_Divide_u168_vX_56')
SYS_Divide_u168_vX_56:
              00d7 141f  ld   $1f,y       849   ld(hi('sys_Divide_u168'),Y)     #15 slot 0xd7
              00d8 e05d  jmp  y,$5d       850   jmp(Y,'sys_Divide_u168')        #16
              00d9 0125  ld   [$25]       851   ld([sysArgs+1])                 #17
                                          852
                                          853   label('SYS_ReadPixel_vX_32')
SYS_ReadPixel_vX_32:
              00da 141b  ld   $1b,y       854   ld(hi('sys_ReadPixel'),Y)       #15 slot 0xda
              00db e060  jmp  y,$60       855   jmp(Y,'sys_ReadPixel')          #16
              00dc 0119  ld   [$19]       856   ld([vAC+1])                     #17 y
                                          857
                                          858   label('SYS_DrawPixel_vX_30')
SYS_DrawPixel_vX_30:
              00dd 141b  ld   $1b,y       859   ld(hi('sys_DrawPixel'),Y)       #15 slot 0xdd
              00de e06d  jmp  y,$6d       860   jmp(Y,'sys_DrawPixel')          #16
              00df 0125  ld   [$25]       861   ld([sysArgs+1])                 #17 y
                                          862
              00e0 1403  ld   $03,y       863   ld(hi('REENTER'),Y)             #15 slot 0xe0
              00e1 e0cb  jmp  y,$cb       864   jmp(Y,'REENTER')                #16
              00e2 00f6  ld   $f6         865   ld(-20/2)                       #17
                                          866
                                          867   #-----------------------------------------------------------------------
                                          868   # Extension SYS_ScanMemoryExt_vX_50
                                          869   #-----------------------------------------------------------------------
                                          870
                                          871   # SYS function for searching a byte in a 0 to 256 bytes string located
                                          872   # in a different bank. Doesn't cross page boundaries. Returns a
                                          873   # pointer to the target if found or zero. Temporarily deselects SPI
                                          874   # devices.
                                          875   #
                                          876   # sysArgs[0:1]            Start address
                                          877   # sysArgs[2], sysArgs[3]  Bytes to locate in the string
                                          878   # vACL                    Length of the string (0 means 256)
                                          879   # vACH                    Bit 6 and 7 contain the bank number
                                          880
                                          881   label('SYS_ScanMemoryExt_vX_50')
SYS_ScanMemoryExt_vX_50:
              00e3 1430  ld   $30,y       882   ld(hi('sys_ScanMemoryExt'),Y)   #15 slot 0xe3
              00e4 e027  jmp  y,$27       883   jmp(Y,'sys_ScanMemoryExt')      #16
              00e5 0119  ld   [$19]       884   ld([vAC+1])                     #17
                                          885
                                          886
                                          887   #-----------------------------------------------------------------------
                                          888   # Extension SYS_ScanMemory_vX_50
                                          889   #-----------------------------------------------------------------------
                                          890
                                          891   # SYS function for searching a byte in a 0 to 256 bytes string.
                                          892   # Returns a pointer to the target if found or zero.  Doesn't cross
                                          893   # page boundaries.
                                          894
                                          895   #
                                          896   # sysArgs[0:1]            Start address
                                          897   # sysArgs[2], sysArgs[3]  Bytes to locate in the string
                                          898   # vACL                    Length of the string (0 means 256)
                                          899
                                          900   label('SYS_ScanMemory_vX_50')
SYS_ScanMemory_vX_50:
              00e6 1430  ld   $30,y       901   ld(hi('sys_ScanMemory'),Y)      #15 slot 0xe6
              00e7 e000  jmp  y,$00       902   jmp(Y,'sys_ScanMemory')         #16
              00e8 1525  ld   [$25],y     903   ld([sysArgs+1],Y)               #17
                                          904
                                          905   #-----------------------------------------------------------------------
                                          906   # Extension SYS_CopyMemory_vX_80
                                          907   #-----------------------------------------------------------------------
                                          908
                                          909   # SYS function for copying 1..256 bytes
                                          910   #
                                          911   # sysArgs[0:1]    Destination address
                                          912   # sysArgs[2:3]    Source address
                                          913   # vAC[0]          Count (0 means 256)
                                          914   #
                                          915   # Doesn't cross page boundaries.
                                          916   # Overwrites sysArgs[4:7] and vLR.
                                          917
                                          918   label('SYS_CopyMemory_vX_80')
SYS_CopyMemory_vX_80:
              00e9 142f  ld   $2f,y       919   ld(hi('sys_CopyMemory'),Y)       # 15 slot 0xe9
              00ea e000  jmp  y,$00       920   jmp(Y, 'sys_CopyMemory')         # 16
              00eb 0118  ld   [$18]       921   ld([vAC])                        # 17
                                          922
                                          923   #-----------------------------------------------------------------------
                                          924   # Extension SYS_CopyMemoryExt_vX_100
                                          925   #-----------------------------------------------------------------------
                                          926
                                          927   # SYS function for copying 1..256 bytes across banks
                                          928   #
                                          929   # sysArgs[0:1]  Destination address
                                          930   # sysArgs[2:3]  Source address
                                          931   # vAC[0]        Count (0 means 256)
                                          932   # vAC[1]        Bits 7 and 6 contain the destination bank number,
                                          933   #               and bits 5 and 4 the source bank number.
                                          934   #
                                          935   # Doesn't cross page boundaries.
                                          936   # Overwrites sysArgs[4:7], vLR, and vTmp.
                                          937   # Temporarily deselect all SPI devices.
                                          938   # Should not call without expansion board
                                          939
                                          940   label('SYS_CopyMemoryExt_vX_100')
SYS_CopyMemoryExt_vX_100:
              00ec 142f  ld   $2f,y       941   ld(hi('sys_CopyMemoryExt'),Y)    # 15 slot 0xec
              00ed e078  jmp  y,$78       942   jmp(Y, 'sys_CopyMemoryExt')      # 16
              00ee 0119  ld   [$19]       943   ld([vAC+1])                      # 17
                                          944
                                          945   #-----------------------------------------------------------------------
                                          946   # Extension SYS_ReadRomDir_v5_80
                                          947   #-----------------------------------------------------------------------
                                          948
                                          949   # Get next entry from ROM file system. Use vAC=0 to get the first entry.
                                          950
                                          951   # Variables:
                                          952   #       vAC             Start address of current entry (inout)
                                          953   #       sysArgs[0:7]    File name, padded with zeroes (out)
                                          954
                                          955   label('SYS_ReadRomDir_v5_80')
SYS_ReadRomDir_v5_80:
              00ef 14e1  ld   $e1,y       956   ld(hi('sys_ReadRomDir'),Y)      #15
              00f0 e058  jmp  y,$58       957   jmp(Y,'sys_ReadRomDir')         #16
              00f1 0119  ld   [$19]       958   ld([vAC+1])                     #17
                                          959
              00f2 0200  nop              960   fillers(until=symbol('SYS_Out_22') & 255)
              00f3 0200  nop
                                          961
                                          962   #-----------------------------------------------------------------------
                                          963   # Extension SYS_Out_22
                                          964   #-----------------------------------------------------------------------
                                          965
                                          966   # Send byte to output port
                                          967   #
                                          968   # Variables:
                                          969   #       vAC
                                          970
                                          971   label('SYS_Out_22')
SYS_Out_22:   00f4 1924  ld   [$24],out   972   ld([sysArgs+0],OUT)             #15
              00f5 0200  nop              973   nop()                           #16
              00f6 1403  ld   $03,y       974   ld(hi('REENTER'),Y)             #17
              00f7 e0cb  jmp  y,$cb       975   jmp(Y,'REENTER')                #18
              00f8 00f5  ld   $f5         976   ld(-22/2)                       #19
                                          977
                                          978   #-----------------------------------------------------------------------
                                          979   # Extension SYS_In_24
                                          980   #-----------------------------------------------------------------------
                                          981
                                          982   # Read a byte from the input port
                                          983   #
                                          984   # Variables:
                                          985   #       vAC
                                          986
                                          987   label('SYS_In_24')
SYS_In_24:    00f9 c318  st   in,[$18]    988   st(IN, [vAC])                   #15
              00fa 0000  ld   $00         989   ld(0)                           #16
              00fb c219  st   [$19]       990   st([vAC+1])                     #17
              00fc 0200  nop              991   nop()                           #18
              00fd 1403  ld   $03,y       992   ld(hi('REENTER'),Y)             #19
              00fe e0cb  jmp  y,$cb       993   jmp(Y,'REENTER')                #20
              00ff 00f4  ld   $f4         994   ld(-24/2)                       #21
                                          995
                                          996   assert pc()&255 == 0
                                          997
                                          998   #-----------------------------------------------------------------------
                                          999   #
                                          1000  #  $0100 ROM page 1: Video loop vertical blank
                                          1001  #
                                          1002  #-----------------------------------------------------------------------
                                          1003  align(0x100, size=0x100)
                                          1004
                                          1005  # Video off mode (also no sound, serial, timer, blinkenlights, ...).
                                          1006  # For benchmarking purposes. This still has the overhead for the vTicks
                                          1007  # administration, time slice granularity etc.
                                          1008  label('videoZ')
                                          1009  videoZ = pc()
videoZ:       0100 1502  ld   [$02],y     1010  runVcpu(None, '---- novideo', returnTo=videoZ)
              0101 e0ff  jmp  y,$ff
              0102 007f  ld   $7f
                                          1011
                                          1012  label('startVideo')             # (Re)start of video signal from idle state
startVideo:   0103 00c0  ld   $c0         1013  ld(syncBits)
                                          1014
                                          1015  # Start of vertical blank interval
                                          1016  label('vBlankStart')
vBlankStart:  0104 c21f  st   [$1f]       1017  st([videoSync0])                #32 Start of vertical blank interval
              0105 0080  ld   $80         1018  ld(syncBits^hSync)              #33
              0106 c220  st   [$20]       1019  st([videoSync1])                #34
                                          1020
                                          1021  # Reset line counter before vCPU can see it
              0107 00b3  ld   $b3         1022  ld(videoYline0)                 #35
              0108 c209  st   [$09]       1023  st([videoY])                    #36
                                          1024
                                          1025  # Update frame count and [0x80] (4 cycles)
              0109 0001  ld   $01         1026  ld(1)                           #37 Reinitialize carry lookup, for robustness
              010a c280  st   [$80]       1027  st([0x80])                      #38
              010b 810e  adda [$0e]       1028  adda([frameCount])              #39 Frame counter
              010c c20e  st   [$0e]       1029  st([frameCount])                #40
                                          1030
                                          1031  # Mix entropy (11 cycles)
              010d 6107  xora [$07]       1032  xora([entropy+1])               #41 Mix entropy
              010e 610f  xora [$0f]       1033  xora([serialRaw])               #42 Mix in serial input
              010f 8106  adda [$06]       1034  adda([entropy+0])               #43
              0110 c206  st   [$06]       1035  st([entropy+0])                 #44
              0111 8108  adda [$08]       1036  adda([entropy+2])               #45 Some hidden state
              0112 c208  st   [$08]       1037  st([entropy+2])                 #46
              0113 e816  blt  $0116       1038  bmi(pc()+3)                     #47
              0114 fc17  bra  $0117       1039  bra(pc()+3)                     #48
              0115 6053  xora $53         1040  xora(64+16+2+1)                 #49
              0116 606c  xora $6c         1041  xora(64+32+8+4)                 #49(!)
              0117 8107  adda [$07]       1042  adda([entropy+1])               #50
              0118 c207  st   [$07]       1043  st([entropy+1])                 #51
                                          1044
                                          1045  # LED sequencer (18 cycles)
              0119 012d  ld   [$2d]       1046  ld([ledTimer])                  #52 Blinkenlight sequencer
              011a f01d  beq  $011d       1047  beq(pc()+3)                     #53
              011b fc1e  bra  $011e       1048  bra(pc()+3)                     #54
              011c a001  suba $01         1049  suba(1)                         #55
              011d 012f  ld   [$2f]       1050  ld([ledTempo])                  #55(!)
              011e c22d  st   [$2d]       1051  st([ledTimer])                  #56
              011f f022  beq  $0122       1052  beq(pc()+3)                     #57
              0120 fc23  bra  $0123       1053  bra(pc()+3)                     #58
              0121 0000  ld   $00         1054  ld(0)                           #59 Don't advance state
              0122 0001  ld   $01         1055  ld(1)                           #59(!) Advance state when timer passes through 0
              0123 812e  adda [$2e]       1056  adda([ledState_v2])             #60
              0124 ec27  bne  $0127       1057  bne(pc()+3)                     #61
              0125 fc28  bra  $0128       1058  bra(pc()+3)                     #62
              0126 00e8  ld   $e8         1059  ld(-24)                         #63 State 0 becomes -24, start of sequence
              0127 e42c  bgt  .leds#65    1060  bgt('.leds#65')                 #63(!) Catch the stopped state (>0)
              0128 c22e  st   [$2e]       1061  st([ledState_v2])               #64
              0129 8048  adda $48         1062  adda('.leds#69')                #65
              012a fe00  bra  ac          1063  bra(AC)                         #66 Jump to lookup table
              012b fc48  bra  .leds#69    1064  bra('.leds#69')                 #67 Single-instruction subroutine
                                          1065
                                          1066  label('.leds#65')
.leds#65:     012c 000f  ld   $0f         1067  ld(0x0f)                        #65 Maintain stopped state
              012d c22e  st   [$2e]       1068  st([ledState_v2])               #66
              012e fc48  bra  .leds#69    1069  bra('.leds#69')                 #67
              012f 2114  anda [$14]       1070  anda([xoutMask])                #68 Always clear sound bits (this is why AC=0x0f)
                                          1071
              0130 000f  ld   $0f         1072  ld(0b1111)                      #68 LEDs |****| offset -24 Low 4 bits are the LED output
              0131 0007  ld   $07         1073  ld(0b0111)                      #68 LEDs |***O|
              0132 0003  ld   $03         1074  ld(0b0011)                      #68 LEDs |**OO|
              0133 0001  ld   $01         1075  ld(0b0001)                      #68 LEDs |*OOO|
              0134 0002  ld   $02         1076  ld(0b0010)                      #68 LEDs |O*OO|
              0135 0004  ld   $04         1077  ld(0b0100)                      #68 LEDs |OO*O|
              0136 0008  ld   $08         1078  ld(0b1000)                      #68 LEDs |OOO*|
              0137 0004  ld   $04         1079  ld(0b0100)                      #68 LEDs |OO*O|
              0138 0002  ld   $02         1080  ld(0b0010)                      #68 LEDs |O*OO|
              0139 0001  ld   $01         1081  ld(0b0001)                      #68 LEDs |*OOO|
              013a 0003  ld   $03         1082  ld(0b0011)                      #68 LEDs |**OO|
              013b 0007  ld   $07         1083  ld(0b0111)                      #68 LEDs |***O|
              013c 000f  ld   $0f         1084  ld(0b1111)                      #68 LEDs |****|
              013d 000e  ld   $0e         1085  ld(0b1110)                      #68 LEDs |O***|
              013e 000c  ld   $0c         1086  ld(0b1100)                      #68 LEDs |OO**|
              013f 0008  ld   $08         1087  ld(0b1000)                      #68 LEDs |OOO*|
              0140 0004  ld   $04         1088  ld(0b0100)                      #68 LEDs |OO*O|
              0141 0002  ld   $02         1089  ld(0b0010)                      #68 LEDs |O*OO|
              0142 0001  ld   $01         1090  ld(0b0001)                      #68 LEDs |*OOO|
              0143 0002  ld   $02         1091  ld(0b0010)                      #68 LEDs |O*OO|
              0144 0004  ld   $04         1092  ld(0b0100)                      #68 LEDs |OO*O|
              0145 0008  ld   $08         1093  ld(0b1000)                      #68 LEDs |OOO*|
              0146 000c  ld   $0c         1094  ld(0b1100)                      #68 LEDs |OO**|
              0147 000e  ld   $0e         1095  ld(0b1110)                      #68 LEDs |O***| offset -1
                                          1096  label('.leds#69')
.leds#69:     0148 c214  st   [$14]       1097  st([xoutMask])                  #69 Sound bits will be re-enabled below
              0149 0010  ld   $10         1098  ld(vPulse*2)                    #70 vPulse default length when not modulated
              014a c20d  st   [$0d]       1099  st([videoPulse])                #71
                                          1100
                                          1101  # When the total number of scan lines per frame is not an exact multiple of the
                                          1102  # (4) channels, there will be an audible discontinuity if no measure is taken.
                                          1103  # This static noise can be suppressed by swallowing the first `lines mod 4'
                                          1104  # partial samples after transitioning into vertical blank. This is easiest if
                                          1105  # the modulo is 0 (do nothing), 1 (reset sample when entering the last visible
                                          1106  # scan line), or 2 (reset sample while in the first blank scan line). For the
                                          1107  # last case there is no solution yet: give a warning.
                                          1108  extra = 0
                                          1109  if soundDiscontinuity == 2:
                                          1110    st(sample, [sample])          # Sound continuity
                                          1111    extra += 1
                                          1112  if soundDiscontinuity > 2:
                                          1113    highlight('Warning: sound discontinuity not suppressed')
                                          1114
                                          1115  # vCPU interrupt
              014b 010e  ld   [$0e]       1116  ld([frameCount])                #72
                                          1117  beq('vBlankFirst#75')           #73
              014c f052  beq  vBlankFirst#75
                                          1118
              014d 0055  ld   $55         1119  runVcpu(186-74-extra,           #74 Application cycles (scan line 0)
              014e c21e  st   [$1e]
              014f 1502  ld   [$02],y
              0150 e0ff  jmp  y,$ff
              0151 0022  ld   $22
                                          1120      '---D line 0 no timeout',
                                          1121      returnTo='vBlankFirst#186')
                                          1122
                                          1123  label('vBlankFirst#75')
vBlankFirst#75:
              0152 1412  ld   $12,y       1124  ld(hi('vBlankFirst#78'),Y)      #75
              0153 e000  jmp  y,$00       1125  jmp(Y,'vBlankFirst#78')         #76
              0154 1401  ld   $01,y       1126  ld(hi(vIRQ_v5),Y)               #77
                                          1127  label('vBlankFirst#186')
                                          1128
                                          1129  # Mitigation for rogue channelMask (3 cycles)
vBlankFirst#186:
              0155 0121  ld   [$21]       1130  ld([channelMask])               #186 Normalize channelMask, for robustness
              0156 20fb  anda $fb         1131  anda(0b11111011)                #187
              0157 c221  st   [$21]       1132  st([channelMask])               #188
                                          1133
                                          1134  # Sound on/off (6 cycles)
              0158 012c  ld   [$2c]       1135  ld([soundTimer])                #189 Sound on/off
              0159 ec5c  bne  $015c       1136  bne(pc()+3)                     #190
              015a fc5d  bra  $015d       1137  bra(pc()+3)                     #191
              015b 0000  ld   $00         1138  ld(0)                           #192 Keeps sound unchanged (should be off here)
              015c 00f0  ld   $f0         1139  ld(0xf0)                        #192(!) Turns sound back on
              015d 4114  ora  [$14]       1140  ora([xoutMask])                 #193
              015e c214  st   [$14]       1141  st([xoutMask])                  #194
                                          1142
                                          1143  # Sound timer count down (5 cycles)
              015f 012c  ld   [$2c]       1144  ld([soundTimer])                #195 Sound timer
              0160 f063  beq  $0163       1145  beq(pc()+3)                     #196
              0161 fc64  bra  $0164       1146  bra(pc()+3)                     #197
              0162 a001  suba $01         1147  suba(1)                         #198
              0163 0000  ld   $00         1148  ld(0)                           #198
              0164 c22c  st   [$2c]       1149  st([soundTimer])                #199
                                          1150
              0165 191f  ld   [$1f],out   1151  ld([videoSync0],OUT)            #0 <New scan line start>
                                          1152  label('sound1')
sound1:       0166 0105  ld   [$05]       1153  ld([channel])                   #1 Advance to next sound channel
              0167 2121  anda [$21]       1154  anda([channelMask])             #2
              0168 8001  adda $01         1155  adda(1)                         #3
              0169 1920  ld   [$20],out   1156  ld([videoSync1],OUT)            #4 Start horizontal pulse
              016a d605  st   [$05],y     1157  st([channel],Y)                 #5
              016b 007f  ld   $7f         1158  ld(0x7f)                        #6 Update sound channel
              016c 29fe  anda [y,$fe]     1159  anda([Y,oscL])                  #7
              016d 89fc  adda [y,$fc]     1160  adda([Y,keyL])                  #8
              016e cafe  st   [y,$fe]     1161  st([Y,oscL])                    #9
              016f 3080  anda $80,x       1162  anda(0x80,X)                    #10
              0170 0500  ld   [x]         1163  ld([X])                         #11
              0171 89ff  adda [y,$ff]     1164  adda([Y,oscH])                  #12
              0172 89fd  adda [y,$fd]     1165  adda([Y,keyH])                  #13
              0173 caff  st   [y,$ff]     1166  st([Y,oscH])                    #14
              0174 20fc  anda $fc         1167  anda(0xfc)                      #15
              0175 69fb  xora [y,$fb]     1168  xora([Y,wavX])                  #16
              0176 1200  ld   ac,x        1169  ld(AC,X)                        #17
              0177 09fa  ld   [y,$fa]     1170  ld([Y,wavA])                    #18
              0178 1407  ld   $07,y       1171  ld(soundTable>>8,Y)             #19
              0179 8d00  adda [y,x]       1172  adda([Y,X])                     #20
              017a e87d  blt  $017d       1173  bmi(pc()+3)                     #21
              017b fc7e  bra  $017e       1174  bra(pc()+3)                     #22
              017c 203f  anda $3f         1175  anda(63)                        #23
              017d 003f  ld   $3f         1176  ld(63)                          #23(!)
              017e 8103  adda [$03]       1177  adda([sample])                  #24
              017f c203  st   [$03]       1178  st([sample])                    #25
                                          1179
              0180 0113  ld   [$13]       1180  ld([xout])                      #26 Gets copied to XOUT
              0181 1412  ld   $12,y       1181  ld(hi('vBlankLast#34'),Y)       #27 Prepare jumping out of page in last line
              0182 191f  ld   [$1f],out   1182  ld([videoSync0],OUT)            #28 End horizontal pulse
                                          1183
                                          1184  # Count through the vertical blank interval until its last scan line
              0183 0109  ld   [$09]       1185  ld([videoY])                    #29
                                          1186  bpl('.vBlankLast#32')           #30
              0184 f4b1  bge  .vBlankLast#32
              0185 8002  adda $02         1187  adda(2)                         #31
              0186 c209  st   [$09]       1188  st([videoY])                    #32
                                          1189
                                          1190  # Determine if we're in the vertical sync pulse
              0187 a0bd  suba $bd         1191  suba(1-2*(vBack+vPulse-1))      #33 Prepare sync values
              0188 ec8d  bne  .prepSync36 1192  bne('.prepSync36')              #34 Tests for start of vPulse
              0189 a10d  suba [$0d]       1193  suba([videoPulse])              #35
              018a 0040  ld   $40         1194  ld(syncBits^vSync)              #36 Entering vertical sync pulse
              018b fc92  bra  .prepSync39 1195  bra('.prepSync39')              #37
              018c c21f  st   [$1f]       1196  st([videoSync0])                #38
                                          1197  label('.prepSync36')
.prepSync36:  018d ec91  bne  .prepSync38 1198  bne('.prepSync38')              #36 Tests for end of vPulse
              018e 00c0  ld   $c0         1199  ld(syncBits)                    #37
              018f fc93  bra  .prepSync40 1200  bra('.prepSync40')              #38 Entering vertical back porch
              0190 c21f  st   [$1f]       1201  st([videoSync0])                #39
                                          1202  label('.prepSync38')
.prepSync38:  0191 011f  ld   [$1f]       1203  ld([videoSync0])                #38 Load current value
                                          1204  label('.prepSync39')
.prepSync39:  0192 0200  nop              1205  nop()                           #39
                                          1206  label('.prepSync40')
.prepSync40:  0193 6040  xora $40         1207  xora(hSync)                     #40 Precompute, as during the pulse there is no time
              0194 c220  st   [$20]       1208  st([videoSync1])                #41
                                          1209
                                          1210  # Capture the serial input before the '595 shifts it out
              0195 0109  ld   [$09]       1211  ld([videoY])                    #42 Capture serial input
              0196 60cf  xora $cf         1212  xora(1-2*(vBack-1-1))           #43 Exactly when the 74HC595 has captured all 8 controller bits
              0197 ec9a  bne  $019a       1213  bne(pc()+3)                     #44
              0198 fc9b  bra  $019b       1214  bra(pc()+3)                     #45
              0199 c30f  st   in,[$0f]    1215  st(IN, [serialRaw])             #46
              019a c000  st   $00,[$00]   1216  st(0,[0])                       #46(!) Reinitialize carry lookup, for robustness
                                          1217
                                          1218  # Update [xout] with the next sound sample every 4 scan lines.
                                          1219  # Keep doing this on 'videoC equivalent' scan lines in vertical blank.
              019b 0109  ld   [$09]       1220  ld([videoY])                    #47
              019c 2006  anda $06         1221  anda(6)                         #48
                                          1222  beq('vBlankSample')             #49
              019d f0a6  beq  vBlankSample
              019e 0103  ld   [$03]       1223  ld([sample])                    #50
                                          1224
                                          1225  label('vBlankNormal')
vBlankNormal: 019f 00a4  ld   $a4         1226  runVcpu(199-51, 'AB-D line 1-36')#51 Application cycles (vBlank scan lines without sound sample update)
              01a0 c21e  st   [$1e]
              01a1 1502  ld   [$02],y
              01a2 e0ff  jmp  y,$ff
              01a3 0034  ld   $34
              01a4 fc66  bra  sound1      1227  bra('sound1')                   #199
              01a5 191f  ld   [$1f],out   1228  ld([videoSync0],OUT)            #0 <New scan line start>
                                          1229
                                          1230  label('vBlankSample')
vBlankSample: 01a6 400f  ora  $0f         1231  ora(0x0f)                       #51 New sound sample is ready
              01a7 2114  anda [$14]       1232  anda([xoutMask])                #52
              01a8 c213  st   [$13]       1233  st([xout])                      #53
              01a9 c003  st   $03,[$03]   1234  st(sample, [sample])            #54 Reset for next sample
                                          1235
              01aa 00af  ld   $af         1236  runVcpu(199-55, '--C- line 3-39')#55 Application cycles (vBlank scan lines with sound sample update)
              01ab c21e  st   [$1e]
              01ac 1502  ld   [$02],y
              01ad e0ff  jmp  y,$ff
              01ae 0032  ld   $32
              01af fc66  bra  sound1      1237  bra('sound1')                   #199
              01b0 191f  ld   [$1f],out   1238  ld([videoSync0],OUT)            #0 <New scan line start>
                                          1239
                                          1240  #-----------------------------------------------------------------------
                                          1241
                                          1242  label('.vBlankLast#32')
.vBlankLast#32:
              01b1 e032  jmp  y,$32       1243  jmp(Y,'vBlankLast#34')          #32 Jump out of page for space reasons
                                          1244  #assert hi(controllerType) == hi(pc()) # Assume these share the high address
              01b2 1401  ld   $01,y       1245  ld(hi(pc()),Y)                  #33
                                          1246
                                          1247  label('vBlankLast#52')
                                          1248
                                          1249  # Respond to reset button (14 cycles)
                                          1250  # - ResetTimer decrements as long as just [Start] is pressed down
                                          1251  # - Reaching 0 (normal) or 128 (extended) triggers the soft reset sequence
                                          1252  # - Initial value is 128 (or 255 at boot), first decrement, then check
                                          1253  # - This starts vReset -> SYS_Reset_88 -> SYS_Exec_88 -> Reset.gcl -> Main.gcl
                                          1254  # - Main.gcl then recognizes extended presses if resetTimer is 0..127 ("paasei")
                                          1255  # - This requires a full cycle (4s) in the warm boot scenario
                                          1256  # - Or a half cycle (2s) when pressing [Select] down during hard reset
                                          1257  # - This furthermore requires >=1 frame (and <=128) to have passed between
                                          1258  #   reaching 128 and getting through Reset and the start of Main, while [Start]
                                          1259  #   was still pressed so the count reaches <128. Two reasonable expectations.
                                          1260  # - The unintended power-up scenarios of ROMv1 (pulling SER_DATA low, or
                                          1261  #   pressing [Select] together with another button) now don't trigger anymore.
                                          1262
vBlankLast#52:
              01b3 0111  ld   [$11]       1263  ld([buttonState])               #52 Check [Start] for soft reset
              01b4 60ef  xora $ef         1264  xora(~buttonStart)              #53
              01b5 ecbe  bne  .restart#56 1265  bne('.restart#56')              #54
              01b6 0112  ld   [$12]       1266  ld([resetTimer])                #55 As long as button pressed
              01b7 a001  suba $01         1267  suba(1)                         #56 ... count down the timer
              01b8 c212  st   [$12]       1268  st([resetTimer])                #57
              01b9 207f  anda $7f         1269  anda(127)                       #58
              01ba f0c6  beq  .restart#61 1270  beq('.restart#61')              #59 Reset at 0 (normal 2s) or 128 (extended 4s)
              01bb 00ee  ld   $ee         1271  ld((vReset&255)-2)              #60 Start force reset when hitting 0
              01bc fcc5  bra  .restart#63 1272  bra('.restart#63')              #61 ... otherwise do nothing yet
              01bd fcc4  bra  .restart#64 1273  bra('.restart#64')              #62
                                          1274  label('.restart#56')
.restart#56:  01be 0001  ld   $01         1275  wait(62-56)                     #56
              01bf ecbf  bne  $01bf
              01c0 a001  suba $01
              01c1 0200  nop
              01c2 0080  ld   $80         1276  ld(128)                         #62 Not pressed, reset the timer
              01c3 c212  st   [$12]       1277  st([resetTimer])                #63
                                          1278  label('.restart#64')
.restart#64:  01c4 fccb  bra  .restart#66 1279  bra('.restart#66')              #64
                                          1280  label('.restart#63')
.restart#63:  01c5 0200  nop              1281  nop()                           #63,65
                                          1282  label('.restart#61')
.restart#61:  01c6 c216  st   [$16]       1283  st([vPC])                       #61 Point vPC at vReset
              01c7 0001  ld   $01         1284  ld(vReset>>8)                   #62
              01c8 c217  st   [$17]       1285  st([vPC+1])                     #63
              01c9 0002  ld   $02         1286  ld(hi('ENTER'))                 #64 Set active interpreter to vCPU
              01ca c202  st   [$02]       1287  st([vCpuSelect])                #65
                                          1288  label('.restart#66')
                                          1289
                                          1290  # Switch video mode when (only) select is pressed (16 cycles)
                                          1291  # XXX We could make this a vCPU interrupt
.restart#66:  01cb 0111  ld   [$11]       1292  ld([buttonState])               #66 Check [Select] to switch modes
              01cc 60df  xora $df         1293  xora(~buttonSelect)             #67 Only trigger when just [Select] is pressed
              01cd ece2  bne  .select#70  1294  bne('.select#70')               #68
              01ce 010b  ld   [$0b]       1295  ld([videoModeC])                #69
              01cf e8d5  blt  .select#72  1296  bmi('.select#72')               #70 Branch when line C is off
              01d0 010a  ld   [$0a]       1297  ld([videoModeB])                #71 Rotate: Off->D->B->C
              01d1 c20b  st   [$0b]       1298  st([videoModeC])                #72
              01d2 010c  ld   [$0c]       1299  ld([videoModeD])                #73
              01d3 c20a  st   [$0a]       1300  st([videoModeB])                #74
              01d4 fcda  bra  .select#77  1301  bra('.select#77')               #75
                                          1302  label('.select#72')
.select#72:   01d5 00f6  ld   $f6         1303  ld('nopixels')                  #72,76
              01d6 000a  ld   $0a         1304  ld('pixels')                    #73 Reset: On->D->B->C
              01d7 c20b  st   [$0b]       1305  st([videoModeC])                #74
              01d8 c20a  st   [$0a]       1306  st([videoModeB])                #75
              01d9 0200  nop              1307  nop()                           #76
                                          1308  label('.select#77')
.select#77:   01da c20c  st   [$0c]       1309  st([videoModeD])                #77
              01db 0035  ld   $35         1310  wait(188-78)                    #78 Don't waste code space expanding runVcpu here
              01dc ecdc  bne  $01dc
              01dd a001  suba $01
              01de 0200  nop
                                          1311  # AC==255 now
              01df c211  st   [$11]       1312  st([buttonState])               #188
                                          1313  bra('vBlankEnd#191')            #189
              01e0 fcea  bra  vBlankEnd#191
              01e1 0000  ld   $00         1314  ld(0)                           #190
                                          1315  label('.select#70')
                                          1316
                                          1317  # Mitigation of runaway channel variable
.select#70:   01e2 0105  ld   [$05]       1318  ld([channel])                   #70 Normalize channel, for robustness
              01e3 2003  anda $03         1319  anda(0b00000011)                #71
              01e4 c205  st   [$05]       1320  st([channel])                   #72 Stop wild channel updates
                                          1321
              01e5 00ea  ld   $ea         1322  runVcpu(191-73, '---D line 40') #73 Application cycles (scan line 40)
              01e6 c21e  st   [$1e]
              01e7 1502  ld   [$02],y
              01e8 e0ff  jmp  y,$ff
              01e9 0025  ld   $25
                                          1323
                                          1324  # AC==0 now
                                          1325  label('vBlankEnd#191')
vBlankEnd#191:
              01ea 1401  ld   $01,y       1326  ld(videoTop_v5>>8,Y)            #191
              01eb 09f9  ld   [y,$f9]     1327  ld([Y,videoTop_v5])             #192
              01ec c209  st   [$09]       1328  st([videoY])                    #193
              01ed c21f  st   [$1f]       1329  st([frameX])                    #194
              01ee ecf1  bne  $01f1       1330  bne(pc()+3)                     #195
              01ef fcf2  bra  $01f2       1331  bra(pc()+3)                     #196
              01f0 0001  ld   $01         1332  ld('videoA')                    #197
              01f1 00ec  ld   $ec         1333  ld('videoF')                    #197(!)
              01f2 c20d  st   [$0d]       1334  st([nextVideo])                 #198
              01f3 0105  ld   [$05]       1335  ld([channel])                   #199 Advance to next sound channel
              01f4 2121  anda [$21]       1336  anda([channelMask])             #0 <New scan line start>
              01f5 8001  adda $01         1337  adda(1)                         #1
              01f6 1402  ld   $02,y       1338  ld(hi('sound2'),Y)              #2
              01f7 e0b1  jmp  y,$b1       1339  jmp(Y,'sound2')                 #3
              01f8 1880  ld   $80,out     1340  ld(syncBits^hSync,OUT)          #4 Start horizontal pulse
                                          1341
              01f9 0200  nop              1342  fillers(until=0xff)
              01fa 0200  nop
              01fb 0200  nop
              * 6 times
                                          1343
                                          1344  #-----------------------------------------------------------------------
                                          1345  # Return point for vCPU slices during visible screen area
                                          1346  #-----------------------------------------------------------------------
                                          1347
                                          1348  assert pc() == 0x1ff            # Enables runVcpu() to re-enter into the next page
              01ff fcae  bra  sound3      1349  bra('sound3')                   #200,0 <New scan line start>
                                          1350
                                          1351  #-----------------------------------------------------------------------
                                          1352  #
                                          1353  #  $0200 ROM page 2: Video loop visible scanlines
                                          1354  #
                                          1355  #-----------------------------------------------------------------------
                                          1356  align(0x100, size=0x100)
              0200 0105  ld   [$05]       1357  ld([channel])                   #1 Advance to next sound channel
                                          1358
                                          1359  # Back porch A: first of 4 repeated scan lines
                                          1360  # - Fetch next Yi and store it for retrieval in the next scan lines
                                          1361  # - Calculate Xi from dXi, but there is no cycle time left to store it as well
                                          1362  label('videoA')
videoA:       0201 00ca  ld   $ca         1363  ld('videoB')                    #29 1st scanline of 4 (always visible)
              0202 c20d  st   [$0d]       1364  st([nextVideo])                 #30
              0203 1401  ld   $01,y       1365  ld(videoTable>>8,Y)             #31
              0204 1109  ld   [$09],x     1366  ld([videoY],X)                  #32
              0205 0d00  ld   [y,x]       1367  ld([Y,X])                       #33
              0206 de00  st   [y,x++]     1368  st([Y,Xpp])                     #34 Just X++
              0207 c220  st   [$20]       1369  st([frameY])                    #35
              0208 0d00  ld   [y,x]       1370  ld([Y,X])                       #36
              0209 911f  adda [$1f],x     1371  adda([frameX],X)                #37
                                          1372  label('pixels')
pixels:       020a 1520  ld   [$20],y     1373  ld([frameY],Y)                  #38
              020b 00c0  ld   $c0         1374  ld(syncBits)                    #39
                                          1375
                                          1376  # Stream 160 pixels from memory location <Yi,Xi> onwards
                                          1377  # Superimpose the sync signal bits to be robust against misprogramming
                                          1378  for i in range(qqVgaWidth):
              020c 5d00  ora  [y,x++],out 1379    ora([Y,Xpp],OUT)              #40-199 Pixel burst
              020d 5d00  ora  [y,x++],out
              020e 5d00  ora  [y,x++],out
              * 160 times
              02ac 18c0  ld   $c0,out     1380  ld(syncBits,OUT)                #0 <New scan line start> Back to black
                                          1381
                                          1382  # Front porch
              02ad 0105  ld   [$05]       1383  ld([channel])                   #1 Advance to next sound channel
                                          1384  label('sound3')                 # Return from vCPU interpreter
sound3:       02ae 2121  anda [$21]       1385  anda([channelMask])             #2
              02af 8001  adda $01         1386  adda(1)                         #3
              02b0 1880  ld   $80,out     1387  ld(syncBits^hSync,OUT)          #4 Start horizontal pulse
                                          1388
                                          1389  # Horizontal sync and sound channel update for scanlines outside vBlank
                                          1390  label('sound2')
sound2:       02b1 d605  st   [$05],y     1391  st([channel],Y)                 #5
              02b2 007f  ld   $7f         1392  ld(0x7f)                        #6
              02b3 29fe  anda [y,$fe]     1393  anda([Y,oscL])                  #7
              02b4 89fc  adda [y,$fc]     1394  adda([Y,keyL])                  #8
              02b5 cafe  st   [y,$fe]     1395  st([Y,oscL])                    #9
              02b6 3080  anda $80,x       1396  anda(0x80,X)                    #10
              02b7 0500  ld   [x]         1397  ld([X])                         #11
              02b8 89ff  adda [y,$ff]     1398  adda([Y,oscH])                  #12
              02b9 89fd  adda [y,$fd]     1399  adda([Y,keyH])                  #13
              02ba caff  st   [y,$ff]     1400  st([Y,oscH] )                   #14
              02bb 20fc  anda $fc         1401  anda(0xfc)                      #15
              02bc 69fb  xora [y,$fb]     1402  xora([Y,wavX])                  #16
              02bd 1200  ld   ac,x        1403  ld(AC,X)                        #17
              02be 09fa  ld   [y,$fa]     1404  ld([Y,wavA])                    #18
              02bf 1407  ld   $07,y       1405  ld(soundTable>>8,Y)             #19
              02c0 8d00  adda [y,x]       1406  adda([Y,X])                     #20
              02c1 e8c4  blt  $02c4       1407  bmi(pc()+3)                     #21
              02c2 fcc5  bra  $02c5       1408  bra(pc()+3)                     #22
              02c3 203f  anda $3f         1409  anda(63)                        #23
              02c4 003f  ld   $3f         1410  ld(63)                          #23(!)
              02c5 8103  adda [$03]       1411  adda([sample])                  #24
              02c6 c203  st   [$03]       1412  st([sample])                    #25
                                          1413
              02c7 0113  ld   [$13]       1414  ld([xout])                      #26 Gets copied to XOUT
              02c8 fd0d  bra  [$0d]       1415  bra([nextVideo])                #27
              02c9 18c0  ld   $c0,out     1416  ld(syncBits,OUT)                #28 End horizontal pulse
                                          1417
                                          1418  # Back porch B: second of 4 repeated scan lines
                                          1419  # - Recompute Xi from dXi and store for retrieval in the next scan lines
                                          1420  label('videoB')
videoB:       02ca 00d3  ld   $d3         1421  ld('videoC')                    #29 2nd scanline of 4
              02cb c20d  st   [$0d]       1422  st([nextVideo])                 #30
              02cc 1401  ld   $01,y       1423  ld(videoTable>>8,Y)             #31
              02cd 0109  ld   [$09]       1424  ld([videoY])                    #32
              02ce 9001  adda $01,x       1425  adda(1,X)                       #33
              02cf 011f  ld   [$1f]       1426  ld([frameX])                    #34
              02d0 8d00  adda [y,x]       1427  adda([Y,X])                     #35
              02d1 fd0a  bra  [$0a]       1428  bra([videoModeB])               #36
              02d2 d21f  st   [$1f],x     1429  st([frameX],X)                  #37 Store in RAM and X
                                          1430
                                          1431  # Back porch C: third of 4 repeated scan lines
                                          1432  # - Nothing new to for video do as Yi and Xi are known,
                                          1433  # - This is the time to emit and reset the next sound sample
                                          1434  label('videoC')
videoC:       02d3 00dc  ld   $dc         1435  ld('videoD')                    #29 3rd scanline of 4
              02d4 c20d  st   [$0d]       1436  st([nextVideo])                 #30
              02d5 0103  ld   [$03]       1437  ld([sample])                    #31 New sound sample is ready (didn't fit in the audio loop)
              02d6 400f  ora  $0f         1438  ora(0x0f)                       #32
              02d7 2114  anda [$14]       1439  anda([xoutMask])                #33
              02d8 c213  st   [$13]       1440  st([xout])                      #34 Update [xout] with new sample (4 channels just updated)
              02d9 c003  st   $03,[$03]   1441  st(sample, [sample])            #35 Reset for next sample
              02da fd0b  bra  [$0b]       1442  bra([videoModeC])               #36
              02db 111f  ld   [$1f],x     1443  ld([frameX],X)                  #37
                                          1444
                                          1445  # Back porch D: last of 4 repeated scan lines
                                          1446  # - Calculate the next frame index
                                          1447  # - Decide if this is the last line or not
                                          1448  label('videoD')                 # Default video mode
videoD:       02dc 111f  ld   [$1f],x     1449  ld([frameX], X)                 #29 4th scanline of 4
              02dd 0109  ld   [$09]       1450  ld([videoY])                    #30
              02de a0ee  suba $ee         1451  suba((120-1)*2)                 #31
                                          1452  beq('.lastpixels#34')           #32
              02df f0e5  beq  .lastpixels#34
              02e0 80f0  adda $f0         1453  adda(120*2)                     #33 More pixel lines to go
              02e1 c209  st   [$09]       1454  st([videoY])                    #34
              02e2 0001  ld   $01         1455  ld('videoA')                    #35
              02e3 fd0c  bra  [$0c]       1456  bra([videoModeD])               #36
              02e4 c20d  st   [$0d]       1457  st([nextVideo])                 #37
                                          1458
                                          1459  label('.lastpixels#34')
                                          1460  if soundDiscontinuity == 1:
.lastpixels#34:
              02e5 c003  st   $03,[$03]   1461    st(sample, [sample])          #34 Sound continuity
                                          1462  else:
                                          1463    nop()                         #34
              02e6 00e9  ld   $e9         1464  ld('videoE')                    #35 No more pixel lines to go
              02e7 fd0c  bra  [$0c]       1465  bra([videoModeD])               #36
              02e8 c20d  st   [$0d]       1466  st([nextVideo])                 #37
                                          1467
                                          1468  # Back porch "E": after the last line
                                          1469  # - Go back and and enter vertical blank (program page 2)
                                          1470  label('videoE') # Exit visible area
videoE:       02e9 1401  ld   $01,y       1471  ld(hi('vBlankStart'),Y)         #29 Return to vertical blank interval
              02ea e004  jmp  y,$04       1472  jmp(Y,'vBlankStart')            #30
              02eb 00c0  ld   $c0         1473  ld(syncBits)                    #31
                                          1474
                                          1475  # Video mode that blacks out one or more pixel lines from the top of screen.
                                          1476  # This yields some speed, but also frees up screen memory for other purposes.
                                          1477  # Note: Sound output becomes choppier the more pixel lines are skipped
                                          1478  # Note: The vertical blank driver leaves 0x80 behind in [videoSync1]
                                          1479  label('videoF')
videoF:       02ec 0120  ld   [$20]       1480  ld([videoSync1])                #29 Completely black pixel line
              02ed 8080  adda $80         1481  adda(0x80)                      #30
              02ee d220  st   [$20],x     1482  st([videoSync1],X)              #31
              02ef 011f  ld   [$1f]       1483  ld([frameX])                    #32
              02f0 a500  suba [x]         1484  suba([X])                       #33 Decrements every two VGA scanlines
              02f1 f0f4  beq  .videoF#36  1485  beq('.videoF#36')               #34
              02f2 c21f  st   [$1f]       1486  st([frameX])                    #35
              02f3 fcf6  bra  nopixels    1487  bra('nopixels')                 #36
                                          1488  label('.videoF#36')
.videoF#36:   02f4 0001  ld   $01         1489  ld('videoA')                    #36,37 Transfer to visible screen area
              02f5 c20d  st   [$0d]       1490  st([nextVideo])                 #37
                                          1491  #
                                          1492  # Alternative for pixel burst: faster application mode
                                          1493  label('nopixels')
nopixels:     02f6 00ff  ld   $ff         1494  runVcpu(200-38, 'ABCD line 40-520',
              02f7 c21e  st   [$1e]
              02f8 1502  ld   [$02],y
              02f9 e0ff  jmp  y,$ff
              02fa 003b  ld   $3b
                                          1495    returnTo=0x1ff)               #38 Application interpreter (black scanlines)
                                          1496
                                          1497  #-----------------------------------------------------------------------
                                          1498  #
                                          1499  #  $0300 ROM page 3: Application interpreter primary page
                                          1500  #
                                          1501  #-----------------------------------------------------------------------
                                          1502
                                          1503  # Enter the timing-aware application interpreter (aka virtual CPU, vCPU)
                                          1504  #
                                          1505  # This routine will execute as many as possible instructions in the
                                          1506  # allotted time. When time runs out, it synchronizes such that the total
                                          1507  # duration matches the caller's request. Durations are counted in `ticks',
                                          1508  # which are multiples of 2 clock cycles.
                                          1509  #
                                          1510  # Synopsis: Use the runVcpu() macro as entry point
                                          1511
                                          1512  # We let 'ENTER' begin one word before the page boundary, for a bit extra
                                          1513  # precious space in the packed interpreter code page. Although ENTER's
                                          1514  # first instruction is bra() which normally doesn't cross page boundaries,
                                          1515  # in this case it will still jump into the right space, because branches
                                          1516  # from $xxFF land in the next page anyway.
                                          1517  while pc()&255 < 255:
              02fb 0200  nop              1518    nop()
              02fc 0200  nop
              02fd 0200  nop
              02fe 0200  nop
                                          1519  label('ENTER')
ENTER:        02ff fc03  bra  .next2      1520  bra('.next2')                   #0 Enter at '.next2' (so no startup overhead)
                                          1521  # --- Page boundary ---
                                          1522  align(0x100,size=0x100)
                                          1523  label('NEXTY')                  # Alternative for REENTER
NEXTY:        0300 1517  ld   [$17],y     1524  ld([vPC+1],Y)                   #1
                                          1525
                                          1526  # Fetch next instruction and execute it, but only if there are sufficient
                                          1527  # ticks left for the slowest instruction.
                                          1528  label('NEXT')
NEXT:         0301 8115  adda [$15]       1529  adda([vTicks])                  #0 Track elapsed ticks (actually counting down: AC<0)
              0302 e80b  blt  EXIT        1530  blt('EXIT')                     #1 Escape near time out
                                          1531  label('.next2')
.next2:       0303 c215  st   [$15]       1532  st([vTicks])                    #2
              0304 0116  ld   [$16]       1533  ld([vPC])                       #3 Advance vPC
              0305 8002  adda $02         1534  adda(2)                         #4
              0306 d216  st   [$16],x     1535  st([vPC],X)                     #5
              0307 0d00  ld   [y,x]       1536  ld([Y,X])                       #6 Fetch opcode (actually a branch target)
              0308 de00  st   [y,x++]     1537  st([Y,Xpp])                     #7 Just X++
              0309 fe00  bra  ac          1538  bra(AC)                         #8 Dispatch
              030a 0d00  ld   [y,x]       1539  ld([Y,X])                       #9 Prefetch operand
                                          1540
                                          1541  # Resync with video driver and transfer control
                                          1542  label('EXIT')
EXIT:         030b 800f  adda $0f         1543  adda(maxTicks)                  #3
                                          1544  label('RESYNC')
RESYNC:       030c e40c  bgt  RESYNC      1545  bgt(pc()&255)                   #4 Resync
              030d a001  suba $01         1546  suba(1)                         #5
              030e 1401  ld   $01,y       1547  ld(hi('vBlankStart'),Y)         #6
              030f e11e  jmp  y,[$1e]     1548  jmp(Y,[vReturn])                #7 To video driver
              0310 0000  ld   $00         1549  ld(0)                           #8 AC should be 0 already. Still..
                                          1550  assert vCPU_overhead ==          9
                                          1551
                                          1552  # pc = 0x0311, Opcode = 0x11
                                          1553  # Instruction LDWI: Load immediate word constant (vAC=D), 24 cycles
                                          1554  label('LDWI')
LDWI:         0311 1417  ld   $17,y       1555  ld(hi('ldwi#13'),Y)             #10
              0312 e000  jmp  y,$00       1556  jmp(Y,'ldwi#13')                #11
              0313 1517  ld   [$17],y     1557  ld([vPC+1],Y)                   #12
                                          1558
                                          1559  # pc = 0x0314, Opcode = 0x14
                                          1560  # Instruction DEC: Decrement byte var ([D]--), 22 cycles
                                          1561  label('DEC')
DEC:          0314 1416  ld   $16,y       1562  ld(hi('dec#13'),Y)              #10
              0315 e007  jmp  y,$07       1563  jmp(Y,'dec#13')                 #11
                                          1564  #dummy                          #12 Overlap
                                          1565  #
                                          1566  # pc = 0x0316, Opcode = 0x16
                                          1567  # Instruction MOVQB: Load a byte var with a small constant 0..255, 28 cycles
                                          1568  label('MOVQB')
MOVQB:        0316 1416  ld   $16,y       1569  ld(hi('movqb#13'),Y)            #10 #12
              0317 e061  jmp  y,$61       1570  jmp(Y,'movqb#13')               #11
                                          1571  #dummy                          #12 Overlap
                                          1572  #
                                          1573  # pc = 0x0318, Opcode = 0x18
                                          1574  # Instruction LSRB: Logical shift right on a byte var, 28 cycles
                                          1575  label('LSRB')
LSRB:         0318 1416  ld   $16,y       1576  ld(hi('lsrb#13'),Y)             #10 #12
              0319 e07e  jmp  y,$7e       1577  jmp(Y,'lsrb#13')                #11
                                          1578  #dummy                          #12 Overlap
                                          1579  #
                                          1580  # pc = 0x031a, Opcode = 0x1a
                                          1581  # Instruction LD: Load byte from zero page (vAC=[D]), 22 cycles
                                          1582  label('LD')
LD:           031a 1416  ld   $16,y       1583  ld(hi('ld#13'),Y)               #10 #12
              031b e00e  jmp  y,$0e       1584  jmp(Y,'ld#13')                  #11
                                          1585  #dummy                          #12 Overlap
                                          1586  #
                                          1587  # pc = 0x031c, Opcode = 0x1c
                                          1588  # Instruction LOKEQI: Loke immediate unsigned word into address contained in [vAC], 34 cycles
                                          1589  label('LOKEQI')
LOKEQI:       031c 142d  ld   $2d,y       1590  ld(hi('lokeqi#13'),Y)           #10 #12
              031d e0b4  jmp  y,$b4       1591  jmp(Y,'lokeqi#13')              #11
              031e c21d  st   [$1d]       1592  st([vTmp])                      #12 imm.1
                                          1593
                                          1594  # pc = 0x031f, Opcode = 0x1f
                                          1595  # Instruction CMPHS: Adjust high byte for signed compare (vACH=XXX), 28 cycles
                                          1596  label('CMPHS')
CMPHS:        031f 140b  ld   $0b,y       1597  ld(hi('cmphs#13'),Y)            #10
              0320 e0e4  jmp  y,$e4       1598  jmp(Y,'cmphs#13')               #11
                                          1599  #dummy                          #12 Overlap, not dependent on ld(AC,X) anymore
                                          1600  #
                                          1601  # pc = 0x0321, Opcode = 0x21
                                          1602  # Instruction LDW: Load word from zero page (vAC=[D]+256*[D+1]), 24 cycles
                                          1603  label('LDW')
LDW:          0321 1416  ld   $16,y       1604  ld(hi('ldw#13'),Y)              #10 #12
              0322 e0b9  jmp  y,$b9       1605  jmp(Y,'ldw#13')                 #11
                                          1606  #dummy                          #12 Overlap
                                          1607  #
                                          1608  # pc = 0x0323, Opcode = 0x23
                                          1609  # Instruction PEEK+: Peek byte at address contained in var, inc var, 30 cycles
                                          1610  label('PEEK+')
PEEK+:        0323 1404  ld   $04,y       1611  ld(hi('peek+#13'),Y)            #10 #12
              0324 e08f  jmp  y,$8f       1612  jmp(Y,'peek+#13')               #11
                                          1613  #dummy                          #12 Overlap
                                          1614  #
                                          1615  # pc = 0x0325, Opcode = 0x25
                                          1616  # Instruction POKEI: Poke immediate byte into address contained in [vAC], 20 cycles
                                          1617  label('POKEI')
POKEI:        0325 1417  ld   $17,y       1618  ld(hi('pokei#13'),Y)            #10 #12
              0326 e0d4  jmp  y,$d4       1619  jmp(Y,'pokei#13')               #11
                                          1620  #dummy                          #12 Overlap
                                          1621  #
                                          1622  # pc = 0x0327, Opcode = 0x27
                                          1623  # Instruction LSLV: Logical shift left word var, 28 cycles
                                          1624  label('LSLV')
LSLV:         0327 1416  ld   $16,y       1625  ld(hi('lslv#13'),Y)             #10 #12
              0328 e0a5  jmp  y,$a5       1626  jmp(Y,'lslv#13')                #11
                                          1627  #dummy                          #12 Overlap
                                          1628  #
                                          1629  # pc = 0x0329, Opcode = 0x29
                                          1630  # Instruction ADDBA: vAC += var.lo, 28 cycles
                                          1631  label('ADDBA')
ADDBA:        0329 1417  ld   $17,y       1632  ld(hi('addba#13'),Y)            #10 #12
              032a e090  jmp  y,$90       1633  jmp(Y,'addba#13')               #11
                                          1634  #dummy                          #12 Overlap
                                          1635  #
                                          1636  # pc = 0x032b, Opcode = 0x2b
                                          1637  # Instruction STW: Store word in zero page ([D],[D+1]=vAC&255,vAC>>8), 24 cycles
                                          1638  label('STW')
STW:          032b 1416  ld   $16,y       1639  ld(hi('stw#13'),Y)              #10 #12
              032c e0c3  jmp  y,$c3       1640  jmp(Y,'stw#13')                 #11
                                          1641  #dummy                          #12 Overlap
                                          1642  #
                                          1643  # pc = 0x032d, Opcode = 0x2d
                                          1644  # Instruction ADDBI: Add a constant 0..255 to byte var, 28 cycles
                                          1645  label('ADDBI')
ADDBI:        032d 1416  ld   $16,y       1646  ld(hi('addbi#13'),Y)            #10 #12
              032e e0da  jmp  y,$da       1647  jmp(Y,'addbi#13')               #11
                                          1648  #dummy                          #12 Overlap
                                          1649  #
                                          1650  # pc = 0x032f, Opcode = 0x2f
                                          1651  # Instruction PREFX2
                                          1652  label('PREFX2')
PREFX2:       032f 1414  ld   $14,y       1653  ld(hi('prefx2#13'),Y)           #10 #12
              0330 e0ed  jmp  y,$ed       1654  jmp(Y,'prefx2#13')              #11
              0331 c22b  st   [$2b]       1655  st([sysArgs+7])                 #12 Operand
                                          1656
                                          1657  # pc = 0x0332, Opcode = 0x32
                                          1658  # Instruction DBNE:  Decrement byte var and branch if not zero, 28 cycles
                                          1659  label('DBNE')
DBNE:         0332 1415  ld   $15,y       1660  ld(hi('dbne#13'),Y)             #10
              0333 e053  jmp  y,$53       1661  jmp(Y,'dbne#13')                #11
              0334 1517  ld   [$17],y     1662  ld([vPC+1],Y)                   #12 vPC.hi
                                          1663
                                          1664  # pc = 0x0335, Opcode = 0x35
                                          1665  # Instruction BCC: Test AC sign and branch conditionally, variable, (24-26), cycles
                                          1666  label('BCC')
BCC:          0335 fe00  bra  ac          1667  bra(AC)                         #10 AC is the conditional operand
              0336 de00  st   [y,x++]     1668  st([Y,Xpp])                     #11 X++
                                          1669
                                          1670  # pc = 0x0337, Opcode = 0x37
                                          1671  # Instruction DOKEI: Doke immediate word into address contained in [vAC], 30 cycles
                                          1672  label('DOKEI')
DOKEI:        0337 1417  ld   $17,y       1673  ld(hi('dokei#13'),Y)            #10
              0338 e0da  jmp  y,$da       1674  jmp(Y,'dokei#13')               #11
                                          1675  #dummy                          #12 Overlap
                                          1676  #
                                          1677  # pc = 0x0339, Opcode = 0x39
                                          1678  # Instruction PEEKV: Read byte from address contained in var, 30 cycles
                                          1679  label('PEEKV')
PEEKV:        0339 1416  ld   $16,y       1680  ld(hi('peekv#13'),Y)            #10
              033a e086  jmp  y,$86       1681  jmp(Y,'peekv#13')               #11
                                          1682  #dummy                          #12 Overlap
                                          1683  #
                                          1684  # pc = 0x033b, Opcode = 0x3b
                                          1685  # Instruction DEEKV: Read word from address contained in var, 28 cycles
                                          1686  label('DEEKV')
DEEKV:        033b 1416  ld   $16,y       1687  ld(hi('deekv#13'),Y)            #10 #12
              033c e095  jmp  y,$95       1688  jmp(Y,'deekv#13')               #11
                                          1689  #dummy                          #12 Overlap
                                          1690  #
                                          1691  # pc = 0x033d, Opcode = 0x3d
                                          1692  # Instruction LOKEI: Loke immediate long into address contained in [vAC], 42 cycles
                                          1693  label('LOKEI')
LOKEI:        033d 142d  ld   $2d,y       1694  ld(hi('lokei#13'),Y)            #10
              033e e0ce  jmp  y,$ce       1695  jmp(Y,'lokei#13')               #11
                                          1696  #dummy                          #12 Overlap
                                          1697  #
                                          1698  # pc = 0x033f, Opcode = 0x3f
                                          1699  # Conditional EQ: Branch if zero (if(vACL==0)vPCL=D)
              033f 1417  ld   $17,y       1700  ld(hi('beq#15'),Y)              #12 #12
              0340 e031  jmp  y,$31       1701  jmp(Y,'beq#15')                 #13
              0341 1517  ld   [$17],y     1702  ld([vPC+1],Y)                   #14 vPC.hi
                                          1703
                                          1704  # pc = 0x0342, Opcode = 0x42
                                          1705  # Instruction ADDVI: Add 8bit immediate to 16bit zero page var, var += imm, vAC = var, 50 cycles
                                          1706  label('ADDVI')
ADDVI:        0342 1428  ld   $28,y       1707  ld(hi('addvi#13'),Y)            #10
              0343 e000  jmp  y,$00       1708  jmp(Y,'addvi#13')               #11
                                          1709  #dummy                          #12 Overlap
                                          1710
                                          1711  # pc = 0x0344, Opcode = 0x44
                                          1712  # Instruction SUBVI: Subtract 8bit immediate from 16bit zero page var, var -= imm, vAC = var, 50 cycles
                                          1713  label('SUBVI')
SUBVI:        0344 1428  ld   $28,y       1714  ld(hi('subvi#13'),Y)            #10
              0345 e039  jmp  y,$39       1715  jmp(Y,'subvi#13')               #11
                                          1716  #dummy                          #12 Overlap
                                          1717
                                          1718  # pc = 0x0346, Opcode = 0x46
                                          1719  # Instruction DOKE+: doke word in vAC to address contained in var, var += 2, 30 cycles
                                          1720  label('DOKE+')
DOKE+:        0346 1418  ld   $18,y       1721  ld(hi('doke+#13'),Y)            #10 #12
              0347 e012  jmp  y,$12       1722  jmp(Y,'doke+#13')               #11
                                          1723  #dummy                          #12 Overlap
                                          1724  #
                                          1725  # pc = 0x0348, Opcode = 0x48
                                          1726  # Instruction NOTB: var.lo = ~var.lo, 22 cycles
                                          1727  label('NOTB')
NOTB:         0348 1418  ld   $18,y       1728  ld(hi('notb#13'),Y)             #10 #12
              0349 e00b  jmp  y,$0b       1729  jmp(Y,'notb#13')                #11
                                          1730  #dummy                          #12 Overlap
                                          1731  #
                                          1732  # pc = 0x034a, Opcode = 0x4a
                                          1733  # Instruction DJGE:
                                          1734  label('DJGE')
DJGE:         034a 142b  ld   $2b,y       1735  ld(hi('djge#13'),Y)             #10 #12
              034b e000  jmp  y,$00       1736  jmp(Y,'djge#13')                #11
              034c 1517  ld   [$17],y     1737  ld([vPC+1],Y)                   #12
                                          1738
                                          1739  # pc = 0x034d, Opcode = 0x4d
                                          1740  # Conditional GT: Branch if positive (if(vACL>0)vPCL=D)
              034d 1417  ld   $17,y       1741  ld(hi('bgt#15'),Y)              #12
              034e e04d  jmp  y,$4d       1742  jmp(Y,'bgt#15')                 #13
              034f 1517  ld   [$17],y     1743  ld([vPC+1],Y)                   #14 vPC.hi
                                          1744
                                          1745  # pc = 0x0350, Opcode = 0x50
                                          1746  # Conditional LT: Branch if negative (if(vACL<0)vPCL=D)
              0350 1417  ld   $17,y       1747  ld(hi('blt#15'),Y)              #12
              0351 e062  jmp  y,$62       1748  jmp(Y,'blt#15')                 #13
              0352 1517  ld   [$17],y     1749  ld([vPC+1],Y)                   #14 vPC.hi
                                          1750
                                          1751  # pc = 0x0353, Opcode = 0x53
                                          1752  # Conditional GE: Branch if positive or zero (if(vACL>=0)vPCL=D)
              0353 1417  ld   $17,y       1753  ld(hi('bge#15'),Y)              #12
              0354 e06f  jmp  y,$6f       1754  jmp(Y,'bge#15')                 #13
              0355 1517  ld   [$17],y     1755  ld([vPC+1],Y)                   #14 vPC.hi
                                          1756
                                          1757  # pc = 0x0356, Opcode = 0x56
                                          1758  # Conditional LE: Branch if negative or zero (if(vACL<=0)vPCL=D)
              0356 1417  ld   $17,y       1759  ld(hi('ble#15'),Y)              #12
              0357 e07c  jmp  y,$7c       1760  jmp(Y,'ble#15')                 #13
              0358 1517  ld   [$17],y     1761  ld([vPC+1],Y)                   #14 vPC.hi
                                          1762
                                          1763  # pc = 0x0359, Opcode = 0x59
                                          1764  # Instruction LDI: Load immediate small positive constant (vAC=D), 20 cycles
                                          1765  label('LDI')
LDI:          0359 1416  ld   $16,y       1766  ld(hi('ldi#13'),Y)              #10
              035a e016  jmp  y,$16       1767  jmp(Y,'ldi#13')                 #11
                                          1768  #dummy                          #12 Overlap
                                          1769  #
                                          1770  # pc = 0x035b, Opcode = 0x5b
                                          1771  # Instruction MOVQW: Load a word var with a small constant 0..255, 30 cycles
                                          1772  label('MOVQW')
MOVQW:        035b 1416  ld   $16,y       1773  ld(hi('movqw#13'),Y)            #10 #12
              035c e06e  jmp  y,$6e       1774  jmp(Y,'movqw#13')               #11
              035d 1517  ld   [$17],y     1775  ld([vPC+1],Y)                   #12 vPC.hi
                                          1776
                                          1777  # pc = 0x035e, Opcode = 0x5e
                                          1778  # Instruction ST: Store byte in zero page ([D]=vAC&255), 20 cycles
                                          1779  label('ST')
ST:           035e 1416  ld   $16,y       1780  ld(hi('st#13'),Y)               #10
              035f e01c  jmp  y,$1c       1781  jmp(Y,'st#13')                  #11
                                          1782  #dummy                          #12 Overlap
                                          1783  #
                                          1784  # pc = 0x0360, Opcode = 0x60
                                          1785  # Instruction DEEK+: Deek word at address contained in var, var += 2, 30 cycles
                                          1786  label('DEEK+')
DEEK+:        0360 1417  ld   $17,y       1787  ld(hi('deek+#13'),Y)            #10 #12
              0361 e0e9  jmp  y,$e9       1788  jmp(Y,'deek+#13')               #11
              0362 1400  ld   $00,y       1789  ld(0,Y)                         #12
                                          1790
                                          1791  # pc = 0x0363, Opcode = 0x63
                                          1792  # Instruction POP: Pop address from stack (vLR,vSP==[vSP]+256*[vSP+1],vSP+2), 30 cycles
                                          1793  label('POP')
POP:          0363 140b  ld   $0b,y       1794  ld(hi('pop#13'),Y)              #10
              0364 e0c6  jmp  y,$c6       1795  jmp(Y,'pop#13')                 #11
                                          1796  #dummy                          #12 Overlap
                                          1797  #
                                          1798  # pc = 0x0365, Opcode = 0x65
                                          1799  # Instruction MOV: Moves a byte from src var to dst var, 28 cycles
                                          1800  label('MOV')
MOV:          0365 1416  ld   $16,y       1801  ld(hi('mov#13'),Y)              #10
              0366 e02c  jmp  y,$2c       1802  jmp(Y,'mov#13')                 #11
                                          1803  #dummy                          #12 Overlap
                                          1804  #
                                          1805  # pc = 0x0367, Opcode = 0x67
                                          1806  # Instruction PEEKA: Peek a byte from [vAC] to var, 24 cycles
                                          1807  label('PEEKA')
PEEKA:        0367 1416  ld   $16,y       1808  ld(hi('peeka#13'),Y)            #10 #12
              0368 e03a  jmp  y,$3a       1809  jmp(Y,'peeka#13')               #11
                                          1810  #dummy                          #12 Overlap
                                          1811  #
                                          1812  # pc = 0x0369, Opcode = 0x69
                                          1813  # Instruction POKEA: Poke a byte from var to [vAC], 22 cycles
                                          1814  label('POKEA')
POKEA:        0369 1417  ld   $17,y       1815  ld(hi('pokea#13'),Y)            #10 #12
              036a e0bc  jmp  y,$bc       1816  jmp(Y,'pokea#13')               #11
                                          1817  #dummy                          #12 Overlap
                                          1818
                                          1819  # pc = 0x036b, Opcode = 0x6b
                                          1820  # Instruction TEQ: Test for EQ, returns 0x0000 or 0x0101 in vAC, 28 cycles
                                          1821  label('TEQ')
TEQ:          036b 1415  ld   $15,y       1822  ld(hi('teq#13'),Y)              #10 #12
              036c e066  jmp  y,$66       1823  jmp(Y,'teq#13')                 #11
                                          1824  #dummy                          #12 Overlap
                                          1825  #
                                          1826  # pc = 0x036d, Opcode = 0x6d
                                          1827  # Instruction TNE: Test for NE, returns 0x0000 or 0x0101 in vAC, 28 cycles
                                          1828  label('TNE')
TNE:          036d 1415  ld   $15,y       1829  ld(hi('tne#13'),Y)              #10 #12
              036e e075  jmp  y,$75       1830  jmp(Y,'tne#13')                 #11
                                          1831  #dummy                          #12 Overlap
                                          1832  #
                                          1833  # pc = 0x036f, Opcode = 0x6f
                                          1834  # Instruction DEEKA: Deek a word from [vAC] to var, 30 cycles
                                          1835  label('DEEKA')
DEEKA:        036f 1416  ld   $16,y       1836  ld(hi('deeka#13'),Y)            #10, #12
              0370 e043  jmp  y,$43       1837  jmp(Y,'deeka#13')               #11
              0371 c21d  st   [$1d]       1838  st([vTmp])                      #12 mask
                                          1839
                                          1840  # pc = 0x0372, Opcode = 0x72
                                          1841  # Conditional NE: Branch if not zero (if(vACL!=0)vPCL=D)
              0372 1417  ld   $17,y       1842  ld(hi('bne#15'),Y)              #12
              0373 e03f  jmp  y,$3f       1843  jmp(Y,'bne#15')                 #13
              0374 1517  ld   [$17],y     1844  ld([vPC+1],Y)                   #14 vPC.hi
                                          1845
                                          1846  # pc = 0x0375, Opcode = 0x75
                                          1847  # Instruction PUSH: Push vLR on stack ([vSP-2],v[vSP-1],vSP=vLR&255,vLR>>8,vLR-2), 30 cycles
                                          1848  label('PUSH')
PUSH:         0375 140b  ld   $0b,y       1849  ld(hi('push#13'),Y)             #10
              0376 e0d6  jmp  y,$d6       1850  jmp(Y,'push#13')                #11
                                          1851  #dummy                          #12 Overlap
                                          1852  #
                                          1853  # pc = 0x0377, Opcode = 0x77
                                          1854  # Instruction SUBBA: vAC -= var.lo, 28 cycles
                                          1855  label('SUBBA')
SUBBA:        0377 1417  ld   $17,y       1856  ld(hi('subba#13'),Y)            #10 #12
              0378 e0a6  jmp  y,$a6       1857  jmp(Y,'subba#13')               #11
                                          1858  #dummy                          #12 Overlap
                                          1859  #
                                          1860  # pc = 0x0379, Opcode = 0x79
                                          1861  # Instruction INCW: Increment word var, 26 cycles
                                          1862  label('INCW')
INCW:         0379 1415  ld   $15,y       1863  ld(hi('incw#13'),Y)             #10
              037a e034  jmp  y,$34       1864  jmp(Y,'incw#13')                #11
                                          1865  #dummy                          #12 Overlap
                                          1866  #
                                          1867  # pc = 0x037b, Opcode = 0x7b
                                          1868  # Instruction DECW: Decrement word var, 26 cycles
                                          1869  label('DECW')
DECW:         037b 1415  ld   $15,y       1870  ld(hi('decw#13'),Y)             #10 #12
              037c e043  jmp  y,$43       1871  jmp(Y,'decw#13')                #11
                                          1872  #dummy                          #12 Overlap
                                          1873  #
                                          1874  # pc = 0x037d, Opcode = 0x7d
                                          1875  # Instruction DOKEA: Doke a word from var to [vAC], 30 cycles
                                          1876  label('DOKEA')
DOKEA:        037d 1417  ld   $17,y       1877  ld(hi('dokea#13'),Y)            #10 #12
              037e e0c4  jmp  y,$c4       1878  jmp(Y,'dokea#13')               #11
                                          1879  #dummy                          #12 Overlap
                                          1880
                                          1881  # pc = 0x037f, Opcode = 0x7f
                                          1882  # Instruction LUP: ROM lookup (vAC=ROM[vAC+D]), 26 cycles
                                          1883  label('LUP')
LUP:          037f 1519  ld   [$19],y     1884  ld([vAC+1],Y)                   #10 #12
              0380 e0fb  jmp  y,$fb       1885  jmp(Y,251)                      #11 Trampoline offset
              0381 8118  adda [$18]       1886  adda([vAC])                     #12
                                          1887
                                          1888  # pc = 0x0382, Opcode = 0x82
                                          1889  # Instruction ANDI: Logical-AND with small constant (vAC&=D), 20 cycles
                                          1890  label('ANDI')
ANDI:         0382 1404  ld   $04,y       1891  ld(hi('andi#13'),Y)             #10
              0383 e022  jmp  y,$22       1892  jmp(Y,'andi#13')                #11
              0384 2118  anda [$18]       1893  anda([vAC])                     #12
                                          1894
                                          1895  # pc = 0x0385, Opcode = 0x85
                                          1896  # Instruction CALLI: Goto immediate address and remember vPC (vLR,vPC=vPC+3,$HHLL-2), 28 cycles
                                          1897  label('CALLI')
CALLI:        0385 1417  ld   $17,y       1898  ld(hi('calli#13'),Y)            #10
              0386 e00a  jmp  y,$0a       1899  jmp(Y,'calli#13')               #11
              0387 0116  ld   [$16]       1900  ld([vPC])                       #12
                                          1901
                                          1902  # pc = 0x0388, Opcode = 0x88
                                          1903  # Instruction ORI: Logical-OR with small constant (vAC|=D), 20 cycles
                                          1904  label('ORI')
ORI:          0388 1416  ld   $16,y       1905  ld(hi('ori#13'),Y)              #10
              0389 e022  jmp  y,$22       1906  jmp(Y,'ori#13')                 #11
                                          1907  #dummy                          #12 Overlap
                                          1908  #
                                          1909  # pc = 0x038a, Opcode = 0x8a
                                          1910  # Instruction PEEKA+: Peek a byte from [vAC] to var, incw vAC, 28 to 30 cycles
                                          1911  label('PEEKA+')
PEEKA+:       038a 1414  ld   $14,y       1912  ld(hi('peeka+#13'),Y)           #10
              038b e046  jmp  y,$46       1913  jmp(Y,'peeka+#13')              #11
                                          1914  #dummy                          #12 Overlap
                                          1915  #
                                          1916  # pc = 0x038c, Opcode = 0x8c
                                          1917  # Instruction XORI: Logical-XOR with small constant (vAC^=D), 20 cycles
                                          1918  label('XORI')
XORI:         038c 1418  ld   $18,y       1919  ld(hi('xori#13'),Y)             #10 #12
              038d e022  jmp  y,$22       1920  jmp(Y,'xori#13')                #11
                                          1921  #dummy                          #12 Overlap
                                          1922  #
                                          1923  # pc = 0x038e, Opcode = 0x8e
                                          1924  # Instruction DBGE:  Decrement byte var and branch if >= 0, 30 cycles
                                          1925  label('DBGE')
DBGE:         038e 1418  ld   $18,y       1926  ld(hi('dbge#13'),Y)             #10
              038f e030  jmp  y,$30       1927  jmp(Y,'dbge#13')                #11
                                          1928  #dummy                          #12 Overlap
                                          1929  #
                                          1930  # pc = 0x0390, Opcode = 0x90
                                          1931  # Instruction BRA: Branch unconditionally (vPC=(vPC&0xff00)+D), 18 cycles
                                          1932  label('BRA')
BRA:          0390 1418  ld   $18,y       1933  ld(hi('bra#13'),Y)              #10
              0391 e02d  jmp  y,$2d       1934  jmp(Y,'bra#13')                 #11
              0392 c216  st   [$16]       1935  st([vPC])                       #12
                                          1936
                                          1937  # pc = 0x0393, Opcode = 0x93
                                          1938  # Instruction INC: Increment zero page byte ([D]++), 20 cycles
                                          1939  label('INC')
INC:          0393 1416  ld   $16,y       1940  ld(hi('inc#13'),Y)              #10
              0394 e000  jmp  y,$00       1941  jmp(Y,'inc#13')                 #11
                                          1942  #dummy                          #12 Overlap
                                          1943  #
                                          1944  # pc = 0x0395, Opcode = 0x95
                                          1945  # Instruction SPARE1:
                                          1946  label('SPARE1')
SPARE1:       0395 1403  ld   $03,y       1947  ld(hi('SPARE1'),Y)              #10 #12
              0396 e095  jmp  y,$95       1948  jmp(Y,'SPARE1')                 #11
                                          1949  #dummy                          #12 Overlap
                                          1950  #
                                          1951  # pc = 0x0397, Opcode = 0x97
                                          1952  # Instruction CMPHU: Adjust high byte for unsigned compare (vACH=XXX), 28 cycles
                                          1953  label('CMPHU')
CMPHU:        0397 140b  ld   $0b,y       1954  ld(hi('cmphu#13'),Y)            #10 #12
              0398 e0f2  jmp  y,$f2       1955  jmp(Y,'cmphu#13')               #11
                                          1956  #dummy                          #12 Overlap, not dependent on ld(AC,X) anymore
                                          1957  #
                                          1958  # pc = 0x0399, Opcode = 0x99
                                          1959  # Instruction ADDW: Word addition with zero page (vAC+=[D]+256*[D+1]), 30 cycles
                                          1960  label('ADDW')
ADDW:         0399 1400  ld   $00,y       1961  ld(hi('addw#13'),Y)             #10 #12
              039a e080  jmp  y,$80       1962  jmp(Y,'addw#13')                #11 Y=0
              039b 1200  ld   ac,x        1963  ld(AC,X)                        #12 Address of low byte to be added
                                          1964
                                          1965  # pc = 0x039c, Opcode = 0x9c
                                          1966  # Instruction LDNI: Load an 8bit immediate as a negative 16bit immediate into vAC, 22 cycles
                                          1967  label('LDNI')
LDNI:         039c 1418  ld   $18,y       1968  ld(hi('ldni#13'),Y)             #10
              039d e044  jmp  y,$44       1969  jmp(Y,'ldni#13')                #11
                                          1970  #dummy                          #12 Overlap
                                          1971
                                          1972  # pc = 0x039e, Opcode = 0x9e
                                          1973  # Instruction ANDBK: vAC = var & imm, 30 cycles
                                          1974  label('ANDBK')
ANDBK:        039e 1418  ld   $18,y       1975  ld(hi('andbk#13'),Y)            #10
              039f e04c  jmp  y,$4c       1976  jmp(Y,'andbk#13')               #11
                                          1977  #dummy                          #12 Overlap
                                          1978
                                          1979  # pc = 0x03a0, Opcode = 0xa0
                                          1980  # Instruction ORBK: vAC = var | imm, 30 cycles
                                          1981  label('ORBK')
ORBK:         03a0 1418  ld   $18,y       1982  ld(hi('orbk#13'),Y)             #10
              03a1 e05c  jmp  y,$5c       1983  jmp(Y,'orbk#13')                #11
                                          1984  #dummy                          #12 Overlap
                                          1985
                                          1986  # pc = 0x03a2, Opcode = 0xa2
                                          1987  # Instruction XORBK: vAC = var ^ imm, 30 cycles
                                          1988  label('XORBK')
XORBK:        03a2 1418  ld   $18,y       1989  ld(hi('xorbk#13'),Y)            #10
              03a3 e06c  jmp  y,$6c       1990  jmp(Y,'xorbk#13')               #11
                                          1991  #dummy                          #12 Overlap
                                          1992
                                          1993  # pc = 0x03a4, Opcode = 0xa4, 26 to 46 cycles
                                          1994  # Instruction DJNE:
                                          1995  label('DJNE')
DJNE:         03a4 142a  ld   $2a,y       1996  ld(hi('djne#13'),Y)             #10
              03a5 e0a6  jmp  y,$a6       1997  jmp(Y,'djne#13')                #11
              03a6 1517  ld   [$17],y     1998  ld([vPC+1],Y)                   #12
                                          1999
                                          2000  # pc = 0x03a7, Opcode = 0xa7
                                          2001  # Instruction CMPI: Compare byte variable to 8bit immediate, 36 to 36 cycles
                                          2002  label('CMPI')
CMPI:         03a7 1418  ld   $18,y       2003  ld(hi('cmpi#13'),Y)             #10
              03a8 e07c  jmp  y,$7c       2004  jmp(Y,'cmpi#13')                #11
                                          2005  #dummy                          #12 Overlap
                                          2006
                                          2007  # pc = 0x03a9, Opcode = 0xa9
                                          2008  # Instruction ADDVW: Add two 16bit zero page vars, dst += src, vAC = dst, 28 to 54 cycles
                                          2009  label('ADDVW')
ADDVW:        03a9 1414  ld   $14,y       2010  ld(hi('addvw#13'),Y)            #10 #12
              03aa e05b  jmp  y,$5b       2011  jmp(Y,'addvw#13')               #11
                                          2012  #dummy                          #12 Overlap
                                          2013
                                          2014  # pc = 0x03ab, Opcode = 0xab
                                          2015  # Instruction SUBVW: Subtract two 16bit zero page vars, dst -= src, vAC = dst, 30 to 54 cycles
                                          2016  label('SUBVW')
SUBVW:        03ab 1414  ld   $14,y       2017  ld(hi('subvw#13'),Y)            #10 #12
              03ac e0a4  jmp  y,$a4       2018  jmp(Y,'subvw#13')               #11
                                          2019  #dummy                          #12 Overlap
                                          2020
                                          2021  # pc = 0x03ad, Opcode = 0xad
                                          2022  # Instruction PEEK: Read byte from memory (vAC=[vAC]), 26 cycles
                                          2023  label('PEEK')
PEEK:         03ad 1404  ld   $04,y       2024  ld(hi('peek#13'),Y)             #10 #12
              03ae e052  jmp  y,$52       2025  jmp(Y,'peek#13')                #11
                                          2026  #dummy                          #12 Overlap
                                          2027  #
                                          2028  # The 'SYS' vCPU instruction first checks the number of desired ticks given by
                                          2029  # the operand. As long as there are insufficient ticks available in the current
                                          2030  # time slice, the instruction will be retried. This will effectively wait for
                                          2031  # the next scan line if the current slice is almost out of time. Then a jump to
                                          2032  # native code is made. This code can do whatever it wants, but it must return
                                          2033  # to the 'REENTER' label when done. When returning, AC must hold (the negative
                                          2034  # of) the actual consumed number of whole ticks for the entire virtual
                                          2035  # instruction cycle (from NEXT to NEXT). This duration may not exceed the prior
                                          2036  # declared duration in the operand + 28 (or maxTicks). The operand specifies the
                                          2037  # (negative) of the maximum number of *extra* ticks that the native call will
                                          2038  # need. The GCL compiler automatically makes this calculation from gross number
                                          2039  # of cycles to excess number of ticks.
                                          2040  # SYS functions can modify vPC to implement repetition. For example to split
                                          2041  # up work into multiple chucks.
                                          2042  label('.sys#13')
.sys#13:      03af 1418  ld   $18,y       2043  ld(hi('.sys#16'),Y)             #13
              03b0 e000  jmp  y,$00       2044  jmp(Y,'.sys#16')                #14
                                          2045  #dummy                          #15 Overlap
                                          2046  #
                                          2047  # pc = 0x03b1, Opcode = 0xb1
                                          2048  # Instruction PREFX1
                                          2049  label('PREFX1')
PREFX1:       03b1 1414  ld   $14,y       2050  ld(hi('prefx1#13'),Y)           #10 #12
              03b2 e0f5  jmp  y,$f5       2051  jmp(Y,'prefx1#13')              #11
              03b3 0023  ld   $23         2052  ld(hi('PREFX1_PAGE'))           #12 ENTER is at $(n-1)ff, where n = instruction page
                                          2053
                                          2054  # pc = 0x03b4, Opcode = 0xb4
                                          2055  # Instruction SYS: Native call, <=256 cycles (<=128 ticks, in reality less)
                                          2056  label('SYS')
SYS:          03b4 8115  adda [$15]       2057  adda([vTicks])                  #10
              03b5 e8af  blt  .sys#13     2058  blt('.sys#13')                  #11
              03b6 1523  ld   [$23],y     2059  ld([sysFn+1],Y)                 #12
              03b7 e122  jmp  y,[$22]     2060  jmp(Y,[sysFn])                  #13
                                          2061  #dummy                          #14 Overlap
                                          2062  #
                                          2063  # pc = 0x03b8, Opcode = 0xb8
                                          2064  # Instruction SUBW: Word subtract with zero page (AC-=[D]+256*[D+1]), 30 cycles
                                          2065  label('SUBW')
SUBW:         03b8 1417  ld   $17,y       2066  ld(hi('subw#13'),Y)             #10 #14
              03b9 e016  jmp  y,$16       2067  jmp(Y,'subw#13')                #11 Y=0
              03ba 1200  ld   ac,x        2068  ld(AC,X)                        #12 Address of low byte to be added
                                          2069
                                          2070  # pc = 0x03bb, Opcode = 0xbb
                                          2071  # Instruction JEQ: jump to 16bit address if vAC=0
                                          2072  label('JEQ')
JEQ:          03bb 1418  ld   $18,y       2073  ld(hi('jeq#13'),Y)              #10
              03bc e0a2  jmp  y,$a2       2074  jmp(Y,'jeq#13')                 #11
                                          2075  #dummy                          #12 Overlap
                                          2076  #
                                          2077  # pc = 0x03bd, Opcode = 0xbd
                                          2078  # Instruction JNE: jump to 16bit address if vAC!=0
                                          2079  label('JNE')
JNE:          03bd 1418  ld   $18,y       2080  ld(hi('jne#13'),Y)              #10 #12
              03be e0b4  jmp  y,$b4       2081  jmp(Y,'jne#13')                 #11
                                          2082  #dummy                          #12 Overlap
                                          2083  #
                                          2084  # pc = 0x03bf, Opcode = 0xbf
                                          2085  # Instruction JLT: jump to 16bit address if vAC<0
                                          2086  label('JLT')
JLT:          03bf 1418  ld   $18,y       2087  ld(hi('jlt#13'),Y)              #10 #12
              03c0 e0c6  jmp  y,$c6       2088  jmp(Y,'jlt#13')                 #11
                                          2089  #dummy                          #12 Overlap
                                          2090  #
                                          2091  # pc = 0x03c1, Opcode = 0xc1
                                          2092  # Instruction JGT: jump to 16bit address if vAC>0
                                          2093  label('JGT')
JGT:          03c1 1414  ld   $14,y       2094  ld(hi('jgt#13'),Y)              #10 #12
              03c2 e000  jmp  y,$00       2095  jmp(Y,'jgt#13')                 #11
                                          2096  #dummy                          #12 Overlap
                                          2097  #
                                          2098  # pc = 0x03c3, Opcode = 0xc3
                                          2099  # Instruction JLE: jump to 16bit address if vAC<=0
                                          2100  label('JLE')
JLE:          03c3 1414  ld   $14,y       2101  ld(hi('jle#13'),Y)              #10 #12
              03c4 e019  jmp  y,$19       2102  jmp(Y,'jle#13')                 #11
                                          2103  #dummy                          #12 Overlap
                                          2104  #
                                          2105  # pc = 0x03c5, Opcode = 0xc5
                                          2106  # Instruction JGE: jump to 16bit address if vAC>=0
                                          2107  label('JGE')
JGE:          03c5 1414  ld   $14,y       2108  ld(hi('jge#13'),Y)              #10 #12
              03c6 e035  jmp  y,$35       2109  jmp(Y,'jge#13')                 #11
                                          2110  #dummy                          #12 Overlap
                                          2111  #
                                          2112  # pc = 0x03c7, Opcode = 0xc7
                                          2113  # Instruction PREFX3: switches instruction page to 0x2200
                                          2114  # Original idea by lb3361, see https://forum.gigatron.io/viewtopic.php?p=2099#p2099
                                          2115  label('PREFX3')
PREFX3:       03c7 1414  ld   $14,y       2116  ld(hi('prefx3#13'),Y)           #10 #12
              03c8 e0e5  jmp  y,$e5       2117  jmp(Y,'prefx3#13')              #11
              03c9 c22b  st   [$2b]       2118  st([sysArgs+7])                 #12 Second operand
                                          2119
                                          2120  # SYS calls and instruction implementations rely on these labels
                                          2121  label('REENTER_28')
REENTER_28:   03ca 00f2  ld   $f2         2122  ld(-28/2)                       #25
                                          2123  label('REENTER')
REENTER:      03cb fc01  bra  NEXT        2124  bra('NEXT')                     #26 Return from SYS calls
              03cc 1517  ld   [$17],y     2125  ld([vPC+1],Y)                   #27
                                          2126
                                          2127  fillers(until=0xcd)
                                          2128
                                          2129  #
                                          2130  # The instructions below are all implemented in the second code page. Jumping
                                          2131  # back and forth makes each 6 cycles slower, but it also saves space in the
                                          2132  # primary page for the instructions above. Most of them are in fact not very
                                          2133  # critical, as evidenced by the fact that they weren't needed for the first
                                          2134  # Gigatron applications (Snake, Racer, Mandelbrot, Loader). By providing them
                                          2135  # in this way, at least they don't need to be implemented as a SYS extension.
                                          2136  #
                                          2137  # pc = 0x03cd, Opcode = 0xcd
                                          2138  # Instruction DEF: Define data or code (vAC,vPC=vPC+2,(vPC&0xff00)+D), 26 cycles
                                          2139  label('DEF')
DEF:          03cd 1404  ld   $04,y       2140  ld(hi('def#13'),Y)              #10
              03ce e017  jmp  y,$17       2141  jmp(Y,'def#13')                 #11
                                          2142  #dummy                          #12 Overlap
                                          2143  #
                                          2144  # pc = 0x03cf, Opcode = 0xcf
                                          2145  # Instruction CALL: Goto address and remember vPC (vLR,vPC=vPC+2,[D]+256*[D+1]-2), 30 cycles
                                          2146  label('CALL')
CALL:         03cf 1404  ld   $04,y       2147  ld(hi('call#13'),Y)             #10, #12
              03d0 e007  jmp  y,$07       2148  jmp(Y,'call#13')                #11
                                          2149  #dummy                          #12 Overlap
                                          2150  #
                                          2151  # pc = 0x03d1, Opcode = 0xd1
                                          2152  # Instruction POKE+: Poke byte in vAC to address contained in var, inc var, 30 cycles
                                          2153  label('POKE+')
POKE+:        03d1 1416  ld   $16,y       2154  ld(hi('poke+#13'),Y)            #10 #12
              03d2 e0cc  jmp  y,$cc       2155  jmp(Y,'poke+#13')               #11
                                          2156  #dummy                          #12 Overlap
                                          2157  #
                                          2158  # pc = 0x03d3, Opcode = 0xd3
                                          2159  # Instruction LSRV: Logical shift right word var, 56 cycles
                                          2160  label('LSRV')
LSRV:         03d3 142c  ld   $2c,y       2161  ld(hi('lsrv#13'),Y)             #10 #12
              03d4 e048  jmp  y,$48       2162  jmp(Y,'lsrv#13')                #11
                                          2163  #dummy                          #12 Overlap
                                          2164  #
                                          2165  # pc = 0x03d5, Opcode = 0xd5
                                          2166  # Instruction TGE: Test for GE, returns 0x0000 or 0x0101 in vAC, 26 cycles
                                          2167  label('TGE')
TGE:          03d5 1415  ld   $15,y       2168  ld(hi('tge#13'),Y)              #10 #12
              03d6 e084  jmp  y,$84       2169  jmp(Y,'tge#13')                 #11
                                          2170  #dummy                          #12 Overlap
                                          2171  #
                                          2172  # pc = 0x03d7, Opcode = 0xd7
                                          2173  # Instruction TLT: Test for LT, returns 0x0000 or 0x0101 in vAC, 26 cycles
                                          2174  label('TLT')
TLT:          03d7 1415  ld   $15,y       2175  ld(hi('tlt#13'),Y)             #10 #12
              03d8 e092  jmp  y,$92       2176  jmp(Y,'tlt#13')                #11
                                          2177  #dummy                         #12 Overlap
                                          2178  #
                                          2179  # pc = 0x03d9, Opcode = 0xd9
                                          2180  # Instruction TGT: Test for GT, returns 0x0000 or 0x0101 in vAC, 28 cycles
                                          2181  label('TGT')
TGT:          03d9 1415  ld   $15,y       2182  ld(hi('tgt#13'),Y)             #10 #12
              03da e0a0  jmp  y,$a0       2183  jmp(Y,'tgt#13')                #11
                                          2184  #dummy                         #12 Overlap
                                          2185  #
                                          2186  # pc = 0x03db, Opcode = 0xdb
                                          2187  # Instruction TLE: Test for LE, returns 0x0000 or 0x0101 in vAC
                                          2188  label('TLE')
TLE:          03db 1415  ld   $15,y       2189  ld(hi('tle#13'),Y)             #10 #12
              03dc e0b6  jmp  y,$b6       2190  jmp(Y,'tle#13')                #11
                                          2191  #dummy                         #12 Overlap
                                          2192  #
                                          2193  # pc = 0x03dd, Opcode = 0xdd
                                          2194  # Instruction SPARE2:
                                          2195  label('SPARE2')
SPARE2:       03dd 1403  ld   $03,y       2196  ld(hi('SPARE2'),Y)             #10 #12
              03de e0dd  jmp  y,$dd       2197  jmp(Y,'SPARE2')                #11
                                          2198  #dummy                         #12 Overlap
                                          2199  #
                                          2200  # pc = 0x03df, Opcode = 0xdf
                                          2201  # Instruction ALLOC: Create or destroy stack frame (vSP+=D), 20 cycles
                                          2202  label('ALLOC')
ALLOC:        03df 1416  ld   $16,y       2203  ld(hi('alloc#13'),Y)           #10
              03e0 e027  jmp  y,$27       2204  jmp(Y,'alloc#13')              #11
                                          2205  #dummy                         #12 Overlap
                                          2206  #
                                          2207  # pc = 0x03e1, Opcode = 0xe1
                                          2208  # Instruction SUBBI: Subtract a constant 0..255 from a byte var, 28 cycles
                                          2209  label('SUBBI')
SUBBI:        03e1 1416  ld   $16,y       2210  ld(hi('subbi#13'),Y)            #10 #12
              03e2 e053  jmp  y,$53       2211  jmp(Y,'subbi#13')               #11
                                          2212  #dummy                          #12 Overlap
                                          2213  #
                                          2214  # pc = 0x03e3, Opcode = 0xe3
                                          2215  # Instruction ADDI: Add small positive constant (vAC+=D), 26 cycles
                                          2216  label('ADDI')
ADDI:         03e3 1415  ld   $15,y       2217  ld(hi('addi#13'),Y)             #10 #12
              03e4 e000  jmp  y,$00       2218  jmp(Y,'addi#13')                #11
              03e5 c21d  st   [$1d]       2219  st([vTmp])                      #12
                                          2220
                                          2221  # pc = 0x03e6, Opcode = 0xe6
                                          2222  # Instruction SUBI: Subtract small positive constant (vAC+=D), 26 cycles
                                          2223  label('SUBI')
SUBI:         03e6 1415  ld   $15,y       2224  ld(hi('subi#13'),Y)             #10
              03e7 e014  jmp  y,$14       2225  jmp(Y,'subi#13')                #11
              03e8 c21d  st   [$1d]       2226  st([vTmp])                      #12
                                          2227
                                          2228  # pc = 0x03e9, Opcode = 0xe9
                                          2229  # Instruction LSLW: Logical shift left (vAC<<=1), 28 cycles
                                          2230  # Useful, because ADDW can't add vAC to itself. Also more compact.
                                          2231  label('LSLW')
LSLW:         03e9 1404  ld   $04,y       2232  ld(hi('lslw#13'),Y)             #10
              03ea e028  jmp  y,$28       2233  jmp(Y,'lslw#13')                #11
              03eb 0118  ld   [$18]       2234  ld([vAC])                       #12
                                          2235
                                          2236  # pc = 0x03ec, Opcode = 0xec
                                          2237  # Instruction STLW: Store word in stack frame ([vSP+D],[vSP+D+1]=vAC&255,vAC>>8), 24 cycles
                                          2238  label('STLW')
STLW:         03ec 1404  ld   $04,y       2239  ld(hi('stlw#13'),Y)             #10
              03ed e034  jmp  y,$34       2240  jmp(Y,'stlw#13')                #11
                                          2241  #dummy()                        #12 Overlap
                                          2242  #
                                          2243  # pc = 0x03ee, Opcode = 0xee
                                          2244  # Instruction LDLW: Load word from stack frame (vAC=[vSP+D]+256*[vSP+D+1]), 24 cycles
                                          2245  label('LDLW')
LDLW:         03ee 1404  ld   $04,y       2246  ld(hi('ldlw#13'),Y)             #10,12
              03ef e03d  jmp  y,$3d       2247  jmp(Y,'ldlw#13')                #11
                                          2248  #dummy()                        #12 Overlap
                                          2249  #
                                          2250  # pc = 0x03f0, Opcode = 0xf0
                                          2251  # Instruction POKE: Write byte in memory ([[D+1],[D]]=vAC&255), 26 cycles
                                          2252  label('POKE')
POKE:         03f0 1404  ld   $04,y       2253  ld(hi('poke#13'),Y)             #10,12
              03f1 e047  jmp  y,$47       2254  jmp(Y,'poke#13')                #11
              03f2 c21d  st   [$1d]       2255  st([vTmp])                      #12
                                          2256
                                          2257  # pc = 0x03f3, Opcode = 0xf3
                                          2258  # Instruction DOKE: Write word in memory ([[D+1],[D]],[[D+1],[D]+1]=vAC&255,vAC>>8), 28 cycles
                                          2259  label('DOKE')
DOKE:         03f3 1404  ld   $04,y       2260  ld(hi('doke#13'),Y)             #10
              03f4 e05e  jmp  y,$5e       2261  jmp(Y,'doke#13')                #11
              03f5 c21d  st   [$1d]       2262  st([vTmp])                      #12
                                          2263
                                          2264  # pc = 0x03f6, Opcode = 0xf6
                                          2265  # Instruction DEEK: Read word from memory (vAC=[vAC]+256*[vAC+1]), 28 cycles
                                          2266  label('DEEK')
DEEK:         03f6 1404  ld   $04,y       2267  ld(hi('deek#13'),Y)             #10
              03f7 e06b  jmp  y,$6b       2268  jmp(Y,'deek#13')                #11
                                          2269  #dummy()                        #12 Overlap
                                          2270  #
                                          2271  # pc = 0x03f8, Opcode = 0xf8
                                          2272  # Instruction ANDW: Word logical-AND with zero page (vAC&=[D]+256*[D+1]), 28 cycles
                                          2273  label('ANDW')
ANDW:         03f8 1404  ld   $04,y       2274  ld(hi('andw#13'),Y)             #10,12
              03f9 e077  jmp  y,$77       2275  jmp(Y,'andw#13')                #11
                                          2276  #dummy()                        #12 Overlap
                                          2277  #
                                          2278  # pc = 0x03fa, Opcode = 0xfa
                                          2279  # Instruction ORW: Word logical-OR with zero page (vAC|=[D]+256*[D+1]), 28 cycles
                                          2280  label('ORW')
ORW:          03fa 1404  ld   $04,y       2281  ld(hi('orw#13'),Y)              #10,12
              03fb e083  jmp  y,$83       2282  jmp(Y,'orw#13')                 #11
                                          2283  #dummy()                        #12 Overlap
                                          2284  #
                                          2285  # pc = 0x03fc, Opcode = 0xfc
                                          2286  # Instruction XORW: Word logical-XOR with zero page (vAC^=[D]+256*[D+1]), 28 cycles
                                          2287  label('XORW')
XORW:         03fc 1415  ld   $15,y       2288  ld(hi('xorw#13'),Y)             #10,12
              03fd e029  jmp  y,$29       2289  jmp(Y,'xorw#13')                #11
              03fe 1200  ld   ac,x        2290  ld(AC,X)                        #12
                                          2291
                                          2292  # pc = 0x03ff, Opcode = 0xff
                                          2293  # Instruction RET: Function return (vPC=vLR-2), 16 cycles
                                          2294  label('RET')
RET:          03ff 011a  ld   [$1a]       2295  ld([vLR])                       #10
                                          2296  assert pc()&255 == 0
                                          2297
                                          2298
                                          2299  #-----------------------------------------------------------------------
                                          2300  #
                                          2301  #  $0400 ROM page 4: Application interpreter extension
                                          2302  #
                                          2303  #-----------------------------------------------------------------------
                                          2304  align(0x100, size=0x100)
                                          2305
                                          2306  # (Continue RET)
              0400 a002  suba $02         2307  suba(2)                         #11
              0401 c216  st   [$16]       2308  st([vPC])                       #12
              0402 011b  ld   [$1b]       2309  ld([vLR+1])                     #13
              0403 c217  st   [$17]       2310  st([vPC+1])                     #14
              0404 1403  ld   $03,y       2311  ld(hi('REENTER'),Y)             #15
              0405 e0cb  jmp  y,$cb       2312  jmp(Y,'REENTER')                #16
              0406 00f6  ld   $f6         2313  ld(-20/2)                       #17
                                          2314
                                          2315  # CALL implementation
                                          2316  label('call#13')
call#13:      0407 1200  ld   ac,x        2317  ld(AC,X)                        #13
              0408 0116  ld   [$16]       2318  ld([vPC])                       #14
              0409 8002  adda $02         2319  adda(2)                         #15 Point to instruction after CALL
              040a c21a  st   [$1a]       2320  st([vLR])                       #16
              040b 0117  ld   [$17]       2321  ld([vPC+1])                     #17
              040c c21b  st   [$1b]       2322  st([vLR+1])                     #18
              040d 1400  ld   $00,y       2323  ld(0,Y)                         #19
              040e 0500  ld   [x]         2324  ld([X])                         #20
              040f de00  st   [y,x++]     2325  st([Y,Xpp])                     #21
              0410 a002  suba $02         2326  suba(2)                         #22 Because NEXT will add 2
              0411 c216  st   [$16]       2327  st([vPC])                       #23
              0412 0500  ld   [x]         2328  ld([X])                         #24
              0413 c217  st   [$17]       2329  st([vPC+1])                     #25
              0414 1403  ld   $03,y       2330  ld(hi('NEXTY'),Y)               #26
              0415 e000  jmp  y,$00       2331  jmp(Y,'NEXTY')                  #27
              0416 00f1  ld   $f1         2332  ld(-30/2)                       #28
                                          2333
                                          2334  # DEF implementation
                                          2335  label('def#13')
def#13:       0417 c21d  st   [$1d]       2336  st([vTmp])                      #13
              0418 0116  ld   [$16]       2337  ld([vPC])                       #14
              0419 8002  adda $02         2338  adda(2)                         #15
              041a c218  st   [$18]       2339  st([vAC])                       #16
              041b 0117  ld   [$17]       2340  ld([vPC+1])                     #17
              041c c219  st   [$19]       2341  st([vAC+1])                     #18
              041d 011d  ld   [$1d]       2342  ld([vTmp])                      #19
              041e c216  st   [$16]       2343  st([vPC])                       #20
              041f 1403  ld   $03,y       2344  ld(hi('REENTER'),Y)             #21
              0420 e0cb  jmp  y,$cb       2345  jmp(Y,'REENTER')                #22
              0421 00f3  ld   $f3         2346  ld(-26/2)                       #23
                                          2347
                                          2348  # ANDI implementation
                                          2349  label('andi#13')
andi#13:      0422 c218  st   [$18]       2350  st([vAC])                       #13
              0423 0000  ld   $00         2351  ld(0)                           #14 Clear high byte
              0424 c219  st   [$19]       2352  st([vAC+1])                     #15
              0425 1403  ld   $03,y       2353  ld(hi('NEXTY'),Y)               #16
              0426 e000  jmp  y,$00       2354  jmp(Y,'NEXTY')                  #17
              0427 00f6  ld   $f6         2355  ld(-20/2)                       #18
                                          2356
                                          2357  # LSLW implementation
                                          2358  label('lslw#13')
lslw#13:      0428 3080  anda $80,x       2359  anda(128,X)                     #13
              0429 8118  adda [$18]       2360  adda([vAC])                     #14
              042a c218  st   [$18]       2361  st([vAC])                       #15
              042b 0500  ld   [x]         2362  ld([X])                         #16
              042c 8119  adda [$19]       2363  adda([vAC+1])                   #17
              042d 8119  adda [$19]       2364  adda([vAC+1])                   #18
              042e c219  st   [$19]       2365  st([vAC+1])                     #19
              042f 0116  ld   [$16]       2366  ld([vPC])                       #20
              0430 a001  suba $01         2367  suba(1)                         #21
              0431 1403  ld   $03,y       2368  ld(hi('REENTER_28'),Y)          #22
              0432 e0ca  jmp  y,$ca       2369  jmp(Y,'REENTER_28')             #23
              0433 c216  st   [$16]       2370  st([vPC])                       #24
                                          2371
                                          2372  # STLW implementation
                                          2373  label('stlw#13')
stlw#13:      0434 1504  ld   [$04],y     2374  ld([vSPH],Y)                    #13
              0435 911c  adda [$1c],x     2375  adda([vSP],X)                   #14
              0436 0118  ld   [$18]       2376  ld([vAC])                       #15
              0437 de00  st   [y,x++]     2377  st([Y,Xpp])                     #16
              0438 0119  ld   [$19]       2378  ld([vAC+1])                     #17
              0439 ce00  st   [y,x]       2379  st([Y,X])                       #18
              043a 1403  ld   $03,y       2380  ld(hi('REENTER'),Y)             #19
              043b e0cb  jmp  y,$cb       2381  jmp(Y,'REENTER')                #20
              043c 00f4  ld   $f4         2382  ld(-24/2)                       #21
                                          2383
                                          2384  # LDLW implementation
                                          2385  label('ldlw#13')
ldlw#13:      043d 1504  ld   [$04],y     2386  ld([vSPH],Y)                    #13
              043e 911c  adda [$1c],x     2387  adda([vSP],X)                   #14
              043f 0d00  ld   [y,x]       2388  ld([Y,X])                       #15
              0440 de00  st   [y,x++]     2389  st([Y,Xpp])                     #16
              0441 c218  st   [$18]       2390  st([vAC])                       #17
              0442 0d00  ld   [y,x]       2391  ld([Y,X])                       #18
              0443 c219  st   [$19]       2392  st([vAC+1])                     #19
              0444 1403  ld   $03,y       2393  ld(hi('NEXTY'),Y)               #20
              0445 e000  jmp  y,$00       2394  jmp(Y,'NEXTY')                  #21
              0446 00f4  ld   $f4         2395  ld(-24/2)                       #22
                                          2396
                                          2397  # POKE implementation
                                          2398  label('poke#13')
poke#13:      0447 9001  adda $01,x       2399  adda(1,X)                       #13
              0448 0500  ld   [x]         2400  ld([X])                         #14
              0449 1600  ld   ac,y        2401  ld(AC,Y)                        #15
              044a 111d  ld   [$1d],x     2402  ld([vTmp],X)                    #16
              044b 0500  ld   [x]         2403  ld([X])                         #17
              044c 1200  ld   ac,x        2404  ld(AC,X)                        #18
              044d 0118  ld   [$18]       2405  ld([vAC])                       #19
              044e ce00  st   [y,x]       2406  st([Y,X])                       #20
              044f 1403  ld   $03,y       2407  ld(hi('REENTER'),Y)             #21
              0450 e0cb  jmp  y,$cb       2408  jmp(Y,'REENTER')                #22
              0451 00f3  ld   $f3         2409  ld(-26/2)                       #23
                                          2410
                                          2411  # PEEK implementation
                                          2412  label('peek#13')
peek#13:      0452 1118  ld   [$18],x     2413  ld([vAC],X)                     #13
              0453 1519  ld   [$19],y     2414  ld([vAC+1],Y)                   #14
              0454 0d00  ld   [y,x]       2415  ld([Y,X])                       #15
              0455 c218  st   [$18]       2416  st([vAC])                       #16
              0456 0000  ld   $00         2417  ld(0)                           #17
              0457 c219  st   [$19]       2418  st([vAC+1])                     #18
              0458 0116  ld   [$16]       2419  ld([vPC])                       #19
              0459 a001  suba $01         2420  suba(1)                         #20
              045a c216  st   [$16]       2421  st([vPC])                       #21
              045b 1403  ld   $03,y       2422  ld(hi('NEXTY'),Y)               #22
              045c e000  jmp  y,$00       2423  jmp(Y,'NEXTY')                  #23
              045d 00f3  ld   $f3         2424  ld(-26/2)                       #24
                                          2425
                                          2426  # DOKE implementation
                                          2427  label('doke#13')
doke#13:      045e 9001  adda $01,x       2428  adda(1,X)                       #13
              045f 0500  ld   [x]         2429  ld([X])                         #14
              0460 1600  ld   ac,y        2430  ld(AC,Y)                        #15
              0461 111d  ld   [$1d],x     2431  ld([vTmp],X)                    #16
              0462 0500  ld   [x]         2432  ld([X])                         #17
              0463 1200  ld   ac,x        2433  ld(AC,X)                        #18
              0464 0118  ld   [$18]       2434  ld([vAC])                       #19
              0465 de00  st   [y,x++]     2435  st([Y,Xpp])                     #20
              0466 0119  ld   [$19]       2436  ld([vAC+1])                     #21
              0467 ce00  st   [y,x]       2437  st([Y,X])                       #22 Incompatible with REENTER_28
              0468 1403  ld   $03,y       2438  ld(hi('REENTER'),Y)             #23
              0469 e0cb  jmp  y,$cb       2439  jmp(Y,'REENTER')                #24
              046a 00f2  ld   $f2         2440  ld(-28/2)                       #25
                                          2441
                                          2442  # DEEK implementation
                                          2443  label('deek#13')
deek#13:      046b 0116  ld   [$16]       2444  ld([vPC])                       #13
              046c a001  suba $01         2445  suba(1)                         #14
              046d c216  st   [$16]       2446  st([vPC])                       #15
              046e 1118  ld   [$18],x     2447  ld([vAC],X)                     #16
              046f 1519  ld   [$19],y     2448  ld([vAC+1],Y)                   #17
              0470 0d00  ld   [y,x]       2449  ld([Y,X])                       #18
              0471 de00  st   [y,x++]     2450  st([Y,Xpp])                     #19 Just X++
              0472 c218  st   [$18]       2451  st([vAC])                       #20
              0473 0d00  ld   [y,x]       2452  ld([Y,X])                       #21
              0474 1403  ld   $03,y       2453  ld(hi('REENTER_28'),Y)          #22
              0475 e0ca  jmp  y,$ca       2454  jmp(Y,'REENTER_28')             #23
              0476 c219  st   [$19]       2455  st([vAC+1])                     #24
                                          2456
                                          2457  # ANDW implementation
                                          2458  label('andw#13')
andw#13:      0477 1200  ld   ac,x        2459  ld(AC,X)                        #13
              0478 1400  ld   $00,y       2460  ld(0,Y)                         #14
              0479 0500  ld   [x]         2461  ld([X])                         #15
              047a de00  st   [y,x++]     2462  st([Y,Xpp])                     #16
              047b 2118  anda [$18]       2463  anda([vAC])                     #17
              047c c218  st   [$18]       2464  st([vAC])                       #18
              047d 0500  ld   [x]         2465  ld([X])                         #19
              047e 2119  anda [$19]       2466  anda([vAC+1])                   #20
              047f c219  st   [$19]       2467  st([vAC+1])                     #21
              0480 1403  ld   $03,y       2468  ld(hi('NEXTY'),Y)               #22
              0481 e000  jmp  y,$00       2469  jmp(Y,'NEXTY')                  #23
              0482 00f3  ld   $f3         2470  ld(-26/2)                       #24
                                          2471
                                          2472  # ORW implementation
                                          2473  label('orw#13')
orw#13:       0483 1200  ld   ac,x        2474  ld(AC,X)                        #13
              0484 1400  ld   $00,y       2475  ld(0,Y)                         #14
              0485 0500  ld   [x]         2476  ld([X])                         #15
              0486 de00  st   [y,x++]     2477  st([Y,Xpp])                     #16
              0487 4118  ora  [$18]       2478  ora([vAC])                      #17
              0488 c218  st   [$18]       2479  st([vAC])                       #18
              0489 0500  ld   [x]         2480  ld([X])                         #19
              048a 4119  ora  [$19]       2481  ora([vAC+1])                    #20
              048b c219  st   [$19]       2482  st([vAC+1])                     #21
              048c 1403  ld   $03,y       2483  ld(hi('NEXTY'),Y)               #22
              048d e000  jmp  y,$00       2484  jmp(Y,'NEXTY')                  #23
              048e 00f3  ld   $f3         2485  ld(-26/2)                       #24
                                          2486
                                          2487  # PEEK+ implementation
                                          2488  label('peek+#13')
peek+#13:     048f 1400  ld   $00,y       2489  ld(0,Y)                         #13
              0490 1200  ld   ac,x        2490  ld(AC,X)                        #14
              0491 0500  ld   [x]         2491  ld([X])                         #15 low byte peek address
              0492 c21d  st   [$1d]       2492  st([vTmp])                      #16
              0493 8001  adda $01         2493  adda(1)                         #17
              0494 de00  st   [y,x++]     2494  st([Y,Xpp])                     #18
              0495 0500  ld   [x]         2495  ld([X])                         #19 high byte peek address
              0496 1600  ld   ac,y        2496  ld(AC,Y)                        #20
              0497 111d  ld   [$1d],x     2497  ld([vTmp],X)                    #21
              0498 0d00  ld   [y,x]       2498  ld([Y,X])                       #22
              0499 c218  st   [$18]       2499  st([vAC])                       #23
              049a 0000  ld   $00         2500  ld(0)                           #24
              049b c219  st   [$19]       2501  st([vAC+1])                     #25
              049c 1403  ld   $03,y       2502  ld(hi('NEXTY'),Y)               #26
              049d e000  jmp  y,$00       2503  jmp(Y,'NEXTY')                  #27
              049e 00f1  ld   $f1         2504  ld(-30/2)                       #28
                                          2505
              049f 0200  nop              2506  fillers(until=0xa7)
              04a0 0200  nop
              04a1 0200  nop
              * 8 times
                                          2507
                                          2508  # pc = 0x04a7
                                          2509  #-----------------------------------------------------------------------
                                          2510  #
                                          2511  #  vCPU extension functions (for acceleration and compaction) follow below.
                                          2512  #
                                          2513  #  The naming convention is: SYS_<CamelCase>[_v<V>]_<N>
                                          2514  #
                                          2515  #  With <N> the maximum number of cycles the function will run
                                          2516  #  (counted from NEXT to NEXT). This is the same number that must
                                          2517  #  be passed to the 'SYS' vCPU instruction as operand, and it will
                                          2518  #  appear in the GCL code upon use.
                                          2519  #
                                          2520  #  If a SYS extension got introduced after ROM v1, the version number of
                                          2521  #  introduction is included in the name. This helps the programmer to be
                                          2522  #  reminded to verify the acutal ROM version and fail gracefully on older
                                          2523  #  ROMs than required. See also Docs/GT1-files.txt on using [romType].
                                          2524  #
                                          2525  #-----------------------------------------------------------------------
                                          2526
                                          2527  #-----------------------------------------------------------------------
                                          2528  # Extension SYS_Random_34: Update entropy and copy to vAC
                                          2529  #-----------------------------------------------------------------------
                                          2530
                                          2531  # This same algorithm runs automatically once per vertical blank.
                                          2532  # Use this function to get numbers at a higher rate.
                                          2533  #
                                          2534  # Variables:
                                          2535  #       vAC
                                          2536
                                          2537  label('SYS_Random_34')
SYS_Random_34:
              04a7 010e  ld   [$0e]       2538  ld([frameCount])                #15
              04a8 6107  xora [$07]       2539  xora([entropy+1])               #16
              04a9 610f  xora [$0f]       2540  xora([serialRaw])               #17
              04aa 8106  adda [$06]       2541  adda([entropy+0])               #18
              04ab c206  st   [$06]       2542  st([entropy+0])                 #19
              04ac c218  st   [$18]       2543  st([vAC+0])                     #20
              04ad 8108  adda [$08]       2544  adda([entropy+2])               #21
              04ae c208  st   [$08]       2545  st([entropy+2])                 #22
              04af e8b2  blt  .sysRnd0    2546  bmi('.sysRnd0')                 #23
              04b0 fcb3  bra  .sysRnd1    2547  bra('.sysRnd1')                 #24
              04b1 6053  xora $53         2548  xora(64+16+2+1)                 #25
                                          2549  label('.sysRnd0')
.sysRnd0:     04b2 606c  xora $6c         2550  xora(64+32+8+4)                 #25
                                          2551  label('.sysRnd1')
.sysRnd1:     04b3 8107  adda [$07]       2552  adda([entropy+1])               #26
              04b4 c207  st   [$07]       2553  st([entropy+1])                 #27
              04b5 c219  st   [$19]       2554  st([vAC+1])                     #28
              04b6 1403  ld   $03,y       2555  ld(hi('REENTER'),Y)             #29
              04b7 e0cb  jmp  y,$cb       2556  jmp(Y,'REENTER')                #30
              04b8 00ef  ld   $ef         2557  ld(-34/2)                       #31
                                          2558
                                          2559  label('SYS_LSRW7_30')
SYS_LSRW7_30: 04b9 0118  ld   [$18]       2560  ld([vAC])                       #15
              04ba 3080  anda $80,x       2561  anda(128,X)                     #16
              04bb 0119  ld   [$19]       2562  ld([vAC+1])                     #17
              04bc 8200  adda ac          2563  adda(AC)                        #18
              04bd 4500  ora  [x]         2564  ora([X])                        #19
              04be c218  st   [$18]       2565  st([vAC])                       #20
              04bf 0119  ld   [$19]       2566  ld([vAC+1])                     #21
              04c0 3080  anda $80,x       2567  anda(128,X)                     #22
              04c1 0500  ld   [x]         2568  ld([X])                         #23
              04c2 c219  st   [$19]       2569  st([vAC+1])                     #24
              04c3 1403  ld   $03,y       2570  ld(hi('REENTER'),Y)             #25
              04c4 e0cb  jmp  y,$cb       2571  jmp(Y,'REENTER')                #26
              04c5 00f1  ld   $f1         2572  ld(-30/2)                       #27
                                          2573
                                          2574  label('SYS_LSRW8_24')
SYS_LSRW8_24: 04c6 0119  ld   [$19]       2575  ld([vAC+1])                     #15
              04c7 c218  st   [$18]       2576  st([vAC])                       #16
              04c8 0000  ld   $00         2577  ld(0)                           #17
              04c9 c219  st   [$19]       2578  st([vAC+1])                     #18
              04ca 1403  ld   $03,y       2579  ld(hi('REENTER'),Y)             #19
              04cb e0cb  jmp  y,$cb       2580  jmp(Y,'REENTER')                #20
              04cc 00f4  ld   $f4         2581  ld(-24/2)                       #21
                                          2582
                                          2583  label('SYS_LSLW8_24')
SYS_LSLW8_24: 04cd 0118  ld   [$18]       2584  ld([vAC])                       #15
              04ce c219  st   [$19]       2585  st([vAC+1])                     #16
              04cf 0000  ld   $00         2586  ld(0)                           #17
              04d0 c218  st   [$18]       2587  st([vAC])                       #18
              04d1 1403  ld   $03,y       2588  ld(hi('REENTER'),Y)             #19
              04d2 e0cb  jmp  y,$cb       2589  jmp(Y,'REENTER')                #20
              04d3 00f4  ld   $f4         2590  ld(-24/2)                       #21
                                          2591
                                          2592  #-----------------------------------------------------------------------
                                          2593  # Extension SYS_Draw4_30
                                          2594  #-----------------------------------------------------------------------
                                          2595
                                          2596  # Draw 4 pixels on screen, horizontally next to each other
                                          2597  #
                                          2598  # Variables:
                                          2599  #       sysArgs[0:3]    Pixels (in)
                                          2600  #       sysArgs[4:5]    Position on screen (in)
                                          2601
                                          2602  label('SYS_Draw4_30')
SYS_Draw4_30: 04d4 1128  ld   [$28],x     2603  ld([sysArgs+4],X)               #15
              04d5 1529  ld   [$29],y     2604  ld([sysArgs+5],Y)               #16
              04d6 0124  ld   [$24]       2605  ld([sysArgs+0])                 #17
              04d7 de00  st   [y,x++]     2606  st([Y,Xpp])                     #18
              04d8 0125  ld   [$25]       2607  ld([sysArgs+1])                 #19
              04d9 de00  st   [y,x++]     2608  st([Y,Xpp])                     #20
              04da 0126  ld   [$26]       2609  ld([sysArgs+2])                 #21
              04db de00  st   [y,x++]     2610  st([Y,Xpp])                     #22
              04dc 0127  ld   [$27]       2611  ld([sysArgs+3])                 #23
              04dd de00  st   [y,x++]     2612  st([Y,Xpp])                     #24
              04de 1403  ld   $03,y       2613  ld(hi('REENTER'),Y)             #25
              04df e0cb  jmp  y,$cb       2614  jmp(Y,'REENTER')                #26
              04e0 00f1  ld   $f1         2615  ld(-30/2)                       #27
                                          2616
                                          2617  #-----------------------------------------------------------------------
                                          2618  # Extension SYS_VDrawBits_134:
                                          2619  #-----------------------------------------------------------------------
                                          2620
                                          2621  # Draw slice of a character, 8 pixels vertical
                                          2622  #
                                          2623  # Variables:
                                          2624  #       sysArgs[0]      Color 0 "background" (in)
                                          2625  #       sysArgs[1]      Color 1 "pen" (in)
                                          2626  #       sysArgs[2]      8 bits, highest bit first (in, changed)
                                          2627  #       sysArgs[4:5]    Position on screen (in)
                                          2628
                                          2629  label('SYS_VDrawBits_134')
SYS_VDrawBits_134:
              04e1 1412  ld   $12,y       2630  ld(hi('sys_VDrawBits'),Y)       #15
              04e2 e093  jmp  y,$93       2631  jmp(Y,'sys_VDrawBits')          #16
              04e3 1128  ld   [$28],x     2632  ld([sysArgs+4],X)               #17
                                          2633
                                          2634  #-----------------------------------------------------------------------
                                          2635
                                          2636  # Interrupt handler:
                                          2637  #       STW  $xx        -> optionally store vCpuSelect
                                          2638  #       ... IRQ payload ...
                                          2639  # either:
                                          2640  #       LDWI $400
                                          2641  #       LUP  0          -> vRTI and don't switch interpreter (immediate resume)
                                          2642  # or:
                                          2643  #       LDWI $400
                                          2644  #       LUP  $xx        -> vRTI and switch interpreter type as stored in [$xx]
              04e4 0200  nop              2645  fillers(until=251-13)
              04e5 0200  nop
              04e6 0200  nop
              * 10 times
                                          2646  label('vRTI#15')
vRTI#15:      04ee 0130  ld   [$30]       2647  ld([0x30])                      #15 Continue with vCPU in the same timeslice (faster)
              04ef c216  st   [$16]       2648  st([vPC])                       #16
              04f0 0131  ld   [$31]       2649  ld([0x31])                      #17
              04f1 c217  st   [$17]       2650  st([vPC+1])                     #18
              04f2 0132  ld   [$32]       2651  ld([0x32])                      #19
              04f3 c218  st   [$18]       2652  st([vAC])                       #20
              04f4 0133  ld   [$33]       2653  ld([0x33])                      #21
              04f5 c219  st   [$19]       2654  st([vAC+1])                     #22
              04f6 0134  ld   [$34]       2655  ld([0x34])                      #23 Restore vCpuSelect for PREFIX
              04f7 c202  st   [$02]       2656  st([vCpuSelect])                #24
              04f8 9401  adda $01,y       2657  adda(1,Y)                       #25 Jump to correct PREFIX page, (or page by default)
              04f9 e0cb  jmp  y,$cb       2658  jmp(Y,'REENTER')                #26
              04fa 00f1  ld   $f1         2659  ld(-30/2)                       #27
                                          2660  # vRTI entry point
                                          2661  assert(pc()&255 == 251)         # The landing offset 251 for LUP trampoline is fixed
              04fb f0ee  beq  vRTI#15     2662  beq('vRTI#15')                  #13 vRTI sequence
              04fc 9001  adda $01,x       2663  adda(1,X)                       #14
              04fd 1412  ld   $12,y       2664  ld(hi('vRTI#18'),Y)             #15 Switch and wait for end of timeslice (slower)
              04fe e022  jmp  y,$22       2665  jmp(Y,'vRTI#18')                #16
              04ff c21d  st   [$1d]       2666  st([vTmp])                      #17
                                          2667
                                          2668  #-----------------------------------------------------------------------
                                          2669  #
                                          2670  #  $0500 ROM page 5-6: Shift table and code
                                          2671  #
                                          2672  #-----------------------------------------------------------------------
                                          2673
                                          2674  align(0x100, size=0x200)
                                          2675
                                          2676  # Lookup table for i>>n, with n in 1..6
                                          2677  # Indexing ix = i & ~b | (b-1), where b = 1<<(n-1)
                                          2678  #       ...
                                          2679  #       ld   <.ret
                                          2680  #       st   [vTmp]
                                          2681  #       ld   >shiftTable,y
                                          2682  #       <calculate ix>
                                          2683  #       jmp  y,ac
                                          2684  #       bra  $ff
                                          2685  # .ret: ...
                                          2686  #
                                          2687  # i >> 7 can be always be done with RAM: [i&128]
                                          2688  #       ...
                                          2689  #       anda $80,x
                                          2690  #       ld   [x]
                                          2691  #       ...
                                          2692
                                          2693  label('shiftTable')
                                          2694  shiftTable = pc()
                                          2695
                                          2696  for ix in range(255):
                                          2697    for n in range(1,7): # Find first zero
                                          2698      if ~ix & (1 << (n-1)):
                                          2699        break
                                          2700    pattern = ['x' if i<n else '1' if ix&(1<<i) else '0' for i in range(8)]
                                          2701    ld(ix>>n); C('0b%s >> %d' % (''.join(reversed(pattern)), n))
shiftTable:   0500 0000  ld   $00         ;0b0000000x >> 1
              0501 0000  ld   $00         ;0b000000xx >> 2
              0502 0001  ld   $01         ;0b0000001x >> 1
              0503 0000  ld   $00         ;0b00000xxx >> 3
              0504 0002  ld   $02         ;0b0000010x >> 1
              0505 0001  ld   $01         ;0b000001xx >> 2
              0506 0003  ld   $03         ;0b0000011x >> 1
              0507 0000  ld   $00         ;0b0000xxxx >> 4
              0508 0004  ld   $04         ;0b0000100x >> 1
              0509 0002  ld   $02         ;0b000010xx >> 2
              050a 0005  ld   $05         ;0b0000101x >> 1
              050b 0001  ld   $01         ;0b00001xxx >> 3
              050c 0006  ld   $06         ;0b0000110x >> 1
              050d 0003  ld   $03         ;0b000011xx >> 2
              050e 0007  ld   $07         ;0b0000111x >> 1
              050f 0000  ld   $00         ;0b000xxxxx >> 5
              0510 0008  ld   $08         ;0b0001000x >> 1
              0511 0004  ld   $04         ;0b000100xx >> 2
              0512 0009  ld   $09         ;0b0001001x >> 1
              0513 0002  ld   $02         ;0b00010xxx >> 3
              0514 000a  ld   $0a         ;0b0001010x >> 1
              0515 0005  ld   $05         ;0b000101xx >> 2
              0516 000b  ld   $0b         ;0b0001011x >> 1
              0517 0001  ld   $01         ;0b0001xxxx >> 4
              0518 000c  ld   $0c         ;0b0001100x >> 1
              0519 0006  ld   $06         ;0b000110xx >> 2
              051a 000d  ld   $0d         ;0b0001101x >> 1
              051b 0003  ld   $03         ;0b00011xxx >> 3
              051c 000e  ld   $0e         ;0b0001110x >> 1
              051d 0007  ld   $07         ;0b000111xx >> 2
              051e 000f  ld   $0f         ;0b0001111x >> 1
              051f 0000  ld   $00         ;0b00xxxxxx >> 6
              0520 0010  ld   $10         ;0b0010000x >> 1
              0521 0008  ld   $08         ;0b001000xx >> 2
              0522 0011  ld   $11         ;0b0010001x >> 1
              0523 0004  ld   $04         ;0b00100xxx >> 3
              0524 0012  ld   $12         ;0b0010010x >> 1
              0525 0009  ld   $09         ;0b001001xx >> 2
              0526 0013  ld   $13         ;0b0010011x >> 1
              0527 0002  ld   $02         ;0b0010xxxx >> 4
              0528 0014  ld   $14         ;0b0010100x >> 1
              0529 000a  ld   $0a         ;0b001010xx >> 2
              052a 0015  ld   $15         ;0b0010101x >> 1
              052b 0005  ld   $05         ;0b00101xxx >> 3
              052c 0016  ld   $16         ;0b0010110x >> 1
              052d 000b  ld   $0b         ;0b001011xx >> 2
              052e 0017  ld   $17         ;0b0010111x >> 1
              052f 0001  ld   $01         ;0b001xxxxx >> 5
              0530 0018  ld   $18         ;0b0011000x >> 1
              0531 000c  ld   $0c         ;0b001100xx >> 2
              0532 0019  ld   $19         ;0b0011001x >> 1
              0533 0006  ld   $06         ;0b00110xxx >> 3
              0534 001a  ld   $1a         ;0b0011010x >> 1
              0535 000d  ld   $0d         ;0b001101xx >> 2
              0536 001b  ld   $1b         ;0b0011011x >> 1
              0537 0003  ld   $03         ;0b0011xxxx >> 4
              0538 001c  ld   $1c         ;0b0011100x >> 1
              0539 000e  ld   $0e         ;0b001110xx >> 2
              053a 001d  ld   $1d         ;0b0011101x >> 1
              053b 0007  ld   $07         ;0b00111xxx >> 3
              053c 001e  ld   $1e         ;0b0011110x >> 1
              053d 000f  ld   $0f         ;0b001111xx >> 2
              053e 001f  ld   $1f         ;0b0011111x >> 1
              053f 0000  ld   $00         ;0b00xxxxxx >> 6
              0540 0020  ld   $20         ;0b0100000x >> 1
              0541 0010  ld   $10         ;0b010000xx >> 2
              0542 0021  ld   $21         ;0b0100001x >> 1
              0543 0008  ld   $08         ;0b01000xxx >> 3
              0544 0022  ld   $22         ;0b0100010x >> 1
              0545 0011  ld   $11         ;0b010001xx >> 2
              0546 0023  ld   $23         ;0b0100011x >> 1
              0547 0004  ld   $04         ;0b0100xxxx >> 4
              0548 0024  ld   $24         ;0b0100100x >> 1
              0549 0012  ld   $12         ;0b010010xx >> 2
              054a 0025  ld   $25         ;0b0100101x >> 1
              054b 0009  ld   $09         ;0b01001xxx >> 3
              054c 0026  ld   $26         ;0b0100110x >> 1
              054d 0013  ld   $13         ;0b010011xx >> 2
              054e 0027  ld   $27         ;0b0100111x >> 1
              054f 0002  ld   $02         ;0b010xxxxx >> 5
              0550 0028  ld   $28         ;0b0101000x >> 1
              0551 0014  ld   $14         ;0b010100xx >> 2
              0552 0029  ld   $29         ;0b0101001x >> 1
              0553 000a  ld   $0a         ;0b01010xxx >> 3
              0554 002a  ld   $2a         ;0b0101010x >> 1
              0555 0015  ld   $15         ;0b010101xx >> 2
              0556 002b  ld   $2b         ;0b0101011x >> 1
              0557 0005  ld   $05         ;0b0101xxxx >> 4
              0558 002c  ld   $2c         ;0b0101100x >> 1
              0559 0016  ld   $16         ;0b010110xx >> 2
              055a 002d  ld   $2d         ;0b0101101x >> 1
              055b 000b  ld   $0b         ;0b01011xxx >> 3
              055c 002e  ld   $2e         ;0b0101110x >> 1
              055d 0017  ld   $17         ;0b010111xx >> 2
              055e 002f  ld   $2f         ;0b0101111x >> 1
              055f 0001  ld   $01         ;0b01xxxxxx >> 6
              0560 0030  ld   $30         ;0b0110000x >> 1
              0561 0018  ld   $18         ;0b011000xx >> 2
              0562 0031  ld   $31         ;0b0110001x >> 1
              0563 000c  ld   $0c         ;0b01100xxx >> 3
              0564 0032  ld   $32         ;0b0110010x >> 1
              0565 0019  ld   $19         ;0b011001xx >> 2
              0566 0033  ld   $33         ;0b0110011x >> 1
              0567 0006  ld   $06         ;0b0110xxxx >> 4
              0568 0034  ld   $34         ;0b0110100x >> 1
              0569 001a  ld   $1a         ;0b011010xx >> 2
              056a 0035  ld   $35         ;0b0110101x >> 1
              056b 000d  ld   $0d         ;0b01101xxx >> 3
              056c 0036  ld   $36         ;0b0110110x >> 1
              056d 001b  ld   $1b         ;0b011011xx >> 2
              056e 0037  ld   $37         ;0b0110111x >> 1
              056f 0003  ld   $03         ;0b011xxxxx >> 5
              0570 0038  ld   $38         ;0b0111000x >> 1
              0571 001c  ld   $1c         ;0b011100xx >> 2
              0572 0039  ld   $39         ;0b0111001x >> 1
              0573 000e  ld   $0e         ;0b01110xxx >> 3
              0574 003a  ld   $3a         ;0b0111010x >> 1
              0575 001d  ld   $1d         ;0b011101xx >> 2
              0576 003b  ld   $3b         ;0b0111011x >> 1
              0577 0007  ld   $07         ;0b0111xxxx >> 4
              0578 003c  ld   $3c         ;0b0111100x >> 1
              0579 001e  ld   $1e         ;0b011110xx >> 2
              057a 003d  ld   $3d         ;0b0111101x >> 1
              057b 000f  ld   $0f         ;0b01111xxx >> 3
              057c 003e  ld   $3e         ;0b0111110x >> 1
              057d 001f  ld   $1f         ;0b011111xx >> 2
              057e 003f  ld   $3f         ;0b0111111x >> 1
              057f 0001  ld   $01         ;0b01xxxxxx >> 6
              0580 0040  ld   $40         ;0b1000000x >> 1
              0581 0020  ld   $20         ;0b100000xx >> 2
              0582 0041  ld   $41         ;0b1000001x >> 1
              0583 0010  ld   $10         ;0b10000xxx >> 3
              0584 0042  ld   $42         ;0b1000010x >> 1
              0585 0021  ld   $21         ;0b100001xx >> 2
              0586 0043  ld   $43         ;0b1000011x >> 1
              0587 0008  ld   $08         ;0b1000xxxx >> 4
              0588 0044  ld   $44         ;0b1000100x >> 1
              0589 0022  ld   $22         ;0b100010xx >> 2
              058a 0045  ld   $45         ;0b1000101x >> 1
              058b 0011  ld   $11         ;0b10001xxx >> 3
              058c 0046  ld   $46         ;0b1000110x >> 1
              058d 0023  ld   $23         ;0b100011xx >> 2
              058e 0047  ld   $47         ;0b1000111x >> 1
              058f 0004  ld   $04         ;0b100xxxxx >> 5
              0590 0048  ld   $48         ;0b1001000x >> 1
              0591 0024  ld   $24         ;0b100100xx >> 2
              0592 0049  ld   $49         ;0b1001001x >> 1
              0593 0012  ld   $12         ;0b10010xxx >> 3
              0594 004a  ld   $4a         ;0b1001010x >> 1
              0595 0025  ld   $25         ;0b100101xx >> 2
              0596 004b  ld   $4b         ;0b1001011x >> 1
              0597 0009  ld   $09         ;0b1001xxxx >> 4
              0598 004c  ld   $4c         ;0b1001100x >> 1
              0599 0026  ld   $26         ;0b100110xx >> 2
              059a 004d  ld   $4d         ;0b1001101x >> 1
              059b 0013  ld   $13         ;0b10011xxx >> 3
              059c 004e  ld   $4e         ;0b1001110x >> 1
              059d 0027  ld   $27         ;0b100111xx >> 2
              059e 004f  ld   $4f         ;0b1001111x >> 1
              059f 0002  ld   $02         ;0b10xxxxxx >> 6
              05a0 0050  ld   $50         ;0b1010000x >> 1
              05a1 0028  ld   $28         ;0b101000xx >> 2
              05a2 0051  ld   $51         ;0b1010001x >> 1
              05a3 0014  ld   $14         ;0b10100xxx >> 3
              05a4 0052  ld   $52         ;0b1010010x >> 1
              05a5 0029  ld   $29         ;0b101001xx >> 2
              05a6 0053  ld   $53         ;0b1010011x >> 1
              05a7 000a  ld   $0a         ;0b1010xxxx >> 4
              05a8 0054  ld   $54         ;0b1010100x >> 1
              05a9 002a  ld   $2a         ;0b101010xx >> 2
              05aa 0055  ld   $55         ;0b1010101x >> 1
              05ab 0015  ld   $15         ;0b10101xxx >> 3
              05ac 0056  ld   $56         ;0b1010110x >> 1
              05ad 002b  ld   $2b         ;0b101011xx >> 2
              05ae 0057  ld   $57         ;0b1010111x >> 1
              05af 0005  ld   $05         ;0b101xxxxx >> 5
              05b0 0058  ld   $58         ;0b1011000x >> 1
              05b1 002c  ld   $2c         ;0b101100xx >> 2
              05b2 0059  ld   $59         ;0b1011001x >> 1
              05b3 0016  ld   $16         ;0b10110xxx >> 3
              05b4 005a  ld   $5a         ;0b1011010x >> 1
              05b5 002d  ld   $2d         ;0b101101xx >> 2
              05b6 005b  ld   $5b         ;0b1011011x >> 1
              05b7 000b  ld   $0b         ;0b1011xxxx >> 4
              05b8 005c  ld   $5c         ;0b1011100x >> 1
              05b9 002e  ld   $2e         ;0b101110xx >> 2
              05ba 005d  ld   $5d         ;0b1011101x >> 1
              05bb 0017  ld   $17         ;0b10111xxx >> 3
              05bc 005e  ld   $5e         ;0b1011110x >> 1
              05bd 002f  ld   $2f         ;0b101111xx >> 2
              05be 005f  ld   $5f         ;0b1011111x >> 1
              05bf 0002  ld   $02         ;0b10xxxxxx >> 6
              05c0 0060  ld   $60         ;0b1100000x >> 1
              05c1 0030  ld   $30         ;0b110000xx >> 2
              05c2 0061  ld   $61         ;0b1100001x >> 1
              05c3 0018  ld   $18         ;0b11000xxx >> 3
              05c4 0062  ld   $62         ;0b1100010x >> 1
              05c5 0031  ld   $31         ;0b110001xx >> 2
              05c6 0063  ld   $63         ;0b1100011x >> 1
              05c7 000c  ld   $0c         ;0b1100xxxx >> 4
              05c8 0064  ld   $64         ;0b1100100x >> 1
              05c9 0032  ld   $32         ;0b110010xx >> 2
              05ca 0065  ld   $65         ;0b1100101x >> 1
              05cb 0019  ld   $19         ;0b11001xxx >> 3
              05cc 0066  ld   $66         ;0b1100110x >> 1
              05cd 0033  ld   $33         ;0b110011xx >> 2
              05ce 0067  ld   $67         ;0b1100111x >> 1
              05cf 0006  ld   $06         ;0b110xxxxx >> 5
              05d0 0068  ld   $68         ;0b1101000x >> 1
              05d1 0034  ld   $34         ;0b110100xx >> 2
              05d2 0069  ld   $69         ;0b1101001x >> 1
              05d3 001a  ld   $1a         ;0b11010xxx >> 3
              05d4 006a  ld   $6a         ;0b1101010x >> 1
              05d5 0035  ld   $35         ;0b110101xx >> 2
              05d6 006b  ld   $6b         ;0b1101011x >> 1
              05d7 000d  ld   $0d         ;0b1101xxxx >> 4
              05d8 006c  ld   $6c         ;0b1101100x >> 1
              05d9 0036  ld   $36         ;0b110110xx >> 2
              05da 006d  ld   $6d         ;0b1101101x >> 1
              05db 001b  ld   $1b         ;0b11011xxx >> 3
              05dc 006e  ld   $6e         ;0b1101110x >> 1
              05dd 0037  ld   $37         ;0b110111xx >> 2
              05de 006f  ld   $6f         ;0b1101111x >> 1
              05df 0003  ld   $03         ;0b11xxxxxx >> 6
              05e0 0070  ld   $70         ;0b1110000x >> 1
              05e1 0038  ld   $38         ;0b111000xx >> 2
              05e2 0071  ld   $71         ;0b1110001x >> 1
              05e3 001c  ld   $1c         ;0b11100xxx >> 3
              05e4 0072  ld   $72         ;0b1110010x >> 1
              05e5 0039  ld   $39         ;0b111001xx >> 2
              05e6 0073  ld   $73         ;0b1110011x >> 1
              05e7 000e  ld   $0e         ;0b1110xxxx >> 4
              05e8 0074  ld   $74         ;0b1110100x >> 1
              05e9 003a  ld   $3a         ;0b111010xx >> 2
              05ea 0075  ld   $75         ;0b1110101x >> 1
              05eb 001d  ld   $1d         ;0b11101xxx >> 3
              05ec 0076  ld   $76         ;0b1110110x >> 1
              05ed 003b  ld   $3b         ;0b111011xx >> 2
              05ee 0077  ld   $77         ;0b1110111x >> 1
              05ef 0007  ld   $07         ;0b111xxxxx >> 5
              05f0 0078  ld   $78         ;0b1111000x >> 1
              05f1 003c  ld   $3c         ;0b111100xx >> 2
              05f2 0079  ld   $79         ;0b1111001x >> 1
              05f3 001e  ld   $1e         ;0b11110xxx >> 3
              05f4 007a  ld   $7a         ;0b1111010x >> 1
              05f5 003d  ld   $3d         ;0b111101xx >> 2
              05f6 007b  ld   $7b         ;0b1111011x >> 1
              05f7 000f  ld   $0f         ;0b1111xxxx >> 4
              05f8 007c  ld   $7c         ;0b1111100x >> 1
              05f9 003e  ld   $3e         ;0b111110xx >> 2
              05fa 007d  ld   $7d         ;0b1111101x >> 1
              05fb 001f  ld   $1f         ;0b11111xxx >> 3
              05fc 007e  ld   $7e         ;0b1111110x >> 1
              05fd 003f  ld   $3f         ;0b111111xx >> 2
              05fe 007f  ld   $7f         ;0b1111111x >> 1
                                          2702
                                          2703  assert pc()&255 == 255
              05ff fd1d  bra  [$1d]       2704  bra([vTmp])                     # Jumps back into next page
                                          2705
                                          2706  label('SYS_LSRW1_48')
                                          2707  assert pc()&255 == 0            # First instruction on this page *must* be a nop
SYS_LSRW1_48: 0600 0200  nop              2708  nop()                           #15
              0601 1405  ld   $05,y       2709  ld(hi('shiftTable'),Y)          #16 Logical shift right 1 bit (X >> 1)
              0602 0008  ld   $08         2710  ld('.sysLsrw1a')                #17 Shift low byte
              0603 c21d  st   [$1d]       2711  st([vTmp])                      #18
              0604 0118  ld   [$18]       2712  ld([vAC])                       #19
              0605 20fe  anda $fe         2713  anda(0b11111110)                #20
              0606 e200  jmp  y,ac        2714  jmp(Y,AC)                       #21
              0607 fcff  bra  $ff         2715  bra(255)                        #22 bra shiftTable+255
                                          2716  label('.sysLsrw1a')
.sysLsrw1a:   0608 c218  st   [$18]       2717  st([vAC])                       #26
              0609 0119  ld   [$19]       2718  ld([vAC+1])                     #27 Transfer bit 8
              060a 2001  anda $01         2719  anda(1)                         #28
              060b 807f  adda $7f         2720  adda(127)                       #29
              060c 2080  anda $80         2721  anda(128)                       #30
              060d 4118  ora  [$18]       2722  ora([vAC])                      #31
              060e c218  st   [$18]       2723  st([vAC])                       #32
              060f 0015  ld   $15         2724  ld('.sysLsrw1b')                #33 Shift high byte
              0610 c21d  st   [$1d]       2725  st([vTmp])                      #34
              0611 0119  ld   [$19]       2726  ld([vAC+1])                     #35
              0612 20fe  anda $fe         2727  anda(0b11111110)                #36
              0613 e200  jmp  y,ac        2728  jmp(Y,AC)                       #37
              0614 fcff  bra  $ff         2729  bra(255)                        #38 bra shiftTable+255
                                          2730  label('.sysLsrw1b')
.sysLsrw1b:   0615 c219  st   [$19]       2731  st([vAC+1])                     #42
              0616 1403  ld   $03,y       2732  ld(hi('REENTER'),Y)             #43
              0617 e0cb  jmp  y,$cb       2733  jmp(Y,'REENTER')                #44
              0618 00e8  ld   $e8         2734  ld(-48/2)                       #45
                                          2735
                                          2736  label('SYS_LSRW2_52')
SYS_LSRW2_52: 0619 1405  ld   $05,y       2737  ld(hi('shiftTable'),Y)          #15 Logical shift right 2 bit (X >> 2)
              061a 0021  ld   $21         2738  ld('.sysLsrw2a')                #16 Shift low byte
              061b c21d  st   [$1d]       2739  st([vTmp])                      #17
              061c 0118  ld   [$18]       2740  ld([vAC])                       #18
              061d 20fc  anda $fc         2741  anda(0b11111100)                #19
              061e 4001  ora  $01         2742  ora( 0b00000001)                #20
              061f e200  jmp  y,ac        2743  jmp(Y,AC)                       #21
              0620 fcff  bra  $ff         2744  bra(255)                        #22 bra shiftTable+255
                                          2745  label('.sysLsrw2a')
.sysLsrw2a:   0621 c218  st   [$18]       2746  st([vAC])                       #26
              0622 0119  ld   [$19]       2747  ld([vAC+1])                     #27 Transfer bit 8:9
              0623 8200  adda ac          2748  adda(AC)                        #28
              0624 8200  adda ac          2749  adda(AC)                        #29
              0625 8200  adda ac          2750  adda(AC)                        #30
              0626 8200  adda ac          2751  adda(AC)                        #31
              0627 8200  adda ac          2752  adda(AC)                        #32
              0628 8200  adda ac          2753  adda(AC)                        #33
              0629 4118  ora  [$18]       2754  ora([vAC])                      #34
              062a c218  st   [$18]       2755  st([vAC])                       #35
              062b 0032  ld   $32         2756  ld('.sysLsrw2b')                #36 Shift high byte
              062c c21d  st   [$1d]       2757  st([vTmp])                      #37
              062d 0119  ld   [$19]       2758  ld([vAC+1])                     #38
              062e 20fc  anda $fc         2759  anda(0b11111100)                #39
              062f 4001  ora  $01         2760  ora( 0b00000001)                #40
              0630 e200  jmp  y,ac        2761  jmp(Y,AC)                       #41
              0631 fcff  bra  $ff         2762  bra(255)                        #42 bra shiftTable+255
                                          2763  label('.sysLsrw2b')
.sysLsrw2b:   0632 c219  st   [$19]       2764  st([vAC+1])                     #46
              0633 1403  ld   $03,y       2765  ld(hi('REENTER'),Y)             #47
              0634 e0cb  jmp  y,$cb       2766  jmp(Y,'REENTER')                #48
              0635 00e6  ld   $e6         2767  ld(-52/2)                       #49
                                          2768
                                          2769  label('SYS_LSRW3_52')
SYS_LSRW3_52: 0636 1405  ld   $05,y       2770  ld(hi('shiftTable'),Y)          #15 Logical shift right 3 bit (X >> 3)
              0637 003e  ld   $3e         2771  ld('.sysLsrw3a')                #16 Shift low byte
              0638 c21d  st   [$1d]       2772  st([vTmp])                      #17
              0639 0118  ld   [$18]       2773  ld([vAC])                       #18
              063a 20f8  anda $f8         2774  anda(0b11111000)                #19
              063b 4003  ora  $03         2775  ora( 0b00000011)                #20
              063c e200  jmp  y,ac        2776  jmp(Y,AC)                       #21
              063d fcff  bra  $ff         2777  bra(255)                        #22 bra shiftTable+255
                                          2778  label('.sysLsrw3a')
.sysLsrw3a:   063e c218  st   [$18]       2779  st([vAC])                       #26
              063f 0119  ld   [$19]       2780  ld([vAC+1])                     #27 Transfer bit 8:10
              0640 8200  adda ac          2781  adda(AC)                        #28
              0641 8200  adda ac          2782  adda(AC)                        #29
              0642 8200  adda ac          2783  adda(AC)                        #30
              0643 8200  adda ac          2784  adda(AC)                        #31
              0644 8200  adda ac          2785  adda(AC)                        #32
              0645 4118  ora  [$18]       2786  ora([vAC])                      #33
              0646 c218  st   [$18]       2787  st([vAC])                       #34
              0647 004e  ld   $4e         2788  ld('.sysLsrw3b')                #35 Shift high byte
              0648 c21d  st   [$1d]       2789  st([vTmp])                      #36
              0649 0119  ld   [$19]       2790  ld([vAC+1])                     #37
              064a 20f8  anda $f8         2791  anda(0b11111000)                #38
              064b 4003  ora  $03         2792  ora( 0b00000011)                #39
              064c e200  jmp  y,ac        2793  jmp(Y,AC)                       #40
              064d fcff  bra  $ff         2794  bra(255)                        #41 bra shiftTable+255
                                          2795  label('.sysLsrw3b')
.sysLsrw3b:   064e c219  st   [$19]       2796  st([vAC+1])                     #45
              064f 00e6  ld   $e6         2797  ld(-52/2)                       #46
              0650 1403  ld   $03,y       2798  ld(hi('REENTER'),Y)             #47
              0651 e0cb  jmp  y,$cb       2799  jmp(Y,'REENTER')                #48
                                          2800  #nop()                          #49
                                          2801
                                          2802  label('SYS_LSRW4_50')
SYS_LSRW4_50: 0652 1405  ld   $05,y       2803  ld(hi('shiftTable'),Y)          #15,49 Logical shift right 4 bit (X >> 4)
              0653 005a  ld   $5a         2804  ld('.sysLsrw4a')                #16 Shift low byte
              0654 c21d  st   [$1d]       2805  st([vTmp])                      #17
              0655 0118  ld   [$18]       2806  ld([vAC])                       #18
              0656 20f0  anda $f0         2807  anda(0b11110000)                #19
              0657 4007  ora  $07         2808  ora( 0b00000111)                #20
              0658 e200  jmp  y,ac        2809  jmp(Y,AC)                       #21
              0659 fcff  bra  $ff         2810  bra(255)                        #22 bra shiftTable+255
                                          2811  label('.sysLsrw4a')
.sysLsrw4a:   065a c218  st   [$18]       2812  st([vAC])                       #26
              065b 0119  ld   [$19]       2813  ld([vAC+1])                     #27 Transfer bit 8:11
              065c 8200  adda ac          2814  adda(AC)                        #28
              065d 8200  adda ac          2815  adda(AC)                        #29
              065e 8200  adda ac          2816  adda(AC)                        #30
              065f 8200  adda ac          2817  adda(AC)                        #31
              0660 4118  ora  [$18]       2818  ora([vAC])                      #32
              0661 c218  st   [$18]       2819  st([vAC])                       #33
              0662 0069  ld   $69         2820  ld('.sysLsrw4b')                #34 Shift high byte'
              0663 c21d  st   [$1d]       2821  st([vTmp])                      #35
              0664 0119  ld   [$19]       2822  ld([vAC+1])                     #36
              0665 20f0  anda $f0         2823  anda(0b11110000)                #37
              0666 4007  ora  $07         2824  ora( 0b00000111)                #38
              0667 e200  jmp  y,ac        2825  jmp(Y,AC)                       #39
              0668 fcff  bra  $ff         2826  bra(255)                        #40 bra shiftTable+255
                                          2827  label('.sysLsrw4b')
.sysLsrw4b:   0669 c219  st   [$19]       2828  st([vAC+1])                     #44
              066a 1403  ld   $03,y       2829  ld(hi('REENTER'),Y)             #45
              066b e0cb  jmp  y,$cb       2830  jmp(Y,'REENTER')                #46
              066c 00e7  ld   $e7         2831  ld(-50/2)                       #47
                                          2832
                                          2833  label('SYS_LSRW5_50')
SYS_LSRW5_50: 066d 1405  ld   $05,y       2834  ld(hi('shiftTable'),Y)          #15 Logical shift right 5 bit (X >> 5)
              066e 0075  ld   $75         2835  ld('.sysLsrw5a')                #16 Shift low byte
              066f c21d  st   [$1d]       2836  st([vTmp])                      #17
              0670 0118  ld   [$18]       2837  ld([vAC])                       #18
              0671 20e0  anda $e0         2838  anda(0b11100000)                #19
              0672 400f  ora  $0f         2839  ora( 0b00001111)                #20
              0673 e200  jmp  y,ac        2840  jmp(Y,AC)                       #21
              0674 fcff  bra  $ff         2841  bra(255)                        #22 bra shiftTable+255
                                          2842  label('.sysLsrw5a')
.sysLsrw5a:   0675 c218  st   [$18]       2843  st([vAC])                       #26
              0676 0119  ld   [$19]       2844  ld([vAC+1])                     #27 Transfer bit 8:13
              0677 8200  adda ac          2845  adda(AC)                        #28
              0678 8200  adda ac          2846  adda(AC)                        #29
              0679 8200  adda ac          2847  adda(AC)                        #30
              067a 4118  ora  [$18]       2848  ora([vAC])                      #31
              067b c218  st   [$18]       2849  st([vAC])                       #32
              067c 0083  ld   $83         2850  ld('.sysLsrw5b')                #33 Shift high byte
              067d c21d  st   [$1d]       2851  st([vTmp])                      #34
              067e 0119  ld   [$19]       2852  ld([vAC+1])                     #35
              067f 20e0  anda $e0         2853  anda(0b11100000)                #36
              0680 400f  ora  $0f         2854  ora( 0b00001111)                #37
              0681 e200  jmp  y,ac        2855  jmp(Y,AC)                       #38
              0682 fcff  bra  $ff         2856  bra(255)                        #39 bra shiftTable+255
                                          2857  label('.sysLsrw5b')
.sysLsrw5b:   0683 c219  st   [$19]       2858  st([vAC+1])                     #44
              0684 00e7  ld   $e7         2859  ld(-50/2)                       #45
              0685 1403  ld   $03,y       2860  ld(hi('REENTER'),Y)             #46
              0686 e0cb  jmp  y,$cb       2861  jmp(Y,'REENTER')                #47
                                          2862  #nop()                          #48
                                          2863
                                          2864  label('SYS_LSRW6_48')
SYS_LSRW6_48: 0687 1405  ld   $05,y       2865  ld(hi('shiftTable'),Y)          #15,44 Logical shift right 6 bit (X >> 6)
              0688 008f  ld   $8f         2866  ld('.sysLsrw6a')                #16 Shift low byte
              0689 c21d  st   [$1d]       2867  st([vTmp])                      #17
              068a 0118  ld   [$18]       2868  ld([vAC])                       #18
              068b 20c0  anda $c0         2869  anda(0b11000000)                #19
              068c 401f  ora  $1f         2870  ora( 0b00011111)                #20
              068d e200  jmp  y,ac        2871  jmp(Y,AC)                       #21
              068e fcff  bra  $ff         2872  bra(255)                        #22 bra shiftTable+255
                                          2873  label('.sysLsrw6a')
.sysLsrw6a:   068f c218  st   [$18]       2874  st([vAC])                       #26
              0690 0119  ld   [$19]       2875  ld([vAC+1])                     #27 Transfer bit 8:13
              0691 8200  adda ac          2876  adda(AC)                        #28
              0692 8200  adda ac          2877  adda(AC)                        #29
              0693 4118  ora  [$18]       2878  ora([vAC])                      #30
              0694 c218  st   [$18]       2879  st([vAC])                       #31
              0695 009c  ld   $9c         2880  ld('.sysLsrw6b')                #32 Shift high byte
              0696 c21d  st   [$1d]       2881  st([vTmp])                      #33
              0697 0119  ld   [$19]       2882  ld([vAC+1])                     #34
              0698 20c0  anda $c0         2883  anda(0b11000000)                #35
              0699 401f  ora  $1f         2884  ora( 0b00011111)                #36
              069a e200  jmp  y,ac        2885  jmp(Y,AC)                       #37
              069b fcff  bra  $ff         2886  bra(255)                        #38 bra shiftTable+255
                                          2887  label('.sysLsrw6b')
.sysLsrw6b:   069c c219  st   [$19]       2888  st([vAC+1])                     #42
              069d 1403  ld   $03,y       2889  ld(hi('REENTER'),Y)             #43
              069e e0cb  jmp  y,$cb       2890  jmp(Y,'REENTER')                #44
              069f 00e8  ld   $e8         2891  ld(-48/2)                       #45
                                          2892
                                          2893  label('SYS_LSLW4_46')
SYS_LSLW4_46: 06a0 1405  ld   $05,y       2894  ld(hi('shiftTable'),Y)          #15 Logical shift left 4 bit (X << 4)
              06a1 00ae  ld   $ae         2895  ld('.sysLsrl4')                 #16
              06a2 c21d  st   [$1d]       2896  st([vTmp])                      #17
              06a3 0119  ld   [$19]       2897  ld([vAC+1])                     #18
              06a4 8200  adda ac          2898  adda(AC)                        #19
              06a5 8200  adda ac          2899  adda(AC)                        #20
              06a6 8200  adda ac          2900  adda(AC)                        #21
              06a7 8200  adda ac          2901  adda(AC)                        #22
              06a8 c219  st   [$19]       2902  st([vAC+1])                     #23
              06a9 0118  ld   [$18]       2903  ld([vAC])                       #24
              06aa 20f0  anda $f0         2904  anda(0b11110000)                #25
              06ab 4007  ora  $07         2905  ora( 0b00000111)                #26
              06ac e200  jmp  y,ac        2906  jmp(Y,AC)                       #27
              06ad fcff  bra  $ff         2907  bra(255)                        #28 bra shiftTable+255
                                          2908  label('.sysLsrl4')
.sysLsrl4:    06ae 4119  ora  [$19]       2909  ora([vAC+1])                    #32
              06af c219  st   [$19]       2910  st([vAC+1])                     #33
              06b0 0118  ld   [$18]       2911  ld([vAC])                       #34
              06b1 8200  adda ac          2912  adda(AC)                        #35
              06b2 8200  adda ac          2913  adda(AC)                        #36
              06b3 8200  adda ac          2914  adda(AC)                        #37
              06b4 8200  adda ac          2915  adda(AC)                        #38
              06b5 c218  st   [$18]       2916  st([vAC])                       #39
              06b6 00e9  ld   $e9         2917  ld(-46/2)                       #40
              06b7 1403  ld   $03,y       2918  ld(hi('REENTER'),Y)             #41
              06b8 e0cb  jmp  y,$cb       2919  jmp(Y,'REENTER')                #42
                                          2920  #nop()                          #43
                                          2921
                                          2922  #-----------------------------------------------------------------------
                                          2923  #       v6502 right shift instruction
                                          2924  #-----------------------------------------------------------------------
                                          2925
                                          2926  label('v6502_lsr#30')
v6502_lsr#30: 06b9 1525  ld   [$25],y     2927  ld([v6502_ADH],Y)               #30 Result
              06ba ce00  st   [y,x]       2928  st([Y,X])                       #31
              06bb c228  st   [$28]       2929  st([v6502_Qz])                  #32 Z flag
              06bc c229  st   [$29]       2930  st([v6502_Qn])                  #33 N flag
              06bd 140e  ld   $0e,y       2931  ld(hi('v6502_next'),Y)          #34
              06be 00ed  ld   $ed         2932  ld(-38/2)                       #35
              06bf e020  jmp  y,$20       2933  jmp(Y,'v6502_next')             #36
                                          2934  #nop()                          #37 Overlap
                                          2935  #
                                          2936  label('v6502_ror#38')
v6502_ror#38: 06c0 1525  ld   [$25],y     2937  ld([v6502_ADH],Y)               #38,38 Result
              06c1 4119  ora  [$19]       2938  ora([v6502_BI])                 #39 Transfer bit 8
              06c2 ce00  st   [y,x]       2939  st([Y,X])                       #40
              06c3 c228  st   [$28]       2940  st([v6502_Qz])                  #41 Z flag
              06c4 c229  st   [$29]       2941  st([v6502_Qn])                  #42 N flag
              06c5 140e  ld   $0e,y       2942  ld(hi('v6502_next'),Y)          #43
              06c6 e020  jmp  y,$20       2943  jmp(Y,'v6502_next')             #44
              06c7 00e9  ld   $e9         2944  ld(-46/2)                       #45
                                          2945
                                          2946  #-----------------------------------------------------------------------
                                          2947  #       vCPU LSRB
                                          2948  #-----------------------------------------------------------------------
                                          2949
                                          2950  label('.lsrb#24')
.lsrb#24:     06c8 c600  st   [x]         2951  st([X])                         #24
              06c9 1403  ld   $03,y       2952  ld(hi('REENTER'),Y)             #25
              06ca e0cb  jmp  y,$cb       2953  jmp(Y,'REENTER')                #26
              06cb 00f1  ld   $f1         2954  ld(-30/2)                       #27
                                          2955
                                          2956  #-----------------------------------------------------------------------
                                          2957  #       vCPU LSRV
                                          2958  #-----------------------------------------------------------------------
                                          2959
                                          2960  label('.lsrv#27')
.lsrv#27:     06cc 142c  ld   $2c,y       2961  ld(hi('.lsrv#30'),Y)            #27
              06cd e053  jmp  y,$53       2962  jmp(Y,'.lsrv#30')               #28
              06ce c600  st   [x]         2963  st([X])                         #29 shifted byte low
                                          2964
                                          2965  label('.lsrv#51')
.lsrv#51:     06cf c600  st   [x]         2966  st([X])                         #51 shifted byte hi
              06d0 1403  ld   $03,y       2967  ld(hi('NEXTY'),Y)               #52
              06d1 e000  jmp  y,$00       2968  jmp(Y,'NEXTY')                  #53
              06d2 00e4  ld   $e4         2969  ld(-56/2)                       #54
                                          2970
                                          2971  #-----------------------------------------------------------------------
                                          2972  #       vCPU LSRVL
                                          2973  #-----------------------------------------------------------------------
                                          2974
                                          2975  label('.lsrvl#26')
.lsrvl#26:    06d3 142c  ld   $2c,y       2976  ld(hi('.lsrvl#29'),Y)           #26
              06d4 e075  jmp  y,$75       2977  jmp(Y,'.lsrvl#29')              #27
              06d5 c600  st   [x]         2978  st([X])                         #28 shifted byte 0
                                          2979
                                          2980  label('.lsrvl#54')
.lsrvl#54:    06d6 142c  ld   $2c,y       2981  ld(hi('.lsrvl#57'),Y)           #54
              06d7 e08b  jmp  y,$8b       2982  jmp(Y,'.lsrvl#57')              #55
              06d8 c600  st   [x]         2983  st([X])                         #56 shifted byte 1
                                          2984
                                          2985  label('.lsrvl#76')
.lsrvl#76:    06d9 142c  ld   $2c,y       2986  ld(hi('.lsrvl#79'),Y)           #76
              06da e09b  jmp  y,$9b       2987  jmp(Y,'.lsrvl#79')              #77
              06db c600  st   [x]         2988  st([X])                         #78 shifted byte 2
                                          2989
                                          2990  label('.lsrvl#98')
.lsrvl#98:    06dc c600  st   [x]         2991  st([X])                         #98 shifted byte 3
              06dd 1403  ld   $03,y       2992  ld(hi('REENTER'),Y)             #99
              06de e0cb  jmp  y,$cb       2993  jmp(Y,'REENTER')                #100
              06df 00cc  ld   $cc         2994  ld(-104/2)                      #101
                                          2995
                                          2996
                                          2997  #-----------------------------------------------------------------------
                                          2998  #
                                          2999  #  $0700 ROM page 7-8: Gigatron font data
                                          3000  #
                                          3001  #-----------------------------------------------------------------------
                                          3002
              06e0 0200  nop              3003  align(0x100, size=0x100)
              06e1 0200  nop
              06e2 0200  nop
              * 32 times
                                          3004
                                          3005  label('font32up')
                                          3006  for ch in range(32, 32+50):
                                          3007    comment = 'Char %s' % repr(chr(ch))
                                          3008    for byte in font.font[ch-32]:
                                          3009      ld(byte)
font32up:     0700 0000  ld   $00         ;Char ' '
              0701 0000  ld   $00
              0702 0000  ld   $00
              * 5 times
              0705 0000  ld   $00         ;Char '!'
              0706 0000  ld   $00
              0707 00fa  ld   $fa
              0708 0000  ld   $00
              0709 0000  ld   $00
              070a 00a0  ld   $a0         ;Char '"'
              070b 00c0  ld   $c0
              070c 0000  ld   $00
              070d 00a0  ld   $a0
              070e 00c0  ld   $c0
              070f 0028  ld   $28         ;Char '#'
              0710 00fe  ld   $fe
              0711 0028  ld   $28
              0712 00fe  ld   $fe
              0713 0028  ld   $28
              0714 0024  ld   $24         ;Char '$'
              0715 0054  ld   $54
              0716 00fe  ld   $fe
              0717 0054  ld   $54
              0718 0048  ld   $48
              0719 00c4  ld   $c4         ;Char '%'
              071a 00c8  ld   $c8
              071b 0010  ld   $10
              071c 0026  ld   $26
              071d 0046  ld   $46
              071e 006c  ld   $6c         ;Char '&'
              071f 0092  ld   $92
              0720 006a  ld   $6a
              0721 0004  ld   $04
              0722 000a  ld   $0a
              0723 0000  ld   $00         ;Char "'"
              0724 00a0  ld   $a0
              0725 00c0  ld   $c0
              0726 0000  ld   $00
              0727 0000  ld   $00
              0728 0000  ld   $00         ;Char '('
              0729 0038  ld   $38
              072a 0044  ld   $44
              072b 0082  ld   $82
              072c 0000  ld   $00
              072d 0000  ld   $00         ;Char ')'
              072e 0082  ld   $82
              072f 0044  ld   $44
              0730 0038  ld   $38
              0731 0000  ld   $00
              0732 0028  ld   $28         ;Char '*'
              0733 0010  ld   $10
              0734 007c  ld   $7c
              0735 0010  ld   $10
              0736 0028  ld   $28
              0737 0010  ld   $10         ;Char '+'
              0738 0010  ld   $10
              0739 007c  ld   $7c
              073a 0010  ld   $10
              073b 0010  ld   $10
              073c 0000  ld   $00         ;Char ','
              073d 0005  ld   $05
              073e 0006  ld   $06
              073f 0000  ld   $00
              0740 0000  ld   $00
              0741 0010  ld   $10         ;Char '-'
              0742 0010  ld   $10
              0743 0010  ld   $10
              * 5 times
              0746 0000  ld   $00         ;Char '.'
              0747 0002  ld   $02
              0748 0002  ld   $02
              0749 0000  ld   $00
              074a 0000  ld   $00
              074b 0000  ld   $00         ;Char '/'
              074c 0006  ld   $06
              074d 0018  ld   $18
              074e 0060  ld   $60
              074f 0000  ld   $00
              0750 007c  ld   $7c         ;Char '0'
              0751 008a  ld   $8a
              0752 0092  ld   $92
              0753 00a2  ld   $a2
              0754 007c  ld   $7c
              0755 0022  ld   $22         ;Char '1'
              0756 0042  ld   $42
              0757 00fe  ld   $fe
              0758 0002  ld   $02
              0759 0002  ld   $02
              075a 0046  ld   $46         ;Char '2'
              075b 008a  ld   $8a
              075c 0092  ld   $92
              075d 0092  ld   $92
              075e 0062  ld   $62
              075f 0044  ld   $44         ;Char '3'
              0760 0082  ld   $82
              0761 0092  ld   $92
              0762 0092  ld   $92
              0763 006c  ld   $6c
              0764 0018  ld   $18         ;Char '4'
              0765 0028  ld   $28
              0766 0048  ld   $48
              0767 00fe  ld   $fe
              0768 0008  ld   $08
              0769 00e4  ld   $e4         ;Char '5'
              076a 00a2  ld   $a2
              076b 00a2  ld   $a2
              076c 00a2  ld   $a2
              076d 009c  ld   $9c
              076e 003c  ld   $3c         ;Char '6'
              076f 0052  ld   $52
              0770 0092  ld   $92
              0771 0092  ld   $92
              0772 000c  ld   $0c
              0773 0080  ld   $80         ;Char '7'
              0774 008e  ld   $8e
              0775 0090  ld   $90
              0776 00a0  ld   $a0
              0777 00c0  ld   $c0
              0778 006c  ld   $6c         ;Char '8'
              0779 0092  ld   $92
              077a 0092  ld   $92
              077b 0092  ld   $92
              077c 006c  ld   $6c
              077d 0060  ld   $60         ;Char '9'
              077e 0092  ld   $92
              077f 0092  ld   $92
              0780 0094  ld   $94
              0781 0078  ld   $78
              0782 0000  ld   $00         ;Char ':'
              0783 0024  ld   $24
              0784 0024  ld   $24
              0785 0000  ld   $00
              0786 0000  ld   $00
              0787 0000  ld   $00         ;Char ';'
              0788 0025  ld   $25
              0789 0026  ld   $26
              078a 0000  ld   $00
              078b 0000  ld   $00
              078c 0010  ld   $10         ;Char '<'
              078d 0028  ld   $28
              078e 0044  ld   $44
              078f 0082  ld   $82
              0790 0000  ld   $00
              0791 0028  ld   $28         ;Char '='
              0792 0028  ld   $28
              0793 0028  ld   $28
              * 5 times
              0796 0000  ld   $00         ;Char '>'
              0797 0082  ld   $82
              0798 0044  ld   $44
              0799 0028  ld   $28
              079a 0010  ld   $10
              079b 0040  ld   $40         ;Char '?'
              079c 0080  ld   $80
              079d 008a  ld   $8a
              079e 0090  ld   $90
              079f 0060  ld   $60
              07a0 007c  ld   $7c         ;Char '@'
              07a1 0082  ld   $82
              07a2 00ba  ld   $ba
              07a3 00aa  ld   $aa
              07a4 0078  ld   $78
              07a5 003e  ld   $3e         ;Char 'A'
              07a6 0048  ld   $48
              07a7 0088  ld   $88
              07a8 0048  ld   $48
              07a9 003e  ld   $3e
              07aa 00fe  ld   $fe         ;Char 'B'
              07ab 0092  ld   $92
              07ac 0092  ld   $92
              07ad 0092  ld   $92
              07ae 006c  ld   $6c
              07af 007c  ld   $7c         ;Char 'C'
              07b0 0082  ld   $82
              07b1 0082  ld   $82
              07b2 0082  ld   $82
              07b3 0044  ld   $44
              07b4 00fe  ld   $fe         ;Char 'D'
              07b5 0082  ld   $82
              07b6 0082  ld   $82
              07b7 0044  ld   $44
              07b8 0038  ld   $38
              07b9 00fe  ld   $fe         ;Char 'E'
              07ba 0092  ld   $92
              07bb 0092  ld   $92
              07bc 0092  ld   $92
              07bd 0082  ld   $82
              07be 00fe  ld   $fe         ;Char 'F'
              07bf 0090  ld   $90
              07c0 0090  ld   $90
              07c1 0090  ld   $90
              07c2 0080  ld   $80
              07c3 007c  ld   $7c         ;Char 'G'
              07c4 0082  ld   $82
              07c5 0082  ld   $82
              07c6 0092  ld   $92
              07c7 005c  ld   $5c
              07c8 00fe  ld   $fe         ;Char 'H'
              07c9 0010  ld   $10
              07ca 0010  ld   $10
              07cb 0010  ld   $10
              07cc 00fe  ld   $fe
              07cd 0000  ld   $00         ;Char 'I'
              07ce 0082  ld   $82
              07cf 00fe  ld   $fe
              07d0 0082  ld   $82
              07d1 0000  ld   $00
              07d2 0004  ld   $04         ;Char 'J'
              07d3 0002  ld   $02
              07d4 0082  ld   $82
              07d5 00fc  ld   $fc
              07d6 0080  ld   $80
              07d7 00fe  ld   $fe         ;Char 'K'
              07d8 0010  ld   $10
              07d9 0028  ld   $28
              07da 0044  ld   $44
              07db 0082  ld   $82
              07dc 00fe  ld   $fe         ;Char 'L'
              07dd 0002  ld   $02
              07de 0002  ld   $02
              07df 0002  ld   $02
              07e0 0002  ld   $02
              07e1 00fe  ld   $fe         ;Char 'M'
              07e2 0040  ld   $40
              07e3 0030  ld   $30
              07e4 0040  ld   $40
              07e5 00fe  ld   $fe
              07e6 00fe  ld   $fe         ;Char 'N'
              07e7 0020  ld   $20
              07e8 0010  ld   $10
              07e9 0008  ld   $08
              07ea 00fe  ld   $fe
              07eb 007c  ld   $7c         ;Char 'O'
              07ec 0082  ld   $82
              07ed 0082  ld   $82
              07ee 0082  ld   $82
              07ef 007c  ld   $7c
              07f0 00fe  ld   $fe         ;Char 'P'
              07f1 0090  ld   $90
              07f2 0090  ld   $90
              07f3 0090  ld   $90
              07f4 0060  ld   $60
              07f5 007c  ld   $7c         ;Char 'Q'
              07f6 0082  ld   $82
              07f7 008a  ld   $8a
              07f8 0084  ld   $84
              07f9 007a  ld   $7a
                                          3010      comment = C(comment)
                                          3011
              07fa 0200  nop              3012  trampoline()
              07fb fe00  bra  ac          ;+-----------------------------------+
              07fc fcfd  bra  $07fd       ;|                                   |
              07fd 1418  ld   $18,y       ;| Trampoline for page $0700 lookups |
              07fe e006  jmp  y,$06       ;|                                   |
              07ff c218  st   [$18]       ;+-----------------------------------+
                                          3013
                                          3014  #-----------------------------------------------------------------------
                                          3015
                                          3016  align(0x100, size=0x100)
                                          3017
                                          3018  label('font82up')
                                          3019  for ch in range(32+50, 132):
                                          3020    comment = 'Char %s' % repr(chr(ch))
                                          3021    for byte in font.font[ch-32]:
                                          3022      ld(byte)
font82up:     0800 00fe  ld   $fe         ;Char 'R'
              0801 0090  ld   $90
              0802 0098  ld   $98
              0803 0094  ld   $94
              0804 0062  ld   $62
              0805 0062  ld   $62         ;Char 'S'
              0806 0092  ld   $92
              0807 0092  ld   $92
              0808 0092  ld   $92
              0809 000c  ld   $0c
              080a 0080  ld   $80         ;Char 'T'
              080b 0080  ld   $80
              080c 00fe  ld   $fe
              080d 0080  ld   $80
              080e 0080  ld   $80
              080f 00fc  ld   $fc         ;Char 'U'
              0810 0002  ld   $02
              0811 0002  ld   $02
              0812 0002  ld   $02
              0813 00fc  ld   $fc
              0814 00f0  ld   $f0         ;Char 'V'
              0815 000c  ld   $0c
              0816 0002  ld   $02
              0817 000c  ld   $0c
              0818 00f0  ld   $f0
              0819 00fe  ld   $fe         ;Char 'W'
              081a 0004  ld   $04
              081b 0018  ld   $18
              081c 0004  ld   $04
              081d 00fe  ld   $fe
              081e 00c6  ld   $c6         ;Char 'X'
              081f 0028  ld   $28
              0820 0010  ld   $10
              0821 0028  ld   $28
              0822 00c6  ld   $c6
              0823 00e0  ld   $e0         ;Char 'Y'
              0824 0010  ld   $10
              0825 000e  ld   $0e
              0826 0010  ld   $10
              0827 00e0  ld   $e0
              0828 0086  ld   $86         ;Char 'Z'
              0829 008a  ld   $8a
              082a 0092  ld   $92
              082b 00a2  ld   $a2
              082c 00c2  ld   $c2
              082d 0000  ld   $00         ;Char '['
              082e 00fe  ld   $fe
              082f 0082  ld   $82
              0830 0082  ld   $82
              0831 0000  ld   $00
              0832 0000  ld   $00         ;Char '\\'
              0833 0060  ld   $60
              0834 0018  ld   $18
              0835 0006  ld   $06
              0836 0000  ld   $00
              0837 0000  ld   $00         ;Char ']'
              0838 0082  ld   $82
              0839 0082  ld   $82
              083a 00fe  ld   $fe
              083b 0000  ld   $00
              083c 0020  ld   $20         ;Char '^'
              083d 0040  ld   $40
              083e 0080  ld   $80
              083f 0040  ld   $40
              0840 0020  ld   $20
              0841 0002  ld   $02         ;Char '_'
              0842 0002  ld   $02
              0843 0002  ld   $02
              * 5 times
              0846 0000  ld   $00         ;Char '`'
              0847 0000  ld   $00
              0848 00c0  ld   $c0
              0849 00a0  ld   $a0
              084a 0000  ld   $00
              084b 0004  ld   $04         ;Char 'a'
              084c 002a  ld   $2a
              084d 002a  ld   $2a
              084e 002a  ld   $2a
              084f 001e  ld   $1e
              0850 00fe  ld   $fe         ;Char 'b'
              0851 0022  ld   $22
              0852 0022  ld   $22
              0853 0022  ld   $22
              0854 001c  ld   $1c
              0855 001c  ld   $1c         ;Char 'c'
              0856 0022  ld   $22
              0857 0022  ld   $22
              0858 0022  ld   $22
              0859 0002  ld   $02
              085a 001c  ld   $1c         ;Char 'd'
              085b 0022  ld   $22
              085c 0022  ld   $22
              085d 0022  ld   $22
              085e 00fe  ld   $fe
              085f 001c  ld   $1c         ;Char 'e'
              0860 002a  ld   $2a
              0861 002a  ld   $2a
              0862 002a  ld   $2a
              0863 0018  ld   $18
              0864 0010  ld   $10         ;Char 'f'
              0865 007e  ld   $7e
              0866 0090  ld   $90
              0867 0080  ld   $80
              0868 0040  ld   $40
              0869 0018  ld   $18         ;Char 'g'
              086a 0025  ld   $25
              086b 0025  ld   $25
              086c 0025  ld   $25
              086d 001e  ld   $1e
              086e 00fe  ld   $fe         ;Char 'h'
              086f 0020  ld   $20
              0870 0020  ld   $20
              0871 0020  ld   $20
              0872 001e  ld   $1e
              0873 0000  ld   $00         ;Char 'i'
              0874 0022  ld   $22
              0875 00be  ld   $be
              0876 0002  ld   $02
              0877 0000  ld   $00
              0878 0002  ld   $02         ;Char 'j'
              0879 0001  ld   $01
              087a 0021  ld   $21
              087b 00be  ld   $be
              087c 0000  ld   $00
              087d 00fe  ld   $fe         ;Char 'k'
              087e 0008  ld   $08
              087f 0018  ld   $18
              0880 0024  ld   $24
              0881 0002  ld   $02
              0882 0000  ld   $00         ;Char 'l'
              0883 0082  ld   $82
              0884 00fe  ld   $fe
              0885 0002  ld   $02
              0886 0000  ld   $00
              0887 003e  ld   $3e         ;Char 'm'
              0888 0020  ld   $20
              0889 001c  ld   $1c
              088a 0020  ld   $20
              088b 001e  ld   $1e
              088c 003e  ld   $3e         ;Char 'n'
              088d 0010  ld   $10
              088e 0020  ld   $20
              088f 0020  ld   $20
              0890 001e  ld   $1e
              0891 001c  ld   $1c         ;Char 'o'
              0892 0022  ld   $22
              0893 0022  ld   $22
              0894 0022  ld   $22
              0895 001c  ld   $1c
              0896 003f  ld   $3f         ;Char 'p'
              0897 0024  ld   $24
              0898 0024  ld   $24
              0899 0024  ld   $24
              089a 0018  ld   $18
              089b 0018  ld   $18         ;Char 'q'
              089c 0024  ld   $24
              089d 0024  ld   $24
              089e 0024  ld   $24
              089f 003f  ld   $3f
              08a0 003e  ld   $3e         ;Char 'r'
              08a1 0010  ld   $10
              08a2 0020  ld   $20
              08a3 0020  ld   $20
              08a4 0010  ld   $10
              08a5 0012  ld   $12         ;Char 's'
              08a6 002a  ld   $2a
              08a7 002a  ld   $2a
              08a8 002a  ld   $2a
              08a9 0004  ld   $04
              08aa 0020  ld   $20         ;Char 't'
              08ab 00fc  ld   $fc
              08ac 0022  ld   $22
              08ad 0002  ld   $02
              08ae 0004  ld   $04
              08af 003c  ld   $3c         ;Char 'u'
              08b0 0002  ld   $02
              08b1 0002  ld   $02
              08b2 0004  ld   $04
              08b3 003e  ld   $3e
              08b4 0038  ld   $38         ;Char 'v'
              08b5 0004  ld   $04
              08b6 0002  ld   $02
              08b7 0004  ld   $04
              08b8 0038  ld   $38
              08b9 003c  ld   $3c         ;Char 'w'
              08ba 0002  ld   $02
              08bb 000c  ld   $0c
              08bc 0002  ld   $02
              08bd 003c  ld   $3c
              08be 0022  ld   $22         ;Char 'x'
              08bf 0014  ld   $14
              08c0 0008  ld   $08
              08c1 0014  ld   $14
              08c2 0022  ld   $22
              08c3 0038  ld   $38         ;Char 'y'
              08c4 0005  ld   $05
              08c5 0005  ld   $05
              08c6 0005  ld   $05
              08c7 003e  ld   $3e
              08c8 0022  ld   $22         ;Char 'z'
              08c9 0026  ld   $26
              08ca 002a  ld   $2a
              08cb 0032  ld   $32
              08cc 0022  ld   $22
              08cd 0010  ld   $10         ;Char '{'
              08ce 006c  ld   $6c
              08cf 0082  ld   $82
              08d0 0082  ld   $82
              08d1 0000  ld   $00
              08d2 0000  ld   $00         ;Char '|'
              08d3 0000  ld   $00
              08d4 00fe  ld   $fe
              08d5 0000  ld   $00
              08d6 0000  ld   $00
              08d7 0000  ld   $00         ;Char '}'
              08d8 0082  ld   $82
              08d9 0082  ld   $82
              08da 006c  ld   $6c
              08db 0010  ld   $10
              08dc 0040  ld   $40         ;Char '~'
              08dd 0080  ld   $80
              08de 0040  ld   $40
              08df 0020  ld   $20
              08e0 0040  ld   $40
              08e1 00fe  ld   $fe         ;Char '\x7f'
              08e2 00fe  ld   $fe
              08e3 00fe  ld   $fe
              * 5 times
              08e6 0010  ld   $10         ;Char '\x80'
              08e7 0038  ld   $38
              08e8 0054  ld   $54
              08e9 0010  ld   $10
              08ea 0010  ld   $10
              08eb 0010  ld   $10         ;Char '\x81'
              08ec 0020  ld   $20
              08ed 007c  ld   $7c
              08ee 0020  ld   $20
              08ef 0010  ld   $10
              08f0 0010  ld   $10         ;Char '\x82'
              08f1 0010  ld   $10
              08f2 0054  ld   $54
              08f3 0038  ld   $38
              08f4 0010  ld   $10
              08f5 0010  ld   $10         ;Char '\x83'
              08f6 0008  ld   $08
              08f7 007c  ld   $7c
              08f8 0008  ld   $08
              08f9 0010  ld   $10
                                          3023      comment = C(comment)
                                          3024
              08fa 0200  nop              3025  trampoline()
              08fb fe00  bra  ac          ;+-----------------------------------+
              08fc fcfd  bra  $08fd       ;|                                   |
              08fd 1418  ld   $18,y       ;| Trampoline for page $0800 lookups |
              08fe e006  jmp  y,$06       ;|                                   |
              08ff c218  st   [$18]       ;+-----------------------------------+
                                          3026
                                          3027  #-----------------------------------------------------------------------
                                          3028  #
                                          3029  #  $0900 ROM page 9: Key table for music
                                          3030  #
                                          3031  #-----------------------------------------------------------------------
                                          3032
                                          3033  align(0x100, size=0x100)
                                          3034  notes = 'CCDDEFFGGAAB'
                                          3035  sampleRate = cpuClock / 200.0 / 4
                                          3036  label('notesTable')
notesTable:   0900 0000  ld   $00         3037  ld(0)
              0901 0000  ld   $00         3038  ld(0)
                                          3039  for i in range(0, 250, 2):
                                          3040    j = i//2-1
                                          3041    freq = 440.0*2.0**((j-57)/12.0)
                                          3042    if j>=0 and freq <= sampleRate/2.0:
                                          3043      key = int(round(32768 * freq / sampleRate))
                                          3044      octave, note = j//12, notes[j%12]
                                          3045      sharp = '-' if notes[j%12-1] != note else '#'
                                          3046      comment = '%s%s%s (%0.1f Hz)' % (note, sharp, octave, freq)
                                          3047      ld(key&127); C(comment); ld(key>>7)
              0902 0045  ld   $45         ;C-0 (16.4 Hz)
              0903 0000  ld   $00
              0904 0049  ld   $49         ;C#0 (17.3 Hz)
              0905 0000  ld   $00
              0906 004d  ld   $4d         ;D-0 (18.4 Hz)
              0907 0000  ld   $00
              0908 0052  ld   $52         ;D#0 (19.4 Hz)
              0909 0000  ld   $00
              090a 0056  ld   $56         ;E-0 (20.6 Hz)
              090b 0000  ld   $00
              090c 005c  ld   $5c         ;F-0 (21.8 Hz)
              090d 0000  ld   $00
              090e 0061  ld   $61         ;F#0 (23.1 Hz)
              090f 0000  ld   $00
              0910 0067  ld   $67         ;G-0 (24.5 Hz)
              0911 0000  ld   $00
              0912 006d  ld   $6d         ;G#0 (26.0 Hz)
              0913 0000  ld   $00
              0914 0073  ld   $73         ;A-0 (27.5 Hz)
              0915 0000  ld   $00
              0916 007a  ld   $7a         ;A#0 (29.1 Hz)
              0917 0000  ld   $00
              0918 0001  ld   $01         ;B-0 (30.9 Hz)
              0919 0001  ld   $01
              091a 0009  ld   $09         ;C-1 (32.7 Hz)
              091b 0001  ld   $01
              091c 0011  ld   $11         ;C#1 (34.6 Hz)
              091d 0001  ld   $01
              091e 001a  ld   $1a         ;D-1 (36.7 Hz)
              091f 0001  ld   $01
              0920 0023  ld   $23         ;D#1 (38.9 Hz)
              0921 0001  ld   $01
              0922 002d  ld   $2d         ;E-1 (41.2 Hz)
              0923 0001  ld   $01
              0924 0037  ld   $37         ;F-1 (43.7 Hz)
              0925 0001  ld   $01
              0926 0042  ld   $42         ;F#1 (46.2 Hz)
              0927 0001  ld   $01
              0928 004e  ld   $4e         ;G-1 (49.0 Hz)
              0929 0001  ld   $01
              092a 005a  ld   $5a         ;G#1 (51.9 Hz)
              092b 0001  ld   $01
              092c 0067  ld   $67         ;A-1 (55.0 Hz)
              092d 0001  ld   $01
              092e 0074  ld   $74         ;A#1 (58.3 Hz)
              092f 0001  ld   $01
              0930 0003  ld   $03         ;B-1 (61.7 Hz)
              0931 0002  ld   $02
              0932 0012  ld   $12         ;C-2 (65.4 Hz)
              0933 0002  ld   $02
              0934 0023  ld   $23         ;C#2 (69.3 Hz)
              0935 0002  ld   $02
              0936 0034  ld   $34         ;D-2 (73.4 Hz)
              0937 0002  ld   $02
              0938 0046  ld   $46         ;D#2 (77.8 Hz)
              0939 0002  ld   $02
              093a 005a  ld   $5a         ;E-2 (82.4 Hz)
              093b 0002  ld   $02
              093c 006e  ld   $6e         ;F-2 (87.3 Hz)
              093d 0002  ld   $02
              093e 0004  ld   $04         ;F#2 (92.5 Hz)
              093f 0003  ld   $03
              0940 001b  ld   $1b         ;G-2 (98.0 Hz)
              0941 0003  ld   $03
              0942 0033  ld   $33         ;G#2 (103.8 Hz)
              0943 0003  ld   $03
              0944 004d  ld   $4d         ;A-2 (110.0 Hz)
              0945 0003  ld   $03
              0946 0069  ld   $69         ;A#2 (116.5 Hz)
              0947 0003  ld   $03
              0948 0006  ld   $06         ;B-2 (123.5 Hz)
              0949 0004  ld   $04
              094a 0025  ld   $25         ;C-3 (130.8 Hz)
              094b 0004  ld   $04
              094c 0045  ld   $45         ;C#3 (138.6 Hz)
              094d 0004  ld   $04
              094e 0068  ld   $68         ;D-3 (146.8 Hz)
              094f 0004  ld   $04
              0950 000c  ld   $0c         ;D#3 (155.6 Hz)
              0951 0005  ld   $05
              0952 0033  ld   $33         ;E-3 (164.8 Hz)
              0953 0005  ld   $05
              0954 005c  ld   $5c         ;F-3 (174.6 Hz)
              0955 0005  ld   $05
              0956 0008  ld   $08         ;F#3 (185.0 Hz)
              0957 0006  ld   $06
              0958 0036  ld   $36         ;G-3 (196.0 Hz)
              0959 0006  ld   $06
              095a 0067  ld   $67         ;G#3 (207.7 Hz)
              095b 0006  ld   $06
              095c 001b  ld   $1b         ;A-3 (220.0 Hz)
              095d 0007  ld   $07
              095e 0052  ld   $52         ;A#3 (233.1 Hz)
              095f 0007  ld   $07
              0960 000c  ld   $0c         ;B-3 (246.9 Hz)
              0961 0008  ld   $08
              0962 0049  ld   $49         ;C-4 (261.6 Hz)
              0963 0008  ld   $08
              0964 000b  ld   $0b         ;C#4 (277.2 Hz)
              0965 0009  ld   $09
              0966 0050  ld   $50         ;D-4 (293.7 Hz)
              0967 0009  ld   $09
              0968 0019  ld   $19         ;D#4 (311.1 Hz)
              0969 000a  ld   $0a
              096a 0067  ld   $67         ;E-4 (329.6 Hz)
              096b 000a  ld   $0a
              096c 0039  ld   $39         ;F-4 (349.2 Hz)
              096d 000b  ld   $0b
              096e 0010  ld   $10         ;F#4 (370.0 Hz)
              096f 000c  ld   $0c
              0970 006c  ld   $6c         ;G-4 (392.0 Hz)
              0971 000c  ld   $0c
              0972 004e  ld   $4e         ;G#4 (415.3 Hz)
              0973 000d  ld   $0d
              0974 0035  ld   $35         ;A-4 (440.0 Hz)
              0975 000e  ld   $0e
              0976 0023  ld   $23         ;A#4 (466.2 Hz)
              0977 000f  ld   $0f
              0978 0017  ld   $17         ;B-4 (493.9 Hz)
              0979 0010  ld   $10
              097a 0013  ld   $13         ;C-5 (523.3 Hz)
              097b 0011  ld   $11
              097c 0015  ld   $15         ;C#5 (554.4 Hz)
              097d 0012  ld   $12
              097e 001f  ld   $1f         ;D-5 (587.3 Hz)
              097f 0013  ld   $13
              0980 0032  ld   $32         ;D#5 (622.3 Hz)
              0981 0014  ld   $14
              0982 004d  ld   $4d         ;E-5 (659.3 Hz)
              0983 0015  ld   $15
              0984 0072  ld   $72         ;F-5 (698.5 Hz)
              0985 0016  ld   $16
              0986 0020  ld   $20         ;F#5 (740.0 Hz)
              0987 0018  ld   $18
              0988 0058  ld   $58         ;G-5 (784.0 Hz)
              0989 0019  ld   $19
              098a 001c  ld   $1c         ;G#5 (830.6 Hz)
              098b 001b  ld   $1b
              098c 006b  ld   $6b         ;A-5 (880.0 Hz)
              098d 001c  ld   $1c
              098e 0046  ld   $46         ;A#5 (932.3 Hz)
              098f 001e  ld   $1e
              0990 002f  ld   $2f         ;B-5 (987.8 Hz)
              0991 0020  ld   $20
              0992 0025  ld   $25         ;C-6 (1046.5 Hz)
              0993 0022  ld   $22
              0994 002a  ld   $2a         ;C#6 (1108.7 Hz)
              0995 0024  ld   $24
              0996 003f  ld   $3f         ;D-6 (1174.7 Hz)
              0997 0026  ld   $26
              0998 0064  ld   $64         ;D#6 (1244.5 Hz)
              0999 0028  ld   $28
              099a 001a  ld   $1a         ;E-6 (1318.5 Hz)
              099b 002b  ld   $2b
              099c 0063  ld   $63         ;F-6 (1396.9 Hz)
              099d 002d  ld   $2d
              099e 003f  ld   $3f         ;F#6 (1480.0 Hz)
              099f 0030  ld   $30
              09a0 0031  ld   $31         ;G-6 (1568.0 Hz)
              09a1 0033  ld   $33
              09a2 0038  ld   $38         ;G#6 (1661.2 Hz)
              09a3 0036  ld   $36
              09a4 0056  ld   $56         ;A-6 (1760.0 Hz)
              09a5 0039  ld   $39
              09a6 000d  ld   $0d         ;A#6 (1864.7 Hz)
              09a7 003d  ld   $3d
              09a8 005e  ld   $5e         ;B-6 (1975.5 Hz)
              09a9 0040  ld   $40
              09aa 004b  ld   $4b         ;C-7 (2093.0 Hz)
              09ab 0044  ld   $44
              09ac 0055  ld   $55         ;C#7 (2217.5 Hz)
              09ad 0048  ld   $48
              09ae 007e  ld   $7e         ;D-7 (2349.3 Hz)
              09af 004c  ld   $4c
              09b0 0048  ld   $48         ;D#7 (2489.0 Hz)
              09b1 0051  ld   $51
              09b2 0034  ld   $34         ;E-7 (2637.0 Hz)
              09b3 0056  ld   $56
              09b4 0046  ld   $46         ;F-7 (2793.8 Hz)
              09b5 005b  ld   $5b
              09b6 007f  ld   $7f         ;F#7 (2960.0 Hz)
              09b7 0060  ld   $60
              09b8 0061  ld   $61         ;G-7 (3136.0 Hz)
              09b9 0066  ld   $66
              09ba 006f  ld   $6f         ;G#7 (3322.4 Hz)
              09bb 006c  ld   $6c
              09bc 002c  ld   $2c         ;A-7 (3520.0 Hz)
              09bd 0073  ld   $73
              09be 001a  ld   $1a         ;A#7 (3729.3 Hz)
              09bf 007a  ld   $7a
                                          3048
                                          3049  # NOTE trampoline, (0x09c0), (cycles times are +1 for midi#13)
                                          3050  label('noteTrampoline')
noteTrampoline:
              09c0 fe00  bra  ac          3051  bra(AC)                         #22,#23 #35,#36 fetches ROM note byte, (low then high)
              09c1 fcc2  bra  $09c2       3052  bra(pc()+1)                     #24,#37
              09c2 1427  ld   $27,y       3053  ld(hi('note#13'),Y)             #25,#38 midi#13 lives in the same page
              09c3 e11d  jmp  y,[$1d]     3054  jmp(Y,[vTmp])                   #26,#39
              09c4 0200  nop              3055  nop()                           #27,#40
                                          3056
              09c5 0200  nop              3057  trampoline()
              09c6 0200  nop
              09c7 0200  nop
              * 54 times
              09fb fe00  bra  ac          ;+-----------------------------------+
              09fc fcfd  bra  $09fd       ;|                                   |
              09fd 1418  ld   $18,y       ;| Trampoline for page $0900 lookups |
              09fe e006  jmp  y,$06       ;|                                   |
              09ff c218  st   [$18]       ;+-----------------------------------+
                                          3058
                                          3059  #-----------------------------------------------------------------------
                                          3060  #
                                          3061  #  $0a00 ROM page 10: Inversion table
                                          3062  #
                                          3063  #-----------------------------------------------------------------------
                                          3064
                                          3065  align(0x100, size=0x100)
                                          3066  label('invTable')
                                          3067
                                          3068  # Unit 64, table offset 16 (=1/4), value offset 1: (x+16)*(y+1) == 64*64 - e
                                          3069  for i in range(251):
invTable:     0a00 00ff  ld   $ff         3070    ld(4096//(i+16)-1)
              0a01 00ef  ld   $ef
              0a02 00e2  ld   $e2
              0a03 00d6  ld   $d6
              0a04 00cb  ld   $cb
              0a05 00c2  ld   $c2
              0a06 00b9  ld   $b9
              0a07 00b1  ld   $b1
              0a08 00a9  ld   $a9
              0a09 00a2  ld   $a2
              0a0a 009c  ld   $9c
              0a0b 0096  ld   $96
              0a0c 0091  ld   $91
              0a0d 008c  ld   $8c
              0a0e 0087  ld   $87
              0a0f 0083  ld   $83
              0a10 007f  ld   $7f
              0a11 007b  ld   $7b
              0a12 0077  ld   $77
              0a13 0074  ld   $74
              0a14 0070  ld   $70
              0a15 006d  ld   $6d
              0a16 006a  ld   $6a
              0a17 0068  ld   $68
              0a18 0065  ld   $65
              0a19 0062  ld   $62
              0a1a 0060  ld   $60
              0a1b 005e  ld   $5e
              0a1c 005c  ld   $5c
              0a1d 005a  ld   $5a
              0a1e 0058  ld   $58
              0a1f 0056  ld   $56
              0a20 0054  ld   $54
              0a21 0052  ld   $52
              0a22 0050  ld   $50
              0a23 004f  ld   $4f
              0a24 004d  ld   $4d
              0a25 004c  ld   $4c
              0a26 004a  ld   $4a
              0a27 0049  ld   $49
              0a28 0048  ld   $48
              0a29 0046  ld   $46
              0a2a 0045  ld   $45
              0a2b 0044  ld   $44
              0a2c 0043  ld   $43
              0a2d 0042  ld   $42
              0a2e 0041  ld   $41
              0a2f 0040  ld   $40
              0a30 003f  ld   $3f
              0a31 003e  ld   $3e
              0a32 003d  ld   $3d
              0a33 003c  ld   $3c
              0a34 003b  ld   $3b
              0a35 003a  ld   $3a
              0a36 0039  ld   $39
              0a37 0038  ld   $38
              0a38 0037  ld   $37
              0a39 0037  ld   $37
              0a3a 0036  ld   $36
              0a3b 0035  ld   $35
              0a3c 0034  ld   $34
              0a3d 0034  ld   $34
              0a3e 0033  ld   $33
              0a3f 0032  ld   $32
              0a40 0032  ld   $32
              0a41 0031  ld   $31
              0a42 0030  ld   $30
              0a43 0030  ld   $30
              0a44 002f  ld   $2f
              0a45 002f  ld   $2f
              0a46 002e  ld   $2e
              0a47 002e  ld   $2e
              0a48 002d  ld   $2d
              0a49 002d  ld   $2d
              0a4a 002c  ld   $2c
              0a4b 002c  ld   $2c
              0a4c 002b  ld   $2b
              0a4d 002b  ld   $2b
              0a4e 002a  ld   $2a
              0a4f 002a  ld   $2a
              0a50 0029  ld   $29
              0a51 0029  ld   $29
              0a52 0028  ld   $28
              0a53 0028  ld   $28
              0a54 0027  ld   $27
              0a55 0027  ld   $27
              0a56 0027  ld   $27
              0a57 0026  ld   $26
              0a58 0026  ld   $26
              0a59 0026  ld   $26
              0a5a 0025  ld   $25
              0a5b 0025  ld   $25
              0a5c 0024  ld   $24
              0a5d 0024  ld   $24
              0a5e 0024  ld   $24
              0a5f 0023  ld   $23
              0a60 0023  ld   $23
              0a61 0023  ld   $23
              0a62 0022  ld   $22
              0a63 0022  ld   $22
              0a64 0022  ld   $22
              0a65 0022  ld   $22
              0a66 0021  ld   $21
              0a67 0021  ld   $21
              0a68 0021  ld   $21
              0a69 0020  ld   $20
              0a6a 0020  ld   $20
              0a6b 0020  ld   $20
              0a6c 0020  ld   $20
              0a6d 001f  ld   $1f
              0a6e 001f  ld   $1f
              0a6f 001f  ld   $1f
              0a70 001f  ld   $1f
              0a71 001e  ld   $1e
              0a72 001e  ld   $1e
              0a73 001e  ld   $1e
              0a74 001e  ld   $1e
              0a75 001d  ld   $1d
              0a76 001d  ld   $1d
              0a77 001d  ld   $1d
              0a78 001d  ld   $1d
              0a79 001c  ld   $1c
              0a7a 001c  ld   $1c
              0a7b 001c  ld   $1c
              * 5 times
              0a7e 001b  ld   $1b
              0a7f 001b  ld   $1b
              0a80 001b  ld   $1b
              * 5 times
              0a83 001a  ld   $1a
              0a84 001a  ld   $1a
              0a85 001a  ld   $1a
              * 5 times
              0a88 0019  ld   $19
              0a89 0019  ld   $19
              0a8a 0019  ld   $19
              * 6 times
              0a8e 0018  ld   $18
              0a8f 0018  ld   $18
              0a90 0018  ld   $18
              * 6 times
              0a94 0017  ld   $17
              0a95 0017  ld   $17
              0a96 0017  ld   $17
              * 7 times
              0a9b 0016  ld   $16
              0a9c 0016  ld   $16
              0a9d 0016  ld   $16
              * 8 times
              0aa3 0015  ld   $15
              0aa4 0015  ld   $15
              0aa5 0015  ld   $15
              * 8 times
              0aab 0014  ld   $14
              0aac 0014  ld   $14
              0aad 0014  ld   $14
              * 9 times
              0ab4 0013  ld   $13
              0ab5 0013  ld   $13
              0ab6 0013  ld   $13
              * 9 times
              0abd 0012  ld   $12
              0abe 0012  ld   $12
              0abf 0012  ld   $12
              * 11 times
              0ac8 0011  ld   $11
              0ac9 0011  ld   $11
              0aca 0011  ld   $11
              * 12 times
              0ad4 0010  ld   $10
              0ad5 0010  ld   $10
              0ad6 0010  ld   $10
              * 13 times
              0ae1 000f  ld   $0f
              0ae2 000f  ld   $0f
              0ae3 000f  ld   $0f
              * 16 times
              0af1 000e  ld   $0e
              0af2 000e  ld   $0e
              0af3 000e  ld   $0e
              * 10 times
                                          3071
                                          3072  trampoline()
              0afb fe00  bra  ac          ;+-----------------------------------+
              0afc fcfd  bra  $0afd       ;|                                   |
              0afd 1418  ld   $18,y       ;| Trampoline for page $0a00 lookups |
              0afe e006  jmp  y,$06       ;|                                   |
              0aff c218  st   [$18]       ;+-----------------------------------+
                                          3073
                                          3074  #-----------------------------------------------------------------------
                                          3075  #
                                          3076  #  $0b00 ROM page 11: More SYS functions
                                          3077  #
                                          3078  #-----------------------------------------------------------------------
                                          3079
                                          3080  align(0x100, size=0x100)
                                          3081
                                          3082  #-----------------------------------------------------------------------
                                          3083  # Extension SYS_SetMode_v2_80
                                          3084  #-----------------------------------------------------------------------
                                          3085
                                          3086  # Set video mode to 0 to 3 black scanlines per pixel line.
                                          3087  #
                                          3088  # Mainly for making the MODE command available in Tiny BASIC, so that
                                          3089  # the user can experiment. It's adviced to refrain from using
                                          3090  # SYS_SetMode_v2_80 in regular applications. Video mode is a deeply
                                          3091  # personal preference, and the programmer shouldn't overrule the user
                                          3092  # in that choice. The Gigatron philisophy is that the end user has
                                          3093  # the final say on what happens on the system, not the application,
                                          3094  # even if that implies a degraded performance. This doesn't mean that
                                          3095  # all applications must work well in all video modes: mode 1 is still
                                          3096  # the default. If an application really doesn't work at all in that
                                          3097  # mode, it's acceptable to change mode once after loading.
                                          3098  #
                                          3099  # There's no "SYS_GetMode" function.
                                          3100  #
                                          3101  # Variables:
                                          3102  #       vAC bit 0:1     Mode:
                                          3103  #                         0      "ABCD" -> Full mode (slowest)
                                          3104  #                         1      "ABC-" -> Default mode after reset
                                          3105  #                         2      "A-C-" -> at67's mode
                                          3106  #                         3      "A---" -> HGM's mode
                                          3107  #       vAC bit 2:15    Ignored bits and should be 0
                                          3108  #
                                          3109  # Special values (ROM v4):
                                          3110  #       vAC = 1975      Zombie mode (no video signals, no input,
                                          3111  #                        no blinkenlights).
                                          3112  #       vAC = -1        Leave zombie mode and restore previous mode.
                                          3113
                                          3114  # Actual duration is <80 cycles, but keep some room for future extensions
                                          3115  label('SYS_SetMode_v2_80')
SYS_SetMode_v2_80:
              0b00 140b  ld   $0b,y       3116  ld(hi('sys_SetMode'),Y)         #15
              0b01 e056  jmp  y,$56       3117  jmp(Y,'sys_SetMode')            #16
              0b02 011e  ld   [$1e]       3118  ld([vReturn])                   #17
                                          3119
                                          3120  #-----------------------------------------------------------------------
                                          3121  # Extension SYS_SetMemory_v2_54
                                          3122  #-----------------------------------------------------------------------
                                          3123
                                          3124  # SYS function for setting 1..256 bytes
                                          3125  #
                                          3126  # sysArgs[0]   Copy count (in, changed)
                                          3127  # sysArgs[1]   Copy value (in)
                                          3128  # sysArgs[2:3] Destination address (in, changed)
                                          3129  #
                                          3130  # Sets up to 8 bytes per invocation before restarting itself through vCPU.
                                          3131  # Doesn't wrap around page boundary. Can run 3 times per 148-cycle time slice.
                                          3132  # All combined that gives a 300% speedup over ROMv4 and before.
                                          3133
                                          3134  label('SYS_SetMemory_v2_54')
SYS_SetMemory_v2_54:
              0b03 0124  ld   [$24]       3135  ld([sysArgs+0])                 #15
                                          3136  bra('sys_SetMemory#18')         #16
              0b04 fc1a  bra  sys_SetMemory#18
              0b05 1126  ld   [$26],x     3137  ld([sysArgs+2],X)               #17
                                          3138
                                          3139  #-----------------------------------------------------------------------
                                          3140  # Extension SYS_SendSerial1_v3_80
                                          3141  #-----------------------------------------------------------------------
                                          3142
                                          3143  # SYS function for sending data over serial controller port using
                                          3144  # pulse width modulation of the vertical sync signal.
                                          3145  #
                                          3146  # Variables:
                                          3147  #       sysArgs[0:1]    Source address               (in, changed)
                                          3148  #       sysArgs[2]      Start bit mask (typically 1) (in, changed)
                                          3149  #       sysArgs[3]      Number of send frames X      (in, changed)
                                          3150  #
                                          3151  # The sending will abort if input data is detected on the serial port.
                                          3152  # Returns 0 in case of all bits sent, or <>0 in case of abort
                                          3153  #
                                          3154  # This modulates the next upcoming X vertical pulses with the supplied
                                          3155  # data. A zero becomes a 7 line vPulse, a one will be 9 lines.
                                          3156  # After that, the vPulse width falls back to 8 lines (idle).
                                          3157
                                          3158  label('SYS_SendSerial1_v3_80')
SYS_SendSerial1_v3_80:
              0b06 0109  ld   [$09]       3159  ld([videoY])                    #15
                                          3160  bra('sys_SendSerial1')          #16
              0b07 fc85  bra  sys_SendSerial1
              0b08 60b3  xora $b3         3161  xora(videoYline0)               #17 First line of vertical blank
                                          3162
                                          3163  #-----------------------------------------------------------------------
                                          3164  # Extension SYS_ExpanderControl_v4_40
                                          3165  #-----------------------------------------------------------------------
                                          3166
                                          3167  # Sets the I/O and RAM expander's control register
                                          3168  #
                                          3169  # Variables:
                                          3170  #       vAC bit 2       Device enable /SS0
                                          3171  #           bit 3       Device enable /SS1
                                          3172  #           bit 4       Device enable /SS2
                                          3173  #           bit 5       Device enable /SS3
                                          3174  #           bit 6       Banking B0
                                          3175  #           bit 7       Banking B1
                                          3176  #           bit 15      Data out MOSI
                                          3177  #       sysArgs[7]      Cache for control state (written to)
                                          3178  #
                                          3179  # Intended for prototyping, and probably too low-level for most applications
                                          3180  # Still there's a safeguard: it's not possible to disable RAM using this
                                          3181
                                          3182  label('SYS_ExpanderControl_v4_40')
SYS_ExpanderControl_v4_40:
              0b09 140d  ld   $0d,y       3183  ld(hi('sys_ExpanderControl'),Y) #15
              0b0a e000  jmp  y,$00       3184  jmp(Y,'sys_ExpanderControl')    #16
              0b0b 000c  ld   $0c         3185  ld(0b00001100)                  #17
                                          3186  #    ^^^^^^^^
                                          3187  #    |||||||`-- SCLK
                                          3188  #    ||||||`--- Not connected
                                          3189  #    |||||`---- /SS0
                                          3190  #    ||||`----- /SS1
                                          3191  #    |||`------ /SS2
                                          3192  #    ||`------- /SS3
                                          3193  #    |`-------- B0
                                          3194  #    `--------- B1
                                          3195
                                          3196  #-----------------------------------------------------------------------
                                          3197  # Extension SYS_Run6502_v4_80
                                          3198  #-----------------------------------------------------------------------
                                          3199
                                          3200  # Transfer control to v6502
                                          3201  #
                                          3202  # Calling 6502 code from vCPU goes (only) through this SYS function.
                                          3203  # Directly modifying the vCpuSelect variable is unreliable. The
                                          3204  # control transfer is immediate, without waiting for the current
                                          3205  # time slice to end or first returning to vCPU.
                                          3206  #
                                          3207  # vCPU code and v6502 code can interoperate without much hassle:
                                          3208  # - The v6502 program counter is vLR, and v6502 doesn't touch vPC
                                          3209  # - Returning to vCPU is with the BRK instruction
                                          3210  # - BRK doesn't dump process state on the stack
                                          3211  # - vCPU can save/restore the vLR with PUSH/POP
                                          3212  # - Stacks are shared, vAC is shared
                                          3213  # - vAC can indicate what the v6502 code wants. vAC+1 will be cleared
                                          3214  # - Alternative is to leave a word in sysArgs[6:7] (v6502 X and Y registers)
                                          3215  # - Another way is to set vPC before BRK, and vCPU will continue there(+2)
                                          3216  #
                                          3217  # Calling v6502 code from vCPU looks like this:
                                          3218  #       LDWI  SYS_Run6502_v4_80
                                          3219  #       STW   sysFn
                                          3220  #       LDWI  $6502_start_address
                                          3221  #       STW   vLR
                                          3222  #       SYS   80
                                          3223  #
                                          3224  # Variables:
                                          3225  #       vAC             Accumulator
                                          3226  #       vLR             Program Counter
                                          3227  #       vSP             Stack Pointer (+1)
                                          3228  #       sysArgs[6]      Index Register X
                                          3229  #       sysArgs[7]      Index Register Y
                                          3230  # For info:
                                          3231  #       sysArgs[0:1]    Address Register, free to clobber
                                          3232  #       sysArgs[2]      Instruction Register, free to clobber
                                          3233  #       sysArgs[3:5]    Flags, don't touch
                                          3234  #
                                          3235  # Implementation details::
                                          3236  #
                                          3237  #  The time to reserve for this transition is the maximum time
                                          3238  #  between NEXT and v6502_check. This is
                                          3239  #       SYS call duration + 2*v6502_maxTicks + (v6502_overhead - vCPU_overhead)
                                          3240  #     = 22 + 38 + (11 - 9) = 62 cycles.
                                          3241  #  So reserving 80 cycles is future proof. This isn't overhead, as it includes
                                          3242  #  the fetching of the first 6502 opcode and its operands..
                                          3243  #
                                          3244  #                      0            10                 28=0         9
                                          3245  #    ---+----+---------+------------+------------------+-----------+---
                                          3246  # video | nop| runVcpu |   ENTER    | At least one ins |   EXIT    | video
                                          3247  #    ---+----+---------+------------+------------------+-----------+---
                                          3248  #        sync  prelude  ENTER-to-ins    ins-to-NEXT     NEXT-to-video
                                          3249  #       |<-->|
                                          3250  #        0/1 |<------->|
                                          3251  #                 5    |<----------------------------->|
                                          3252  #          runVCpu_overhead           28               |<--------->|
                                          3253  #                                 2*maxTicks                 9
                                          3254  #                                                      vCPU_overhead
                                          3255  #
                                          3256  #                      0                21                    38=0       11
                                          3257  #    ---+----+---------+----------------+--------------------+-----------+---
                                          3258  # video | nop| runVcpu |   v6502_ENTER  | At least one fetch |v6502_exitB| video
                                          3259  #    ---+----+---------+----------------+--------------------+-----------+---
                                          3260  #        sync  prelude   enter-to-fetch     fetch-to-check    check-to-video
                                          3261  #       |<-->|
                                          3262  #        0/1 |<------->|
                                          3263  #                 5    |<----------------------------------->|
                                          3264  #          runVcpu_overhead           38                     |<--------->|
                                          3265  #                              2*v6520_maxTicks                    11
                                          3266  #                                                            v6502_overhead
                                          3267
                                          3268  label('SYS_Run6502_v4_80')
SYS_Run6502_v4_80:
              0b0c 140d  ld   $0d,y       3269  ld(hi('sys_v6502'),Y)           #15
              0b0d e08b  jmp  y,$8b       3270  jmp(Y,'sys_v6502')              #16
              0b0e 000d  ld   $0d         3271  ld(hi('v6502_ENTER'))           #17 Activate v6502
                                          3272
                                          3273  #-----------------------------------------------------------------------
                                          3274  # Extension SYS_ResetWaveforms_v4_50
                                          3275  #-----------------------------------------------------------------------
                                          3276
                                          3277  # soundTable[4x+0] = sawtooth, to be modified into metallic/noise
                                          3278  # soundTable[4x+1] = pulse
                                          3279  # soundTable[4x+2] = triangle
                                          3280  # soundTable[4x+3] = sawtooth, also useful to right shift 2 bits
                                          3281
                                          3282  label('SYS_ResetWaveforms_v4_50')
SYS_ResetWaveforms_v4_50:
              0b0f 1412  ld   $12,y       3283  ld(hi('sys_ResetWaveforms'),Y)  #15 Initial setup of waveforms. [vAC+0]=i
              0b10 e0b2  jmp  y,$b2       3284  jmp(Y,'sys_ResetWaveforms')     #16
              0b11 1407  ld   $07,y       3285  ld(soundTable>>8,Y)             #17
                                          3286
                                          3287  #-----------------------------------------------------------------------
                                          3288  # Extension SYS_ShuffleNoise_v4_46
                                          3289  #-----------------------------------------------------------------------
                                          3290
                                          3291  # Use simple 6-bits variation of RC4 to permutate waveform 0 in soundTable
                                          3292
                                          3293  label('SYS_ShuffleNoise_v4_46')
SYS_ShuffleNoise_v4_46:
              0b12 1412  ld   $12,y       3294  ld(hi('sys_ShuffleNoise'),Y)    #15 Shuffle soundTable[4i+0]. [vAC+0]=4j, [vAC+1]=4i
              0b13 e0d3  jmp  y,$d3       3295  jmp(Y,'sys_ShuffleNoise')       #16
              0b14 1407  ld   $07,y       3296  ld(soundTable>>8,Y)             #17
                                          3297
                                          3298  #-----------------------------------------------------------------------
                                          3299  # Extension SYS_SpiExchangeBytes_v4_134
                                          3300  #-----------------------------------------------------------------------
                                          3301
                                          3302  # Send AND receive 1..256 bytes over SPI interface
                                          3303
                                          3304  # Variables:
                                          3305  #       sysArgs[0]      Page index start, for both send/receive (in, changed)
                                          3306  #       sysArgs[1]      Memory page for send data (in)
                                          3307  #       sysArgs[2]      Page index stop (in)
                                          3308  #       sysArgs[3]      Memory page for receive data (in)
                                          3309  #       sysArgs[4]      Scratch (changed)
                                          3310
                                          3311  label('SYS_SpiExchangeBytes_v4_134')
SYS_SpiExchangeBytes_v4_134:
              0b15 140d  ld   $0d,y       3312  ld(hi('sys_SpiExchangeBytes'),Y)#15
              0b16 e015  jmp  y,$15       3313  jmp(Y,'sys_SpiExchangeBytes')   #16
              0b17 1401  ld   $01,y       3314  ld(hi(ctrlBits),Y)              #17 Control state as saved by SYS_ExpanderControl
                                          3315
                                          3316  #-----------------------------------------------------------------------
                                          3317  # Extension SYS_ReceiveSerial1_vX_32
                                          3318  #-----------------------------------------------------------------------
                                          3319
                                          3320  # SYS function for receiving one byte over the serial controller port.
                                          3321  # This is a public version of SYS_NextByteIn from the loader private
                                          3322  # extension.  A byte is read from IN when videoY reaches
                                          3323  # sysArgs[3]. The byte is added to the checksum sysArgs[2] then stored
                                          3324  # at address sysArgs[0:1] which gets incremented.
                                          3325  #
                                          3326  # The 65 bytes of a serial frame can be read for the following values
                                          3327  # of videoY: 207 (protocol byte) 219 (length, 6 bits only) 235, 251
                                          3328  # (address) then 2, 6, 10, .. 238 stepping by four, then 185.
                                          3329  #
                                          3330  # Variables:
                                          3331  #     sysArgs[0:1] Address
                                          3332  #     sysArgs[2]   Checksum
                                          3333  #     sysArgs[3]   Wait value (videoY)
                                          3334
                                          3335  label('SYS_ReceiveSerial1_vX_32')
SYS_ReceiveSerial1_vX_32:                 3336  bra('sys_ReceiveSerial1')       #15
              0b18 fcb2  bra  sys_ReceiveSerial1
              0b19 0127  ld   [$27]       3337  ld([sysArgs+3])                 #16
                                          3338
                                          3339  #-----------------------------------------------------------------------
                                          3340  #  Implementations
                                          3341  #-----------------------------------------------------------------------
                                          3342
                                          3343  # SYS_SetMemory_54 implementation
                                          3344  label('sys_SetMemory#18')
sys_SetMemory#18:
              0b1a 1527  ld   [$27],y     3345  ld([sysArgs+3],Y)               #18
              0b1b f83e  ble  .sysSb#21   3346  ble('.sysSb#21')                #19 Enter fast lane if >=128 or at 0 (-> 256)
              0b1c a008  suba $08         3347  suba(8)                         #20
              0b1d f440  bge  .sysSb#23   3348  bge('.sysSb#23')                #21 Or when >=8
              0b1e c224  st   [$24]       3349  st([sysArgs+0])                 #22
              0b1f 2004  anda $04         3350  anda(4)                         #23
              0b20 f027  beq  .sysSb#26   3351  beq('.sysSb#26')                #24
              0b21 0125  ld   [$25]       3352  ld([sysArgs+1])                 #25 Set 4 pixels
              0b22 de00  st   [y,x++]     3353  st([Y,Xpp])                     #26
              0b23 de00  st   [y,x++]     3354  st([Y,Xpp])                     #27
              0b24 de00  st   [y,x++]     3355  st([Y,Xpp])                     #28
              0b25 fc2a  bra  .sysSb#31   3356  bra('.sysSb#31')                #29
              0b26 de00  st   [y,x++]     3357  st([Y,Xpp])                     #30
                                          3358  label('.sysSb#26')
.sysSb#26:    0b27 0001  ld   $01         3359  wait(31-26)                     #26
              0b28 ec28  bne  $0b28
              0b29 a001  suba $01
                                          3360  label('.sysSb#31')
.sysSb#31:    0b2a 0124  ld   [$24]       3361  ld([sysArgs+0])                 #31
              0b2b 2002  anda $02         3362  anda(2)                         #32
              0b2c f031  beq  .sysSb#35   3363  beq('.sysSb#35')                #33
              0b2d 0125  ld   [$25]       3364  ld([sysArgs+1])                 #34 Set 2 pixels
              0b2e de00  st   [y,x++]     3365  st([Y,Xpp])                     #35
              0b2f fc34  bra  .sysSb#38   3366  bra('.sysSb#38')                #36
              0b30 de00  st   [y,x++]     3367  st([Y,Xpp])                     #37
                                          3368  label('.sysSb#35')
.sysSb#35:    0b31 0200  nop              3369  wait(38-35)                     #35
              0b32 0200  nop
              0b33 0200  nop
                                          3370  label('.sysSb#38')
.sysSb#38:    0b34 0124  ld   [$24]       3371  ld([sysArgs+0])                 #38
              0b35 2001  anda $01         3372  anda(1)                         #39
              0b36 f039  beq  $0b39       3373  beq(pc()+3)                     #40
              0b37 fc3a  bra  $0b3a       3374  bra(pc()+3)                     #41
              0b38 0125  ld   [$25]       3375  ld([sysArgs+1])                 #42 Set 1 pixel
              0b39 0d00  ld   [y,x]       3376  ld([Y,X])                       #42(!) No change
              0b3a ce00  st   [y,x]       3377  st([Y,X])                       #43
              0b3b 1403  ld   $03,y       3378  ld(hi('NEXTY'),Y)               #44 Return
              0b3c e000  jmp  y,$00       3379  jmp(Y,'NEXTY')                  #45 All done
              0b3d 00e8  ld   $e8         3380  ld(-48/2)                       #46
                                          3381  label('.sysSb#21')
.sysSb#21:    0b3e 0200  nop              3382  nop()                           #21
              0b3f c224  st   [$24]       3383  st([sysArgs+0])                 #22
                                          3384  label('.sysSb#23')
.sysSb#23:    0b40 0125  ld   [$25]       3385  ld([sysArgs+1])                 #23 Set 8 pixels
              0b41 de00  st   [y,x++]     3386  st([Y,Xpp])                     #24
              0b42 de00  st   [y,x++]     3387  st([Y,Xpp])                     #25
              0b43 de00  st   [y,x++]     3388  st([Y,Xpp])                     #26
              0b44 de00  st   [y,x++]     3389  st([Y,Xpp])                     #27
              0b45 de00  st   [y,x++]     3390  st([Y,Xpp])                     #28
              0b46 de00  st   [y,x++]     3391  st([Y,Xpp])                     #29
              0b47 de00  st   [y,x++]     3392  st([Y,Xpp])                     #30
              0b48 de00  st   [y,x++]     3393  st([Y,Xpp])                     #31
              0b49 0126  ld   [$26]       3394  ld([sysArgs+2])                 #32 Advance write pointer
              0b4a 8008  adda $08         3395  adda(8)                         #33
              0b4b c226  st   [$26]       3396  st([sysArgs+2])                 #34
              0b4c 0124  ld   [$24]       3397  ld([sysArgs+0])                 #35
              0b4d f050  beq  $0b50       3398  beq(pc()+3)                     #36
              0b4e fc51  bra  $0b51       3399  bra(pc()+3)                     #37
              0b4f 00fe  ld   $fe         3400  ld(-2)                          #38 Self-restart when more to do
              0b50 0000  ld   $00         3401  ld(0)                           #38(!)
              0b51 8116  adda [$16]       3402  adda([vPC])                     #39
              0b52 c216  st   [$16]       3403  st([vPC])                       #40
              0b53 1403  ld   $03,y       3404  ld(hi('REENTER'),Y)             #41
              0b54 e0cb  jmp  y,$cb       3405  jmp(Y,'REENTER')                #42
              0b55 00e9  ld   $e9         3406  ld(-46/2)                       #43
                                          3407
                                          3408  # SYS_SetMode_80 implementation
                                          3409  label('sys_SetMode')
sys_SetMode:  0b56 ec59  bne  $0b59       3410  bne(pc()+3)                     #18
              0b57 fc59  bra  $0b59       3411  bra(pc()+2)                     #19
              0b58 0003  ld   $03         3412  ld('startVideo')                #20 First enable video if disabled
              0b59 c21e  st   [$1e]       3413  st([vReturn])                   #20,21
              0b5a 0119  ld   [$19]       3414  ld([vAC+1])                     #22
              0b5b f065  beq  .sysSm#25   3415  beq('.sysSm#25')                #23
              0b5c 1403  ld   $03,y       3416  ld(hi('REENTER'),Y)             #24
              0b5d 6118  xora [$18]       3417  xora([vAC])                     #25
              0b5e 60b0  xora $b0         3418  xora((1975>>8)^(1975&255))      #26 Poor man\'s 1975 detection
              0b5f ec62  bne  $0b62       3419  bne(pc()+3)                     #27
              0b60 fc63  bra  $0b63       3420  bra(pc()+3)                     #28
                                          3421  assert videoZ == 0x0100
              0b61 c21e  st   [$1e]       3422  st([vReturn])                   #29 DISABLE video/audio/serial/etc
              0b62 0200  nop              3423  nop()                           #29(!) Ignore and return
              0b63 e0cb  jmp  y,$cb       3424  jmp(Y,'REENTER')                #30
              0b64 00ef  ld   $ef         3425  ld(-34/2)                       #31
                                          3426  label('.sysSm#25')
.sysSm#25:    0b65 0118  ld   [$18]       3427  ld([vAC])                       #25 Mode 0,1,2,3
              0b66 2003  anda $03         3428  anda(3)                         #26
              0b67 806a  adda $6a         3429  adda('.sysSm#30')               #27
              0b68 fe00  bra  ac          3430  bra(AC)                         #28
              0b69 fc6e  bra  .sysSm#31   3431  bra('.sysSm#31')                #29
                                          3432  label('.sysSm#30')
.sysSm#30:    0b6a 000a  ld   $0a         3433  ld('pixels')                    #30 videoB lines
              0b6b 000a  ld   $0a         3434  ld('pixels')                    #30
              0b6c 00f6  ld   $f6         3435  ld('nopixels')                  #30
              0b6d 00f6  ld   $f6         3436  ld('nopixels')                  #30
                                          3437  label('.sysSm#31')
.sysSm#31:    0b6e c20a  st   [$0a]       3438  st([videoModeB])                #31
              0b6f 0118  ld   [$18]       3439  ld([vAC])                       #32
              0b70 2003  anda $03         3440  anda(3)                         #33
              0b71 8074  adda $74         3441  adda('.sysSm#37')               #34
              0b72 fe00  bra  ac          3442  bra(AC)                         #35
              0b73 fc78  bra  .sysSm#38   3443  bra('.sysSm#38')                #36
                                          3444  label('.sysSm#37')
.sysSm#37:    0b74 000a  ld   $0a         3445  ld('pixels')                    #37 videoC lines
              0b75 000a  ld   $0a         3446  ld('pixels')                    #37
              0b76 000a  ld   $0a         3447  ld('pixels')                    #37
              0b77 00f6  ld   $f6         3448  ld('nopixels')                  #37
                                          3449  label('.sysSm#38')
.sysSm#38:    0b78 c20b  st   [$0b]       3450  st([videoModeC])                #38
              0b79 0118  ld   [$18]       3451  ld([vAC])                       #39
              0b7a 2003  anda $03         3452  anda(3)                         #40
              0b7b 807e  adda $7e         3453  adda('.sysSm#44')               #41
              0b7c fe00  bra  ac          3454  bra(AC)                         #42
              0b7d fc82  bra  .sysSm#45   3455  bra('.sysSm#45')                #43
                                          3456  label('.sysSm#44')
.sysSm#44:    0b7e 000a  ld   $0a         3457  ld('pixels')                    #44 videoD lines
              0b7f 00f6  ld   $f6         3458  ld('nopixels')                  #44
              0b80 00f6  ld   $f6         3459  ld('nopixels')                  #44
              0b81 00f6  ld   $f6         3460  ld('nopixels')                  #44
                                          3461  label('.sysSm#45')
.sysSm#45:    0b82 c20c  st   [$0c]       3462  st([videoModeD])                #45
              0b83 e0cb  jmp  y,$cb       3463  jmp(Y,'REENTER')                #46
              0b84 00e7  ld   $e7         3464  ld(-50/2)                       #47
                                          3465
                                          3466  # SYS_SendSerial1_v3_80 implementation
                                          3467  label('sys_SendSerial1')
sys_SendSerial1:
              0b85 f08c  beq  .sysSs#20   3468  beq('.sysSs#20')                #18
              0b86 1124  ld   [$24],x     3469  ld([sysArgs+0],X)               #19
              0b87 0116  ld   [$16]       3470  ld([vPC])                       #20 Wait for vBlank
              0b88 a002  suba $02         3471  suba(2)                         #21
              0b89 1403  ld   $03,y       3472  ld(hi('REENTER_28'),Y)          #22
              0b8a e0ca  jmp  y,$ca       3473  jmp(Y,'REENTER_28')             #23
              0b8b c216  st   [$16]       3474  st([vPC])                       #24
                                          3475  label('.sysSs#20')
.sysSs#20:    0b8c 1525  ld   [$25],y     3476  ld([sysArgs+1],Y)               #20 Synchronized with vBlank
              0b8d 0d00  ld   [y,x]       3477  ld([Y,X])                       #21 Copy next bit
              0b8e 2126  anda [$26]       3478  anda([sysArgs+2])               #22
              0b8f ec92  bne  $0b92       3479  bne(pc()+3)                     #23
              0b90 fc93  bra  $0b93       3480  bra(pc()+3)                     #24
              0b91 000e  ld   $0e         3481  ld(7*2)                         #25
              0b92 0012  ld   $12         3482  ld(9*2)                         #25
              0b93 c20d  st   [$0d]       3483  st([videoPulse])                #26
              0b94 0126  ld   [$26]       3484  ld([sysArgs+2])                 #27 Rotate input bit
              0b95 8200  adda ac          3485  adda(AC)                        #28
              0b96 ec99  bne  $0b99       3486  bne(pc()+3)                     #29
              0b97 fc99  bra  $0b99       3487  bra(pc()+2)                     #30
              0b98 0001  ld   $01         3488  ld(1)                           #31
              0b99 c226  st   [$26]       3489  st([sysArgs+2])                 #31,32 (must be idempotent)
              0b9a 2001  anda $01         3490  anda(1)                         #33 Optionally increment pointer
              0b9b 8124  adda [$24]       3491  adda([sysArgs+0])               #34
              0b9c d224  st   [$24],x     3492  st([sysArgs+0],X)               #35
              0b9d 0127  ld   [$27]       3493  ld([sysArgs+3])                 #36 Frame counter
              0b9e a001  suba $01         3494  suba(1)                         #37
              0b9f f0ae  beq  .sysSs#40   3495  beq('.sysSs#40')                #38
              0ba0 1403  ld   $03,y       3496  ld(hi('REENTER'),Y)             #39
              0ba1 c227  st   [$27]       3497  st([sysArgs+3])                 #40
              0ba2 010f  ld   [$0f]       3498  ld([serialRaw])                 #41 Test for anything being sent back
              0ba3 60ff  xora $ff         3499  xora(255)                       #42
              0ba4 f0a9  beq  .sysSs#45   3500  beq('.sysSs#45')                #43
              0ba5 c218  st   [$18]       3501  st([vAC])                       #44 Abort after key press with non-zero error
              0ba6 c219  st   [$19]       3502  st([vAC+1])                     #45
              0ba7 e0cb  jmp  y,$cb       3503  jmp(Y,'REENTER')                #46
              0ba8 00e7  ld   $e7         3504  ld(-50/2)                       #47
                                          3505  label('.sysSs#45')
.sysSs#45:    0ba9 0116  ld   [$16]       3506  ld([vPC])                       #45 Continue sending bits
              0baa a002  suba $02         3507  suba(2)                         #46
              0bab c216  st   [$16]       3508  st([vPC])                       #47
              0bac e0cb  jmp  y,$cb       3509  jmp(Y,'REENTER')                #48
              0bad 00e6  ld   $e6         3510  ld(-52/2)                       #49
                                          3511  label('.sysSs#40')
.sysSs#40:    0bae c218  st   [$18]       3512  st([vAC])                       #40 Stop sending bits, no error
              0baf c219  st   [$19]       3513  st([vAC+1])                     #41
              0bb0 e0cb  jmp  y,$cb       3514  jmp(Y,'REENTER')                #42
              0bb1 00e9  ld   $e9         3515  ld(-46/2)                       #43
                                          3516
                                          3517  # SYS_ReceiveSerialByte implementation
                                          3518  label('sys_ReceiveSerial1')
sys_ReceiveSerial1:
              0bb2 6109  xora [$09]       3519  xora([videoY])                  #17
              0bb3 ecc0  bne  .sysRsb#20  3520  bne('.sysRsb#20')               #18
              0bb4 1124  ld   [$24],x     3521  ld([sysArgs+0],X)               #19
              0bb5 1525  ld   [$25],y     3522  ld([sysArgs+1],Y)               #20
              0bb6 0300  ld   in          3523  ld(IN)                          #21
              0bb7 ce00  st   [y,x]       3524  st([Y,X])                       #22
              0bb8 8126  adda [$26]       3525  adda([sysArgs+2])               #23
              0bb9 c226  st   [$26]       3526  st([sysArgs+2])                 #24
              0bba 0124  ld   [$24]       3527  ld([sysArgs+0])                 #25
              0bbb 8001  adda $01         3528  adda(1)                         #26
              0bbc c224  st   [$24]       3529  st([sysArgs+0])                 #27
              0bbd 1403  ld   $03,y       3530  ld(hi('NEXTY'),Y)               #28
              0bbe e000  jmp  y,$00       3531  jmp(Y,'NEXTY')                  #29
              0bbf 00f0  ld   $f0         3532  ld(-32/2)                       #30
                                          3533  # Restart the instruction in the next timeslice
                                          3534  label('.sysRsb#20')
.sysRsb#20:   0bc0 0116  ld   [$16]       3535  ld([vPC])                       #20
              0bc1 a002  suba $02         3536  suba(2)                         #21
              0bc2 c216  st   [$16]       3537  st([vPC])                       #22
              0bc3 1403  ld   $03,y       3538  ld(hi('REENTER'),Y)             #23
              0bc4 e0cb  jmp  y,$cb       3539  jmp(Y,'REENTER')                #24
              0bc5 00f2  ld   $f2         3540  ld(-28/2)                       #25
                                          3541
                                          3542  # -------------------------------------------------------------
                                          3543  # vCPU instructions : POP PUSH
                                          3544  # -------------------------------------------------------------
                                          3545
                                          3546
                                          3547  # POP implementation (vCPU instruction)
                                          3548  label('pop#13')
pop#13:       0bc6 1504  ld   [$04],y     3549  ld([vSPH],Y)                    #13 vSP.hi
              0bc7 111c  ld   [$1c],x     3550  ld([vSP],X)                     #14
              0bc8 0d00  ld   [y,x]       3551  ld([Y,X])                       #15
              0bc9 de00  st   [y,x++]     3552  st([Y,Xpp])                     #16
              0bca c21a  st   [$1a]       3553  st([vLR])                       #17
              0bcb 0d00  ld   [y,x]       3554  ld([Y,X])                       #18
              0bcc c21b  st   [$1b]       3555  st([vLR+1])                     #19
              0bcd 011c  ld   [$1c]       3556  ld([vSP])                       #20
              0bce 8002  adda $02         3557  adda(2)                         #21
              0bcf c21c  st   [$1c]       3558  st([vSP])                       #22
              0bd0 0116  ld   [$16]       3559  ld([vPC])                       #23
              0bd1 a001  suba $01         3560  suba(1)                         #24
              0bd2 c216  st   [$16]       3561  st([vPC])                       #25
              0bd3 1403  ld   $03,y       3562  ld(hi('NEXTY'),Y)               #26
              0bd4 e000  jmp  y,$00       3563  jmp(Y,'NEXTY')                  #27
              0bd5 00f1  ld   $f1         3564  ld(-30/2)                       #28
                                          3565
                                          3566  # PUSH implementation (vCPU instruction)
                                          3567  label('push#13')
push#13:      0bd6 1504  ld   [$04],y     3568  ld([vSPH],Y)                    #13 vSP.hi
              0bd7 011c  ld   [$1c]       3569  ld([vSP])                       #14
              0bd8 a002  suba $02         3570  suba(2)                         #15
              0bd9 d21c  st   [$1c],x     3571  st([vSP],X)                     #16
              0bda 011a  ld   [$1a]       3572  ld([vLR])                       #17
              0bdb de00  st   [y,x++]     3573  st([Y,Xpp])                     #18
              0bdc 011b  ld   [$1b]       3574  ld([vLR+1])                     #19
              0bdd ce00  st   [y,x]       3575  st([Y,X])                       #20
              0bde 0116  ld   [$16]       3576  ld([vPC])                       #21
              0bdf a001  suba $01         3577  suba(1)                         #22
              0be0 c216  st   [$16]       3578  st([vPC])                       #23
              0be1 1403  ld   $03,y       3579  ld(hi('NEXTY'),Y)               #24
              0be2 e000  jmp  y,$00       3580  jmp(Y,'NEXTY')                  #25
              0be3 00f2  ld   $f2         3581  ld(-28/2)                       #26
                                          3582
                                          3583  # -------------------------------------------------------------
                                          3584  # vCPU instructions for comparisons between two 16-bit operands
                                          3585  # -------------------------------------------------------------
                                          3586  #
                                          3587  # vCPU's conditional branching (BCC) always compares vAC against 0,
                                          3588  # treating vAC as a two's complement 16-bit number. When we need to
                                          3589  # compare two arbitrary numnbers we normally first take their difference
                                          3590  # with SUBW.  However, when this difference is too large, the subtraction
                                          3591  # overflows and we get the wrong outcome. To get it right over the
                                          3592  # entire range, an elaborate sequence is needed. TinyBASIC uses this
                                          3593  # blurp for its relational operators. (It compares stack variable $02
                                          3594  # with zero page variable $3a.)
                                          3595  #
                                          3596  #       0461  ee 02            LDLW  $02
                                          3597  #       0463  fc 3a            XORW  $3a
                                          3598  #       0465  35 53 6a         BGE   $046c
                                          3599  #       0468  ee 02            LDLW  $02
                                          3600  #       046a  90 6e            BRA   $0470
                                          3601  #       046c  ee 02            LDLW  $02
                                          3602  #       046e  b8 3a            SUBW  $3a
                                          3603  #       0470  35 56 73         BLE   $0475
                                          3604  #
                                          3605  # The CMPHS and CMPHU instructions were introduced to simplify this.
                                          3606  # They inspect both operands to see if there is an overflow risk. If
                                          3607  # so, they modify vAC such that their difference gets smaller, while
                                          3608  # preserving the relation between the two operands. After that, the
                                          3609  # SUBW instruction can't overflow and we achieve a correct comparison.
                                          3610  # Use CMPHS for signed comparisons and CMPHU for unsigned. With these,
                                          3611  # the sequence above becomes:
                                          3612  #
                                          3613  #       0461  ee 02            LDLW  $02
                                          3614  #       0463  1f 3b            CMPHS $3b        Note: high byte of operand
                                          3615  #       0465  b8 3a            SUBW  $3a
                                          3616  #       0467  35 56 73         BLE   $0475
                                          3617  #
                                          3618  # CMPHS/CMPHU don't make much sense other than in combination with
                                          3619  # SUBW. These modify vACH, if needed, as given in the following table:
                                          3620  #
                                          3621  #       vACH  varH  |     vACH
                                          3622  #       bit7  bit7  | CMPHS  CMPHU
                                          3623  #       ---------------------------
                                          3624  #         0     0   |  vACH   vACH      no change needed
                                          3625  #         0     1   | varH+1 varH-1     narrowing the range
                                          3626  #         1     0   | varH-1 varH+1     narrowing the range
                                          3627  #         1     1   |  vACH   vACH      no change needed
                                          3628  #       ---------------------------
                                          3629
                                          3630  # CMPHS implementation (vCPU instruction)
                                          3631  label('cmphs#13')
cmphs#13:     0be4 1200  ld   ac,x        3632  ld(AC,X)                        #13
              0be5 0500  ld   [x]         3633  ld([X])                         #14
              0be6 6119  xora [$19]       3634  xora([vAC+1])                   #15
              0be7 f4fa  bge  .cmphu#18   3635  bpl('.cmphu#18')                #16 Skip if same sign
              0be8 0119  ld   [$19]       3636  ld([vAC+1])                     #17
              0be9 e8ec  blt  $0bec       3637  bmi(pc()+3)                     #18
              0bea fced  bra  .cmphs#21   3638  bra(pc()+3)                     #19
                                          3639  label('.cmphs#20')
.cmphs#20:    0beb 0001  ld   $01         3640  ld(+1)                          #20    vAC < variable
              0bec 00ff  ld   $ff         3641  ld(-1)                          #20(!) vAC > variable
                                          3642  label('.cmphs#21')
.cmphs#21:    0bed 8500  adda [x]         3643  adda([X])                       #21
              0bee c219  st   [$19]       3644  st([vAC+1])                     #22
              0bef 1403  ld   $03,y       3645  ld(hi('REENTER'),Y)             #23
              0bf0 e0cb  jmp  y,$cb       3646  jmp(Y,'REENTER')                #24
              0bf1 00f2  ld   $f2         3647  ld(-28/2)                       #25
                                          3648
                                          3649  # CMPHU implementation (vCPU instruction)
                                          3650  label('cmphu#13')
cmphu#13:     0bf2 1200  ld   ac,x        3651  ld(AC,X)                        #13
              0bf3 0500  ld   [x]         3652  ld([X])                         #14
              0bf4 6119  xora [$19]       3653  xora([vAC+1])                   #15
              0bf5 f4fa  bge  .cmphu#18   3654  bpl('.cmphu#18')                #16 Skip if same sign
              0bf6 0119  ld   [$19]       3655  ld([vAC+1])                     #17
              0bf7 e8eb  blt  .cmphs#20   3656  bmi('.cmphs#20')                #18
              0bf8 fced  bra  .cmphs#21   3657  bra('.cmphs#21')                #19
              0bf9 00ff  ld   $ff         3658  ld(-1)                          #20    vAC > variable
                                          3659
                                          3660  # No-operation for CMPHS/CMPHU when high bits are equal
                                          3661  label('.cmphu#18')
.cmphu#18:    0bfa 1403  ld   $03,y       3662  ld(hi('NEXTY'),Y)               #18
              0bfb e000  jmp  y,$00       3663  jmp(Y,'NEXTY')                  #19
              0bfc 00f5  ld   $f5         3664  ld(-22/2)                       #20
                                          3665
                                          3666  #-----------------------------------------------------------------------
                                          3667  #
                                          3668  #  $0c00 ROM page 12: More SYS functions (sprites)
                                          3669  #
                                          3670  #       Page 1: vertical blank interval
                                          3671  #       Page 2: visible scanlines
                                          3672  #
                                          3673  #-----------------------------------------------------------------------
                                          3674
              0bfd 0200  nop              3675  align(0x100, size=0x100)
              0bfe 0200  nop
              0bff 0200  nop
                                          3676
                                          3677  #-----------------------------------------------------------------------
                                          3678  # Extension SYS_Sprite6_v3_64
                                          3679  # Extension SYS_Sprite6x_v3_64
                                          3680  # Extension SYS_Sprite6y_v3_64
                                          3681  # Extension SYS_Sprite6xy_v3_64
                                          3682  #-----------------------------------------------------------------------
                                          3683
                                          3684  # Blit sprite in screen memory
                                          3685  #
                                          3686  # Variables
                                          3687  #       vAC             Destination address in screen
                                          3688  #       sysArgs[0:1]    Source address of 6xY pixels (colors 0..63) terminated
                                          3689  #                       by negative byte value N (typically N = -Y)
                                          3690  #       sysArgs[2:7]    Scratch (user as copy buffer)
                                          3691  #
                                          3692  # This SYS function draws a sprite of 6 pixels wide and Y pixels high.
                                          3693  # The pixel data is read sequentually from RAM, in horizontal chunks
                                          3694  # of 6 pixels at a time, and then written to the screen through the
                                          3695  # destination pointer (each chunk underneath the previous), thus
                                          3696  # drawing a 6xY stripe. Pixel values should be non-negative. The first
                                          3697  # negative byte N after a chunk signals the end of the sprite data.
                                          3698  # So the sprite's height Y is determined by the source data and is
                                          3699  # therefore flexible. This negative byte value, typically N == -Y,
                                          3700  # is then used to adjust the destination pointer's high byte, to make
                                          3701  # it easier to draw sprites wider than 6 pixels: just repeat the SYS
                                          3702  # call for as many 6-pixel wide stripes you need. All arguments are
                                          3703  # already left in place to facilitate this. After one call, the source
                                          3704  # pointer will point past that source data, effectively:
                                          3705  #       src += Y * 6 + 1
                                          3706  # The destination pointer will have been adjusted as:
                                          3707  #       dst += (Y + N) * 256 + 6
                                          3708  # (With arithmetic wrapping around on the same memory page)
                                          3709  #
                                          3710  # Y is only limited by source memory, not by CPU cycles. The
                                          3711  # implementation is such that the SYS function self-repeats, each
                                          3712  # time drawing the next 6-pixel chunk. It can typically draw 12
                                          3713  # pixels per scanline this way.
                                          3714
                                          3715  label('SYS_Sprite6_v3_64')
                                          3716
SYS_Sprite6_v3_64:
              0c00 1124  ld   [$24],x     3717  ld([sysArgs+0],X)               #15 Pixel data source address
              0c01 1525  ld   [$25],y     3718  ld([sysArgs+1],Y)               #16
              0c02 0d00  ld   [y,x]       3719  ld([Y,X])                       #17 Next pixel or stop
              0c03 f411  bge  .sysDpx0    3720  bpl('.sysDpx0')                 #18
              0c04 de00  st   [y,x++]     3721  st([Y,Xpp])                     #19 Just X++
                                          3722
              0c05 8119  adda [$19]       3723  adda([vAC+1])                   #20 Adjust dst for convenience
              0c06 c219  st   [$19]       3724  st([vAC+1])                     #21
              0c07 0118  ld   [$18]       3725  ld([vAC])                       #22
              0c08 8006  adda $06         3726  adda(6)                         #23
              0c09 c218  st   [$18]       3727  st([vAC])                       #24
              0c0a 0124  ld   [$24]       3728  ld([sysArgs+0])                 #25 Adjust src for convenience
              0c0b 8001  adda $01         3729  adda(1)                         #26
              0c0c c224  st   [$24]       3730  st([sysArgs+0])                 #27
              0c0d 0200  nop              3731  nop()                           #28
              0c0e 1403  ld   $03,y       3732  ld(hi('REENTER'),Y)             #29 Normal exit (no self-repeat)
              0c0f e0cb  jmp  y,$cb       3733  jmp(Y,'REENTER')                #30
              0c10 00ef  ld   $ef         3734  ld(-34/2)                       #31
                                          3735
                                          3736  label('.sysDpx0')
.sysDpx0:     0c11 c226  st   [$26]       3737  st([sysArgs+2])                 #20 Gobble 6 pixels into buffer
              0c12 0d00  ld   [y,x]       3738  ld([Y,X])                       #21
              0c13 de00  st   [y,x++]     3739  st([Y,Xpp])                     #22 Just X++
              0c14 c227  st   [$27]       3740  st([sysArgs+3])                 #23
              0c15 0d00  ld   [y,x]       3741  ld([Y,X])                       #24
              0c16 de00  st   [y,x++]     3742  st([Y,Xpp])                     #25 Just X++
              0c17 c228  st   [$28]       3743  st([sysArgs+4])                 #26
              0c18 0d00  ld   [y,x]       3744  ld([Y,X])                       #27
              0c19 de00  st   [y,x++]     3745  st([Y,Xpp])                     #28 Just X++
              0c1a c229  st   [$29]       3746  st([sysArgs+5])                 #29
              0c1b 0d00  ld   [y,x]       3747  ld([Y,X])                       #30
              0c1c de00  st   [y,x++]     3748  st([Y,Xpp])                     #31 Just X++
              0c1d c22a  st   [$2a]       3749  st([sysArgs+6])                 #32
              0c1e 0d00  ld   [y,x]       3750  ld([Y,X])                       #33
              0c1f de00  st   [y,x++]     3751  st([Y,Xpp])                     #34 Just X++
              0c20 c22b  st   [$2b]       3752  st([sysArgs+7])                 #35
                                          3753
              0c21 1118  ld   [$18],x     3754  ld([vAC],X)                     #36 Screen memory destination address
              0c22 1519  ld   [$19],y     3755  ld([vAC+1],Y)                   #37
              0c23 0126  ld   [$26]       3756  ld([sysArgs+2])                 #38 Write 6 pixels
              0c24 de00  st   [y,x++]     3757  st([Y,Xpp])                     #39
              0c25 0127  ld   [$27]       3758  ld([sysArgs+3])                 #40
              0c26 de00  st   [y,x++]     3759  st([Y,Xpp])                     #41
              0c27 0128  ld   [$28]       3760  ld([sysArgs+4])                 #42
              0c28 de00  st   [y,x++]     3761  st([Y,Xpp])                     #43
              0c29 0129  ld   [$29]       3762  ld([sysArgs+5])                 #44
              0c2a de00  st   [y,x++]     3763  st([Y,Xpp])                     #45
              0c2b 012a  ld   [$2a]       3764  ld([sysArgs+6])                 #46
              0c2c de00  st   [y,x++]     3765  st([Y,Xpp])                     #47
              0c2d 012b  ld   [$2b]       3766  ld([sysArgs+7])                 #48
              0c2e de00  st   [y,x++]     3767  st([Y,Xpp])                     #49
                                          3768
              0c2f 0124  ld   [$24]       3769  ld([sysArgs+0])                 #50 src += 6
              0c30 8006  adda $06         3770  adda(6)                         #51
              0c31 c224  st   [$24]       3771  st([sysArgs+0])                 #52
              0c32 0119  ld   [$19]       3772  ld([vAC+1])                     #53 dst += 256
              0c33 8001  adda $01         3773  adda(1)                         #54
              0c34 c219  st   [$19]       3774  st([vAC+1])                     #55
                                          3775
              0c35 0116  ld   [$16]       3776  ld([vPC])                       #56 Self-repeating SYS call
              0c36 a002  suba $02         3777  suba(2)                         #57
              0c37 c216  st   [$16]       3778  st([vPC])                       #58
              0c38 1403  ld   $03,y       3779  ld(hi('REENTER'),Y)             #59
              0c39 e0cb  jmp  y,$cb       3780  jmp(Y,'REENTER')                #60
              0c3a 00e0  ld   $e0         3781  ld(-64/2)                       #61
                                          3782
              0c3b 0200  nop              3783  align(64)
              0c3c 0200  nop
              0c3d 0200  nop
              * 5 times
                                          3784  label('SYS_Sprite6x_v3_64')
                                          3785
SYS_Sprite6x_v3_64:
              0c40 1124  ld   [$24],x     3786  ld([sysArgs+0],X)               #15 Pixel data source address
              0c41 1525  ld   [$25],y     3787  ld([sysArgs+1],Y)               #16
              0c42 0d00  ld   [y,x]       3788  ld([Y,X])                       #17 Next pixel or stop
              0c43 f451  bge  .sysDpx1    3789  bpl('.sysDpx1')                 #18
              0c44 de00  st   [y,x++]     3790  st([Y,Xpp])                     #19 Just X++
                                          3791
              0c45 8119  adda [$19]       3792  adda([vAC+1])                   #20 Adjust dst for convenience
              0c46 c219  st   [$19]       3793  st([vAC+1])                     #21
              0c47 0118  ld   [$18]       3794  ld([vAC])                       #22
              0c48 a006  suba $06         3795  suba(6)                         #23
              0c49 c218  st   [$18]       3796  st([vAC])                       #24
              0c4a 0124  ld   [$24]       3797  ld([sysArgs+0])                 #25 Adjust src for convenience
              0c4b 8001  adda $01         3798  adda(1)                         #26
              0c4c c224  st   [$24]       3799  st([sysArgs+0])                 #27
              0c4d 0200  nop              3800  nop()                           #28
              0c4e 1403  ld   $03,y       3801  ld(hi('REENTER'),Y)             #29 Normal exit (no self-repeat)
              0c4f e0cb  jmp  y,$cb       3802  jmp(Y,'REENTER')                #30
              0c50 00ef  ld   $ef         3803  ld(-34/2)                       #31
                                          3804
                                          3805  label('.sysDpx1')
.sysDpx1:     0c51 c22b  st   [$2b]       3806  st([sysArgs+7])                 #20 Gobble 6 pixels into buffer (backwards)
              0c52 0d00  ld   [y,x]       3807  ld([Y,X])                       #21
              0c53 de00  st   [y,x++]     3808  st([Y,Xpp])                     #22 Just X++
              0c54 c22a  st   [$2a]       3809  st([sysArgs+6])                 #23
              0c55 0d00  ld   [y,x]       3810  ld([Y,X])                       #24
              0c56 de00  st   [y,x++]     3811  st([Y,Xpp])                     #25 Just X++
              0c57 c229  st   [$29]       3812  st([sysArgs+5])                 #26
              0c58 0d00  ld   [y,x]       3813  ld([Y,X])                       #27
              0c59 de00  st   [y,x++]     3814  st([Y,Xpp])                     #28 Just X++
              0c5a c228  st   [$28]       3815  st([sysArgs+4])                 #29
              0c5b 0d00  ld   [y,x]       3816  ld([Y,X])                       #30
              0c5c de00  st   [y,x++]     3817  st([Y,Xpp])                     #31 Just X++
              0c5d c227  st   [$27]       3818  st([sysArgs+3])                 #32
              0c5e 0d00  ld   [y,x]       3819  ld([Y,X])                       #33
              0c5f de00  st   [y,x++]     3820  st([Y,Xpp])                     #34 Just X++
                                          3821
              0c60 1118  ld   [$18],x     3822  ld([vAC],X)                     #35 Screen memory destination address
              0c61 1519  ld   [$19],y     3823  ld([vAC+1],Y)                   #36
              0c62 de00  st   [y,x++]     3824  st([Y,Xpp])                     #37 Write 6 pixels
              0c63 0127  ld   [$27]       3825  ld([sysArgs+3])                 #38
              0c64 de00  st   [y,x++]     3826  st([Y,Xpp])                     #39
              0c65 0128  ld   [$28]       3827  ld([sysArgs+4])                 #40
              0c66 de00  st   [y,x++]     3828  st([Y,Xpp])                     #41
              0c67 0129  ld   [$29]       3829  ld([sysArgs+5])                 #42
              0c68 de00  st   [y,x++]     3830  st([Y,Xpp])                     #43
              0c69 012a  ld   [$2a]       3831  ld([sysArgs+6])                 #44
              0c6a de00  st   [y,x++]     3832  st([Y,Xpp])                     #45
              0c6b 012b  ld   [$2b]       3833  ld([sysArgs+7])                 #46
              0c6c de00  st   [y,x++]     3834  st([Y,Xpp])                     #47
                                          3835
              0c6d 0124  ld   [$24]       3836  ld([sysArgs+0])                 #48 src += 6
              0c6e 8006  adda $06         3837  adda(6)                         #49
              0c6f c224  st   [$24]       3838  st([sysArgs+0])                 #50
              0c70 0119  ld   [$19]       3839  ld([vAC+1])                     #51 dst += 256
              0c71 8001  adda $01         3840  adda(1)                         #52
              0c72 c219  st   [$19]       3841  st([vAC+1])                     #53
                                          3842
              0c73 0116  ld   [$16]       3843  ld([vPC])                       #54 Self-repeating SYS call
              0c74 a002  suba $02         3844  suba(2)                         #55
              0c75 c216  st   [$16]       3845  st([vPC])                       #56
              0c76 1403  ld   $03,y       3846  ld(hi('REENTER'),Y)             #57
              0c77 e0cb  jmp  y,$cb       3847  jmp(Y,'REENTER')                #58
              0c78 00e1  ld   $e1         3848  ld(-62/2)                       #59
                                          3849
              0c79 0200  nop              3850  align(64)
              0c7a 0200  nop
              0c7b 0200  nop
              * 7 times
                                          3851  label('SYS_Sprite6y_v3_64')
                                          3852
SYS_Sprite6y_v3_64:
              0c80 1124  ld   [$24],x     3853  ld([sysArgs+0],X)               #15 Pixel data source address
              0c81 1525  ld   [$25],y     3854  ld([sysArgs+1],Y)               #16
              0c82 0d00  ld   [y,x]       3855  ld([Y,X])                       #17 Next pixel or stop
              0c83 f493  bge  .sysDpx2    3856  bpl('.sysDpx2')                 #18
              0c84 de00  st   [y,x++]     3857  st([Y,Xpp])                     #19 Just X++
                                          3858
              0c85 60ff  xora $ff         3859  xora(255)                       #20 Adjust dst for convenience
              0c86 8001  adda $01         3860  adda(1)                         #21
              0c87 8119  adda [$19]       3861  adda([vAC+1])                   #22
              0c88 c219  st   [$19]       3862  st([vAC+1])                     #23
              0c89 0118  ld   [$18]       3863  ld([vAC])                       #24
              0c8a 8006  adda $06         3864  adda(6)                         #25
              0c8b c218  st   [$18]       3865  st([vAC])                       #26
              0c8c 0124  ld   [$24]       3866  ld([sysArgs+0])                 #27 Adjust src for convenience
              0c8d 8001  adda $01         3867  adda(1)                         #28
              0c8e c224  st   [$24]       3868  st([sysArgs+0])                 #29
              0c8f 0200  nop              3869  nop()                           #30
              0c90 1403  ld   $03,y       3870  ld(hi('REENTER'),Y)             #31 Normal exit (no self-repeat)
              0c91 e0cb  jmp  y,$cb       3871  jmp(Y,'REENTER')                #32
              0c92 00ee  ld   $ee         3872  ld(-36/2)                       #33
                                          3873
                                          3874  label('.sysDpx2')
.sysDpx2:     0c93 c226  st   [$26]       3875  st([sysArgs+2])                 #20 Gobble 6 pixels into buffer
              0c94 0d00  ld   [y,x]       3876  ld([Y,X])                       #21
              0c95 de00  st   [y,x++]     3877  st([Y,Xpp])                     #22 Just X++
              0c96 c227  st   [$27]       3878  st([sysArgs+3])                 #23
              0c97 0d00  ld   [y,x]       3879  ld([Y,X])                       #24
              0c98 de00  st   [y,x++]     3880  st([Y,Xpp])                     #25 Just X++
              0c99 c228  st   [$28]       3881  st([sysArgs+4])                 #26
              0c9a 0d00  ld   [y,x]       3882  ld([Y,X])                       #27
              0c9b de00  st   [y,x++]     3883  st([Y,Xpp])                     #28 Just X++
              0c9c c229  st   [$29]       3884  st([sysArgs+5])                 #29
              0c9d 0d00  ld   [y,x]       3885  ld([Y,X])                       #30
              0c9e de00  st   [y,x++]     3886  st([Y,Xpp])                     #31 Just X++
              0c9f c22a  st   [$2a]       3887  st([sysArgs+6])                 #32
              0ca0 0d00  ld   [y,x]       3888  ld([Y,X])                       #33
              0ca1 de00  st   [y,x++]     3889  st([Y,Xpp])                     #34 Just X++
              0ca2 c22b  st   [$2b]       3890  st([sysArgs+7])                 #35
                                          3891
              0ca3 1118  ld   [$18],x     3892  ld([vAC],X)                     #36 Screen memory destination address
              0ca4 1519  ld   [$19],y     3893  ld([vAC+1],Y)                   #37
              0ca5 0126  ld   [$26]       3894  ld([sysArgs+2])                 #38 Write 6 pixels
              0ca6 de00  st   [y,x++]     3895  st([Y,Xpp])                     #39
              0ca7 0127  ld   [$27]       3896  ld([sysArgs+3])                 #40
              0ca8 de00  st   [y,x++]     3897  st([Y,Xpp])                     #41
              0ca9 0128  ld   [$28]       3898  ld([sysArgs+4])                 #42
              0caa de00  st   [y,x++]     3899  st([Y,Xpp])                     #43
              0cab 0129  ld   [$29]       3900  ld([sysArgs+5])                 #44
              0cac de00  st   [y,x++]     3901  st([Y,Xpp])                     #45
              0cad 012a  ld   [$2a]       3902  ld([sysArgs+6])                 #46
              0cae de00  st   [y,x++]     3903  st([Y,Xpp])                     #47
              0caf 012b  ld   [$2b]       3904  ld([sysArgs+7])                 #48
              0cb0 de00  st   [y,x++]     3905  st([Y,Xpp])                     #49
                                          3906
              0cb1 0124  ld   [$24]       3907  ld([sysArgs+0])                 #50 src += 6
              0cb2 8006  adda $06         3908  adda(6)                         #51
              0cb3 c224  st   [$24]       3909  st([sysArgs+0])                 #52
              0cb4 0119  ld   [$19]       3910  ld([vAC+1])                     #53 dst -= 256
              0cb5 a001  suba $01         3911  suba(1)                         #54
              0cb6 c219  st   [$19]       3912  st([vAC+1])                     #55
                                          3913
              0cb7 0116  ld   [$16]       3914  ld([vPC])                       #56 Self-repeating SYS call
              0cb8 a002  suba $02         3915  suba(2)                         #57
              0cb9 c216  st   [$16]       3916  st([vPC])                       #58
              0cba 1403  ld   $03,y       3917  ld(hi('REENTER'),Y)             #59
              0cbb e0cb  jmp  y,$cb       3918  jmp(Y,'REENTER')                #60
              0cbc 00e0  ld   $e0         3919  ld(-64/2)                       #61
                                          3920
              0cbd 0200  nop              3921  align(64)
              0cbe 0200  nop
              0cbf 0200  nop
                                          3922  label('SYS_Sprite6xy_v3_64')
                                          3923
SYS_Sprite6xy_v3_64:
              0cc0 1124  ld   [$24],x     3924  ld([sysArgs+0],X)               #15 Pixel data source address
              0cc1 1525  ld   [$25],y     3925  ld([sysArgs+1],Y)               #16
              0cc2 0d00  ld   [y,x]       3926  ld([Y,X])                       #17 Next pixel or stop
              0cc3 f4d3  bge  .sysDpx3    3927  bpl('.sysDpx3')                 #18
              0cc4 de00  st   [y,x++]     3928  st([Y,Xpp])                     #19 Just X++
                                          3929
              0cc5 60ff  xora $ff         3930  xora(255)                       #20 Adjust dst for convenience
              0cc6 8001  adda $01         3931  adda(1)                         #21
              0cc7 8119  adda [$19]       3932  adda([vAC+1])                   #22
              0cc8 c219  st   [$19]       3933  st([vAC+1])                     #23
              0cc9 0118  ld   [$18]       3934  ld([vAC])                       #24
              0cca a006  suba $06         3935  suba(6)                         #25
              0ccb c218  st   [$18]       3936  st([vAC])                       #26
              0ccc 0124  ld   [$24]       3937  ld([sysArgs+0])                 #27 Adjust src for convenience
              0ccd 8001  adda $01         3938  adda(1)                         #28
              0cce c224  st   [$24]       3939  st([sysArgs+0])                 #29
              0ccf 0200  nop              3940  nop()                           #30
              0cd0 1403  ld   $03,y       3941  ld(hi('REENTER'),Y)             #31 Normal exit (no self-repeat)
              0cd1 e0cb  jmp  y,$cb       3942  jmp(Y,'REENTER')                #32
              0cd2 00ee  ld   $ee         3943  ld(-36/2)                       #33
                                          3944
                                          3945  label('.sysDpx3')
.sysDpx3:     0cd3 c22b  st   [$2b]       3946  st([sysArgs+7])                 #20 Gobble 6 pixels into buffer (backwards)
              0cd4 0d00  ld   [y,x]       3947  ld([Y,X])                       #21
              0cd5 de00  st   [y,x++]     3948  st([Y,Xpp])                     #22 Just X++
              0cd6 c22a  st   [$2a]       3949  st([sysArgs+6])                 #23
              0cd7 0d00  ld   [y,x]       3950  ld([Y,X])                       #24
              0cd8 de00  st   [y,x++]     3951  st([Y,Xpp])                     #25 Just X++
              0cd9 c229  st   [$29]       3952  st([sysArgs+5])                 #26
              0cda 0d00  ld   [y,x]       3953  ld([Y,X])                       #27
              0cdb de00  st   [y,x++]     3954  st([Y,Xpp])                     #28 Just X++
              0cdc c228  st   [$28]       3955  st([sysArgs+4])                 #29
              0cdd 0d00  ld   [y,x]       3956  ld([Y,X])                       #30
              0cde de00  st   [y,x++]     3957  st([Y,Xpp])                     #31 Just X++
              0cdf c227  st   [$27]       3958  st([sysArgs+3])                 #32
              0ce0 0d00  ld   [y,x]       3959  ld([Y,X])                       #33
              0ce1 de00  st   [y,x++]     3960  st([Y,Xpp])                     #34 Just X++
                                          3961
              0ce2 1118  ld   [$18],x     3962  ld([vAC],X)                     #35 Screen memory destination address
              0ce3 1519  ld   [$19],y     3963  ld([vAC+1],Y)                   #36
              0ce4 de00  st   [y,x++]     3964  st([Y,Xpp])                     #37 Write 6 pixels
              0ce5 0127  ld   [$27]       3965  ld([sysArgs+3])                 #38
              0ce6 de00  st   [y,x++]     3966  st([Y,Xpp])                     #39
              0ce7 0128  ld   [$28]       3967  ld([sysArgs+4])                 #40
              0ce8 de00  st   [y,x++]     3968  st([Y,Xpp])                     #41
              0ce9 0129  ld   [$29]       3969  ld([sysArgs+5])                 #42
              0cea de00  st   [y,x++]     3970  st([Y,Xpp])                     #43
              0ceb 012a  ld   [$2a]       3971  ld([sysArgs+6])                 #44
              0cec de00  st   [y,x++]     3972  st([Y,Xpp])                     #45
              0ced 012b  ld   [$2b]       3973  ld([sysArgs+7])                 #46
              0cee de00  st   [y,x++]     3974  st([Y,Xpp])                     #47
                                          3975
              0cef 0124  ld   [$24]       3976  ld([sysArgs+0])                 #48 src += 6
              0cf0 8006  adda $06         3977  adda(6)                         #49
              0cf1 c224  st   [$24]       3978  st([sysArgs+0])                 #50
              0cf2 0119  ld   [$19]       3979  ld([vAC+1])                     #51 dst -= 256
              0cf3 a001  suba $01         3980  suba(1)                         #52
              0cf4 c219  st   [$19]       3981  st([vAC+1])                     #53
                                          3982
              0cf5 0116  ld   [$16]       3983  ld([vPC])                       #54 Self-repeating SYS call
              0cf6 a002  suba $02         3984  suba(2)                         #55
              0cf7 c216  st   [$16]       3985  st([vPC])                       #56
              0cf8 1403  ld   $03,y       3986  ld(hi('REENTER'),Y)             #57
              0cf9 e0cb  jmp  y,$cb       3987  jmp(Y,'REENTER')                #58
              0cfa 00e1  ld   $e1         3988  ld(-62/2)                       #59
                                          3989
                                          3990  #-----------------------------------------------------------------------
                                          3991
              0cfb 0200  nop              3992  align(0x100)
              0cfc 0200  nop
              0cfd 0200  nop
              * 5 times
                                          3993
                                          3994  label('sys_ExpanderControl')
                                          3995
sys_ExpanderControl:
              0d00 1401  ld   $01,y       3996  ld(hi(ctrlBits),Y)                  #18
              0d01 2118  anda [$18]       3997  anda([vAC])                         #19 check for special ctrl code space
              0d02 f009  beq  sysEx#22    3998  beq('sysEx#22')                     #20
              0d03 0118  ld   [$18]       3999  ld([vAC])                           #21 load low byte of ctrl code in delay slot
              0d04 20fc  anda $fc         4000  anda(0xfc)                          #22 sanitize normal ctrl code
              0d05 caf8  st   [y,$f8]     4001  st([Y,ctrlBits])                    #23 store in ctrlBits
              0d06 c21d  st   [$1d]       4002  st([vTmp])                          #24 store in vTmp
              0d07 fc0e  bra  sysEx#27    4003  bra('sysEx#27')                     #25 jump to issuing normal ctrl code
              0d08 1519  ld   [$19],y     4004  ld([vAC+1],Y)                       #26 load high byte of ctrl code in delay slot
                                          4005  label('sysEx#22')
sysEx#22:     0d09 30fc  anda $fc,x       4006  anda(0xfc,X)                        #22 * special ctrl code
              0d0a 09f8  ld   [y,$f8]     4007  ld([Y,ctrlBits])                    #23 get previous normal code from ctrlBits
              0d0b c21d  st   [$1d]       4008  st([vTmp])                          #24 save it in vTmp
              0d0c 1519  ld   [$19],y     4009  ld([vAC+1],Y)                       #25 load high byte of ctrl code
              0d0d cd00  ctrl y,x         4010  ctrl(Y,X)                           #26 issue special ctrl code
                                          4011  label('sysEx#27')
sysEx#27:     0d0e 011d  ld   [$1d]       4012  ld([vTmp])                          #27 load saved normal ctrl code
              0d0f 30fc  anda $fc,x       4013  anda(0xfc,X)                        #28 sanitize ctrlBits
              0d10 cd00  ctrl y,x         4014  ctrl(Y,X)                           #29 issue normal ctrl code
              0d11 011d  ld   [$1d]       4015  ld([vTmp])                          #30 always load something after ctrl
              0d12 1403  ld   $03,y       4016  ld(hi('REENTER'),Y)                 #31
              0d13 e0cb  jmp  y,$cb       4017  jmp(Y,'REENTER')                    #32
              0d14 00ee  ld   $ee         4018  ld(-36/2)                           #33
                                          4019
                                          4020  #-----------------------------------------------------------------------
                                          4021
                                          4022  label('sys_SpiExchangeBytes')
                                          4023
sys_SpiExchangeBytes:
              0d15 09f8  ld   [y,$f8]     4024  ld([Y,ctrlBits])                #18
              0d16 c228  st   [$28]       4025  st([sysArgs+4])                 #19
                                          4026
              0d17 1124  ld   [$24],x     4027  ld([sysArgs+0],X)               #20 Fetch byte to send
              0d18 1525  ld   [$25],y     4028  ld([sysArgs+1],Y)               #21
              0d19 0d00  ld   [y,x]       4029  ld([Y,X])                       #22
                                          4030
                                          4031  for i in range(8):
                                          4032    st([vTmp],Y);C('Bit %d'%(7-i))#23+i*12
              0d1a d61d  st   [$1d],y     ;Bit 7
              0d1b 1128  ld   [$28],x     4033    ld([sysArgs+4],X)             #24+i*12
              0d1c dd00  ctrl y,x++       4034    ctrl(Y,Xpp)                   #25+i*12 Set MOSI
              0d1d dd00  ctrl y,x++       4035    ctrl(Y,Xpp)                   #26+i*12 Raise SCLK, disable RAM!
              0d1e 0100  ld   [$00]       4036    ld([0])                       #27+i*12 Get MISO
              0d1f 200f  anda $0f         4037    anda(0b00001111)              #28+i*12 This is why R1 as pull-DOWN is simpler
              0d20 f023  beq  $0d23       4038    beq(pc()+3)                   #29+i*12
              0d21 fc23  bra  $0d23       4039    bra(pc()+2)                   #30+i*12
              0d22 0001  ld   $01         4040    ld(1)                         #31+i*12
              0d23 cd00  ctrl y,x         4041    ctrl(Y,X)                     #32+i*12,29+i*12 (Must be idempotent) Lower SCLK
              0d24 811d  adda [$1d]       4042    adda([vTmp])                  #33+i*12 Shift
              0d25 811d  adda [$1d]       4043    adda([vTmp])                  #34+i*12
              0d26 d61d  st   [$1d],y     ;Bit 6
              0d27 1128  ld   [$28],x
              0d28 dd00  ctrl y,x++
              0d29 dd00  ctrl y,x++
              0d2a 0100  ld   [$00]
              0d2b 200f  anda $0f
              0d2c f02f  beq  $0d2f
              0d2d fc2f  bra  $0d2f
              0d2e 0001  ld   $01
              0d2f cd00  ctrl y,x
              0d30 811d  adda [$1d]
              0d31 811d  adda [$1d]
              0d32 d61d  st   [$1d],y     ;Bit 5
              0d33 1128  ld   [$28],x
              0d34 dd00  ctrl y,x++
              0d35 dd00  ctrl y,x++
              0d36 0100  ld   [$00]
              0d37 200f  anda $0f
              0d38 f03b  beq  $0d3b
              0d39 fc3b  bra  $0d3b
              0d3a 0001  ld   $01
              0d3b cd00  ctrl y,x
              0d3c 811d  adda [$1d]
              0d3d 811d  adda [$1d]
              0d3e d61d  st   [$1d],y     ;Bit 4
              0d3f 1128  ld   [$28],x
              0d40 dd00  ctrl y,x++
              0d41 dd00  ctrl y,x++
              0d42 0100  ld   [$00]
              0d43 200f  anda $0f
              0d44 f047  beq  $0d47
              0d45 fc47  bra  $0d47
              0d46 0001  ld   $01
              0d47 cd00  ctrl y,x
              0d48 811d  adda [$1d]
              0d49 811d  adda [$1d]
              0d4a d61d  st   [$1d],y     ;Bit 3
              0d4b 1128  ld   [$28],x
              0d4c dd00  ctrl y,x++
              0d4d dd00  ctrl y,x++
              0d4e 0100  ld   [$00]
              0d4f 200f  anda $0f
              0d50 f053  beq  $0d53
              0d51 fc53  bra  $0d53
              0d52 0001  ld   $01
              0d53 cd00  ctrl y,x
              0d54 811d  adda [$1d]
              0d55 811d  adda [$1d]
              0d56 d61d  st   [$1d],y     ;Bit 2
              0d57 1128  ld   [$28],x
              0d58 dd00  ctrl y,x++
              0d59 dd00  ctrl y,x++
              0d5a 0100  ld   [$00]
              0d5b 200f  anda $0f
              0d5c f05f  beq  $0d5f
              0d5d fc5f  bra  $0d5f
              0d5e 0001  ld   $01
              0d5f cd00  ctrl y,x
              0d60 811d  adda [$1d]
              0d61 811d  adda [$1d]
              0d62 d61d  st   [$1d],y     ;Bit 1
              0d63 1128  ld   [$28],x
              0d64 dd00  ctrl y,x++
              0d65 dd00  ctrl y,x++
              0d66 0100  ld   [$00]
              0d67 200f  anda $0f
              0d68 f06b  beq  $0d6b
              0d69 fc6b  bra  $0d6b
              0d6a 0001  ld   $01
              0d6b cd00  ctrl y,x
              0d6c 811d  adda [$1d]
              0d6d 811d  adda [$1d]
              0d6e d61d  st   [$1d],y     ;Bit 0
              0d6f 1128  ld   [$28],x
              0d70 dd00  ctrl y,x++
              0d71 dd00  ctrl y,x++
              0d72 0100  ld   [$00]
              0d73 200f  anda $0f
              0d74 f077  beq  $0d77
              0d75 fc77  bra  $0d77
              0d76 0001  ld   $01
              0d77 cd00  ctrl y,x
              0d78 811d  adda [$1d]
              0d79 811d  adda [$1d]
                                          4044
              0d7a 1124  ld   [$24],x     4045  ld([sysArgs+0],X)               #119 Store received byte
              0d7b 1527  ld   [$27],y     4046  ld([sysArgs+3],Y)               #120
              0d7c ce00  st   [y,x]       4047  st([Y,X])                       #121
                                          4048
              0d7d 0124  ld   [$24]       4049  ld([sysArgs+0])                 #122 Advance pointer
              0d7e 8001  adda $01         4050  adda(1)                         #123
              0d7f c224  st   [$24]       4051  st([sysArgs+0])                 #124
                                          4052
              0d80 6126  xora [$26]       4053  xora([sysArgs+2])               #125 Reached end?
              0d81 f088  beq  .sysSpi#128 4054  beq('.sysSpi#128')              #126
                                          4055
              0d82 0116  ld   [$16]       4056  ld([vPC])                       #127 Self-repeating SYS call
              0d83 a002  suba $02         4057  suba(2)                         #128
              0d84 c216  st   [$16]       4058  st([vPC])                       #129
              0d85 1403  ld   $03,y       4059  ld(hi('NEXTY'),Y)               #130
              0d86 e000  jmp  y,$00       4060  jmp(Y,'NEXTY')                  #131
              0d87 00bd  ld   $bd         4061  ld(-134/2)                      #132
                                          4062
                                          4063  label('.sysSpi#128')
.sysSpi#128:  0d88 1403  ld   $03,y       4064  ld(hi('NEXTY'),Y)               #128 Continue program
              0d89 e000  jmp  y,$00       4065  jmp(Y,'NEXTY')                  #129
              0d8a 00be  ld   $be         4066  ld(-132/2)                      #130
                                          4067
                                          4068  #-----------------------------------------------------------------------
                                          4069
                                          4070  label('sys_v6502')
                                          4071
sys_v6502:    0d8b d602  st   [$02],y     4072  st([vCpuSelect],Y)              #18 Activate v6502
              0d8c 00f5  ld   $f5         4073  ld(-22/2)                       #19
              0d8d e0ff  jmp  y,$ff       4074  jmp(Y,'v6502_ENTER')            #20 Transfer control in the same time slice
              0d8e 8115  adda [$15]       4075  adda([vTicks])                  #21
                                          4076  assert (38 - 22)//2 >= v6502_adjust
                                          4077
                                          4078  #-----------------------------------------------------------------------
                                          4079  #       MOS 6502 emulator
                                          4080  #-----------------------------------------------------------------------
                                          4081
                                          4082  # Some quirks:
                                          4083  # - Stack in zero page instead of page 1
                                          4084  # - No interrupts
                                          4085  # - No decimal mode (may never be added). D flag is emulated but ignored.
                                          4086  # - BRK switches back to running 16-bits vCPU
                                          4087  # - Illegal opcodes map to BRK, but can read ghost operands before trapping
                                          4088  # - Illegal opcode $ff won't be trapped and cause havoc instead
                                          4089
                                          4090  # Big things TODO:
                                          4091  # XXX Tuning, put most frequent instructions in the primary page
                                          4092
                                          4093  label('v6502_ror')
                                          4094  assert v6502_Cflag == 1
v6502_ror:    0d8f 1525  ld   [$25],y     4095  ld([v6502_ADH],Y)               #12
              0d90 00fc  ld   $fc         4096  ld(-46//2+v6502_maxTicks)       #13 Is there enough time for the excess ticks?
              0d91 8115  adda [$15]       4097  adda([vTicks])                  #14
              0d92 e8a6  blt  .recheck17  4098  blt('.recheck17')               #15
              0d93 0127  ld   [$27]       4099  ld([v6502_P])                   #16 Transfer C to "bit 8"
              0d94 2001  anda $01         4100  anda(1)                         #17
              0d95 807f  adda $7f         4101  adda(127)                       #18
              0d96 2080  anda $80         4102  anda(128)                       #19
              0d97 c219  st   [$19]       4103  st([v6502_BI])                  #20 The real 6502 wouldn't use BI for this
              0d98 0127  ld   [$27]       4104  ld([v6502_P])                   #21 Transfer bit 0 to C
              0d99 20fe  anda $fe         4105  anda(~1)                        #22
              0d9a c227  st   [$27]       4106  st([v6502_P])                   #23
              0d9b 0d00  ld   [y,x]       4107  ld([Y,X])                       #24
              0d9c 2001  anda $01         4108  anda(1)                         #25
              0d9d 4127  ora  [$27]       4109  ora([v6502_P])                  #26
              0d9e c227  st   [$27]       4110  st([v6502_P])                   #27
              0d9f 00c0  ld   $c0         4111  ld('v6502_ror#38')              #28 Shift table lookup
              0da0 c21d  st   [$1d]       4112  st([vTmp])                      #29
              0da1 0d00  ld   [y,x]       4113  ld([Y,X])                       #30
              0da2 20fe  anda $fe         4114  anda(~1)                        #31
              0da3 1405  ld   $05,y       4115  ld(hi('shiftTable'),Y)          #32
              0da4 e200  jmp  y,ac        4116  jmp(Y,AC)                       #33
              0da5 fcff  bra  $ff         4117  bra(255)                        #34 bra shiftTable+255
                                          4118  label('.recheck17')
.recheck17:   0da6 140e  ld   $0e,y       4119  ld(hi('v6502_check'),Y)         #17 Go back to time check before dispatch
              0da7 e0f2  jmp  y,$f2       4120  jmp(Y,'v6502_check')            #18
              0da8 00f6  ld   $f6         4121  ld(-20/2)                       #19
                                          4122
                                          4123  label('v6502_lsr')
                                          4124  assert v6502_Cflag == 1
v6502_lsr:    0da9 1525  ld   [$25],y     4125  ld([v6502_ADH],Y)               #12
              0daa 0127  ld   [$27]       4126  ld([v6502_P])                   #13 Transfer bit 0 to C
              0dab 20fe  anda $fe         4127  anda(~1)                        #14
              0dac c227  st   [$27]       4128  st([v6502_P])                   #15
              0dad 0d00  ld   [y,x]       4129  ld([Y,X])                       #16
              0dae 2001  anda $01         4130  anda(1)                         #17
              0daf 4127  ora  [$27]       4131  ora([v6502_P])                  #18
              0db0 c227  st   [$27]       4132  st([v6502_P])                   #19
              0db1 00b9  ld   $b9         4133  ld('v6502_lsr#30')              #20 Shift table lookup
              0db2 c21d  st   [$1d]       4134  st([vTmp])                      #21
              0db3 0d00  ld   [y,x]       4135  ld([Y,X])                       #22
              0db4 20fe  anda $fe         4136  anda(~1)                        #23
              0db5 1405  ld   $05,y       4137  ld(hi('shiftTable'),Y)          #24
              0db6 e200  jmp  y,ac        4138  jmp(Y,AC)                       #25
              0db7 fcff  bra  $ff         4139  bra(255)                        #26 bra shiftTable+255
                                          4140
                                          4141  label('v6502_rol')
                                          4142  assert v6502_Cflag == 1
v6502_rol:    0db8 1525  ld   [$25],y     4143  ld([v6502_ADH],Y)               #12
              0db9 0d00  ld   [y,x]       4144  ld([Y,X])                       #13
              0dba 2080  anda $80         4145  anda(0x80)                      #14
              0dbb c21d  st   [$1d]       4146  st([v6502_Tmp])                 #15
              0dbc 0127  ld   [$27]       4147  ld([v6502_P])                   #16
              0dbd 2001  anda $01         4148  anda(1)                         #17
                                          4149  label('.rol#18')
.rol#18:      0dbe 8d00  adda [y,x]       4150  adda([Y,X])                     #18
              0dbf 8d00  adda [y,x]       4151  adda([Y,X])                     #19
              0dc0 ce00  st   [y,x]       4152  st([Y,X])                       #20
              0dc1 c228  st   [$28]       4153  st([v6502_Qz])                  #21 Z flag
              0dc2 c229  st   [$29]       4154  st([v6502_Qn])                  #22 N flag
              0dc3 0127  ld   [$27]       4155  ld([v6502_P])                   #23 C Flag
              0dc4 20fe  anda $fe         4156  anda(~1)                        #24
              0dc5 111d  ld   [$1d],x     4157  ld([v6502_Tmp],X)               #25
              0dc6 4500  ora  [x]         4158  ora([X])                        #26
              0dc7 c227  st   [$27]       4159  st([v6502_P])                   #27
              0dc8 140e  ld   $0e,y       4160  ld(hi('v6502_next'),Y)          #28
              0dc9 00f0  ld   $f0         4161  ld(-32/2)                       #29
              0dca e020  jmp  y,$20       4162  jmp(Y,'v6502_next')             #30
                                          4163  #nop()                          #31 Overlap
                                          4164  #
                                          4165  label('v6502_asl')
v6502_asl:    0dcb 1525  ld   [$25],y     4166  ld([v6502_ADH],Y)               #12,32
              0dcc 0d00  ld   [y,x]       4167  ld([Y,X])                       #13
              0dcd 2080  anda $80         4168  anda(0x80)                      #14
              0dce c21d  st   [$1d]       4169  st([v6502_Tmp])                 #15
              0dcf fcbe  bra  .rol#18     4170  bra('.rol#18')                  #16
              0dd0 0000  ld   $00         4171  ld(0)                           #17
                                          4172
                                          4173  label('v6502_jmp1')
v6502_jmp1:   0dd1 0200  nop              4174  nop()                           #12
              0dd2 0124  ld   [$24]       4175  ld([v6502_ADL])                 #13
              0dd3 c21a  st   [$1a]       4176  st([v6502_PCL])                 #14
              0dd4 0125  ld   [$25]       4177  ld([v6502_ADH])                 #15
              0dd5 c21b  st   [$1b]       4178  st([v6502_PCH])                 #16
              0dd6 140e  ld   $0e,y       4179  ld(hi('v6502_next'),Y)          #17
              0dd7 e020  jmp  y,$20       4180  jmp(Y,'v6502_next')             #18
              0dd8 00f6  ld   $f6         4181  ld(-20/2)                       #19
                                          4182
                                          4183  label('v6502_jmp2')
v6502_jmp2:   0dd9 0200  nop              4184  nop()                           #12
              0dda 1525  ld   [$25],y     4185  ld([v6502_ADH],Y)               #13
              0ddb 0d00  ld   [y,x]       4186  ld([Y,X])                       #14
              0ddc de00  st   [y,x++]     4187  st([Y,Xpp])                     #15 (Just X++) Wrap around: bug compatible with NMOS
              0ddd c21a  st   [$1a]       4188  st([v6502_PCL])                 #16
              0dde 0d00  ld   [y,x]       4189  ld([Y,X])                       #17
              0ddf c21b  st   [$1b]       4190  st([v6502_PCH])                 #18
              0de0 140e  ld   $0e,y       4191  ld(hi('v6502_next'),Y)          #19
              0de1 e020  jmp  y,$20       4192  jmp(Y,'v6502_next')             #20
              0de2 00f5  ld   $f5         4193  ld(-22/2)                       #21
                                          4194
                                          4195  label('v6502_pla')
v6502_pla:    0de3 011c  ld   [$1c]       4196  ld([v6502_S])                   #12
              0de4 1200  ld   ac,x        4197  ld(AC,X)                        #13
              0de5 8001  adda $01         4198  adda(1)                         #14
              0de6 c21c  st   [$1c]       4199  st([v6502_S])                   #15
              0de7 0500  ld   [x]         4200  ld([X])                         #16
              0de8 c218  st   [$18]       4201  st([v6502_A])                   #17
              0de9 c228  st   [$28]       4202  st([v6502_Qz])                  #18 Z flag
              0dea c229  st   [$29]       4203  st([v6502_Qn])                  #19 N flag
              0deb 140e  ld   $0e,y       4204  ld(hi('v6502_next'),Y)          #20
              0dec 00f4  ld   $f4         4205  ld(-24/2)                       #21
              0ded e020  jmp  y,$20       4206  jmp(Y,'v6502_next')             #22
                                          4207  #nop()                          #23 Overlap
                                          4208  #
                                          4209  label('v6502_pha')
v6502_pha:    0dee 140e  ld   $0e,y       4210  ld(hi('v6502_next'),Y)          #12,24
              0def 011c  ld   [$1c]       4211  ld([v6502_S])                   #13
              0df0 a001  suba $01         4212  suba(1)                         #14
              0df1 d21c  st   [$1c],x     4213  st([v6502_S],X)                 #15
              0df2 0118  ld   [$18]       4214  ld([v6502_A])                   #16
              0df3 c600  st   [x]         4215  st([X])                         #17
              0df4 e020  jmp  y,$20       4216  jmp(Y,'v6502_next')             #18
              0df5 00f6  ld   $f6         4217  ld(-20/2)                       #19
                                          4218
                                          4219  label('v6502_brk')
v6502_brk:    0df6 0002  ld   $02         4220  ld(hi('ENTER'))                 #12 Switch to vCPU
              0df7 c202  st   [$02]       4221  st([vCpuSelect])                #13
                                          4222  assert v6502_A == vAC
              0df8 0000  ld   $00         4223  ld(0)                           #14
              0df9 c219  st   [$19]       4224  st([vAC+1])                     #15
              0dfa 1403  ld   $03,y       4225  ld(hi('REENTER'),Y)             #16 Switch in the current time slice
              0dfb 00fa  ld   $fa         4226  ld(-22//2+v6502_adjust)         #17
              0dfc e0cb  jmp  y,$cb       4227  jmp(Y,'REENTER')                #18
              0dfd 0200  nop              4228  nop()                           #19
                                          4229
                                          4230  # All interpreter entry points must share the same page offset, because
                                          4231  # this offset is hard-coded as immediate operand in the video driver.
                                          4232  # The Gigatron's original vCPU's 'ENTER' label is already at $2ff, so we
                                          4233  # just use $dff for 'v6502_ENTER'. v6502 actually has two entry points.
                                          4234  # The other is 'v6502_RESUME' at $10ff. It is used for instructions
                                          4235  # that were fetched but not yet executed. Allowing the split gives finer
                                          4236  # granulariy, and hopefully more throughput for the simpler instructions.
                                          4237  # (There is no "overhead" for allowing instruction splitting, because
                                          4238  #  both emulation phases must administer [vTicks] anyway.)
                                          4239  while pc()&255 < 255:
              0dfe 0200  nop              4240    nop()
                                          4241  label('v6502_ENTER')
v6502_ENTER:  0dff fc22  bra  v6502_next2 4242  bra('v6502_next2')              #0 v6502 primary entry point
                                          4243  # --- Page boundary ---
              0e00 a005  suba $05         4244  suba(v6502_adjust)              #1,19 Adjust for vCPU/v6520 timing differences
                                          4245
                                          4246  #19 Addressing modes
                                          4247  (   'v6502_mode0'  ); bra('v6502_modeIZX'); bra('v6502_modeIMM'); bra('v6502_modeILL') # $00 xxx000xx
              0e01 fce0  bra  v6502_modeIZX
              0e02 fc42  bra  v6502_modeIMM
              0e03 fc58  bra  v6502_modeIMP
                                          4248  bra('v6502_modeZP');  bra('v6502_modeZP');  bra('v6502_modeZP');  bra('v6502_modeILL') # $04 xxx001xx
              0e04 fc5d  bra  v6502_modeZP
              0e05 fc5d  bra  v6502_modeZP
              0e06 fc5d  bra  v6502_modeZP
              0e07 fc58  bra  v6502_modeIMP
                                          4249  bra('v6502_modeIMP'); bra('v6502_modeIMM'); bra('v6502_modeACC'); bra('v6502_modeILL') # $08 xxx010xx
              0e08 fc58  bra  v6502_modeIMP
              0e09 fc42  bra  v6502_modeIMM
              0e0a fc52  bra  v6502_modeACC
              0e0b fc58  bra  v6502_modeIMP
                                          4250  bra('v6502_modeABS'); bra('v6502_modeABS'); bra('v6502_modeABS'); bra('v6502_modeILL') # $0c xxx011xx
              0e0c fc78  bra  v6502_modeABS
              0e0d fc78  bra  v6502_modeABS
              0e0e fc78  bra  v6502_modeABS
              0e0f fc58  bra  v6502_modeIMP
                                          4251  bra('v6502_modeREL'); bra('v6502_modeIZY'); bra('v6502_modeIMM'); bra('v6502_modeILL') # $10 xxx100xx
              0e10 fccf  bra  v6502_modeREL
              0e11 fcab  bra  v6502_modeIZY
              0e12 fc42  bra  v6502_modeIMM
              0e13 fc58  bra  v6502_modeIMP
                                          4252  bra('v6502_modeZPX'); bra('v6502_modeZPX'); bra('v6502_modeZPX'); bra('v6502_modeILL') # $14 xxx101xx
              0e14 fc5b  bra  v6502_modeZPX
              0e15 fc5b  bra  v6502_modeZPX
              0e16 fc5b  bra  v6502_modeZPX
              0e17 fc58  bra  v6502_modeIMP
                                          4253  bra('v6502_modeIMP'); bra('v6502_modeABY'); bra('v6502_modeIMP'); bra('v6502_modeILL') # $18 xxx110xx
              0e18 fc58  bra  v6502_modeIMP
              0e19 fc7b  bra  v6502_modeABY
              0e1a fc58  bra  v6502_modeIMP
              0e1b fc58  bra  v6502_modeIMP
                                          4254  bra('v6502_modeABX'); bra('v6502_modeABX'); bra('v6502_modeABX'); bra('v6502_modeILL') # $1c xxx111xx
              0e1c fc7a  bra  v6502_modeABX
              0e1d fc7a  bra  v6502_modeABX
              0e1e fc7a  bra  v6502_modeABX
              0e1f fc58  bra  v6502_modeIMP
                                          4255
                                          4256  # Special encoding cases for emulator:
                                          4257  #     $00 BRK -         but gets mapped to #$DD      handled in v6502_mode0
                                          4258  #     $20 JSR $DDDD     but gets mapped to #$DD      handled in v6502_mode0 and v6502_JSR
                                          4259  #     $40 RTI -         but gets mapped to #$DD      handled in v6502_mode0
                                          4260  #     $60 RTS -         but gets mapped to #$DD      handled in v6502_mode0
                                          4261  #     $6C JMP ($DDDD)   but gets mapped to $DDDD     handled in v6502_JMP2
                                          4262  #     $96 STX $DD,Y     but gets mapped to $DD,X     handled in v6502_STX2
                                          4263  #     $B6 LDX $DD,Y     but gets mapped to $DD,X     handled in v6502_LDX2
                                          4264  #     $BE LDX $DDDD,Y   but gets mapped to $DDDD,X   handled in v6502_modeABX
                                          4265
                                          4266  label('v6502_next')
v6502_next:   0e20 8115  adda [$15]       4267  adda([vTicks])                  #0
                                          4268  blt('v6502_exitBefore')         #1 No more ticks
              0e21 e83a  blt  v6502_exitBefore
                                          4269  label('v6502_next2')
v6502_next2:  0e22 c215  st   [$15]       4270  st([vTicks])                    #2
                                          4271  #
                                          4272  # Fetch opcode
              0e23 111a  ld   [$1a],x     4273  ld([v6502_PCL],X)               #3
              0e24 151b  ld   [$1b],y     4274  ld([v6502_PCH],Y)               #4
              0e25 0d00  ld   [y,x]       4275  ld([Y,X])                       #5 Fetch IR
              0e26 c226  st   [$26]       4276  st([v6502_IR])                  #6
              0e27 011a  ld   [$1a]       4277  ld([v6502_PCL])                 #7 PC++
              0e28 8001  adda $01         4278  adda(1)                         #8
              0e29 d21a  st   [$1a],x     4279  st([v6502_PCL],X)               #9
              0e2a f02d  beq  $0e2d       4280  beq(pc()+3)                     #10
              0e2b fc2e  bra  $0e2e       4281  bra(pc()+3)                     #11
              0e2c 0000  ld   $00         4282  ld(0)                           #12
              0e2d 0001  ld   $01         4283  ld(1)                           #12(!)
              0e2e 811b  adda [$1b]       4284  adda([v6502_PCH])               #13
              0e2f d61b  st   [$1b],y     4285  st([v6502_PCH],Y)               #14
                                          4286  #
                                          4287  # Get addressing mode and fetch operands
              0e30 0126  ld   [$26]       4288  ld([v6502_IR])                  #15 Get addressing mode
              0e31 201f  anda $1f         4289  anda(31)                        #16
              0e32 fe00  bra  ac          4290  bra(AC)                         #17
              0e33 fc34  bra  .next20     4291  bra('.next20')                  #18
                                          4292  # (jump table)                  #19
                                          4293  label('.next20')
.next20:      0e34 0d00  ld   [y,x]       4294  ld([Y,X])                       #20 Fetch L
                                          4295  # Most opcodes branch away at this point, but IR & 31 == 0 falls through
                                          4296  #
                                          4297  # Implicit Mode for  BRK JSR RTI RTS (<  0x80) -- 26 cycles
                                          4298  # Immediate Mode for LDY CPY CPX     (>= 0x80) -- 36 cycles
                                          4299  label('v6502_mode0')
v6502_mode0:  0e35 0126  ld   [$26]       4300  ld([v6502_IR])                  #21 'xxx0000'
              0e36 e845  blt  .imm24      4301  bmi('.imm24')                   #22
              0e37 011b  ld   [$1b]       4302  ld([v6502_PCH])                 #23
              0e38 fcf2  bra  v6502_check 4303  bra('v6502_check')              #24
              0e39 00f3  ld   $f3         4304  ld(-26/2)                       #25
                                          4305
                                          4306  # Resync with video driver. At this point we're returning BEFORE
                                          4307  # fetching and executing the next instruction.
                                          4308  label('v6502_exitBefore')
v6502_exitBefore:
              0e3a 8013  adda $13         4309  adda(v6502_maxTicks)            #3 Exit BEFORE fetch
              0e3b e43b  bgt  $0e3b       4310  bgt(pc()&255)                   #4 Resync
              0e3c a001  suba $01         4311  suba(1)                         #5
              0e3d 000d  ld   $0d         4312  ld(hi('v6502_ENTER'))           #6 Set entry point to before 'fetch'
              0e3e c202  st   [$02]       4313  st([vCpuSelect])                #7
              0e3f 1401  ld   $01,y       4314  ld(hi('vBlankStart'),Y)         #8
              0e40 e11e  jmp  y,[$1e]     4315  jmp(Y,[vReturn])                #9 To video driver
              0e41 0000  ld   $00         4316  ld(0)                           #10
                                          4317  assert v6502_overhead ==         11
                                          4318
                                          4319  # Immediate Mode: #$FF -- 36 cycles
                                          4320  label('v6502_modeIMM')
v6502_modeIMM:
              0e42 0200  nop              4321  nop()                           #21 Wait for v6502_mode0 to join
              0e43 0200  nop              4322  nop()                           #22
              0e44 011b  ld   [$1b]       4323  ld([v6502_PCH])                 #23 Copy PC
                                          4324  label('.imm24')
.imm24:       0e45 c225  st   [$25]       4325  st([v6502_ADH])                 #24
              0e46 011a  ld   [$1a]       4326  ld([v6502_PCL])                 #25
              0e47 d224  st   [$24],x     4327  st([v6502_ADL],X)               #26
              0e48 8001  adda $01         4328  adda(1)                         #27 PC++
              0e49 c21a  st   [$1a]       4329  st([v6502_PCL])                 #28
              0e4a f04d  beq  $0e4d       4330  beq(pc()+3)                     #29
              0e4b fc4e  bra  $0e4e       4331  bra(pc()+3)                     #30
              0e4c 0000  ld   $00         4332  ld(0)                           #31
              0e4d 0001  ld   $01         4333  ld(1)                           #31(!)
              0e4e 811b  adda [$1b]       4334  adda([v6502_PCH])               #32
              0e4f c21b  st   [$1b]       4335  st([v6502_PCH])                 #33
              0e50 fcf2  bra  v6502_check 4336  bra('v6502_check')              #34
              0e51 00ee  ld   $ee         4337  ld(-36/2)                       #35
                                          4338
                                          4339  # Accumulator Mode: ROL ROR LSL ASR -- 28 cycles
                                          4340  label('v6502_modeACC')
v6502_modeACC:
              0e52 0018  ld   $18         4341  ld(v6502_A&255)                 #21 Address of AC
              0e53 d224  st   [$24],x     4342  st([v6502_ADL],X)               #22
              0e54 0000  ld   $00         4343  ld(v6502_A>>8)                  #23
              0e55 c225  st   [$25]       4344  st([v6502_ADH])                 #24
              0e56 00f2  ld   $f2         4345  ld(-28/2)                       #25
              0e57 fcf2  bra  v6502_check 4346  bra('v6502_check')              #26
                                          4347  #nop()                          #27 Overlap
                                          4348  #
                                          4349  # Implied Mode: no operand -- 24 cycles
                                          4350  label('v6502_modeILL')
                                          4351  label('v6502_modeIMP')
v6502_modeILL:
v6502_modeIMP:
              0e58 0200  nop              4352  nop()                           #21,27
              0e59 fcf2  bra  v6502_check 4353  bra('v6502_check')              #22
              0e5a 00f4  ld   $f4         4354  ld(-24/2)                       #23
                                          4355
                                          4356  # Zero Page Modes: $DD $DD,X $DD,Y -- 36 cycles
                                          4357  label('v6502_modeZPX')
v6502_modeZPX:
              0e5b fc5f  bra  .zp23       4358  bra('.zp23')                    #21
              0e5c 812a  adda [$2a]       4359  adda([v6502_X])                 #22
                                          4360  label('v6502_modeZP')
v6502_modeZP: 0e5d fc5f  bra  .zp23       4361  bra('.zp23')                    #21
              0e5e 0200  nop              4362  nop()                           #22
                                          4363  label('.zp23')
.zp23:        0e5f d224  st   [$24],x     4364  st([v6502_ADL],X)               #23
              0e60 0000  ld   $00         4365  ld(0)                           #24 H=0
              0e61 c225  st   [$25]       4366  st([v6502_ADH])                 #25
              0e62 0001  ld   $01         4367  ld(1)                           #26 PC++
              0e63 811a  adda [$1a]       4368  adda([v6502_PCL])               #27
              0e64 c21a  st   [$1a]       4369  st([v6502_PCL])                 #28
              0e65 f068  beq  $0e68       4370  beq(pc()+3)                     #29
              0e66 fc69  bra  $0e69       4371  bra(pc()+3)                     #30
              0e67 0000  ld   $00         4372  ld(0)                           #31
              0e68 0001  ld   $01         4373  ld(1)                           #31(!)
              0e69 811b  adda [$1b]       4374  adda([v6502_PCH])               #32
              0e6a c21b  st   [$1b]       4375  st([v6502_PCH])                 #33
              0e6b fcf2  bra  v6502_check 4376  bra('v6502_check')              #34
              0e6c 00ee  ld   $ee         4377  ld(-36/2)                       #35
                                          4378
                                          4379  # Possible retry loop for modeABS and modeIZY. Because these need
                                          4380  # more time than the v6502_maxTicks of 38 Gigatron cycles, we may
                                          4381  # have to restart them after the next horizontal pulse.
                                          4382  label('.retry28')
.retry28:     0e6d f070  beq  $0e70       4383  beq(pc()+3)                     #28,37 PC--
              0e6e fc71  bra  $0e71       4384  bra(pc()+3)                     #29
              0e6f 0000  ld   $00         4385  ld(0)                           #30
              0e70 00ff  ld   $ff         4386  ld(-1)                          #30(!)
              0e71 811b  adda [$1b]       4387  adda([v6502_PCH])               #31
              0e72 c21b  st   [$1b]       4388  st([v6502_PCH])                 #32
              0e73 011a  ld   [$1a]       4389  ld([v6502_PCL])                 #33
              0e74 a001  suba $01         4390  suba(1)                         #34
              0e75 c21a  st   [$1a]       4391  st([v6502_PCL])                 #35
              0e76 fc20  bra  v6502_next  4392  bra('v6502_next')               #36 Retry until sufficient time
              0e77 00ed  ld   $ed         4393  ld(-38/2)                       #37
                                          4394
                                          4395  # Absolute Modes: $DDDD $DDDD,X $DDDD,Y -- 64 cycles
                                          4396  label('v6502_modeABS')
v6502_modeABS:
              0e78 fc7d  bra  .abs23      4397  bra('.abs23')                   #21
              0e79 0000  ld   $00         4398  ld(0)                           #22
                                          4399  label('v6502_modeABX')
v6502_modeABX:
              0e7a fc7d  bra  .abs23      4400  bra('.abs23')                   #21
                                          4401  label('v6502_modeABY')
v6502_modeABY:
              0e7b 012a  ld   [$2a]       4402  ld([v6502_X])                   #21,22
              0e7c 012b  ld   [$2b]       4403  ld([v6502_Y])                   #22
                                          4404  label('.abs23')
.abs23:       0e7d c224  st   [$24]       4405  st([v6502_ADL])                 #23
              0e7e 00f3  ld   $f3         4406  ld(-64//2+v6502_maxTicks)       #24 Is there enough time for the excess ticks?
              0e7f 8115  adda [$15]       4407  adda([vTicks])                  #25
              0e80 e86d  blt  .retry28    4408  blt('.retry28')                 #26
              0e81 011a  ld   [$1a]       4409  ld([v6502_PCL])                 #27
              0e82 0126  ld   [$26]       4410  ld([v6502_IR])                  #28 Special case $BE: LDX $DDDD,Y (we got X in ADL)
              0e83 60be  xora $be         4411  xora(0xbe)                      #29
              0e84 f087  beq  $0e87       4412  beq(pc()+3)                     #30
              0e85 fc88  bra  $0e88       4413  bra(pc()+3)                     #31
              0e86 0124  ld   [$24]       4414  ld([v6502_ADL])                 #32
              0e87 012b  ld   [$2b]       4415  ld([v6502_Y])                   #32(!)
              0e88 8d00  adda [y,x]       4416  adda([Y,X])                     #33 Fetch and add L
              0e89 c224  st   [$24]       4417  st([v6502_ADL])                 #34
              0e8a e88e  blt  .abs37      4418  bmi('.abs37')                   #35 Carry?
              0e8b ad00  suba [y,x]       4419  suba([Y,X])                     #36 Gets back original operand
              0e8c fc90  bra  .abs39      4420  bra('.abs39')                   #37
              0e8d 4d00  ora  [y,x]       4421  ora([Y,X])                      #38 Carry in bit 7
                                          4422  label('.abs37')
.abs37:       0e8e 2d00  anda [y,x]       4423  anda([Y,X])                     #37 Carry in bit 7
              0e8f 0200  nop              4424  nop()                           #38
                                          4425  label('.abs39')
.abs39:       0e90 3080  anda $80,x       4426  anda(0x80,X)                    #39 Move carry to bit 0
              0e91 0500  ld   [x]         4427  ld([X])                         #40
              0e92 c225  st   [$25]       4428  st([v6502_ADH])                 #41
              0e93 011a  ld   [$1a]       4429  ld([v6502_PCL])                 #42 PC++
              0e94 8001  adda $01         4430  adda(1)                         #43
              0e95 d21a  st   [$1a],x     4431  st([v6502_PCL],X)               #44
              0e96 f099  beq  $0e99       4432  beq(pc()+3)                     #45
              0e97 fc9a  bra  $0e9a       4433  bra(pc()+3)                     #46
              0e98 0000  ld   $00         4434  ld(0)                           #47
              0e99 0001  ld   $01         4435  ld(1)                           #47(!)
              0e9a 811b  adda [$1b]       4436  adda([v6502_PCH])               #48
              0e9b d61b  st   [$1b],y     4437  st([v6502_PCH],Y)               #49
              0e9c 0d00  ld   [y,x]       4438  ld([Y,X])                       #50 Fetch H
              0e9d 8125  adda [$25]       4439  adda([v6502_ADH])               #51
              0e9e c225  st   [$25]       4440  st([v6502_ADH])                 #52
              0e9f 011a  ld   [$1a]       4441  ld([v6502_PCL])                 #53 PC++
              0ea0 8001  adda $01         4442  adda(1)                         #54
              0ea1 c21a  st   [$1a]       4443  st([v6502_PCL])                 #55
              0ea2 f0a5  beq  $0ea5       4444  beq(pc()+3)                     #56
              0ea3 fca6  bra  $0ea6       4445  bra(pc()+3)                     #57
              0ea4 0000  ld   $00         4446  ld(0)                           #58
              0ea5 0001  ld   $01         4447  ld(1)                           #58(!)
              0ea6 811b  adda [$1b]       4448  adda([v6502_PCH])               #59
              0ea7 c21b  st   [$1b]       4449  st([v6502_PCH])                 #60
              0ea8 1124  ld   [$24],x     4450  ld([v6502_ADL],X)               #61
              0ea9 fcf2  bra  v6502_check 4451  bra('v6502_check')              #62
              0eaa 00e0  ld   $e0         4452  ld(-64/2)                       #63
                                          4453
                                          4454  # Indirect Indexed Mode: ($DD),Y -- 54 cycles
                                          4455  label('v6502_modeIZY')
v6502_modeIZY:
              0eab 1200  ld   ac,x        4456  ld(AC,X)                        #21 $DD
              0eac 1400  ld   $00,y       4457  ld(0,Y)                         #22 $00DD
              0ead 00f8  ld   $f8         4458  ld(-54//2+v6502_maxTicks)       #23 Is there enough time for the excess ticks?
              0eae 8115  adda [$15]       4459  adda([vTicks])                  #24
              0eaf 0200  nop              4460  nop()                           #25
              0eb0 e86d  blt  .retry28    4461  blt('.retry28')                 #26
              0eb1 011a  ld   [$1a]       4462  ld([v6502_PCL])                 #27
              0eb2 8001  adda $01         4463  adda(1)                         #28 PC++
              0eb3 c21a  st   [$1a]       4464  st([v6502_PCL])                 #29
              0eb4 f0b7  beq  $0eb7       4465  beq(pc()+3)                     #30
              0eb5 fcb8  bra  $0eb8       4466  bra(pc()+3)                     #31
              0eb6 0000  ld   $00         4467  ld(0)                           #32
              0eb7 0001  ld   $01         4468  ld(1)                           #32(!)
              0eb8 811b  adda [$1b]       4469  adda([v6502_PCH])               #33
              0eb9 c21b  st   [$1b]       4470  st([v6502_PCH])                 #34
              0eba 0d00  ld   [y,x]       4471  ld([Y,X])                       #35 Read word from zero-page
              0ebb de00  st   [y,x++]     4472  st([Y,Xpp])                     #36 (Just X++) Wrap-around is correct
              0ebc c224  st   [$24]       4473  st([v6502_ADL])                 #37
              0ebd 0d00  ld   [y,x]       4474  ld([Y,X])                       #38
              0ebe c225  st   [$25]       4475  st([v6502_ADH])                 #39
              0ebf 012b  ld   [$2b]       4476  ld([v6502_Y])                   #40 Add Y
              0ec0 8124  adda [$24]       4477  adda([v6502_ADL])               #41
              0ec1 c224  st   [$24]       4478  st([v6502_ADL])                 #42
              0ec2 e8c6  blt  .izy45      4479  bmi('.izy45')                   #43 Carry?
              0ec3 a12b  suba [$2b]       4480  suba([v6502_Y])                 #44 Gets back original operand
              0ec4 fcc8  bra  .izy47      4481  bra('.izy47')                   #45
              0ec5 412b  ora  [$2b]       4482  ora([v6502_Y])                  #46 Carry in bit 7
                                          4483  label('.izy45')
.izy45:       0ec6 212b  anda [$2b]       4484  anda([v6502_Y])                 #45 Carry in bit 7
              0ec7 0200  nop              4485  nop()                           #46
                                          4486  label('.izy47')
.izy47:       0ec8 3080  anda $80,x       4487  anda(0x80,X)                    #47 Move carry to bit 0
              0ec9 0500  ld   [x]         4488  ld([X])                         #48
              0eca 8125  adda [$25]       4489  adda([v6502_ADH])               #49
              0ecb c225  st   [$25]       4490  st([v6502_ADH])                 #50
              0ecc 1124  ld   [$24],x     4491  ld([v6502_ADL],X)               #51
              0ecd fcf2  bra  v6502_check 4492  bra('v6502_check')              #52
              0ece 00e5  ld   $e5         4493  ld(-54/2)                       #53
                                          4494
                                          4495  # Relative Mode: BEQ BNE BPL BMI BCC BCS BVC BVS -- 36 cycles
                                          4496  label('v6502_modeREL')
v6502_modeREL:
              0ecf d224  st   [$24],x     4497  st([v6502_ADL],X)               #21 Offset (Only needed for branch)
              0ed0 e8d3  blt  $0ed3       4498  bmi(pc()+3)                     #22 Sign extend
              0ed1 fcd4  bra  $0ed4       4499  bra(pc()+3)                     #23
              0ed2 0000  ld   $00         4500  ld(0)                           #24
              0ed3 00ff  ld   $ff         4501  ld(255)                         #24(!)
              0ed4 c225  st   [$25]       4502  st([v6502_ADH])                 #25
              0ed5 011a  ld   [$1a]       4503  ld([v6502_PCL])                 #26 PC++ (Needed for both cases)
              0ed6 8001  adda $01         4504  adda(1)                         #27
              0ed7 c21a  st   [$1a]       4505  st([v6502_PCL])                 #28
              0ed8 f0db  beq  $0edb       4506  beq(pc()+3)                     #29
              0ed9 fcdc  bra  $0edc       4507  bra(pc()+3)                     #30
              0eda 0000  ld   $00         4508  ld(0)                           #31
              0edb 0001  ld   $01         4509  ld(1)                           #31(!)
              0edc 811b  adda [$1b]       4510  adda([v6502_PCH])               #32
              0edd c21b  st   [$1b]       4511  st([v6502_PCH])                 #33
              0ede fcf2  bra  v6502_check 4512  bra('v6502_check')              #34
              0edf 00ee  ld   $ee         4513  ld(-36/2)                       #53
                                          4514
                                          4515  # Indexed Indirect Mode: ($DD,X) -- 38 cycles
                                          4516  label('v6502_modeIZX')
v6502_modeIZX:
              0ee0 812a  adda [$2a]       4517  adda([v6502_X])                 #21 Add X
              0ee1 c21d  st   [$1d]       4518  st([v6502_Tmp])                 #22
              0ee2 9001  adda $01,x       4519  adda(1,X)                       #23 Read word from zero-page
              0ee3 0500  ld   [x]         4520  ld([X])                         #24
              0ee4 c225  st   [$25]       4521  st([v6502_ADH])                 #25
              0ee5 111d  ld   [$1d],x     4522  ld([v6502_Tmp],X)               #26
              0ee6 0500  ld   [x]         4523  ld([X])                         #27
              0ee7 d224  st   [$24],x     4524  st([v6502_ADL],X)               #28
              0ee8 011a  ld   [$1a]       4525  ld([v6502_PCL])                 #29 PC++
              0ee9 8001  adda $01         4526  adda(1)                         #30
              0eea c21a  st   [$1a]       4527  st([v6502_PCL])                 #31
              0eeb f0ee  beq  $0eee       4528  beq(pc()+3)                     #32
              0eec fcef  bra  $0eef       4529  bra(pc()+3)                     #33
              0eed 0000  ld   $00         4530  ld(0)                           #34
              0eee 0001  ld   $01         4531  ld(1)                           #34(!)
              0eef 811b  adda [$1b]       4532  adda([v6502_PCH])               #35
              0ef0 c21b  st   [$1b]       4533  st([v6502_PCH])                 #36
              0ef1 00ed  ld   $ed         4534  ld(-38/2)                       #37 !!! Fall through to v6502_check !!!
                                          4535  #
                                          4536  # Update elapsed time for the addressing mode processing.
                                          4537  # Then check if we can immediately execute this instruction.
                                          4538  # Otherwise transfer control to the video driver.
                                          4539  label('v6502_check')
v6502_check:  0ef2 8115  adda [$15]       4540  adda([vTicks])                  #0
                                          4541  blt('v6502_exitAfter')          #1 No more ticks
              0ef3 e8f8  blt  v6502_exitAfter
              0ef4 c215  st   [$15]       4542  st([vTicks])                    #2
              0ef5 140f  ld   $0f,y       4543  ld(hi('v6502_execute'),Y)       #3
              0ef6 e126  jmp  y,[$26]     4544  jmp(Y,[v6502_IR])               #4
              0ef7 fcff  bra  $ff         4545  bra(255)                        #5
                                          4546
                                          4547  # Otherwise resync with video driver. At this point we're returning AFTER
                                          4548  # addressing mode decoding, but before executing the instruction.
                                          4549  label('v6502_exitAfter')
v6502_exitAfter:
              0ef8 8013  adda $13         4550  adda(v6502_maxTicks)            #3 Exit AFTER fetch
              0ef9 e4f9  bgt  $0ef9       4551  bgt(pc()&255)                   #4 Resync
              0efa a001  suba $01         4552  suba(1)                         #5
              0efb 0010  ld   $10         4553  ld(hi('v6502_RESUME'))          #6 Set entry point to before 'execute'
              0efc c202  st   [$02]       4554  st([vCpuSelect])                #7
              0efd 1401  ld   $01,y       4555  ld(hi('vBlankStart'),Y)         #8
              0efe e11e  jmp  y,[$1e]     4556  jmp(Y,[vReturn])                #9 To video driver
              0eff 0000  ld   $00         4557  ld(0)                           #10
                                          4558  assert v6502_overhead ==         11
                                          4559
                                          4560  align(0x100,size=0x100)
                                          4561  label('v6502_execute')
                                          4562  # This page works as a 255-entry (0..254) jump table for 6502 opcodes.
                                          4563  # Jumping into this page must have 'bra 255' in the branch delay slot
                                          4564  # in order to get out again and dispatch to the right continuation.
                                          4565  # X must hold [v6502_ADL],
                                          4566  # Y will hold hi('v6502_execute'),
                                          4567  # A will be loaded with the code offset (this is skipped at offset $ff)
v6502_execute:
              0f00 00fd  ld   $fd         4568  ld('v6502_BRK'); ld('v6502_ORA'); ld('v6502_ILL'); ld('v6502_ILL') #6 $00
              0f01 0089  ld   $89
              0f02 00fd  ld   $fd
              0f03 00fd  ld   $fd
              0f04 00fd  ld   $fd         4569  ld('v6502_ILL'); ld('v6502_ORA'); ld('v6502_ASL'); ld('v6502_ILL') #6
              0f05 0089  ld   $89
              0f06 00f1  ld   $f1
              0f07 00fd  ld   $fd
              0f08 00f3  ld   $f3         4570  ld('v6502_PHP'); ld('v6502_ORA'); ld('v6502_ASL'); ld('v6502_ILL') #6
              0f09 0089  ld   $89
              0f0a 00f1  ld   $f1
              0f0b 00fd  ld   $fd
              0f0c 00fd  ld   $fd         4571  ld('v6502_ILL'); ld('v6502_ORA'); ld('v6502_ASL'); ld('v6502_ILL') #6
              0f0d 0089  ld   $89
              0f0e 00f1  ld   $f1
              0f0f 00fd  ld   $fd
              0f10 003f  ld   $3f         4572  ld('v6502_BPL'); ld('v6502_ORA'); ld('v6502_ILL'); ld('v6502_ILL') #6 $10
              0f11 0089  ld   $89
              0f12 00fd  ld   $fd
              0f13 00fd  ld   $fd
              0f14 00fd  ld   $fd         4573  ld('v6502_ILL'); ld('v6502_ORA'); ld('v6502_ASL'); ld('v6502_ILL') #6
              0f15 0089  ld   $89
              0f16 00f1  ld   $f1
              0f17 00fd  ld   $fd
              0f18 0036  ld   $36         4574  ld('v6502_CLC'); ld('v6502_ORA'); ld('v6502_ILL'); ld('v6502_ILL') #6
              0f19 0089  ld   $89
              0f1a 00fd  ld   $fd
              0f1b 00fd  ld   $fd
              0f1c 00fd  ld   $fd         4575  ld('v6502_ILL'); ld('v6502_ORA'); ld('v6502_ASL'); ld('v6502_ILL') #6
              0f1d 0089  ld   $89
              0f1e 00f1  ld   $f1
              0f1f 00fd  ld   $fd
              0f20 009a  ld   $9a         4576  ld('v6502_JSR'); ld('v6502_AND'); ld('v6502_ILL'); ld('v6502_ILL') #6 $20
              0f21 0085  ld   $85
              0f22 00fd  ld   $fd
              0f23 00fd  ld   $fd
              0f24 00f5  ld   $f5         4577  ld('v6502_BIT'); ld('v6502_AND'); ld('v6502_ROL'); ld('v6502_ILL') #6
              0f25 0085  ld   $85
              0f26 00f7  ld   $f7
              0f27 00fd  ld   $fd
              0f28 00f9  ld   $f9         4578  ld('v6502_PLP'); ld('v6502_AND'); ld('v6502_ROL'); ld('v6502_ILL') #6
              0f29 0085  ld   $85
              0f2a 00f7  ld   $f7
              0f2b 00fd  ld   $fd
              0f2c 00f5  ld   $f5         4579  ld('v6502_BIT'); ld('v6502_AND'); ld('v6502_ROL'); ld('v6502_ILL') #6
              0f2d 0085  ld   $85
              0f2e 00f7  ld   $f7
              0f2f 00fd  ld   $fd
              0f30 0042  ld   $42         4580  ld('v6502_BMI'); ld('v6502_AND'); ld('v6502_ILL'); ld('v6502_ILL') #6 $30
              0f31 0085  ld   $85
              0f32 00fd  ld   $fd
              0f33 00fd  ld   $fd
              0f34 00fd  ld   $fd         4581  ld('v6502_ILL'); ld('v6502_AND'); ld('v6502_ROL'); ld('v6502_ILL') #6
              0f35 0085  ld   $85
              0f36 00f7  ld   $f7
              0f37 00fd  ld   $fd
              0f38 0038  ld   $38         4582  ld('v6502_SEC'); ld('v6502_AND'); ld('v6502_ILL'); ld('v6502_ILL') #6
              0f39 0085  ld   $85
              0f3a 00fd  ld   $fd
              0f3b 00fd  ld   $fd
              0f3c 00fd  ld   $fd         4583  ld('v6502_ILL'); ld('v6502_AND'); ld('v6502_ROL'); ld('v6502_ILL') #6
              0f3d 0085  ld   $85
              0f3e 00f7  ld   $f7
              0f3f 00fd  ld   $fd
              0f40 00d3  ld   $d3         4584  ld('v6502_RTI'); ld('v6502_EOR'); ld('v6502_ILL'); ld('v6502_ILL') #6 $40
              0f41 008c  ld   $8c
              0f42 00fd  ld   $fd
              0f43 00fd  ld   $fd
              0f44 00fd  ld   $fd         4585  ld('v6502_ILL'); ld('v6502_EOR'); ld('v6502_LSR'); ld('v6502_ILL') #6
              0f45 008c  ld   $8c
              0f46 00d7  ld   $d7
              0f47 00fd  ld   $fd
              0f48 00d9  ld   $d9         4586  ld('v6502_PHA'); ld('v6502_EOR'); ld('v6502_LSR'); ld('v6502_ILL') #6
              0f49 008c  ld   $8c
              0f4a 00d7  ld   $d7
              0f4b 00fd  ld   $fd
              0f4c 0096  ld   $96         4587  ld('v6502_JMP1');ld('v6502_EOR'); ld('v6502_LSR'); ld('v6502_ILL') #6
              0f4d 008c  ld   $8c
              0f4e 00d7  ld   $d7
              0f4f 00fd  ld   $fd
              0f50 0045  ld   $45         4588  ld('v6502_BVC'); ld('v6502_EOR'); ld('v6502_ILL'); ld('v6502_ILL') #6 $50
              0f51 008c  ld   $8c
              0f52 00fd  ld   $fd
              0f53 00fd  ld   $fd
              0f54 00fd  ld   $fd         4589  ld('v6502_ILL'); ld('v6502_EOR'); ld('v6502_LSR'); ld('v6502_ILL') #6
              0f55 008c  ld   $8c
              0f56 00d7  ld   $d7
              0f57 00fd  ld   $fd
              0f58 00db  ld   $db         4590  ld('v6502_CLI'); ld('v6502_EOR'); ld('v6502_ILL'); ld('v6502_ILL') #6
              0f59 008c  ld   $8c
              0f5a 00fd  ld   $fd
              0f5b 00fd  ld   $fd
              0f5c 00fd  ld   $fd         4591  ld('v6502_ILL'); ld('v6502_EOR'); ld('v6502_LSR'); ld('v6502_ILL') #6
              0f5d 008c  ld   $8c
              0f5e 00d7  ld   $d7
              0f5f 00fd  ld   $fd
              0f60 00dd  ld   $dd         4592  ld('v6502_RTS'); ld('v6502_ADC'); ld('v6502_ILL'); ld('v6502_ILL') #6 $60
              0f61 0001  ld   $01
              0f62 00fd  ld   $fd
              0f63 00fd  ld   $fd
              0f64 00fd  ld   $fd         4593  ld('v6502_ILL'); ld('v6502_ADC'); ld('v6502_ROR'); ld('v6502_ILL') #6
              0f65 0001  ld   $01
              0f66 00d5  ld   $d5
              0f67 00fd  ld   $fd
              0f68 00df  ld   $df         4594  ld('v6502_PLA'); ld('v6502_ADC'); ld('v6502_ROR'); ld('v6502_ILL') #6
              0f69 0001  ld   $01
              0f6a 00d5  ld   $d5
              0f6b 00fd  ld   $fd
              0f6c 0098  ld   $98         4595  ld('v6502_JMP2');ld('v6502_ADC'); ld('v6502_ROR'); ld('v6502_ILL') #6
              0f6d 0001  ld   $01
              0f6e 00d5  ld   $d5
              0f6f 00fd  ld   $fd
              0f70 0049  ld   $49         4596  ld('v6502_BVS'); ld('v6502_ADC'); ld('v6502_ILL'); ld('v6502_ILL') #6 $70
              0f71 0001  ld   $01
              0f72 00fd  ld   $fd
              0f73 00fd  ld   $fd
              0f74 00fd  ld   $fd         4597  ld('v6502_ILL'); ld('v6502_ADC'); ld('v6502_ROR'); ld('v6502_ILL') #6
              0f75 0001  ld   $01
              0f76 00d5  ld   $d5
              0f77 00fd  ld   $fd
              0f78 00e1  ld   $e1         4598  ld('v6502_SEI'); ld('v6502_ADC'); ld('v6502_ILL'); ld('v6502_ILL') #6
              0f79 0001  ld   $01
              0f7a 00fd  ld   $fd
              0f7b 00fd  ld   $fd
              0f7c 00fd  ld   $fd         4599  ld('v6502_ILL'); ld('v6502_ADC'); ld('v6502_ROR'); ld('v6502_ILL') #6
              0f7d 0001  ld   $01
              0f7e 00d5  ld   $d5
              0f7f 00fd  ld   $fd
              0f80 00fd  ld   $fd         4600  ld('v6502_ILL'); ld('v6502_STA'); ld('v6502_ILL'); ld('v6502_ILL') #6 $80
              0f81 00c1  ld   $c1
              0f82 00fd  ld   $fd
              0f83 00fd  ld   $fd
              0f84 00c7  ld   $c7         4601  ld('v6502_STY'); ld('v6502_STA'); ld('v6502_STX'); ld('v6502_ILL') #6
              0f85 00c1  ld   $c1
              0f86 00c3  ld   $c3
              0f87 00fd  ld   $fd
              0f88 007f  ld   $7f         4602  ld('v6502_DEY'); ld('v6502_ILL'); ld('v6502_TXA'); ld('v6502_ILL') #6
              0f89 00fd  ld   $fd
              0f8a 00cd  ld   $cd
              0f8b 00fd  ld   $fd
              0f8c 00c7  ld   $c7         4603  ld('v6502_STY'); ld('v6502_STA'); ld('v6502_STX'); ld('v6502_ILL') #6
              0f8d 00c1  ld   $c1
              0f8e 00c3  ld   $c3
              0f8f 00fd  ld   $fd
              0f90 004d  ld   $4d         4604  ld('v6502_BCC'); ld('v6502_STA'); ld('v6502_ILL'); ld('v6502_ILL') #6 $90
              0f91 00c1  ld   $c1
              0f92 00fd  ld   $fd
              0f93 00fd  ld   $fd
              0f94 00c7  ld   $c7         4605  ld('v6502_STY'); ld('v6502_STA'); ld('v6502_STX2');ld('v6502_ILL') #6
              0f95 00c1  ld   $c1
              0f96 00c5  ld   $c5
              0f97 00fd  ld   $fd
              0f98 00cf  ld   $cf         4606  ld('v6502_TYA'); ld('v6502_STA'); ld('v6502_TXS'); ld('v6502_ILL') #6
              0f99 00c1  ld   $c1
              0f9a 00e3  ld   $e3
              0f9b 00fd  ld   $fd
              0f9c 00fd  ld   $fd         4607  ld('v6502_ILL'); ld('v6502_STA'); ld('v6502_ILL'); ld('v6502_ILL') #6
              0f9d 00c1  ld   $c1
              0f9e 00fd  ld   $fd
              0f9f 00fd  ld   $fd
              0fa0 00bf  ld   $bf         4608  ld('v6502_LDY'); ld('v6502_LDA'); ld('v6502_LDX'); ld('v6502_ILL') #6 $A0
              0fa1 00b9  ld   $b9
              0fa2 00bb  ld   $bb
              0fa3 00fd  ld   $fd
              0fa4 00bf  ld   $bf         4609  ld('v6502_LDY'); ld('v6502_LDA'); ld('v6502_LDX'); ld('v6502_ILL') #6
              0fa5 00b9  ld   $b9
              0fa6 00bb  ld   $bb
              0fa7 00fd  ld   $fd
              0fa8 00cb  ld   $cb         4610  ld('v6502_TAY'); ld('v6502_LDA'); ld('v6502_TAX'); ld('v6502_ILL') #6
              0fa9 00b9  ld   $b9
              0faa 00c9  ld   $c9
              0fab 00fd  ld   $fd
              0fac 00bf  ld   $bf         4611  ld('v6502_LDY'); ld('v6502_LDA'); ld('v6502_LDX'); ld('v6502_ILL') #6
              0fad 00b9  ld   $b9
              0fae 00bb  ld   $bb
              0faf 00fd  ld   $fd
              0fb0 0051  ld   $51         4612  ld('v6502_BCS'); ld('v6502_LDA'); ld('v6502_ILL'); ld('v6502_ILL') #6 $B0
              0fb1 00b9  ld   $b9
              0fb2 00fd  ld   $fd
              0fb3 00fd  ld   $fd
              0fb4 00bf  ld   $bf         4613  ld('v6502_LDY'); ld('v6502_LDA'); ld('v6502_LDX2');ld('v6502_ILL') #6
              0fb5 00b9  ld   $b9
              0fb6 00bd  ld   $bd
              0fb7 00fd  ld   $fd
              0fb8 00d1  ld   $d1         4614  ld('v6502_CLV'); ld('v6502_LDA'); ld('v6502_TSX'); ld('v6502_ILL') #6
              0fb9 00b9  ld   $b9
              0fba 00e5  ld   $e5
              0fbb 00fd  ld   $fd
              0fbc 00bf  ld   $bf         4615  ld('v6502_LDY'); ld('v6502_LDA'); ld('v6502_LDX'); ld('v6502_ILL') #6
              0fbd 00b9  ld   $b9
              0fbe 00bb  ld   $bb
              0fbf 00fd  ld   $fd
              0fc0 00e7  ld   $e7         4616  ld('v6502_CPY'); ld('v6502_CMP'); ld('v6502_ILL'); ld('v6502_ILL') #6 $C0
              0fc1 00e9  ld   $e9
              0fc2 00fd  ld   $fd
              0fc3 00fd  ld   $fd
              0fc4 00e7  ld   $e7         4617  ld('v6502_CPY'); ld('v6502_CMP'); ld('v6502_DEC'); ld('v6502_ILL') #6
              0fc5 00e9  ld   $e9
              0fc6 00eb  ld   $eb
              0fc7 00fd  ld   $fd
              0fc8 007b  ld   $7b         4618  ld('v6502_INY'); ld('v6502_CMP'); ld('v6502_DEX'); ld('v6502_ILL') #6
              0fc9 00e9  ld   $e9
              0fca 0077  ld   $77
              0fcb 00fd  ld   $fd
              0fcc 00e7  ld   $e7         4619  ld('v6502_CPY'); ld('v6502_CMP'); ld('v6502_DEC'); ld('v6502_ILL') #6
              0fcd 00e9  ld   $e9
              0fce 00eb  ld   $eb
              0fcf 00fd  ld   $fd
              0fd0 0055  ld   $55         4620  ld('v6502_BNE'); ld('v6502_CMP'); ld('v6502_ILL'); ld('v6502_ILL') #6 $D0
              0fd1 00e9  ld   $e9
              0fd2 00fd  ld   $fd
              0fd3 00fd  ld   $fd
              0fd4 00fd  ld   $fd         4621  ld('v6502_ILL'); ld('v6502_CMP'); ld('v6502_DEC'); ld('v6502_ILL') #6
              0fd5 00e9  ld   $e9
              0fd6 00eb  ld   $eb
              0fd7 00fd  ld   $fd
              0fd8 00ed  ld   $ed         4622  ld('v6502_CLD'); ld('v6502_CMP'); ld('v6502_ILL'); ld('v6502_ILL') #6
              0fd9 00e9  ld   $e9
              0fda 00fd  ld   $fd
              0fdb 00fd  ld   $fd
              0fdc 00fd  ld   $fd         4623  ld('v6502_ILL'); ld('v6502_CMP'); ld('v6502_DEC'); ld('v6502_ILL') #6
              0fdd 00e9  ld   $e9
              0fde 00eb  ld   $eb
              0fdf 00fd  ld   $fd
              0fe0 00ef  ld   $ef         4624  ld('v6502_CPX'); ld('v6502_SBC'); ld('v6502_ILL'); ld('v6502_ILL') #6 $E0
              0fe1 0029  ld   $29
              0fe2 00fd  ld   $fd
              0fe3 00fd  ld   $fd
              0fe4 00ef  ld   $ef         4625  ld('v6502_CPX'); ld('v6502_SBC'); ld('v6502_INC'); ld('v6502_ILL') #6
              0fe5 0029  ld   $29
              0fe6 00b7  ld   $b7
              0fe7 00fd  ld   $fd
              0fe8 006c  ld   $6c         4626  ld('v6502_INX'); ld('v6502_SBC'); ld('v6502_NOP'); ld('v6502_ILL') #6
              0fe9 0029  ld   $29
              0fea 0083  ld   $83
              0feb 00fd  ld   $fd
              0fec 00ef  ld   $ef         4627  ld('v6502_CPX'); ld('v6502_SBC'); ld('v6502_INC'); ld('v6502_ILL') #6
              0fed 0029  ld   $29
              0fee 00b7  ld   $b7
              0fef 00fd  ld   $fd
              0ff0 0058  ld   $58         4628  ld('v6502_BEQ'); ld('v6502_SBC'); ld('v6502_ILL'); ld('v6502_ILL') #6 $F0
              0ff1 0029  ld   $29
              0ff2 00fd  ld   $fd
              0ff3 00fd  ld   $fd
              0ff4 00fd  ld   $fd         4629  ld('v6502_ILL'); ld('v6502_SBC'); ld('v6502_INC'); ld('v6502_ILL') #6
              0ff5 0029  ld   $29
              0ff6 00b7  ld   $b7
              0ff7 00fd  ld   $fd
              0ff8 00fb  ld   $fb         4630  ld('v6502_SED'); ld('v6502_SBC'); ld('v6502_ILL'); ld('v6502_ILL') #6
              0ff9 0029  ld   $29
              0ffa 00fd  ld   $fd
              0ffb 00fd  ld   $fd
              0ffc 00fd  ld   $fd         4631  ld('v6502_ILL'); ld('v6502_SBC'); ld('v6502_INC')                  #6
              0ffd 0029  ld   $29
              0ffe 00b7  ld   $b7
              0fff fe00  bra  ac          4632  bra(AC)                         #6,7 Dispatch into next page
                                          4633  # --- Page boundary ---
                                          4634  align(0x100,size=0x100)
              1000 140e  ld   $0e,y       4635  ld(hi('v6502_next'),Y)          #8 Handy for instructions that don't clobber Y
                                          4636
                                          4637  label('v6502_ADC')
                                          4638  assert pc()&255 == 1
                                          4639  assert v6502_Cflag == 1
                                          4640  assert v6502_Vemu == 128
v6502_ADC:    1001 1525  ld   [$25],y     4641  ld([v6502_ADH],Y)               #9 Must be at page offset 1, so A=1
              1002 2127  anda [$27]       4642  anda([v6502_P])                 #10 Carry in (AC=1 because lo('v6502_ADC')=1)
              1003 8118  adda [$18]       4643  adda([v6502_A])                 #11 Sum
              1004 f020  beq  .adc14      4644  beq('.adc14')                   #12 Danger zone for dropping a carry
              1005 8d00  adda [y,x]       4645  adda([Y,X])                     #13
              1006 c228  st   [$28]       4646  st([v6502_Qz])                  #14 Z flag, don't overwrite left-hand side (A) yet
              1007 c229  st   [$29]       4647  st([v6502_Qn])                  #15 N flag
              1008 6118  xora [$18]       4648  xora([v6502_A])                 #16 V flag, (Q^A) & (B^Q) & 0x80
              1009 c218  st   [$18]       4649  st([v6502_A])                   #17
              100a 0d00  ld   [y,x]       4650  ld([Y,X])                       #18
              100b 6128  xora [$28]       4651  xora([v6502_Qz])                #19
              100c 2118  anda [$18]       4652  anda([v6502_A])                 #20
              100d 2080  anda $80         4653  anda(0x80)                      #21
              100e c21d  st   [$1d]       4654  st([v6502_Tmp])                 #22
              100f 0128  ld   [$28]       4655  ld([v6502_Qz])                  #23 Update A
              1010 c218  st   [$18]       4656  st([v6502_A])                   #24
              1011 e815  blt  .adc27      4657  bmi('.adc27')                   #25 C flag
              1012 ad00  suba [y,x]       4658  suba([Y,X])                     #26
              1013 fc17  bra  .adc29      4659  bra('.adc29')                   #27
              1014 4d00  ora  [y,x]       4660  ora([Y,X])                      #28
                                          4661  label('.adc27')
.adc27:       1015 2d00  anda [y,x]       4662  anda([Y,X])                     #27
              1016 0200  nop              4663  nop()                           #28
                                          4664  label('.adc29')
.adc29:       1017 3080  anda $80,x       4665  anda(0x80,X)                    #29
              1018 0127  ld   [$27]       4666  ld([v6502_P])                   #30 Update P
              1019 207e  anda $7e         4667  anda(~v6502_Vemu&~v6502_Cflag)  #31
              101a 4500  ora  [x]         4668  ora([X])                        #32
              101b 411d  ora  [$1d]       4669  ora([v6502_Tmp])                #33
              101c c227  st   [$27]       4670  st([v6502_P])                   #34
              101d 140e  ld   $0e,y       4671  ld(hi('v6502_next'),Y)          #35
              101e e020  jmp  y,$20       4672  jmp(Y,'v6502_next')             #36
              101f 00ed  ld   $ed         4673  ld(-38/2)                       #37
                                          4674  # Cin=1, A=$FF, B=$DD --> Result=$DD, Cout=1, V=0
                                          4675  # Cin=0, A=$00, B=$DD --> Result=$DD, Cout=0, V=0
                                          4676  label('.adc14')
.adc14:       1020 c218  st   [$18]       4677  st([v6502_A])                   #14 Special case
              1021 c228  st   [$28]       4678  st([v6502_Qz])                  #15 Z flag
              1022 c229  st   [$29]       4679  st([v6502_Qn])                  #16 N flag
              1023 0127  ld   [$27]       4680  ld([v6502_P])                   #17
              1024 207f  anda $7f         4681  anda(0x7f)                      #18 V=0, keep C
              1025 c227  st   [$27]       4682  st([v6502_P])                   #19
              1026 140e  ld   $0e,y       4683  ld(hi('v6502_next'),Y)          #20
              1027 00f4  ld   $f4         4684  ld(-24/2)                       #21
              1028 e020  jmp  y,$20       4685  jmp(Y,'v6502_next')             #22
                                          4686  #nop()                          #23 Overlap
                                          4687  #
                                          4688  label('v6502_SBC')
                                          4689  # No matter how hard we try, v6502_SBC always comes out a lot clumsier
                                          4690  # than v6502_ADC. And that one already barely fits in 38 cycles and is
                                          4691  # hard to follow. So we use a hack: transmorph our SBC into an ADC with
                                          4692  # inverted operand, and then dispatch again. Simple and effective.
v6502_SBC:    1029 1525  ld   [$25],y     4693  ld([v6502_ADH],Y)               #9,24
              102a 0d00  ld   [y,x]       4694  ld([Y,X])                       #10
              102b 60ff  xora $ff         4695  xora(255)                       #11 Invert right-hand side operand
              102c c219  st   [$19]       4696  st([v6502_BI])                  #12 Park modified operand for v6502_ADC
              102d 0019  ld   $19         4697  ld(v6502_BI&255)                #13 Address of BI
              102e d224  st   [$24],x     4698  st([v6502_ADL],X)               #14
              102f 0000  ld   $00         4699  ld(v6502_BI>>8)                 #15
              1030 c225  st   [$25]       4700  st([v6502_ADH])                 #16
              1031 0069  ld   $69         4701  ld(0x69)                        #17 ADC #$xx (Any ADC opcode will do)
              1032 c226  st   [$26]       4702  st([v6502_IR])                  #18
              1033 140e  ld   $0e,y       4703  ld(hi('v6502_check'),Y)         #20 Go back to time check before dispatch
              1034 e0f2  jmp  y,$f2       4704  jmp(Y,'v6502_check')            #20
              1035 00f5  ld   $f5         4705  ld(-22/2)                       #21
                                          4706
                                          4707  # Carry calculation table
                                          4708  #   L7 R7 C7   RX UC SC
                                          4709  #   -- -- -- | -- -- --
                                          4710  #    0  0  0 |  0  0  0
                                          4711  #    0  0  1 |  0  0  0
                                          4712  #    1  0  0 |  0  1 +1
                                          4713  #    1  0  1 |  0  0  0
                                          4714  #    0  1  0 | -1  1  0
                                          4715  #    0  1  1 | -1  0 -1
                                          4716  #    1  1  0 | -1  1  0
                                          4717  #    1  1  1 | -1  1  0
                                          4718  #   -- -- -- | -- -- --
                                          4719  #    ^  ^  ^    ^  ^  ^
                                          4720  #    |  |  |    |  |  `--- Carry of unsigned L + signed R: SC = RX + UC
                                          4721  #    |  |  |    |  `----- Carry of unsigned L + unsigned R: UC = C7 ? L7&R7 : L7|R7
                                          4722  #    |  |  |    `------- Sign extension of signed R
                                          4723  #    |  |  `--------- MSB of unextended L + R
                                          4724  #    |  `----------- MSB of right operand R
                                          4725  #    `------------- MSB of left operand L
                                          4726
                                          4727  label('v6502_CLC')
v6502_CLC:    1036 0127  ld   [$27]       4728  ld([v6502_P])                   #9
              1037 fc3b  bra  .sec12      4729  bra('.sec12')                   #10
                                          4730  label('v6502_SEC')
v6502_SEC:    1038 20fe  anda $fe         4731  anda(~v6502_Cflag)              #9,11 Overlap
              1039 0127  ld   [$27]       4732  ld([v6502_P])                   #10
              103a 4001  ora  $01         4733  ora(v6502_Cflag)                #11
                                          4734  label('.sec12')
.sec12:       103b c227  st   [$27]       4735  st([v6502_P])                   #12
              103c 0200  nop              4736  nop()                           #13
                                          4737  label('.next14')
.next14:      103d e020  jmp  y,$20       4738  jmp(Y,'v6502_next')             #14
              103e 00f8  ld   $f8         4739  ld(-16/2)                       #15
                                          4740
                                          4741  label('v6502_BPL')
v6502_BPL:    103f 0129  ld   [$29]       4742  ld([v6502_Qn])                  #9
              1040 e875  blt  .next12     4743  bmi('.next12')                  #10
              1041 f45b  bge  .branch13   4744  bpl('.branch13')                #11
                                          4745  #nop()                          #12 Overlap
                                          4746  label('v6502_BMI')
v6502_BMI:    1042 0129  ld   [$29]       4747  ld([v6502_Qn])                  #9,12
              1043 f475  bge  .next12     4748  bpl('.next12')                  #10
              1044 e85b  blt  .branch13   4749  bmi('.branch13')                #11
                                          4750  #nop()                          #12 Overlap
                                          4751  label('v6502_BVC')
v6502_BVC:    1045 0127  ld   [$27]       4752  ld([v6502_P])                   #9,12
              1046 2080  anda $80         4753  anda(v6502_Vemu)                #10
              1047 f05b  beq  .branch13   4754  beq('.branch13')                #11
              1048 ec3d  bne  .next14     4755  bne('.next14')                  #12
                                          4756  #nop()                          #13 Overlap
                                          4757  label('v6502_BVS')
v6502_BVS:    1049 0127  ld   [$27]       4758  ld([v6502_P])                   #9,13
              104a 2080  anda $80         4759  anda(v6502_Vemu)                #10
              104b ec5b  bne  .branch13   4760  bne('.branch13')                #11
              104c f03d  beq  .next14     4761  beq('.next14')                  #12
                                          4762  #nop()                          #13 Overlap
                                          4763  label('v6502_BCC')
v6502_BCC:    104d 0127  ld   [$27]       4764  ld([v6502_P])                   #9,13
              104e 2001  anda $01         4765  anda(v6502_Cflag)               #10
              104f f05b  beq  .branch13   4766  beq('.branch13')                #11
              1050 ec3d  bne  .next14     4767  bne('.next14')                  #12
                                          4768  #nop()                          #13 Overlap
                                          4769  label('v6502_BCS')
v6502_BCS:    1051 0127  ld   [$27]       4770  ld([v6502_P])                   #9,13
              1052 2001  anda $01         4771  anda(v6502_Cflag)               #10
              1053 ec5b  bne  .branch13   4772  bne('.branch13')                #11
              1054 f03d  beq  .next14     4773  beq('.next14')                  #12
                                          4774  #nop()                          #13 Overlap
                                          4775  label('v6502_BNE')
v6502_BNE:    1055 0128  ld   [$28]       4776  ld([v6502_Qz])                  #9,13
              1056 f075  beq  .next12     4777  beq('.next12')                  #10
              1057 ec5b  bne  .branch13   4778  bne('.branch13')                #11
                                          4779  #nop()                          #12 Overlap
                                          4780  label('v6502_BEQ')
v6502_BEQ:    1058 0128  ld   [$28]       4781  ld([v6502_Qz])                  #9,12
              1059 ec75  bne  .next12     4782  bne('.next12')                  #10
              105a f05b  beq  .branch13   4783  beq('.branch13')                #11
                                          4784  #nop()                          #12 Overlap
                                          4785  label('.branch13')
.branch13:    105b 0124  ld   [$24]       4786  ld([v6502_ADL])                 #13,12 PC + offset
              105c 811a  adda [$1a]       4787  adda([v6502_PCL])               #14
              105d c21a  st   [$1a]       4788  st([v6502_PCL])                 #15
              105e e862  blt  .bra0       4789  bmi('.bra0')                    #16 Carry
              105f a124  suba [$24]       4790  suba([v6502_ADL])               #17
              1060 fc64  bra  .bra1       4791  bra('.bra1')                    #18
              1061 4124  ora  [$24]       4792  ora([v6502_ADL])                #19
                                          4793  label('.bra0')
.bra0:        1062 2124  anda [$24]       4794  anda([v6502_ADL])               #18
              1063 0200  nop              4795  nop()                           #19
                                          4796  label('.bra1')
.bra1:        1064 3080  anda $80,x       4797  anda(0x80,X)                    #20
              1065 0500  ld   [x]         4798  ld([X])                         #21
              1066 8125  adda [$25]       4799  adda([v6502_ADH])               #22
              1067 811b  adda [$1b]       4800  adda([v6502_PCH])               #23
              1068 c21b  st   [$1b]       4801  st([v6502_PCH])                 #24
              1069 0200  nop              4802  nop()                           #25
              106a e020  jmp  y,$20       4803  jmp(Y,'v6502_next')             #26
              106b 00f2  ld   $f2         4804  ld(-28/2)                       #27
                                          4805
                                          4806  label('v6502_INX')
v6502_INX:    106c 0200  nop              4807  nop()                           #9
              106d 012a  ld   [$2a]       4808  ld([v6502_X])                   #10
              106e 8001  adda $01         4809  adda(1)                         #11
              106f c22a  st   [$2a]       4810  st([v6502_X])                   #12
                                          4811  label('.inx13')
.inx13:       1070 c228  st   [$28]       4812  st([v6502_Qz])                  #13 Z flag
              1071 c229  st   [$29]       4813  st([v6502_Qn])                  #14 N flag
              1072 00f7  ld   $f7         4814  ld(-18/2)                       #15
              1073 e020  jmp  y,$20       4815  jmp(Y,'v6502_next')             #16
              1074 0200  nop              4816  nop()                           #17
                                          4817
                                          4818  label('.next12')
.next12:      1075 e020  jmp  y,$20       4819  jmp(Y,'v6502_next')             #12
              1076 00f9  ld   $f9         4820  ld(-14/2)                       #13
                                          4821
                                          4822  label('v6502_DEX')
v6502_DEX:    1077 012a  ld   [$2a]       4823  ld([v6502_X])                   #9
              1078 a001  suba $01         4824  suba(1)                         #10
              1079 fc70  bra  .inx13      4825  bra('.inx13')                   #11
              107a c22a  st   [$2a]       4826  st([v6502_X])                   #12
                                          4827
                                          4828  label('v6502_INY')
v6502_INY:    107b 012b  ld   [$2b]       4829  ld([v6502_Y])                   #9
              107c 8001  adda $01         4830  adda(1)                         #10
              107d fc70  bra  .inx13      4831  bra('.inx13')                   #11
              107e c22b  st   [$2b]       4832  st([v6502_Y])                   #12
                                          4833
                                          4834  label('v6502_DEY')
v6502_DEY:    107f 012b  ld   [$2b]       4835  ld([v6502_Y])                   #9
              1080 a001  suba $01         4836  suba(1)                         #10
              1081 fc70  bra  .inx13      4837  bra('.inx13')                   #11
              1082 c22b  st   [$2b]       4838  st([v6502_Y])                   #12
                                          4839
                                          4840  label('v6502_NOP')
v6502_NOP:    1083 00fa  ld   $fa         4841  ld(-12/2)                       #9
              1084 e020  jmp  y,$20       4842  jmp(Y,'v6502_next')             #10
                                          4843  #nop()                          #11 Overlap
                                          4844  #
                                          4845  label('v6502_AND')
v6502_AND:    1085 1525  ld   [$25],y     4846  ld([v6502_ADH],Y)               #9,11
              1086 0118  ld   [$18]       4847  ld([v6502_A])                   #10
              1087 fc90  bra  .eor13      4848  bra('.eor13')                   #11
              1088 2d00  anda [y,x]       4849  anda([Y,X])                     #12
                                          4850
                                          4851  label('v6502_ORA')
v6502_ORA:    1089 1525  ld   [$25],y     4852  ld([v6502_ADH],Y)               #9
              108a 0118  ld   [$18]       4853  ld([v6502_A])                   #10
              108b fc90  bra  .eor13      4854  bra('.eor13')                   #11
                                          4855  label('v6502_EOR')
v6502_EOR:    108c 4d00  ora  [y,x]       4856  ora([Y,X])                      #12,9
                                          4857  #
                                          4858  #label('v6502_EOR')
                                          4859  #nop()                          #9 Overlap
              108d 1525  ld   [$25],y     4860  ld([v6502_ADH],Y)               #10
              108e 0118  ld   [$18]       4861  ld([v6502_A])                   #11
              108f 6d00  xora [y,x]       4862  xora([Y,X])                     #12
                                          4863  label('.eor13')
.eor13:       1090 c218  st   [$18]       4864  st([v6502_A])                   #13
              1091 c228  st   [$28]       4865  st([v6502_Qz])                  #14 Z flag
              1092 c229  st   [$29]       4866  st([v6502_Qn])                  #15 N flag
              1093 140e  ld   $0e,y       4867  ld(hi('v6502_next'),Y)          #16
              1094 00f6  ld   $f6         4868  ld(-20/2)                       #17
              1095 e020  jmp  y,$20       4869  jmp(Y,'v6502_next')             #18
                                          4870  #nop()                          #19 Overlap
                                          4871  #
                                          4872  label('v6502_JMP1')
v6502_JMP1:   1096 140d  ld   $0d,y       4873  ld(hi('v6502_jmp1'),Y)          #9,19 JMP $DDDD
              1097 e0d1  jmp  y,$d1       4874  jmp(Y,'v6502_jmp1')             #10
                                          4875  #nop()                          #11 Overlap
                                          4876  label('v6502_JMP2')
v6502_JMP2:   1098 140d  ld   $0d,y       4877  ld(hi('v6502_jmp2'),Y)          #9 JMP ($DDDD)
              1099 e0d9  jmp  y,$d9       4878  jmp(Y,'v6502_jmp2')             #10
                                          4879  #nop()                          #11 Overlap
                                          4880  label('v6502_JSR')
v6502_JSR:    109a 011c  ld   [$1c]       4881  ld([v6502_S])                   #9,11
              109b a002  suba $02         4882  suba(2)                         #10
              109c d21c  st   [$1c],x     4883  st([v6502_S],X)                 #11
              109d 1400  ld   $00,y       4884  ld(v6502_Stack>>8,Y)            #12
              109e 011b  ld   [$1b]       4885  ld([v6502_PCH])                 #13 Let ADL,ADH point to L operand
              109f c225  st   [$25]       4886  st([v6502_ADH])                 #14
              10a0 011a  ld   [$1a]       4887  ld([v6502_PCL])                 #15
              10a1 c224  st   [$24]       4888  st([v6502_ADL])                 #16
              10a2 8001  adda $01         4889  adda(1)                         #17 Push ++PC
              10a3 c21a  st   [$1a]       4890  st([v6502_PCL])                 #18 Let PCL,PCH point to H operand
              10a4 de00  st   [y,x++]     4891  st([Y,Xpp])                     #19
              10a5 f0a8  beq  $10a8       4892  beq(pc()+3)                     #20
              10a6 fca9  bra  $10a9       4893  bra(pc()+3)                     #21
              10a7 0000  ld   $00         4894  ld(0)                           #22
              10a8 0001  ld   $01         4895  ld(1)                           #22(!)
              10a9 811b  adda [$1b]       4896  adda([v6502_PCH])               #23
              10aa c21b  st   [$1b]       4897  st([v6502_PCH])                 #24
              10ab ce00  st   [y,x]       4898  st([Y,X])                       #25
              10ac 1124  ld   [$24],x     4899  ld([v6502_ADL],X)               #26 Fetch L
              10ad 1525  ld   [$25],y     4900  ld([v6502_ADH],Y)               #27
              10ae 0d00  ld   [y,x]       4901  ld([Y,X])                       #28
              10af 111a  ld   [$1a],x     4902  ld([v6502_PCL],X)               #29 Fetch H
              10b0 c21a  st   [$1a]       4903  st([v6502_PCL])                 #30
              10b1 151b  ld   [$1b],y     4904  ld([v6502_PCH],Y)               #31
              10b2 0d00  ld   [y,x]       4905  ld([Y,X])                       #32
              10b3 c21b  st   [$1b]       4906  st([v6502_PCH])                 #33
              10b4 140e  ld   $0e,y       4907  ld(hi('v6502_next'),Y)          #34
              10b5 00ed  ld   $ed         4908  ld(-38/2)                       #35
              10b6 e020  jmp  y,$20       4909  jmp(Y,'v6502_next')             #36
                                          4910  #nop()                          #37 Overlap
                                          4911  #
                                          4912  label('v6502_INC')
v6502_INC:    10b7 1411  ld   $11,y       4913  ld(hi('v6502_inc'),Y)           #9,37
              10b8 e00e  jmp  y,$0e       4914  jmp(Y,'v6502_inc')              #10
                                          4915  #nop()                          #11 Overlap
                                          4916  label('v6502_LDA')
v6502_LDA:    10b9 1411  ld   $11,y       4917  ld(hi('v6502_lda'),Y)           #9,11
              10ba e018  jmp  y,$18       4918  jmp(Y,'v6502_lda')              #10
                                          4919  #nop()                          #11 Overlap
                                          4920  label('v6502_LDX')
v6502_LDX:    10bb 1411  ld   $11,y       4921  ld(hi('v6502_ldx'),Y)           #9,11
              10bc e022  jmp  y,$22       4922  jmp(Y,'v6502_ldx')              #10
                                          4923  #nop()                          #11 Overlap
                                          4924  label('v6502_LDX2')
v6502_LDX2:   10bd 1411  ld   $11,y       4925  ld(hi('v6502_ldx2'),Y)          #9,11
              10be e02a  jmp  y,$2a       4926  jmp(Y,'v6502_ldx2')             #10
                                          4927  #nop()                          #11 Overlap
                                          4928  label('v6502_LDY')
v6502_LDY:    10bf 1411  ld   $11,y       4929  ld(hi('v6502_ldy'),Y)           #9,11
              10c0 e026  jmp  y,$26       4930  jmp(Y,'v6502_ldy')              #10
                                          4931  #nop()                          #11 Overlap
                                          4932  label('v6502_STA')
v6502_STA:    10c1 1411  ld   $11,y       4933  ld(hi('v6502_sta'),Y)           #9,11
              10c2 e034  jmp  y,$34       4934  jmp(Y,'v6502_sta')              #10
                                          4935  #nop()                          #11 Overlap
                                          4936  label('v6502_STX')
v6502_STX:    10c3 1411  ld   $11,y       4937  ld(hi('v6502_stx'),Y)           #9,11
              10c4 e03a  jmp  y,$3a       4938  jmp(Y,'v6502_stx')              #10
                                          4939  #nop()                          #11 Overlap
                                          4940  label('v6502_STX2')
v6502_STX2:   10c5 1411  ld   $11,y       4941  ld(hi('v6502_stx2'),Y)          #9,11
              10c6 e040  jmp  y,$40       4942  jmp(Y,'v6502_stx2')             #10
                                          4943  #nop()                          #11 Overlap
                                          4944  label('v6502_STY')
v6502_STY:    10c7 1411  ld   $11,y       4945  ld(hi('v6502_sty'),Y)           #9,11
              10c8 e048  jmp  y,$48       4946  jmp(Y,'v6502_sty')              #10
                                          4947  #nop()                          #11 Overlap
                                          4948  label('v6502_TAX')
v6502_TAX:    10c9 1411  ld   $11,y       4949  ld(hi('v6502_tax'),Y)           #9,11
              10ca e04d  jmp  y,$4d       4950  jmp(Y,'v6502_tax')              #10
                                          4951  #nop()                          #11 Overlap
                                          4952  label('v6502_TAY')
v6502_TAY:    10cb 1411  ld   $11,y       4953  ld(hi('v6502_tay'),Y)           #9,11
              10cc e062  jmp  y,$62       4954  jmp(Y,'v6502_tay')              #10
                                          4955  #nop()                          #11 Overlap
                                          4956  label('v6502_TXA')
v6502_TXA:    10cd 1411  ld   $11,y       4957  ld(hi('v6502_txa'),Y)           #9,11
              10ce e065  jmp  y,$65       4958  jmp(Y,'v6502_txa')              #10
                                          4959  #nop()                          #11 Overlap
                                          4960  label('v6502_TYA')
v6502_TYA:    10cf 1411  ld   $11,y       4961  ld(hi('v6502_tya'),Y)           #9,11
              10d0 e068  jmp  y,$68       4962  jmp(Y,'v6502_tya')              #10
                                          4963  #nop()                          #11 Overlap
                                          4964  label('v6502_CLV')
v6502_CLV:    10d1 1411  ld   $11,y       4965  ld(hi('v6502_clv'),Y)           #9,11
              10d2 e076  jmp  y,$76       4966  jmp(Y,'v6502_clv')              #10
                                          4967  #nop()                          #11 Overlap
                                          4968  label('v6502_RTI')
v6502_RTI:    10d3 1411  ld   $11,y       4969  ld(hi('v6502_rti'),Y)           #9,11
              10d4 e0e4  jmp  y,$e4       4970  jmp(Y,'v6502_rti')              #10
                                          4971  #nop()                          #11 Overlap
                                          4972  label('v6502_ROR')
v6502_ROR:    10d5 140d  ld   $0d,y       4973  ld(hi('v6502_ror'),Y)           #9,11
              10d6 e08f  jmp  y,$8f       4974  jmp(Y,'v6502_ror')              #10
                                          4975  #nop()                          #11 Overlap
                                          4976  label('v6502_LSR')
v6502_LSR:    10d7 140d  ld   $0d,y       4977  ld(hi('v6502_lsr'),Y)           #9,11
              10d8 e0a9  jmp  y,$a9       4978  jmp(Y,'v6502_lsr')              #10
                                          4979  #nop()                          #11 Overlap
                                          4980  label('v6502_PHA')
v6502_PHA:    10d9 140d  ld   $0d,y       4981  ld(hi('v6502_pha'),Y)           #9,11
              10da e0ee  jmp  y,$ee       4982  jmp(Y,'v6502_pha')              #10
                                          4983  #nop()                          #11 Overlap
                                          4984  label('v6502_CLI')
v6502_CLI:    10db 1411  ld   $11,y       4985  ld(hi('v6502_cli'),Y)           #9,11
              10dc e06b  jmp  y,$6b       4986  jmp(Y,'v6502_cli')              #10
                                          4987  #nop()                          #11 Overlap
                                          4988  label('v6502_RTS')
v6502_RTS:    10dd 1411  ld   $11,y       4989  ld(hi('v6502_rts'),Y)           #9,11
              10de e08f  jmp  y,$8f       4990  jmp(Y,'v6502_rts')              #10
                                          4991  #nop()                          #11 Overlap
                                          4992  label('v6502_PLA')
v6502_PLA:    10df 140d  ld   $0d,y       4993  ld(hi('v6502_pla'),Y)           #9,11
              10e0 e0e3  jmp  y,$e3       4994  jmp(Y,'v6502_pla')              #10
                                          4995  #nop()                          #11 Overlap
                                          4996  label('v6502_SEI')
v6502_SEI:    10e1 1411  ld   $11,y       4997  ld(hi('v6502_sei'),Y)           #9,11
              10e2 e06e  jmp  y,$6e       4998  jmp(Y,'v6502_sei')              #10
                                          4999  #nop()                          #11 Overlap
                                          5000  label('v6502_TXS')
v6502_TXS:    10e3 1411  ld   $11,y       5001  ld(hi('v6502_txs'),Y)           #9,11
              10e4 e05e  jmp  y,$5e       5002  jmp(Y,'v6502_txs')              #10
                                          5003  #nop()                          #11 Overlap
                                          5004  label('v6502_TSX')
v6502_TSX:    10e5 1411  ld   $11,y       5005  ld(hi('v6502_tsx'),Y)           #9,11
              10e6 e054  jmp  y,$54       5006  jmp(Y,'v6502_tsx')              #10
                                          5007  #nop()                          #11 Overlap
                                          5008  label('v6502_CPY')
v6502_CPY:    10e7 1411  ld   $11,y       5009  ld(hi('v6502_cpy'),Y)           #9,11
              10e8 e0bd  jmp  y,$bd       5010  jmp(Y,'v6502_cpy')              #10
                                          5011  #nop()                          #11 Overlap
                                          5012  label('v6502_CMP')
v6502_CMP:    10e9 1411  ld   $11,y       5013  ld(hi('v6502_cmp'),Y)           #9,11
              10ea e0be  jmp  y,$be       5014  jmp(Y,'v6502_cmp')              #10
                                          5015  #nop()                          #11 Overlap
                                          5016  label('v6502_DEC')
v6502_DEC:    10eb 1411  ld   $11,y       5017  ld(hi('v6502_dec'),Y)           #9,11
              10ec e005  jmp  y,$05       5018  jmp(Y,'v6502_dec')              #10
                                          5019  #nop()                          #11 Overlap
                                          5020  label('v6502_CLD')
v6502_CLD:    10ed 1411  ld   $11,y       5021  ld(hi('v6502_cld'),Y)           #9,11
              10ee e071  jmp  y,$71       5022  jmp(Y,'v6502_cld')              #10
                                          5023  #nop()                          #11 Overlap
                                          5024  label('v6502_CPX')
v6502_CPX:    10ef 1411  ld   $11,y       5025  ld(hi('v6502_cpx'),Y)           #9,11
              10f0 e0bb  jmp  y,$bb       5026  jmp(Y,'v6502_cpx')              #10
                                          5027  #nop()                          #11 Overlap
                                          5028  label('v6502_ASL')
v6502_ASL:    10f1 140d  ld   $0d,y       5029  ld(hi('v6502_asl'),Y)           #9,11
              10f2 e0cb  jmp  y,$cb       5030  jmp(Y,'v6502_asl')              #10
                                          5031  #nop()                          #11 Overlap
                                          5032  label('v6502_PHP')
v6502_PHP:    10f3 1411  ld   $11,y       5033  ld(hi('v6502_php'),Y)           #9,11
              10f4 e0a2  jmp  y,$a2       5034  jmp(Y,'v6502_php')              #10
                                          5035  #nop()                          #11 Overlap
                                          5036  label('v6502_BIT')
v6502_BIT:    10f5 1411  ld   $11,y       5037  ld(hi('v6502_bit'),Y)           #9
              10f6 e07d  jmp  y,$7d       5038  jmp(Y,'v6502_bit')              #10
                                          5039  #nop()                          #11 Overlap
                                          5040  label('v6502_ROL')
v6502_ROL:    10f7 140d  ld   $0d,y       5041  ld(hi('v6502_rol'),Y)           #9
              10f8 e0b8  jmp  y,$b8       5042  jmp(Y,'v6502_rol')              #10
                                          5043  #nop()                          #11 Overlap
                                          5044  label('v6502_PLP')
v6502_PLP:    10f9 1411  ld   $11,y       5045  ld(hi('v6502_plp'),Y)           #9
              10fa e0d4  jmp  y,$d4       5046  jmp(Y,'v6502_plp')              #10
                                          5047  #nop()                          #11 Overlap
                                          5048  label('v6502_SED')              # Decimal mode not implemented
v6502_SED:    10fb 1411  ld   $11,y       5049  ld(hi('v6502_sed'),Y)           #9,11
              10fc e074  jmp  y,$74       5050  jmp(Y,'v6502_sed')              #10
                                          5051  #nop()                          #11 Overlap
                                          5052  label('v6502_ILL') # All illegal opcodes map to BRK, except $FF which will crash
                                          5053  label('v6502_BRK')
v6502_ILL:
v6502_BRK:    10fd 140d  ld   $0d,y       5054  ld(hi('v6502_brk'),Y)           #9
              10fe e0f6  jmp  y,$f6       5055  jmp(Y,'v6502_brk')              #10
                                          5056  #nop()                          #11 Overlap
                                          5057
                                          5058  while pc()&255 < 255:
                                          5059    nop()
                                          5060
                                          5061  # `v6502_RESUME' is the interpreter's secondary entry point for when
                                          5062  # the opcode and operands were already fetched, just before the last hPulse.
                                          5063  # It must be at $xxff, prefably somewhere in v6502's own code pages.
                                          5064  label('v6502_RESUME')
                                          5065  assert (pc()&255) == 255
v6502_RESUME: 10ff a005  suba $05         5066  suba(v6502_adjust)              #0,11 v6502 secondary entry point
                                          5067  # --- Page boundary ---
                                          5068  align(0x100,size=0x200)
              1100 c215  st   [$15]       5069  st([vTicks])                    #1
              1101 1124  ld   [$24],x     5070  ld([v6502_ADL],X)               #2
              1102 140f  ld   $0f,y       5071  ld(hi('v6502_execute'),Y)       #3
              1103 e126  jmp  y,[$26]     5072  jmp(Y,[v6502_IR])               #4
              1104 fcff  bra  $ff         5073  bra(255)                        #5
                                          5074
                                          5075  label('v6502_dec')
v6502_dec:    1105 1525  ld   [$25],y     5076  ld([v6502_ADH],Y)               #12
              1106 0d00  ld   [y,x]       5077  ld([Y,X])                       #13
              1107 a001  suba $01         5078  suba(1)                         #14
              1108 ce00  st   [y,x]       5079  st([Y,X])                       #15
              1109 c228  st   [$28]       5080  st([v6502_Qz])                  #16 Z flag
              110a c229  st   [$29]       5081  st([v6502_Qn])                  #17 N flag
              110b 140e  ld   $0e,y       5082  ld(hi('v6502_next'),Y)          #18
              110c 00f5  ld   $f5         5083  ld(-22/2)                       #19
              110d e020  jmp  y,$20       5084  jmp(Y,'v6502_next')             #20
                                          5085  #nop()                          #21 Overlap
                                          5086  #
                                          5087  label('v6502_inc')
v6502_inc:    110e 1525  ld   [$25],y     5088  ld([v6502_ADH],Y)               #12,22
              110f 0d00  ld   [y,x]       5089  ld([Y,X])                       #13
              1110 8001  adda $01         5090  adda(1)                         #14
              1111 ce00  st   [y,x]       5091  st([Y,X])                       #15
              1112 c228  st   [$28]       5092  st([v6502_Qz])                  #16 Z flag
              1113 c229  st   [$29]       5093  st([v6502_Qn])                  #17 N flag
              1114 140e  ld   $0e,y       5094  ld(hi('v6502_next'),Y)          #18
              1115 00f5  ld   $f5         5095  ld(-22/2)                       #19
              1116 e020  jmp  y,$20       5096  jmp(Y,'v6502_next')             #20
              1117 0200  nop              5097  nop()                           #21
                                          5098
                                          5099  label('v6502_lda')
v6502_lda:    1118 0200  nop              5100  nop()                           #12
              1119 1525  ld   [$25],y     5101  ld([v6502_ADH],Y)               #13
              111a 0d00  ld   [y,x]       5102  ld([Y,X])                       #14
              111b c218  st   [$18]       5103  st([v6502_A])                   #15
                                          5104  label('.lda16')
.lda16:       111c c228  st   [$28]       5105  st([v6502_Qz])                  #16 Z flag
              111d c229  st   [$29]       5106  st([v6502_Qn])                  #17 N flag
              111e 0200  nop              5107  nop()                           #18
              111f 140e  ld   $0e,y       5108  ld(hi('v6502_next'),Y)          #19
              1120 e020  jmp  y,$20       5109  jmp(Y,'v6502_next')             #20
              1121 00f5  ld   $f5         5110  ld(-22/2)                       #21
                                          5111
                                          5112  label('v6502_ldx')
v6502_ldx:    1122 1525  ld   [$25],y     5113  ld([v6502_ADH],Y)               #12
              1123 0d00  ld   [y,x]       5114  ld([Y,X])                       #13
              1124 fc1c  bra  .lda16      5115  bra('.lda16')                   #14
              1125 c22a  st   [$2a]       5116  st([v6502_X])                   #15
                                          5117
                                          5118  label('v6502_ldy')
v6502_ldy:    1126 1525  ld   [$25],y     5119  ld([v6502_ADH],Y)               #12
              1127 0d00  ld   [y,x]       5120  ld([Y,X])                       #13
              1128 fc1c  bra  .lda16      5121  bra('.lda16')                   #14
              1129 c22b  st   [$2b]       5122  st([v6502_Y])                   #15
                                          5123
                                          5124  label('v6502_ldx2')
v6502_ldx2:   112a 0124  ld   [$24]       5125  ld([v6502_ADL])                 #12 Special case $B6: LDX $DD,Y
              112b a12a  suba [$2a]       5126  suba([v6502_X])                 #13 Undo X offset
              112c 912b  adda [$2b],x     5127  adda([v6502_Y],X)               #14 Apply Y instead
              112d 0500  ld   [x]         5128  ld([X])                         #15
              112e c22a  st   [$2a]       5129  st([v6502_X])                   #16
              112f c228  st   [$28]       5130  st([v6502_Qz])                  #17 Z flag
              1130 c229  st   [$29]       5131  st([v6502_Qn])                  #18 N flag
              1131 140e  ld   $0e,y       5132  ld(hi('v6502_next'),Y)          #19
              1132 e020  jmp  y,$20       5133  jmp(Y,'v6502_next')             #20
              1133 00f5  ld   $f5         5134  ld(-22/2)                       #21
                                          5135
                                          5136  label('v6502_sta')
v6502_sta:    1134 1525  ld   [$25],y     5137  ld([v6502_ADH],Y)               #12
              1135 0118  ld   [$18]       5138  ld([v6502_A])                   #13
              1136 ce00  st   [y,x]       5139  st([Y,X])                       #14
              1137 140e  ld   $0e,y       5140  ld(hi('v6502_next'),Y)          #15
              1138 e020  jmp  y,$20       5141  jmp(Y,'v6502_next')             #16
              1139 00f7  ld   $f7         5142  ld(-18/2)                       #17
                                          5143
                                          5144  label('v6502_stx')
v6502_stx:    113a 1525  ld   [$25],y     5145  ld([v6502_ADH],Y)               #12
              113b 012a  ld   [$2a]       5146  ld([v6502_X])                   #13
              113c ce00  st   [y,x]       5147  st([Y,X])                       #14
              113d 140e  ld   $0e,y       5148  ld(hi('v6502_next'),Y)          #15
              113e e020  jmp  y,$20       5149  jmp(Y,'v6502_next')             #16
              113f 00f7  ld   $f7         5150  ld(-18/2)                       #17
                                          5151
                                          5152  label('v6502_stx2')
v6502_stx2:   1140 0124  ld   [$24]       5153  ld([v6502_ADL])                 #12 Special case $96: STX $DD,Y
              1141 a12a  suba [$2a]       5154  suba([v6502_X])                 #13 Undo X offset
              1142 912b  adda [$2b],x     5155  adda([v6502_Y],X)               #14 Apply Y instead
              1143 012a  ld   [$2a]       5156  ld([v6502_X])                   #15
              1144 c600  st   [x]         5157  st([X])                         #16
              1145 140e  ld   $0e,y       5158  ld(hi('v6502_next'),Y)          #17
              1146 e020  jmp  y,$20       5159  jmp(Y,'v6502_next')             #18
              1147 00f6  ld   $f6         5160  ld(-20/2)                       #19
                                          5161
                                          5162  label('v6502_sty')
v6502_sty:    1148 1525  ld   [$25],y     5163  ld([v6502_ADH],Y)               #12
              1149 012b  ld   [$2b]       5164  ld([v6502_Y])                   #13
              114a ce00  st   [y,x]       5165  st([Y,X])                       #14
              114b 140e  ld   $0e,y       5166  ld(hi('v6502_next'),Y)          #15
              114c e020  jmp  y,$20       5167  jmp(Y,'v6502_next')             #16
                                          5168  label('v6502_tax')
v6502_tax:    114d 00f7  ld   $f7         5169  ld(-18/2)                       #17,12
                                          5170  #
                                          5171  #label('v6502_tax')
                                          5172  #nop()                          #12 Overlap
              114e 0118  ld   [$18]       5173  ld([v6502_A])                   #13
              114f c22a  st   [$2a]       5174  st([v6502_X])                   #14
                                          5175  label('.tax15')
.tax15:       1150 c228  st   [$28]       5176  st([v6502_Qz])                  #15 Z flag
              1151 c229  st   [$29]       5177  st([v6502_Qn])                  #16 N flag
              1152 140e  ld   $0e,y       5178  ld(hi('v6502_next'),Y)          #17
              1153 e020  jmp  y,$20       5179  jmp(Y,'v6502_next')             #18
                                          5180  label('v6502_tsx')
v6502_tsx:    1154 00f6  ld   $f6         5181  ld(-20/2)                       #19
                                          5182  #
                                          5183  #label('v6502_tsx')
                                          5184  #nop()                          #12 Overlap
              1155 011c  ld   [$1c]       5185  ld([v6502_S])                   #13
              1156 a001  suba $01         5186  suba(1)                         #14 Shift down on export
              1157 c22a  st   [$2a]       5187  st([v6502_X])                   #15
                                          5188  label('.tsx16')
.tsx16:       1158 c228  st   [$28]       5189  st([v6502_Qz])                  #16 Z flag
              1159 c229  st   [$29]       5190  st([v6502_Qn])                  #17 N flag
              115a 0200  nop              5191  nop()                           #18
              115b 140e  ld   $0e,y       5192  ld(hi('v6502_next'),Y)          #19
              115c e020  jmp  y,$20       5193  jmp(Y,'v6502_next')             #20
              115d 00f5  ld   $f5         5194  ld(-22/2)                       #21
                                          5195
                                          5196  label('v6502_txs')
v6502_txs:    115e 012a  ld   [$2a]       5197  ld([v6502_X])                   #12
              115f 8001  adda $01         5198  adda(1)                         #13 Shift up on import
              1160 fc58  bra  .tsx16      5199  bra('.tsx16')                   #14
              1161 c21c  st   [$1c]       5200  st([v6502_S])                   #15
                                          5201
                                          5202  label('v6502_tay')
v6502_tay:    1162 0118  ld   [$18]       5203  ld([v6502_A])                   #12
              1163 fc50  bra  .tax15      5204  bra('.tax15')                   #13
              1164 c22b  st   [$2b]       5205  st([v6502_Y])                   #14
                                          5206
                                          5207  label('v6502_txa')
v6502_txa:    1165 012a  ld   [$2a]       5208  ld([v6502_X])                   #12
              1166 fc50  bra  .tax15      5209  bra('.tax15')                   #13
              1167 c218  st   [$18]       5210  st([v6502_A])                   #14
                                          5211
                                          5212  label('v6502_tya')
v6502_tya:    1168 012b  ld   [$2b]       5213  ld([v6502_Y])                   #12
              1169 fc50  bra  .tax15      5214  bra('.tax15')                   #13
              116a c218  st   [$18]       5215  st([v6502_A])                   #14
                                          5216
                                          5217  label('v6502_cli')
v6502_cli:    116b 0127  ld   [$27]       5218  ld([v6502_P])                   #12
              116c fc79  bra  .clv15      5219  bra('.clv15')                   #13
              116d 20fb  anda $fb         5220  anda(~v6502_Iflag)              #14
                                          5221
                                          5222  label('v6502_sei')
v6502_sei:    116e 0127  ld   [$27]       5223  ld([v6502_P])                   #12
              116f fc79  bra  .clv15      5224  bra('.clv15')                   #13
              1170 4004  ora  $04         5225  ora(v6502_Iflag)                #14
                                          5226
                                          5227  label('v6502_cld')
v6502_cld:    1171 0127  ld   [$27]       5228  ld([v6502_P])                   #12
              1172 fc79  bra  .clv15      5229  bra('.clv15')                   #13
              1173 20f7  anda $f7         5230  anda(~v6502_Dflag)              #14
                                          5231
                                          5232  label('v6502_sed')
v6502_sed:    1174 0127  ld   [$27]       5233  ld([v6502_P])                   #12
              1175 fc79  bra  .clv15      5234  bra('.clv15')                   #13
                                          5235  label('v6502_clv')
v6502_clv:    1176 4008  ora  $08         5236  ora(v6502_Dflag)                #14,12 Overlap
                                          5237  #
                                          5238  #label('v6502_clv')
                                          5239  #nop()                          #12
              1177 0127  ld   [$27]       5240  ld([v6502_P])                   #13
              1178 207f  anda $7f         5241  anda(~v6502_Vemu)               #14
                                          5242  label('.clv15')
.clv15:       1179 c227  st   [$27]       5243  st([v6502_P])                   #15
              117a 140e  ld   $0e,y       5244  ld(hi('v6502_next'),Y)          #16
              117b 00f6  ld   $f6         5245  ld(-20/2)                       #17
              117c e020  jmp  y,$20       5246  jmp(Y,'v6502_next')             #18
                                          5247  label('v6502_bit')
v6502_bit:    117d 0200  nop              5248  nop()                           #19,12
                                          5249  #
                                          5250  #label('v6502_bit')
                                          5251  #nop()                          #12 Overlap
              117e 1124  ld   [$24],x     5252  ld([v6502_ADL],X)               #13
              117f 1525  ld   [$25],y     5253  ld([v6502_ADH],Y)               #14
              1180 0d00  ld   [y,x]       5254  ld([Y,X])                       #15
              1181 c229  st   [$29]       5255  st([v6502_Qn])                  #16 N flag
              1182 2118  anda [$18]       5256  anda([v6502_A])                 #17 This is a reason we keep N and Z in separate bytes
              1183 c228  st   [$28]       5257  st([v6502_Qz])                  #18 Z flag
              1184 0127  ld   [$27]       5258  ld([v6502_P])                   #19
              1185 207f  anda $7f         5259  anda(~v6502_Vemu)               #20
              1186 c227  st   [$27]       5260  st([v6502_P])                   #21
              1187 0d00  ld   [y,x]       5261  ld([Y,X])                       #22
              1188 8200  adda ac          5262  adda(AC)                        #23
              1189 2080  anda $80         5263  anda(v6502_Vemu)                #24
              118a 4127  ora  [$27]       5264  ora([v6502_P])                  #25
              118b c227  st   [$27]       5265  st([v6502_P])                   #26 Update V
              118c 140e  ld   $0e,y       5266  ld(hi('v6502_next'),Y)          #27
              118d e020  jmp  y,$20       5267  jmp(Y,'v6502_next')             #28
              118e 00f1  ld   $f1         5268  ld(-30/2)                       #29
                                          5269
                                          5270  label('v6502_rts')
v6502_rts:    118f 011c  ld   [$1c]       5271  ld([v6502_S])                   #12
              1190 1200  ld   ac,x        5272  ld(AC,X)                        #13
              1191 8002  adda $02         5273  adda(2)                         #14
              1192 c21c  st   [$1c]       5274  st([v6502_S])                   #15
              1193 1400  ld   $00,y       5275  ld(0,Y)                         #16
              1194 0d00  ld   [y,x]       5276  ld([Y,X])                       #17
              1195 de00  st   [y,x++]     5277  st([Y,Xpp])                     #18 Just X++
              1196 8001  adda $01         5278  adda(1)                         #19
              1197 c21a  st   [$1a]       5279  st([v6502_PCL])                 #20
              1198 f09b  beq  $119b       5280  beq(pc()+3)                     #21
              1199 fc9c  bra  $119c       5281  bra(pc()+3)                     #22
              119a 0000  ld   $00         5282  ld(0)                           #23
              119b 0001  ld   $01         5283  ld(1)                           #23(!)
              119c 8d00  adda [y,x]       5284  adda([Y,X])                     #24
              119d c21b  st   [$1b]       5285  st([v6502_PCH])                 #25
              119e 0200  nop              5286  nop()                           #26
              119f 140e  ld   $0e,y       5287  ld(hi('v6502_next'),Y)          #27
              11a0 e020  jmp  y,$20       5288  jmp(Y,'v6502_next')             #28
              11a1 00f1  ld   $f1         5289  ld(-30/2)                       #29
                                          5290
                                          5291  label('v6502_php')
v6502_php:    11a2 011c  ld   [$1c]       5292  ld([v6502_S])                   #12
              11a3 a001  suba $01         5293  suba(1)                         #13
              11a4 d21c  st   [$1c],x     5294  st([v6502_S],X)                 #14
              11a5 0127  ld   [$27]       5295  ld([v6502_P])                   #15
              11a6 20bd  anda $bd         5296  anda(~v6502_Vflag&~v6502_Zflag) #16 Keep Vemu,B,D,I,C
              11a7 f4aa  bge  $11aa       5297  bpl(pc()+3)                     #17 V to bit 6 and clear N
              11a8 fcaa  bra  $11aa       5298  bra(pc()+2)                     #18
              11a9 60c0  xora $c0         5299  xora(v6502_Vflag^v6502_Vemu)    #19
              11aa c600  st   [x]         5300  st([X])                         #19,20
              11ab 0128  ld   [$28]       5301  ld([v6502_Qz])                  #21 Z flag
              11ac f0af  beq  $11af       5302  beq(pc()+3)                     #22
              11ad fcb0  bra  $11b0       5303  bra(pc()+3)                     #23
              11ae 0000  ld   $00         5304  ld(0)                           #24
              11af 0002  ld   $02         5305  ld(v6502_Zflag)                 #24(!)
              11b0 4500  ora  [x]         5306  ora([X])                        #25
              11b1 c600  st   [x]         5307  st([X])                         #26
              11b2 0129  ld   [$29]       5308  ld([v6502_Qn])                  #27 N flag
              11b3 2080  anda $80         5309  anda(0x80)                      #28
              11b4 4500  ora  [x]         5310  ora([X])                        #29
              11b5 4020  ora  $20         5311  ora(v6502_Uflag)                #30 Unused bit
              11b6 c600  st   [x]         5312  st([X])                         #31
              11b7 0200  nop              5313  nop()                           #32
              11b8 140e  ld   $0e,y       5314  ld(hi('v6502_next'),Y)          #33
              11b9 e020  jmp  y,$20       5315  jmp(Y,'v6502_next')             #34
              11ba 00ee  ld   $ee         5316  ld(-36/2)                       #35
                                          5317
                                          5318  label('v6502_cpx')
v6502_cpx:    11bb fcc0  bra  .cmp14      5319  bra('.cmp14')                   #12
              11bc 012a  ld   [$2a]       5320  ld([v6502_X])                   #13
                                          5321
                                          5322  label('v6502_cpy')
v6502_cpy:    11bd fcc0  bra  .cmp14      5323  bra('.cmp14')                   #12
                                          5324  label('v6502_cmp')
v6502_cmp:    11be 012b  ld   [$2b]       5325  ld([v6502_Y])                   #13,12
                                          5326  #
                                          5327  #label('v6502_cmp')             #12 Overlap
                                          5328  assert v6502_Cflag == 1
              11bf 0118  ld   [$18]       5329  ld([v6502_A])                   #13
                                          5330  label('.cmp14')
.cmp14:       11c0 1525  ld   [$25],y     5331  ld([v6502_ADH],Y)               #14
              11c1 e8c7  blt  .cmp17      5332  bmi('.cmp17')                   #15 Carry?
              11c2 ad00  suba [y,x]       5333  suba([Y,X])                     #16
              11c3 c228  st   [$28]       5334  st([v6502_Qz])                  #17 Z flag
              11c4 c229  st   [$29]       5335  st([v6502_Qn])                  #18 N flag
              11c5 fccb  bra  .cmp21      5336  bra('.cmp21')                   #19
              11c6 4d00  ora  [y,x]       5337  ora([Y,X])                      #20
                                          5338  label('.cmp17')
.cmp17:       11c7 c228  st   [$28]       5339  st([v6502_Qz])                  #17 Z flag
              11c8 c229  st   [$29]       5340  st([v6502_Qn])                  #18 N flag
              11c9 2d00  anda [y,x]       5341  anda([Y,X])                     #19
              11ca 0200  nop              5342  nop()                           #20
                                          5343  label('.cmp21')
.cmp21:       11cb 6080  xora $80         5344  xora(0x80)                      #21
              11cc 3080  anda $80,x       5345  anda(0x80,X)                    #22 Move carry to bit 0
              11cd 0127  ld   [$27]       5346  ld([v6502_P])                   #23 C flag
              11ce 20fe  anda $fe         5347  anda(~1)                        #24
              11cf 4500  ora  [x]         5348  ora([X])                        #25
              11d0 c227  st   [$27]       5349  st([v6502_P])                   #26
              11d1 140e  ld   $0e,y       5350  ld(hi('v6502_next'),Y)          #27
              11d2 e020  jmp  y,$20       5351  jmp(Y,'v6502_next')             #28
              11d3 00f1  ld   $f1         5352  ld(-30/2)                       #29
                                          5353
                                          5354  label('v6502_plp')
                                          5355  assert v6502_Nflag == 128
                                          5356  assert 2*v6502_Vflag == v6502_Vemu
v6502_plp:    11d4 011c  ld   [$1c]       5357  ld([v6502_S])                   #12
              11d5 1200  ld   ac,x        5358  ld(AC,X)                        #13
              11d6 8001  adda $01         5359  adda(1)                         #14
              11d7 c21c  st   [$1c]       5360  st([v6502_S])                   #15
              11d8 0500  ld   [x]         5361  ld([X])                         #16
              11d9 c229  st   [$29]       5362  st([v6502_Qn])                  #17 N flag
              11da 2002  anda $02         5363  anda(v6502_Zflag)               #18
              11db 6002  xora $02         5364  xora(v6502_Zflag)               #19
              11dc c228  st   [$28]       5365  st([v6502_Qz])                  #20 Z flag
              11dd 0500  ld   [x]         5366  ld([X])                         #21
              11de 207f  anda $7f         5367  anda(~v6502_Vemu)               #22 V to bit 7
              11df 8040  adda $40         5368  adda(v6502_Vflag)               #23
              11e0 c227  st   [$27]       5369  st([v6502_P])                   #24 All other flags
              11e1 140e  ld   $0e,y       5370  ld(hi('v6502_next'),Y)          #25
              11e2 e020  jmp  y,$20       5371  jmp(Y,'v6502_next')             #26
              11e3 00f2  ld   $f2         5372  ld(-28/2)                       #27
                                          5373
                                          5374  label('v6502_rti')
v6502_rti:    11e4 011c  ld   [$1c]       5375  ld([v6502_S])                   #12
              11e5 1200  ld   ac,x        5376  ld(AC,X)                        #13
              11e6 8003  adda $03         5377  adda(3)                         #14
              11e7 c21c  st   [$1c]       5378  st([v6502_S])                   #15
              11e8 0500  ld   [x]         5379  ld([X])                         #16
              11e9 c229  st   [$29]       5380  st([v6502_Qn])                  #17 N flag
              11ea 2002  anda $02         5381  anda(v6502_Zflag)               #18
              11eb 6002  xora $02         5382  xora(v6502_Zflag)               #19
              11ec c228  st   [$28]       5383  st([v6502_Qz])                  #20 Z flag
              11ed 1400  ld   $00,y       5384  ld(0,Y)                         #21
              11ee 0d00  ld   [y,x]       5385  ld([Y,X])                       #22
              11ef de00  st   [y,x++]     5386  st([Y,Xpp])                     #23 Just X++
              11f0 207f  anda $7f         5387  anda(~v6502_Vemu)               #24 V to bit 7
              11f1 8040  adda $40         5388  adda(v6502_Vflag)               #25
              11f2 c227  st   [$27]       5389  st([v6502_P])                   #26 All other flags
              11f3 0d00  ld   [y,x]       5390  ld([Y,X])                       #27
              11f4 de00  st   [y,x++]     5391  st([Y,Xpp])                     #28 Just X++
              11f5 c21a  st   [$1a]       5392  st([v6502_PCL])                 #29
              11f6 0d00  ld   [y,x]       5393  ld([Y,X])                       #30
              11f7 c21b  st   [$1b]       5394  st([v6502_PCH])                 #31
              11f8 0200  nop              5395  nop()                           #32
              11f9 140e  ld   $0e,y       5396  ld(hi('v6502_next'),Y)          #33
              11fa e020  jmp  y,$20       5397  jmp(Y,'v6502_next')             #34
              11fb 00ee  ld   $ee         5398  ld(-36/2)                       #35
                                          5399
                                          5400  #-----------------------------------------------------------------------
                                          5401  #       Extended vertical blank logic: interrupts
                                          5402  #-----------------------------------------------------------------------
              11fc 0200  nop              5403  align(0x100)
              11fd 0200  nop
              11fe 0200  nop
              11ff 0200  nop
                                          5404
                                          5405  # Check if an IRQ handler is defined
                                          5406  label('vBlankFirst#78')
vBlankFirst#78:
              1200 09f6  ld   [y,$f6]     5407  ld([Y,vIRQ_v5])                 #78
              1201 49f7  ora  [y,$f7]     5408  ora([Y,vIRQ_v5+1])              #79
                                          5409  bne('vBlankFirst#82')           #80
              1202 ec09  bne  vBlankFirst#82
              1203 0116  ld   [$16]       5410  ld([vPC])                       #81
              1204 0055  ld   $55         5411  runVcpu(186-82-extra,           #82 Application cycles (scan line 0)
              1205 c21e  st   [$1e]
              1206 1502  ld   [$02],y
              1207 e0ff  jmp  y,$ff
              1208 001e  ld   $1e
                                          5412      '---D line 0 timeout but no irq',
                                          5413      returnTo='vBlankFirst#186')
                                          5414
                                          5415  label('vBlankFirst#82')
vBlankFirst#82:
              1209 c230  st   [$30]       5416  st([0x30])                      #82 Save vPC
              120a 0117  ld   [$17]       5417  ld([vPC+1])                     #83
              120b c231  st   [$31]       5418  st([0x31])                      #84
              120c 0118  ld   [$18]       5419  ld([vAC])                       #85 Save vAC
              120d c232  st   [$32]       5420  st([0x32])                      #86
              120e 0119  ld   [$19]       5421  ld([vAC+1])                     #87
              120f c233  st   [$33]       5422  st([0x33])                      #88
              1210 0102  ld   [$02]       5423  ld([vCpuSelect])                #89 Save vCpuSelect for PREFIX
              1211 c234  st   [$34]       5424  st([0x34])                      #90
              1212 09f6  ld   [y,$f6]     5425  ld([Y,vIRQ_v5])                 #91 Set vPC to vIRQ
              1213 a002  suba $02         5426  suba(2)                         #92
              1214 c216  st   [$16]       5427  st([vPC])                       #93
              1215 09f7  ld   [y,$f7]     5428  ld([Y,vIRQ_v5+1])               #94
              1216 c217  st   [$17]       5429  st([vPC+1])                     #95
              1217 0102  ld   [$02]       5430  ld([vCpuSelect])                #96 Handler must save this if needed
              1218 c219  st   [$19]       5431  st([vAC+1])                     #97
              1219 0000  ld   $00         5432  ld(0)                           #98
              121a c218  st   [$18]       5433  st([vAC])                       #99
              121b 0002  ld   $02         5434  ld(hi('ENTER'))                 #100 Set vCpuSelect to ENTER (=regular vCPU)
              121c c202  st   [$02]       5435  st([vCpuSelect])                #101
              121d 0055  ld   $55         5436  runVcpu(186-102-extra,          #102 Application cycles (scan line 0)
              121e c21e  st   [$1e]
              121f 1502  ld   [$02],y
              1220 e0ff  jmp  y,$ff
              1221 0014  ld   $14
                                          5437      '---D line 0 timeout with irq',
                                          5438      returnTo='vBlankFirst#186')
                                          5439
                                          5440  # vIRQ sequence WITH interpreter switch
                                          5441  label('vRTI#18')
vRTI#18:      1222 0500  ld   [x]         5442  ld([X])                         #18
              1223 c202  st   [$02]       5443  st([vCpuSelect])                #19
              1224 0130  ld   [$30]       5444  ld([0x30])                      #20
              1225 c216  st   [$16]       5445  st([vPC])                       #21
              1226 0131  ld   [$31]       5446  ld([0x31])                      #22
              1227 c217  st   [$17]       5447  st([vPC+1])                     #23
              1228 0132  ld   [$32]       5448  ld([0x32])                      #24
              1229 c218  st   [$18]       5449  st([vAC])                       #25
              122a 0133  ld   [$33]       5450  ld([0x33])                      #26
              122b c219  st   [$19]       5451  st([vAC+1])                     #27
              122c 0200  nop              5452  nop()                           #28
              122d 0200  nop              5453  nop()                           #29
              122e 0200  nop              5454  nop()                           #30 #0 This MUST match maxTicks, (ie maxTicks=30)
              122f 1403  ld   $03,y       5455  ld(hi('RESYNC'),Y)              #1
              1230 e00c  jmp  y,$0c       5456  jmp(Y,'RESYNC')                 #2
              1231 0115  ld   [$15]       5457  ld([vTicks])                    #3
                                          5458
                                          5459  # Entered last line of vertical blank (line 40)
                                          5460  label('vBlankLast#34')
                                          5461
                                          5462  #-----------------------------------------------------------------------
                                          5463  #       Extended vertical blank logic: game controller decoding
                                          5464  #-----------------------------------------------------------------------
                                          5465
                                          5466  # Game controller types
                                          5467  # TypeA: Based on 74LS165 shift register (not supported)
                                          5468  # TypeB: Based on CD4021B shift register (standard)
                                          5469  # TypeC: Based on priority encoder
                                          5470  #
                                          5471  # Notes:
                                          5472  # - TypeA was only used during development and first beta test, before ROM v1
                                          5473  # - TypeB appears as type A with negative logic levels
                                          5474  # - TypeB is the game controller type that comes with the original kit and ROM v1
                                          5475  # - TypeB is mimicked by BabelFish / Pluggy McPlugface
                                          5476  # - TypeB requires a prolonged /SER_LATCH, therefore vPulse is 8 scanlines, not 2
                                          5477  # - TypeB and TypeC can be sampled in the same scanline
                                          5478  # - TypeA is 1 scanline shifted as it looks at a different edge (XXX up or down?)
                                          5479  # - TypeC gives incomplete information: lower buttons overshadow higher ones
                                          5480  #
                                          5481  #       TypeC    Alias    Button TypeB
                                          5482  #       00000000  ^@   -> Right  11111110
                                          5483  #       00000001  ^A   -> Left   11111101
                                          5484  #       00000011  ^C   -> Down   11111011
                                          5485  #       00000111  ^G   -> Up     11110111
                                          5486  #       00001111  ^O   -> Start  11101111
                                          5487  #       00011111  ^_   -> Select 11011111
                                          5488  #       00111111  ?    -> B      10111111
                                          5489  #       01111111  DEL  -> A      01111111
                                          5490  #       11111111       -> (None) 11111111
                                          5491  #
                                          5492  #       Conversion formula:
                                          5493  #               f(x) := 254 - x
                                          5494
                                          5495  # Detect controller TypeC codes
vBlankLast#34:
              1232 010f  ld   [$0f]       5496  ld([serialRaw])                 #34 if serialRaw in [0,1,3,7,15,31,63,127,255]
              1233 8001  adda $01         5497  adda(1)                         #35
              1234 210f  anda [$0f]       5498  anda([serialRaw])               #36
              1235 ec46  bne  .buttons#39 5499  bne('.buttons#39')              #37
                                          5500
                                          5501  # TypeC
              1236 010f  ld   [$0f]       5502  ld([serialRaw])                 #38 [TypeC] if serialRaw < serialLast
              1237 8001  adda $01         5503  adda(1)                         #39
              1238 2110  anda [$10]       5504  anda([serialLast])              #40
              1239 ec3d  bne  .buttons#43 5505  bne('.buttons#43')              #41
              123a 00fe  ld   $fe         5506  ld(254)                         #42 then clear the selected bit
              123b 0200  nop              5507  nop()                           #43
              123c fc40  bra  .buttons#46 5508  bra('.buttons#46')              #44
                                          5509  label('.buttons#43')
.buttons#43:  123d a10f  suba [$0f]       5510  suba([serialRaw])               #43,45
              123e 2111  anda [$11]       5511  anda([buttonState])             #44
              123f c211  st   [$11]       5512  st([buttonState])               #45
                                          5513  label('.buttons#46')
.buttons#46:  1240 010f  ld   [$0f]       5514  ld([serialRaw])                 #46 Set the lower bits
              1241 4111  ora  [$11]       5515  ora([buttonState])              #47
                                          5516  label('.buttons#48')
.buttons#48:  1242 c211  st   [$11]       5517  st([buttonState])               #48
              1243 010f  ld   [$0f]       5518  ld([serialRaw])                 #49 Update serialLast for next pass
              1244 e0b3  jmp  y,$b3       5519  jmp(Y,'vBlankLast#52')          #50
              1245 c210  st   [$10]       5520  st([serialLast])                #51
                                          5521
                                          5522  # TypeB
                                          5523  # pChange = pNew & ~pOld
                                          5524  # nChange = nNew | ~nOld {DeMorgan}
                                          5525  label('.buttons#39')
.buttons#39:  1246 00ff  ld   $ff         5526  ld(255)                         #39 [TypeB] Bitwise edge-filter to detect button presses
              1247 6110  xora [$10]       5527  xora([serialLast])              #40
              1248 410f  ora  [$0f]       5528  ora([serialRaw])                #41 Catch button-press events
              1249 2111  anda [$11]       5529  anda([buttonState])             #42 Keep active button presses
              124a 410f  ora  [$0f]       5530  ora([serialRaw])                #43
              124b 0200  nop              5531  nop()                           #44
              124c 0200  nop              5532  nop()                           #45
              124d fc42  bra  .buttons#48 5533  bra('.buttons#48')              #46
              124e 0200  nop              5534  nop()                           #47
                                          5535
                                          5536
                                          5537  #-----------------------------------------------------------------------
                                          5538  #       More SYS functions, (0x1200)
                                          5539  #-----------------------------------------------------------------------
                                          5540
                                          5541  # SYS_Exec_88 implementation
                                          5542  label('sys_Exec')
sys_Exec:     124f d617  st   [$17],y     5543  st([vPC+1],Y)                   #18 Clear vPCH and Y
              1250 011c  ld   [$1c]       5544  ld([vSP])                       #19 Place ROM loader below current stack pointer
              1251 a037  suba $37         5545  suba(53+2)                      #20 (AC -> *+0) One extra word for PUSH
              1252 d21d  st   [$1d],x     5546  st([vTmp],X)                    #21
              1253 80fe  adda $fe         5547  adda(-2)                        #22 (AC -> *-2)
              1254 c216  st   [$16]       5548  st([vPC])                       #23
                                          5549  # Start of manually compiled vCPU section
              1255 dc75  st   $75,[y,x++] 5550  st('PUSH',    [Y,Xpp])          #24 *+0
              1256 dccf  st   $cf,[y,x++] 5551  st('CALL',    [Y,Xpp])          #25 *+26 Fetch first byte
              1257 8023  adda $23         5552  adda(33-(-2))                   #26 (AC -> *+33)
              1258 de00  st   [y,x++]     5553  st(           [Y,Xpp])          #27 *+27
              1259 dc5e  st   $5e,[y,x++] 5554  st('ST',      [Y,Xpp])          #28 *+3 Chunk copy loop
              125a dc27  st   $27,[y,x++] 5555  st(sysArgs+3, [Y,Xpp])          #29 *+4 High-address comes first
              125b dccf  st   $cf,[y,x++] 5556  st('CALL',    [Y,Xpp])          #30 *+5
              125c de00  st   [y,x++]     5557  st(           [Y,Xpp])          #31 *+6
              125d dc5e  st   $5e,[y,x++] 5558  st('ST',      [Y,Xpp])          #32 *+7
              125e dc26  st   $26,[y,x++] 5559  st(sysArgs+2, [Y,Xpp])          #33 *+8 Then the low address
              125f dccf  st   $cf,[y,x++] 5560  st('CALL',    [Y,Xpp])          #34 *+9
              1260 de00  st   [y,x++]     5561  st(           [Y,Xpp])          #35 *+10
              1261 dc5e  st   $5e,[y,x++] 5562  st('ST',      [Y,Xpp])          #36 *+11 Byte copy loop
              1262 dc28  st   $28,[y,x++] 5563  st(sysArgs+4, [Y,Xpp])          #37 *+12 Byte count (0 means 256)
              1263 dccf  st   $cf,[y,x++] 5564  st('CALL',    [Y,Xpp])          #38 *+13
              1264 de00  st   [y,x++]     5565  st(           [Y,Xpp])          #39 *+14
              1265 dcf0  st   $f0,[y,x++] 5566  st('POKE',    [Y,Xpp])          #40 *+15
              1266 dc26  st   $26,[y,x++] 5567  st(sysArgs+2, [Y,Xpp])          #41 *+16
              1267 dc93  st   $93,[y,x++] 5568  st('INC',     [Y,Xpp])          #42 *+17
              1268 dc26  st   $26,[y,x++] 5569  st(sysArgs+2, [Y,Xpp])          #43 *+18
              1269 dc1a  st   $1a,[y,x++] 5570  st('LD',      [Y,Xpp])          #44 *+19
              126a dc28  st   $28,[y,x++] 5571  st(sysArgs+4, [Y,Xpp])          #45 *+20
              126b dce6  st   $e6,[y,x++] 5572  st('SUBI',    [Y,Xpp])          #46 *+21
              126c dc01  st   $01,[y,x++] 5573  st(1,         [Y,Xpp])          #47 *+22
              126d dc35  st   $35,[y,x++] 5574  st('BCC',     [Y,Xpp])          #48 *+23
              126e dc72  st   $72,[y,x++] 5575  st('NE',      [Y,Xpp])          #49 *+24
              126f 80e8  adda $e8         5576  adda(11-2-33)                   #50 (AC -> *+9)
              1270 de00  st   [y,x++]     5577  st(           [Y,Xpp])          #51 *+25
              1271 dccf  st   $cf,[y,x++] 5578  st('CALL',    [Y,Xpp])          #52 *+26 Go to next block
              1272 8018  adda $18         5579  adda(33-9)                      #53 (AC -> *+33)
              1273 de00  st   [y,x++]     5580  st(           [Y,Xpp])          #54 *+27
              1274 dc35  st   $35,[y,x++] 5581  st('BCC',     [Y,Xpp])          #55 *+28
              1275 dc72  st   $72,[y,x++] 5582  st('NE',      [Y,Xpp])          #56 *+29
              1276 80e0  adda $e0         5583  adda(3-2-33)                    #57 (AC -> *+1)
              1277 de00  st   [y,x++]     5584  st(           [Y,Xpp])          #58 *+30
              1278 dc63  st   $63,[y,x++] 5585  st('POP',     [Y,Xpp])          #59 *+31 End
              1279 dcff  st   $ff,[y,x++] 5586  st('RET',     [Y,Xpp])          #60 *+32
                                          5587  # Pointer constant pointing to the routine below (for use by CALL)
              127a 8022  adda $22         5588  adda(35-1)                      #61 (AC -> *+35)
              127b de00  st   [y,x++]     5589  st(           [Y,Xpp])          #62 *+33
              127c dc00  st   $00,[y,x++] 5590  st(0,         [Y,Xpp])          #63 *+34
                                          5591  # Routine to read next byte from ROM and advance read pointer
              127d dc1a  st   $1a,[y,x++] 5592  st('LD',      [Y,Xpp])          #64 *+35 Test for end of ROM table
              127e dc24  st   $24,[y,x++] 5593  st(sysArgs+0, [Y,Xpp])          #65 *+36
              127f dc8c  st   $8c,[y,x++] 5594  st('XORI',    [Y,Xpp])          #66 *+37
              1280 dcfb  st   $fb,[y,x++] 5595  st(251,       [Y,Xpp])          #67 *+38
              1281 dc35  st   $35,[y,x++] 5596  st('BCC',     [Y,Xpp])          #68 *+39
              1282 dc72  st   $72,[y,x++] 5597  st('NE',      [Y,Xpp])          #69 *+40
              1283 8009  adda $09         5598  adda(46-2-35)                   #70 (AC -> *+44)
              1284 de00  st   [y,x++]     5599  st(           [Y,Xpp])          #71 *+41
              1285 dc5e  st   $5e,[y,x++] 5600  st('ST',      [Y,Xpp])          #72 *+42 Wrap to next ROM page
              1286 dc24  st   $24,[y,x++] 5601  st(sysArgs+0, [Y,Xpp])          #73 *+43
              1287 dc93  st   $93,[y,x++] 5602  st('INC',     [Y,Xpp])          #74 *+44
              1288 dc25  st   $25,[y,x++] 5603  st(sysArgs+1, [Y,Xpp])          #75 *+45
              1289 dc21  st   $21,[y,x++] 5604  st('LDW',     [Y,Xpp])          #76 *+46 Read next byte from ROM table
              128a dc24  st   $24,[y,x++] 5605  st(sysArgs+0, [Y,Xpp])          #77 *+47
              128b dc7f  st   $7f,[y,x++] 5606  st('LUP',     [Y,Xpp])          #78 *+48
              128c dc00  st   $00,[y,x++] 5607  st(0,         [Y,Xpp])          #79 *+49
              128d dc93  st   $93,[y,x++] 5608  st('INC',     [Y,Xpp])          #80 *+50 Increment read pointer
              128e dc24  st   $24,[y,x++] 5609  st(sysArgs+0, [Y,Xpp])          #81 *+51
              128f dcff  st   $ff,[y,x++] 5610  st('RET',     [Y,Xpp])          #82 *+52 Return
                                          5611  # Return to interpreter
              1290 1403  ld   $03,y       5612  ld(hi('REENTER'),Y)             #83
              1291 e0cb  jmp  y,$cb       5613  jmp(Y,'REENTER')                #84
              1292 00d4  ld   $d4         5614  ld(-88/2)                       #85
                                          5615
                                          5616  # SYS_VDrawBits_134 implementation
                                          5617  label('sys_VDrawBits')
sys_VDrawBits:
              1293 0000  ld   $00         5618  ld(0)                           #18
                                          5619  label('.sysVdb0')
.sysVdb0:     1294 c21d  st   [$1d]       5620  st([vTmp])                      #19+i*25
              1295 9529  adda [$29],y     5621  adda([sysArgs+5],Y)             #20+i*25 Y=[sysPos+1]+[vTmp]
              1296 0126  ld   [$26]       5622  ld([sysArgs+2])                 #21+i*25 Select color
              1297 e89a  blt  $129a       5623  bmi(pc()+3)                     #22+i*25
              1298 fc9b  bra  $129b       5624  bra(pc()+3)                     #23+i*25
              1299 0124  ld   [$24]       5625  ld([sysArgs+0])                 #24+i*25
              129a 0125  ld   [$25]       5626  ld([sysArgs+1])                 #24+i*25(!)
              129b ce00  st   [y,x]       5627  st([Y,X])                       #25+i*25 Draw pixel
              129c 0126  ld   [$26]       5628  ld([sysArgs+2])                 #26+i*25 Shift byte left
              129d 8200  adda ac          5629  adda(AC)                        #27+i*25
              129e c226  st   [$26]       5630  st([sysArgs+2])                 #28+i*25
              129f 011d  ld   [$1d]       5631  ld([vTmp])                      #29+i*25 Unrolled loop (once)
              12a0 8129  adda [$29]       5632  adda([sysArgs+5])               #31+i*25
              12a1 9401  adda $01,y       5633  adda(1,Y)                       #30+i*25 Y=[sysPos+1]+[vTmp]+1
              12a2 0126  ld   [$26]       5634  ld([sysArgs+2])                 #32+i*25 Select color
              12a3 e8a6  blt  $12a6       5635  bmi(pc()+3)                     #33+i*25
              12a4 fca7  bra  $12a7       5636  bra(pc()+3)                     #34+i*25
              12a5 0124  ld   [$24]       5637  ld([sysArgs+0])                 #35+i*25
              12a6 0125  ld   [$25]       5638  ld([sysArgs+1])                 #35+i*25(!)
              12a7 ce00  st   [y,x]       5639  st([Y,X])                       #36+i*25 Draw pixel
              12a8 0126  ld   [$26]       5640  ld([sysArgs+2])                 #37+i*25 Shift byte left
              12a9 8200  adda ac          5641  adda(AC)                        #38+i*25
              12aa c226  st   [$26]       5642  st([sysArgs+2])                 #39+i*25
              12ab 011d  ld   [$1d]       5643  ld([vTmp])                      #40+i*25 Loop counter
              12ac a006  suba $06         5644  suba(6)                         #41+i*25
              12ad ec94  bne  .sysVdb0    5645  bne('.sysVdb0')                 #42+i*25
              12ae 8008  adda $08         5646  adda(8)                         #43+i*25 Steps of 2
              12af 1403  ld   $03,y       5647  ld(hi('REENTER'),Y)             #119
              12b0 e0cb  jmp  y,$cb       5648  jmp(Y,'REENTER')                #120
              12b1 00c2  ld   $c2         5649  ld(-124/2)                      #121
                                          5650
                                          5651  # SYS_ResetWaveforms_v4_50 implementation
                                          5652  label('sys_ResetWaveforms')
sys_ResetWaveforms:
              12b2 0118  ld   [$18]       5653  ld([vAC+0])                     #18 X=4i
              12b3 8200  adda ac          5654  adda(AC)                        #19
              12b4 9200  adda ac,x        5655  adda(AC,X)                      #20
              12b5 0118  ld   [$18]       5656  ld([vAC+0])                     #21
              12b6 de00  st   [y,x++]     5657  st([Y,Xpp])                     #22 Sawtooth: T[4i+0] = i
              12b7 2020  anda $20         5658  anda(0x20)                      #23 Triangle: T[4i+1] = 2i if i<32 else 127-2i
              12b8 ecbb  bne  $12bb       5659  bne(pc()+3)                     #24
              12b9 0118  ld   [$18]       5660  ld([vAC+0])                     #25
              12ba fcbd  bra  $12bd       5661  bra(pc()+3)                     #26
              12bb 8118  adda [$18]       5662  adda([vAC+0])                   #26,27
              12bc 607f  xora $7f         5663  xora(127)                       #27
              12bd de00  st   [y,x++]     5664  st([Y,Xpp])                     #28
              12be 0118  ld   [$18]       5665  ld([vAC+0])                     #29 Pulse: T[4i+2] = 0 if i<32 else 63
              12bf 2020  anda $20         5666  anda(0x20)                      #30
              12c0 ecc3  bne  $12c3       5667  bne(pc()+3)                     #31
              12c1 fcc4  bra  $12c4       5668  bra(pc()+3)                     #32
              12c2 0000  ld   $00         5669  ld(0)                           #33
              12c3 003f  ld   $3f         5670  ld(63)                          #33(!)
              12c4 de00  st   [y,x++]     5671  st([Y,Xpp])                     #34
              12c5 0118  ld   [$18]       5672  ld([vAC+0])                     #35 Sawtooth: T[4i+3] = i
              12c6 ce00  st   [y,x]       5673  st([Y,X])                       #36
              12c7 8001  adda $01         5674  adda(1)                         #37 i += 1
              12c8 c218  st   [$18]       5675  st([vAC+0])                     #38
              12c9 6040  xora $40         5676  xora(64)                        #39 For 64 iterations
              12ca f0cd  beq  $12cd       5677  beq(pc()+3)                     #40
              12cb fcce  bra  $12ce       5678  bra(pc()+3)                     #41
              12cc 00fe  ld   $fe         5679  ld(-2)                          #42
              12cd 0000  ld   $00         5680  ld(0)                           #42(!)
              12ce 8116  adda [$16]       5681  adda([vPC])                     #43
              12cf c216  st   [$16]       5682  st([vPC])                       #44
              12d0 1403  ld   $03,y       5683  ld(hi('REENTER'),Y)             #45
              12d1 e0cb  jmp  y,$cb       5684  jmp(Y,'REENTER')                #46
              12d2 00e7  ld   $e7         5685  ld(-50/2)                       #47
                                          5686
                                          5687  # SYS_ShuffleNoise_v4_46 implementation
                                          5688  label('sys_ShuffleNoise')
sys_ShuffleNoise:
              12d3 1118  ld   [$18],x     5689  ld([vAC+0],X)                   #18 tmp = T[4j]
              12d4 0d00  ld   [y,x]       5690  ld([Y,X])                       #19
              12d5 c21d  st   [$1d]       5691  st([vTmp])                      #20
              12d6 1119  ld   [$19],x     5692  ld([vAC+1],X)                   #21 T[4j] = T[4i]
              12d7 0d00  ld   [y,x]       5693  ld([Y,X])                       #22
              12d8 1118  ld   [$18],x     5694  ld([vAC+0],X)                   #23
              12d9 ce00  st   [y,x]       5695  st([Y,X])                       #24
              12da 8200  adda ac          5696  adda(AC)                        #25 j += T[4i]
              12db 8200  adda ac          5697  adda(AC,)                       #26
              12dc 8118  adda [$18]       5698  adda([vAC+0])                   #27
              12dd c218  st   [$18]       5699  st([vAC+0])                     #28
              12de 1119  ld   [$19],x     5700  ld([vAC+1],X)                   #29 T[4i] = tmp
              12df 011d  ld   [$1d]       5701  ld([vTmp])                      #30
              12e0 ce00  st   [y,x]       5702  st([Y,X])                       #31
              12e1 0119  ld   [$19]       5703  ld([vAC+1])                     #32 i += 1
              12e2 8004  adda $04         5704  adda(4)                         #33
              12e3 c219  st   [$19]       5705  st([vAC+1])                     #34
              12e4 f0e7  beq  $12e7       5706  beq(pc()+3)                     #35 For 64 iterations
              12e5 fce8  bra  $12e8       5707  bra(pc()+3)                     #36
              12e6 00fe  ld   $fe         5708  ld(-2)                          #37
              12e7 0000  ld   $00         5709  ld(0)                           #37(!)
              12e8 8116  adda [$16]       5710  adda([vPC])                     #38
              12e9 c216  st   [$16]       5711  st([vPC])                       #39
              12ea 1403  ld   $03,y       5712  ld(hi('NEXTY'),Y)               #40
              12eb e000  jmp  y,$00       5713  jmp(Y,'NEXTY')                  #41
              12ec 00ea  ld   $ea         5714  ld(-44/2)                       #42
                                          5715
                                          5716  # SYS_LoadBytes_vX_XXX implementation
                                          5717  label('sys_LoadBytes')
sys_LoadBytes:
              12ed 0030  ld   $30         5718  ld(0x30)                        # Target address
              12ee c225  st   [$25]       5719  st([sysArgs+1])                 #
              12ef 011a  ld   [$1a]       5720  ld([vLR+0])                     # Source address
              12f0 d224  st   [$24],x     5721  st([sysArgs+0],X)               #
              12f1 0d00  ld   [y,x]       5722  ld([Y,X])                       # Byte count
                                          5723  label('.slb1')                  #
.slb1:        12f2 c226  st   [$26]       5724  st([sysArgs+2])                 #
                                          5725
              12f3 0124  ld   [$24]       5726  ld([sysArgs+0])                 # Advance source address
              12f4 8001  adda $01         5727  adda(1)                         #
              12f5 d224  st   [$24],x     5728  st([sysArgs+0],X)               #
                                          5729
              12f6 0d00  ld   [y,x]       5730  ld([Y,X])                       # Copy byte
              12f7 1125  ld   [$25],x     5731  ld([sysArgs+1],X)               #
              12f8 c600  st   [x]         5732  st([X])                         #
                                          5733
              12f9 0125  ld   [$25]       5734  ld([sysArgs+1])                 # Advance target address
              12fa 8001  adda $01         5735  adda(1)                         #
              12fb c225  st   [$25]       5736  st([sysArgs+1])                 #
                                          5737
              12fc 0126  ld   [$26]       5738  ld([sysArgs+2])                 # Decrement byte count and loop
              12fd ecf2  bne  .slb1       5739  bne('.slb1')                    #
              12fe a001  suba $01         5740  suba(1)                         #
                                          5741
                                          5742  # XXX Unfinished
                                          5743
                                          5744  fillers(until=0xff)
              12ff 0200  nop              5745  align(0x100, size=0x100)
                                          5746
                                          5747
                                          5748  #-----------------------------------------------------------------------
                                          5749  #       More SYS functions, (0x1300)
                                          5750  #-----------------------------------------------------------------------
                                          5751
                                          5752  # sys_Multiply_u8, res:u16 = x:u8 * y:u8
                                          5753  # sysArgs0,1=res, sysArgs2=x, sysArgs3=y, sysArgs4=count
                                          5754  label('SYS_Multiply_u8_vX_48')
SYS_Multiply_u8_vX_48:
              1300 0128  ld   [$28]       5755  ld([sysArgs+4])                 #15,
              1301 a001  suba $01         5756  suba(1)                         #16, count--
                                          5757  bge('.sys_multiply_u8_19')      #17,
              1302 f407  bge  .sys_multiply_u8_19
              1303 c228  st   [$28]       5758  st([sysArgs+4])                 #18,
              1304 1403  ld   $03,y       5759  ld(hi('REENTER'),Y)             #19,
              1305 e0cb  jmp  y,$cb       5760  jmp(Y,'REENTER')                #20,
              1306 00f4  ld   $f4         5761  ld(-24/2)                       #21,
                                          5762
                                          5763  label('.sys_multiply_u8_19')
.sys_multiply_u8_19:
              1307 0124  ld   [$24]       5764  ld([sysArgs+0])                 #19,
              1308 3080  anda $80,x       5765  anda(128,X)                     #20,
              1309 8124  adda [$24]       5766  adda([sysArgs+0])               #21,
              130a c224  st   [$24]       5767  st([sysArgs+0])                 #22,
              130b 0500  ld   [x]         5768  ld([X])                         #23,
              130c 8125  adda [$25]       5769  adda([sysArgs+1])               #24,
              130d 8125  adda [$25]       5770  adda([sysArgs+1])               #25,
              130e c225  st   [$25]       5771  st([sysArgs+1])                 #26, result <<1
              130f 0126  ld   [$26]       5772  ld([sysArgs+2])                 #27,
                                          5773  bmi('.sys_multiply_u8_30')      #28, if(x & 0x80)
              1310 e819  blt  .sys_multiply_u8_30
              1311 8126  adda [$26]       5774  adda([sysArgs+2])               #29,
              1312 c226  st   [$26]       5775  st([sysArgs+2])                 #30, x <<= 1
              1313 0116  ld   [$16]       5776  ld([vPC])                       #31,
              1314 a002  suba $02         5777  suba(2)                         #32,
              1315 c216  st   [$16]       5778  st([vPC])                       #33, restart
              1316 1403  ld   $03,y       5779  ld(hi('NEXTY'),Y)               #34,
              1317 e000  jmp  y,$00       5780  jmp(Y,'NEXTY')                  #35,
              1318 00ed  ld   $ed         5781  ld(-38/2)                       #36,
                                          5782
                                          5783  label('.sys_multiply_u8_30')
.sys_multiply_u8_30:
              1319 c226  st   [$26]       5784  st([sysArgs+2])                 #30, x <<= 1
              131a 0124  ld   [$24]       5785  ld([sysArgs+0])                 #31,
              131b 8127  adda [$27]       5786  adda([sysArgs+3])               #32,
              131c c224  st   [$24]       5787  st([sysArgs+0])                 #33, res.lo += y
                                          5788  bmi('.sys_multiply_u8_36')      #34, check carry
              131d e82a  blt  .sys_multiply_u8_36
              131e a127  suba [$27]       5789  suba([sysArgs+3])               #35, initial value of res.lo
              131f 4127  ora  [$27]       5790  ora([sysArgs+3])                #36, carry in bit 7
              1320 3080  anda $80,x       5791  anda(0x80,X)                    #37, move carry to bit 0
              1321 0500  ld   [x]         5792  ld([X])                         #38,
              1322 8125  adda [$25]       5793  adda([sysArgs+1])               #39,
              1323 c225  st   [$25]       5794  st([sysArgs+1])                 #40, res.hi += carry
              1324 0116  ld   [$16]       5795  ld([vPC])                       #41,
              1325 a002  suba $02         5796  suba(2)                         #42,
              1326 c216  st   [$16]       5797  st([vPC])                       #43, restart
              1327 1403  ld   $03,y       5798  ld(hi('NEXTY'),Y)               #44,
              1328 e000  jmp  y,$00       5799  jmp(Y,'NEXTY')                  #45,
              1329 00e8  ld   $e8         5800  ld(-48/2)                       #46,
                                          5801
                                          5802  label('.sys_multiply_u8_36')
.sys_multiply_u8_36:
              132a 2127  anda [$27]       5803  anda([sysArgs+3])               #36, carry in bit 7
              132b 3080  anda $80,x       5804  anda(0x80,X)                    #37, move carry to bit 0
              132c 0500  ld   [x]         5805  ld([X])                         #38,
              132d 8125  adda [$25]       5806  adda([sysArgs+1])               #39,
              132e c225  st   [$25]       5807  st([sysArgs+1])                 #40, res.hi += carry
              132f 0116  ld   [$16]       5808  ld([vPC])                       #41,
              1330 a002  suba $02         5809  suba(2)                         #42,
              1331 c216  st   [$16]       5810  st([vPC])                       #43, restart
              1332 1403  ld   $03,y       5811  ld(hi('NEXTY'),Y)               #44,
              1333 e000  jmp  y,$00       5812  jmp(Y,'NEXTY')                  #45,
              1334 00e8  ld   $e8         5813  ld(-48/2)                       #46,
                                          5814
                                          5815  # leave some soom for updates
              1335 0200  nop              5816  fillers(until=0x40)
              1336 0200  nop
              1337 0200  nop
              * 11 times
                                          5817
                                          5818
                                          5819  # sys_OffsetVTableY, sysArgs0 = scanline:8, sysArgs1 = scanCount:8, sysArgs2,3 = videoTable:16
                                          5820  label('SYS_OffsetVTableY_vX_36')
SYS_OffsetVTableY_vX_36:
              1340 0124  ld   [$24]       5821  ld([sysArgs+0])                 #15, scanline
              1341 1126  ld   [$26],x     5822  ld([sysArgs+2],X)               #16,
              1342 1527  ld   [$27],y     5823  ld([sysArgs+3],Y)               #17,
              1343 ce00  st   [y,x]       5824  st([Y,X])                       #18, [videoTable] = scanline
              1344 8001  adda $01         5825  adda(1)                         #19,
              1345 c224  st   [$24]       5826  st([sysArgs+0])                 #20, scanline++
              1346 0126  ld   [$26]       5827  ld([sysArgs+2])                 #21,
              1347 8002  adda $02         5828  adda(2)                         #22,
              1348 c226  st   [$26]       5829  st([sysArgs+2])                 #23, videoTable += 2
              1349 0125  ld   [$25]       5830  ld([sysArgs+1])                 #24,
              134a a001  suba $01         5831  suba(1)                         #25,
                                          5832  beq('.sys_offsetvty_28')        #26,
              134b f053  beq  .sys_offsetvty_28
              134c c225  st   [$25]       5833  st([sysArgs+1])                 #27, scanCount--
              134d 0116  ld   [$16]       5834  ld([vPC])                       #28,
              134e a002  suba $02         5835  suba(2)                         #29,
              134f c216  st   [$16]       5836  st([vPC])                       #30, restart
              1350 1403  ld   $03,y       5837  ld(hi('REENTER'),Y)             #31,
              1351 e0cb  jmp  y,$cb       5838  jmp(Y,'REENTER')                #32,
              1352 00ee  ld   $ee         5839  ld(-36/2)                       #33,
                                          5840  label('.sys_offsetvty_28')
.sys_offsetvty_28:
              1353 1403  ld   $03,y       5841  ld(hi('NEXTY'),Y)               #28,
              1354 e000  jmp  y,$00       5842  jmp(Y,'NEXTY')                  #29,
              1355 00f0  ld   $f0         5843  ld(-32/2)                       #30,
                                          5844
                                          5845  # leave some soom for updates
              1356 0200  nop              5846  fillers(until=0x60)
              1357 0200  nop
              1358 0200  nop
              * 10 times
                                          5847
                                          5848
                                          5849  # sys_FillByteSeq, sysArgs0,1=dst, sysArg2=start, sysArg3=step, sysArg4=count
                                          5850  label('SYS_FillByteSeq_vX_36')
SYS_FillByteSeq_vX_36:
              1360 1525  ld   [$25],y     5851  ld([sysArgs+1],Y)               #15 dst pointer
              1361 1124  ld   [$24],x     5852  ld([sysArgs+0],X)               #16,
              1362 0124  ld   [$24]       5853  ld([sysArgs+0])                 #17,
              1363 8001  adda $01         5854  adda(1)                         #18,
              1364 c224  st   [$24]       5855  st([sysArgs+0])                 #19, dst++
              1365 0126  ld   [$26]       5856  ld([sysArgs+2])                 #20,
              1366 ce00  st   [y,x]       5857  st([Y,X])                       #21, start
              1367 8127  adda [$27]       5858  adda([sysArgs+3])               #22,
              1368 c226  st   [$26]       5859  st([sysArgs+2])                 #23, start += step
              1369 0128  ld   [$28]       5860  ld([sysArgs+4])                 #24,
              136a a001  suba $01         5861  suba(1)                         #25,
                                          5862  beq('.sys_fillbyteseq_28')      #26,
              136b f073  beq  .sys_fillbyteseq_28
              136c c228  st   [$28]       5863  st([sysArgs+4])                 #27,
              136d 0116  ld   [$16]       5864  ld([vPC])                       #28,
              136e a002  suba $02         5865  suba(2)                         #29,
              136f c216  st   [$16]       5866  st([vPC])                       #30, restart
              1370 1403  ld   $03,y       5867  ld(hi('REENTER'),Y)             #31,
              1371 e0cb  jmp  y,$cb       5868  jmp(Y,'REENTER')                #32,
              1372 00ee  ld   $ee         5869  ld(-36/2)                       #33,
                                          5870  label('.sys_fillbyteseq_28')
.sys_fillbyteseq_28:
              1373 1403  ld   $03,y       5871  ld(hi('NEXTY'),Y)               #28,
              1374 e000  jmp  y,$00       5872  jmp(Y,'NEXTY')                  #29,
              1375 00f0  ld   $f0         5873  ld(-32/2)                       #30,
                                          5874
                                          5875  # leave some soom for updates
              1376 0200  nop              5876  fillers(until=0x80)
              1377 0200  nop
              1378 0200  nop
              * 10 times
                                          5877
                                          5878
                                          5879  # sys_AddInt8Array, sysArgs0,1=src, sysArgs2,3=dst, sysArgs4=index, sysArgs5=count, dst(i) += src(i)
                                          5880  label('SYS_AddInt8Array_vX_40')
SYS_AddInt8Array_vX_40:
              1380 0124  ld   [$24]       5881  ld([sysArgs+0])                 #15,
              1381 9128  adda [$28],x     5882  adda([sysArgs+4],X)             #16,
              1382 1525  ld   [$25],y     5883  ld([sysArgs+1],Y)               #17,
              1383 0d00  ld   [y,x]       5884  ld([Y,X])                       #18,
              1384 c21d  st   [$1d]       5885  st([vTmp])                      #19
              1385 0126  ld   [$26]       5886  ld([sysArgs+2])                 #20,
              1386 9128  adda [$28],x     5887  adda([sysArgs+4],X)             #21,
              1387 1527  ld   [$27],y     5888  ld([sysArgs+3],Y)               #22,
              1388 011d  ld   [$1d]       5889  ld([vTmp])                      #23
              1389 8d00  adda [y,x]       5890  adda([Y,X])                     #24,
              138a ce00  st   [y,x]       5891  st([Y,X])                       #25,
              138b 0129  ld   [$29]       5892  ld([sysArgs+5])                 #26,
              138c a001  suba $01         5893  suba(1)                         #27,
                                          5894  beq('.sys_addint8Array_30')     #28,
              138d f098  beq  .sys_addint8Array_30
              138e c229  st   [$29]       5895  st([sysArgs+5])                 #29,
              138f 0128  ld   [$28]       5896  ld([sysArgs+4])                 #30,
              1390 8001  adda $01         5897  adda(1)                         #31,
              1391 c228  st   [$28]       5898  st([sysArgs+4])                 #32, index++
              1392 0116  ld   [$16]       5899  ld([vPC])                       #33,
              1393 a002  suba $02         5900  suba(2)                         #34,
              1394 c216  st   [$16]       5901  st([vPC])                       #35,
              1395 1403  ld   $03,y       5902  ld(hi('NEXTY'),Y)               #36,
              1396 e000  jmp  y,$00       5903  jmp(Y,'NEXTY')                  #37,
              1397 00ec  ld   $ec         5904  ld(-40/2)                       #38,
                                          5905  label('.sys_addint8Array_30')
.sys_addint8Array_30:
              1398 1403  ld   $03,y       5906  ld(hi('NEXTY'),Y)               #30,
              1399 e000  jmp  y,$00       5907  jmp(Y,'NEXTY')                  #31,
              139a 00ef  ld   $ef         5908  ld(-34/2)                       #32,
                                          5909
                                          5910  # leave some soom for updates
              139b 0200  nop              5911  fillers(until=0xa0)
              139c 0200  nop
              139d 0200  nop
              * 5 times
                                          5912
                                          5913
                                          5914  # sys_ParityFill, sysArgs0,1=borderColour:fillColour, sysArgs2,3=X:Y start address
                                          5915  #                 sysArgs4=countXY, sysArgs6=fill toggle, sysArgs7=replace colour
                                          5916  label('SYS_ParityFill_vX_44')
SYS_ParityFill_vX_44:
              13a0 1527  ld   [$27],y     5917  ld([sysArgs+3],Y)               #15,
              13a1 1126  ld   [$26],x     5918  ld([sysArgs+2],X)               #16,
              13a2 0126  ld   [$26]       5919  ld([sysArgs+2])                 #17,
              13a3 8001  adda $01         5920  adda(1)                         #18,
              13a4 c226  st   [$26]       5921  st([sysArgs+2])                 #19, x++
              13a5 0128  ld   [$28]       5922  ld([sysArgs+4])                 #20,
              13a6 a001  suba $01         5923  suba(1)                         #21, countX--
                                          5924  bge('.sys_parityfill_24')       #22,
              13a7 f4be  bge  .sys_parityfill_24
              13a8 c228  st   [$28]       5925  st([sysArgs+4])                 #23,
              13a9 0127  ld   [$27]       5926  ld([sysArgs+3])                 #24,
              13aa 8001  adda $01         5927  adda(1)                         #25,
              13ab c227  st   [$27]       5928  st([sysArgs+3])                 #26, y++
              13ac 0129  ld   [$29]       5929  ld([sysArgs+5])                 #27,
              13ad a001  suba $01         5930  suba(1)                         #28, countY--
              13ae c229  st   [$29]       5931  st([sysArgs+5])                 #29,
                                          5932  bne('.sys_parityfill_32')       #30,
              13af ecb3  bne  .sys_parityfill_32
              13b0 1403  ld   $03,y       5933  ld(hi('REENTER'),Y)             #31,
              13b1 e0cb  jmp  y,$cb       5934  jmp(Y,'REENTER')                #32,
              13b2 00ee  ld   $ee         5935  ld(-36/2)                       #33,
                                          5936  label('.sys_parityfill_32')
.sys_parityfill_32:
              13b3 0182  ld   [$82]       5937  ld([0x82])                      #32,
              13b4 c226  st   [$26]       5938  st([sysArgs+2])                 #33, restore x
              13b5 0183  ld   [$83]       5939  ld([0x83])                      #34,
              13b6 c228  st   [$28]       5940  st([sysArgs+4])                 #35, restore countX
              13b7 0184  ld   [$84]       5941  ld([0x84])                      #36,
              13b8 c22a  st   [$2a]       5942  st([sysArgs+6])                 #37, restore fill toggle
              13b9 0116  ld   [$16]       5943  ld([vPC])                       #38,
              13ba a002  suba $02         5944  suba(2)                         #39,
              13bb c216  st   [$16]       5945  st([vPC])                       #40, restart
              13bc e000  jmp  y,$00       5946  jmp(Y,'NEXTY')                  #41,
              13bd 00ea  ld   $ea         5947  ld(-44/2)                       #42,
                                          5948
                                          5949  label('.sys_parityfill_24')
.sys_parityfill_24:
              13be 012a  ld   [$2a]       5950  ld([sysArgs+6])                 #24, check fill toggle
                                          5951  bne('.sys_parityfill_27')       #25,
              13bf ecc9  bne  .sys_parityfill_27
              13c0 0d00  ld   [y,x]       5952  ld([Y,X])                       #26, get pixel
              13c1 6124  xora [$24]       5953  xora([sysArgs+0])               #27, check border colour
                                          5954  beq('.sys_parityfill_30')       #28,
              13c2 f0d8  beq  .sys_parityfill_30
              13c3 0116  ld   [$16]       5955  ld([vPC])                       #29,
              13c4 a002  suba $02         5956  suba(2)                         #30,
              13c5 c216  st   [$16]       5957  st([vPC])                       #31, restart
              13c6 1403  ld   $03,y       5958  ld(hi('NEXTY'),Y)               #32,
              13c7 e000  jmp  y,$00       5959  jmp(Y,'NEXTY')                  #33,
              13c8 00ee  ld   $ee         5960  ld(-36/2)                       #34,
                                          5961
                                          5962  label('.sys_parityfill_27')
.sys_parityfill_27:
              13c9 6124  xora [$24]       5963  xora([sysArgs+0])               #27, check border colour
                                          5964  beq('.sys_parityfill_30')       #28,
              13ca f0d8  beq  .sys_parityfill_30
              13cb 0d00  ld   [y,x]       5965  ld([Y,X])                       #29, get pixel
              13cc 612b  xora [$2b]       5966  xora([sysArgs+7])               #30, check replace colour
              13cd ecd0  bne  $13d0       5967  bne(pc()+3)                     #31, ignore replace colour
              13ce fcd1  bra  $13d1       5968  bra(pc()+3)                     #32,
              13cf 0125  ld   [$25]       5969  ld([sysArgs+1])                 #33, fill colour
              13d0 0d00  ld   [y,x]       5970  ld([Y,X])                       #33! get pixel
              13d1 ce00  st   [y,x]       5971  st([Y,X])                       #34, set pixel
              13d2 0116  ld   [$16]       5972  ld([vPC])                       #35,
              13d3 a002  suba $02         5973  suba(2)                         #36,
              13d4 c216  st   [$16]       5974  st([vPC])                       #37, restart
              13d5 1403  ld   $03,y       5975  ld(hi('NEXTY'),Y)               #38,
              13d6 e000  jmp  y,$00       5976  jmp(Y,'NEXTY')                  #39,
              13d7 00eb  ld   $eb         5977  ld(-42/2)                       #40,
                                          5978
                                          5979  label('.sys_parityfill_30')
.sys_parityfill_30:
              13d8 012a  ld   [$2a]       5980  ld([sysArgs+6])                 #30,
              13d9 6001  xora $01         5981  xora(0x01)                      #31,
              13da c22a  st   [$2a]       5982  st([sysArgs+6])                 #32, toggle fill
              13db 0116  ld   [$16]       5983  ld([vPC])                       #33,
              13dc a002  suba $02         5984  suba(2)                         #34,
              13dd c216  st   [$16]       5985  st([vPC])                       #35, restart
              13de 1403  ld   $03,y       5986  ld(hi('NEXTY'),Y)               #36,
              13df e000  jmp  y,$00       5987  jmp(Y,'NEXTY')                  #37,
              13e0 00ec  ld   $ec         5988  ld(-40/2)                       #38,
                                          5989
                                          5990
              13e1 0200  nop              5991  fillers(until=0xff)
              13e2 0200  nop
              13e3 0200  nop
              * 30 times
              13ff 0200  nop              5992  align(0x100, size=0x100)
                                          5993
                                          5994  #-----------------------------------------------------------------------
                                          5995  #       More vCPU instruction implementations, (0x1400)
                                          5996  #-----------------------------------------------------------------------
                                          5997
                                          5998  # JGT implementation
                                          5999  label('jgt#13')
jgt#13:       1400 0119  ld   [$19]       6000  ld([vAC+1])                     #13
              1401 e80a  blt  .jgt#16     6001  blt('.jgt#16')                  #14 if vAC.hi < 0
              1402 4118  ora  [$18]       6002  ora([vAC])                      #15
              1403 ec10  bne  .jgt#18     6003  bne('.jgt#18')                  #16 if (vAC.hi OR vAC.lo) != 0
              1404 0116  ld   [$16]       6004  ld([vPC])                       #17
              1405 8001  adda $01         6005  adda(1)                         #18
              1406 c216  st   [$16]       6006  st([vPC])                       #19
              1407 1403  ld   $03,y       6007  ld(hi('NEXTY'),Y)               #20
              1408 e000  jmp  y,$00       6008  jmp(Y,'NEXTY')                  #21
              1409 00f4  ld   $f4         6009  ld(-24/2)                       #22
                                          6010  label('.jgt#16')
.jgt#16:      140a 0116  ld   [$16]       6011  ld([vPC])                       #16
              140b 8001  adda $01         6012  adda(1)                         #17
              140c c216  st   [$16]       6013  st([vPC])                       #18
              140d 1403  ld   $03,y       6014  ld(hi('REENTER'),Y)             #19
              140e e0cb  jmp  y,$cb       6015  jmp(Y,'REENTER')                #20
              140f 00f4  ld   $f4         6016  ld(-24/2)                       #21
                                          6017  label('.jgt#18')
.jgt#18:      1410 1517  ld   [$17],y     6018  ld([vPC+1],Y)                   #18 vPC.hi
              1411 0d00  ld   [y,x]       6019  ld([Y,X])                       #19 address of branch destination
              1412 c216  st   [$16]       6020  st([vPC])                       #20
              1413 de00  st   [y,x++]     6021  st([Y,Xpp])                     #21
              1414 0d00  ld   [y,x]       6022  ld([Y,X])                       #22 hi address of jump destination
              1415 c217  st   [$17]       6023  st([vPC+1])                     #23
              1416 1403  ld   $03,y       6024  ld(hi('NEXTY'),Y)               #24
              1417 e000  jmp  y,$00       6025  jmp(Y,'NEXTY')                  #25
              1418 00f2  ld   $f2         6026  ld(-28/2)                       #26
                                          6027
                                          6028  # JLE implementation
                                          6029  label('jle#13')
jle#13:       1419 0119  ld   [$19]       6030  ld([vAC+1])                     #13
              141a e827  blt  .jle#16     6031  blt('.jle#16')                  #14 if vAC.hi < 0
              141b 4118  ora  [$18]       6032  ora([vAC])                      #15
              141c ec30  bne  .jle#18     6033  bne('.jle#18')                  #16 if (vAC.hi OR vAC.lo) != 0
              141d 0116  ld   [$16]       6034  ld([vPC])                       #17
              141e 1517  ld   [$17],y     6035  ld([vPC+1],Y)                   #18 vPC.hi
              141f 0d00  ld   [y,x]       6036  ld([Y,X])                       #19 address of branch destination
              1420 c216  st   [$16]       6037  st([vPC])                       #20
              1421 de00  st   [y,x++]     6038  st([Y,Xpp])                     #21
              1422 0d00  ld   [y,x]       6039  ld([Y,X])                       #22 hi address of jump destination
              1423 c217  st   [$17]       6040  st([vPC+1])                     #23
              1424 1403  ld   $03,y       6041  ld(hi('NEXTY'),Y)               #24
              1425 e000  jmp  y,$00       6042  jmp(Y,'NEXTY')                  #25
              1426 00f2  ld   $f2         6043  ld(-28/2)                       #26
                                          6044  label('.jle#16')
.jle#16:      1427 1517  ld   [$17],y     6045  ld([vPC+1],Y)                   #16 vPC.hi
              1428 0d00  ld   [y,x]       6046  ld([Y,X])                       #17 address of branch destination
              1429 c216  st   [$16]       6047  st([vPC])                       #18
              142a de00  st   [y,x++]     6048  st([Y,Xpp])                     #19
              142b 0d00  ld   [y,x]       6049  ld([Y,X])                       #20 hi address of jump destination
              142c c217  st   [$17]       6050  st([vPC+1])                     #21
              142d 1403  ld   $03,y       6051  ld(hi('NEXTY'),Y)               #22
              142e e000  jmp  y,$00       6052  jmp(Y,'NEXTY')                  #23
              142f 00f3  ld   $f3         6053  ld(-26/2)                       #24
                                          6054  label('.jle#18')
.jle#18:      1430 8001  adda $01         6055  adda(1)                         #18
              1431 c216  st   [$16]       6056  st([vPC])                       #19
              1432 1403  ld   $03,y       6057  ld(hi('NEXTY'),Y)               #20
              1433 e000  jmp  y,$00       6058  jmp(Y,'NEXTY')                  #21
              1434 00f4  ld   $f4         6059  ld(-24/2)                       #22
                                          6060
                                          6061  # JGE implementation
                                          6062  label('jge#13')
jge#13:       1435 0119  ld   [$19]       6063  ld([vAC+1])                     #13
              1436 e841  blt  .jge#16     6064  blt('.jge#16')                  #14 if vAC.hi < 0
              1437 0116  ld   [$16]       6065  ld([vPC])                       #15
              1438 1517  ld   [$17],y     6066  ld([vPC+1],Y)                   #16 vPC.hi
              1439 0d00  ld   [y,x]       6067  ld([Y,X])                       #17 address of branch destination
              143a c216  st   [$16]       6068  st([vPC])                       #18
              143b de00  st   [y,x++]     6069  st([Y,Xpp])                     #19
              143c 0d00  ld   [y,x]       6070  ld([Y,X])                       #20 hi address of jump destination
              143d c217  st   [$17]       6071  st([vPC+1])                     #21
              143e 1403  ld   $03,y       6072  ld(hi('NEXTY'),Y)               #22
              143f e000  jmp  y,$00       6073  jmp(Y,'NEXTY')                  #23
              1440 00f3  ld   $f3         6074  ld(-26/2)                       #24
                                          6075  label('.jge#16')
.jge#16:      1441 8001  adda $01         6076  adda(1)                         #16
              1442 c216  st   [$16]       6077  st([vPC])                       #17
              1443 1403  ld   $03,y       6078  ld(hi('NEXTY'),Y)               #18
              1444 e000  jmp  y,$00       6079  jmp(Y,'NEXTY')                  #19
              1445 00f5  ld   $f5         6080  ld(-22/2)                       #20
                                          6081
                                          6082  # PEEKA+ implementation
                                          6083  label('peeka+#13')
peeka+#13:    1446 c21d  st   [$1d]       6084  st([vTmp])                      #13
              1447 1519  ld   [$19],y     6085  ld([vAC+1],Y)                   #14
              1448 0118  ld   [$18]       6086  ld([vAC])                       #15
              1449 1200  ld   ac,x        6087  ld(AC,X)                        #16
              144a 8001  adda $01         6088  adda(1)                         #17
              144b c218  st   [$18]       6089  st([vAC])                       #18
              144c f053  beq  .peeka+#21  6090  beq('.peeka+#21')               #19 if low byte is 0x00
              144d 0d00  ld   [y,x]       6091  ld([Y,X])                       #20 peek [vAC]
              144e 111d  ld   [$1d],x     6092  ld([vTmp],X)                    #21 dst var
              144f c600  st   [x]         6093  st([X])                         #22 dst = peek [vAC]
              1450 1403  ld   $03,y       6094  ld(hi('REENTER'),Y)             #23
              1451 e0cb  jmp  y,$cb       6095  jmp(Y,'REENTER')                #24
              1452 00f2  ld   $f2         6096  ld(-28/2)                       #25
                                          6097  label('.peeka+#21')
.peeka+#21:   1453 111d  ld   [$1d],x     6098  ld([vTmp],X)                    #21 dst var
              1454 c600  st   [x]         6099  st([X])                         #22 dst = peek [vAC]
              1455 0119  ld   [$19]       6100  ld([vAC+1])                     #23
              1456 8001  adda $01         6101  adda(1)                         #24
              1457 c219  st   [$19]       6102  st([vAC+1])                     #25
              1458 1403  ld   $03,y       6103  ld(hi('NEXTY'),Y)               #26
              1459 e000  jmp  y,$00       6104  jmp(Y,'NEXTY')                  #27
              145a 00f1  ld   $f1         6105  ld(-30/2)                       #28
                                          6106
                                          6107  # ADDVW implementation
                                          6108  label('addvw#13')
addvw#13:     145b 1517  ld   [$17],y     6109  ld([vPC+1],Y)                   #13 vPC.hi
              145c c22a  st   [$2a]       6110  st([sysArgs+6])                 #14 src var addr
              145d de00  st   [y,x++]     6111  st([Y,Xpp])                     #15 X++
              145e 00f4  ld   $f4         6112  ld(min(0,maxTicks-54/2))        #16
              145f 8115  adda [$15]       6113  adda([vTicks])                  #17
              1460 e89e  blt  .addvw#20   6114  blt('.addvw#20')                #18 not enough time left, so retry
              1461 0d00  ld   [y,x]       6115  ld([Y,X])                       #19
              1462 c22b  st   [$2b]       6116  st([sysArgs+7])                 #20 dst var addr
              1463 1400  ld   $00,y       6117  ld(0,Y)                         #21
              1464 112a  ld   [$2a],x     6118  ld([sysArgs+6],X)               #22
              1465 0500  ld   [x]         6119  ld([X])                         #23 src low value
              1466 c218  st   [$18]       6120  st([vAC])                       #24
              1467 de00  st   [y,x++]     6121  st([Y,Xpp])                     #25 X++
              1468 0500  ld   [x]         6122  ld([X])                         #26 src hi value
              1469 c219  st   [$19]       6123  st([vAC+1])                     #27
              146a 112b  ld   [$2b],x     6124  ld([sysArgs+7],X)               #28
              146b 0118  ld   [$18]       6125  ld([vAC])                       #29 Low byte
              146c c21d  st   [$1d]       6126  st([vTmp])                      #30
              146d 8500  adda [x]         6127  adda([X])                       #31
              146e c218  st   [$18]       6128  st([vAC])                       #32 vAC.lo = low result
              146f e881  blt  .addvw#35   6129  bmi('.addvw#35')                #33 Now figure out if there was a carry
              1470 0500  ld   [x]         6130  ld([X])                         #34
              1471 de00  st   [y,x++]     6131  st([Y,Xpp])                     #35
              1472 411d  ora  [$1d]       6132  ora([vTmp])                     #36
              1473 e891  blt  .addvw#39   6133  bmi('.addvw#39')                #37 If Carry == 1
              1474 0500  ld   [x]         6134  ld([X])                         #38
              1475 8119  adda [$19]       6135  adda([vAC+1])                   #39
              1476 c219  st   [$19]       6136  st([vAC+1])                     #40 vAC.hi = high result
              1477 c600  st   [x]         6137  st([X])                         #41 dst.hi = high result
              1478 112b  ld   [$2b],x     6138  ld([sysArgs+7],X)               #42
              1479 0118  ld   [$18]       6139  ld([vAC])                       #43
              147a c600  st   [x]         6140  st([X])                         #44 dst.lo = low result
              147b 0116  ld   [$16]       6141  ld([vPC])                       #45
              147c 8001  adda $01         6142  adda(1)                         #46
              147d c216  st   [$16]       6143  st([vPC])                       #47
              147e 1403  ld   $03,y       6144  ld(hi('NEXTY'),Y)               #48
              147f e000  jmp  y,$00       6145  jmp(Y,'NEXTY')                  #49
              1480 00e6  ld   $e6         6146  ld(-52/2)                       #50
                                          6147
                                          6148  label('.addvw#35')
.addvw#35:    1481 de00  st   [y,x++]     6149  st([Y,Xpp])                     #35
              1482 211d  anda [$1d]       6150  anda([vTmp])                    #36
              1483 e891  blt  .addvw#39   6151  bmi('.addvw#39')                #37 If Carry == 1
              1484 0500  ld   [x]         6152  ld([X])                         #38
              1485 8119  adda [$19]       6153  adda([vAC+1])                   #39
              1486 c219  st   [$19]       6154  st([vAC+1])                     #40 vAC.hi = high result
              1487 c600  st   [x]         6155  st([X])                         #41 dst.hi = high result
              1488 112b  ld   [$2b],x     6156  ld([sysArgs+7],X)               #42
              1489 0118  ld   [$18]       6157  ld([vAC])                       #43
              148a c600  st   [x]         6158  st([X])                         #44 dst.lo = low result
              148b 0116  ld   [$16]       6159  ld([vPC])                       #45
              148c 8001  adda $01         6160  adda(1)                         #46
              148d c216  st   [$16]       6161  st([vPC])                       #47
              148e 1403  ld   $03,y       6162  ld(hi('NEXTY'),Y)               #48
              148f e000  jmp  y,$00       6163  jmp(Y,'NEXTY')                  #49
              1490 00e6  ld   $e6         6164  ld(-52/2)                       #50
                                          6165
                                          6166  label('.addvw#39')
.addvw#39:    1491 8001  adda $01         6167  adda(1)                         #39
              1492 8119  adda [$19]       6168  adda([vAC+1])                   #40
              1493 c219  st   [$19]       6169  st([vAC+1])                     #41 vAC.hi = high result
              1494 c600  st   [x]         6170  st([X])                         #42 dst.hi = high result
              1495 112b  ld   [$2b],x     6171  ld([sysArgs+7],X)               #43
              1496 0118  ld   [$18]       6172  ld([vAC])                       #44
              1497 c600  st   [x]         6173  st([X])                         #45 dst.lo = low result
              1498 0116  ld   [$16]       6174  ld([vPC])                       #46
              1499 8001  adda $01         6175  adda(1)                         #47
              149a c216  st   [$16]       6176  st([vPC])                       #48
              149b 1403  ld   $03,y       6177  ld(hi('REENTER'),Y)             #49
              149c e0cb  jmp  y,$cb       6178  jmp(Y,'REENTER')                #50
              149d 00e5  ld   $e5         6179  ld(-54/2)                       #51
                                          6180
                                          6181  label('.addvw#20')
.addvw#20:    149e 0116  ld   [$16]       6182  ld([vPC])                       #20 retry instruction
              149f a002  suba $02         6183  suba(2)                         #21
              14a0 c216  st   [$16]       6184  st([vPC])                       #22
              14a1 1403  ld   $03,y       6185  ld(hi('REENTER'),Y)             #23
              14a2 e0cb  jmp  y,$cb       6186  jmp(Y,'REENTER')                #24
              14a3 00f2  ld   $f2         6187  ld(-28/2)                       #25
                                          6188
                                          6189
                                          6190  # SUBVW implementation
                                          6191  label('subvw#13')
subvw#13:     14a4 1517  ld   [$17],y     6192  ld([vPC+1],Y)                   #13 vPC.hi
              14a5 c22a  st   [$2a]       6193  st([sysArgs+6])                 #14 src var addr
              14a6 de00  st   [y,x++]     6194  st([Y,Xpp])                     #15 X++
              14a7 8001  adda $01         6195  adda(1)                         #16
              14a8 c21d  st   [$1d]       6196  st([vTmp])                      #17 src var high addr
              14a9 00f4  ld   $f4         6197  ld(min(0,maxTicks-54/2))        #18
              14aa 8115  adda [$15]       6198  adda([vTicks])                  #19
              14ab e8df  blt  .subvw#22   6199  blt('.subvw#22')                #20 not enough time left, so retry
              14ac 0d00  ld   [y,x]       6200  ld([Y,X])                       #21
              14ad c22b  st   [$2b]       6201  st([sysArgs+7])                 #22 dst var addr
              14ae 1400  ld   $00,y       6202  ld(0,Y)                         #23
              14af 112b  ld   [$2b],x     6203  ld([sysArgs+7],X)               #24
              14b0 0500  ld   [x]         6204  ld([X])                         #25 dst low value
              14b1 c218  st   [$18]       6205  st([vAC])                       #26
              14b2 de00  st   [y,x++]     6206  st([Y,Xpp])                     #27 X++
              14b3 0500  ld   [x]         6207  ld([X])                         #28 dst hi value
              14b4 c219  st   [$19]       6208  st([vAC+1])                     #29
              14b5 112a  ld   [$2a],x     6209  ld([sysArgs+6],X)               #30
              14b6 0118  ld   [$18]       6210  ld([vAC])                       #31 Low byte
              14b7 e8cc  blt  .subvw#34   6211  bmi('.subvw#34')                #32
              14b8 a500  suba [x]         6212  suba([X])                       #33
              14b9 c218  st   [$18]       6213  st([vAC])                       #34 Store low result
              14ba 4500  ora  [x]         6214  ora([X])                        #35 Carry in bit 7
              14bb 3080  anda $80,x       6215  anda(0x80,X)                    #36 Move carry to bit 0
              14bc 0119  ld   [$19]       6216  ld([vAC+1])                     #37
              14bd a500  suba [x]         6217  suba([X])                       #38
              14be 111d  ld   [$1d],x     6218  ld([vTmp],X)                    #39
              14bf a500  suba [x]         6219  suba([X])                       #40
              14c0 c219  st   [$19]       6220  st([vAC+1])                     #41
              14c1 112b  ld   [$2b],x     6221  ld([sysArgs+7],X)               #42
              14c2 0118  ld   [$18]       6222  ld([vAC])                       #43
              14c3 de00  st   [y,x++]     6223  st([Y,Xpp])                     #44
              14c4 0119  ld   [$19]       6224  ld([vAC+1])                     #45
              14c5 c600  st   [x]         6225  st([X])                         #46
              14c6 0116  ld   [$16]       6226  ld([vPC])                       #47
              14c7 8001  adda $01         6227  adda(1)                         #48
              14c8 c216  st   [$16]       6228  st([vPC])                       #49
              14c9 1403  ld   $03,y       6229  ld(hi('NEXTY'),Y)               #50
              14ca e000  jmp  y,$00       6230  jmp(Y,'NEXTY')                  #51
              14cb 00e5  ld   $e5         6231  ld(-54/2)                       #52
                                          6232
                                          6233  label('.subvw#34')
.subvw#34:    14cc c218  st   [$18]       6234  st([vAC])                       #34 Store low result
              14cd 2500  anda [x]         6235  anda([X])                       #35 Carry in bit 7
              14ce 3080  anda $80,x       6236  anda(0x80,X)                    #36 Move carry to bit 0
              14cf 0119  ld   [$19]       6237  ld([vAC+1])                     #37
              14d0 a500  suba [x]         6238  suba([X])                       #38
              14d1 111d  ld   [$1d],x     6239  ld([vTmp],X)                    #39
              14d2 a500  suba [x]         6240  suba([X])                       #40
              14d3 c219  st   [$19]       6241  st([vAC+1])                     #41
              14d4 112b  ld   [$2b],x     6242  ld([sysArgs+7],X)               #42
              14d5 0118  ld   [$18]       6243  ld([vAC])                       #43
              14d6 de00  st   [y,x++]     6244  st([Y,Xpp])                     #44
              14d7 0119  ld   [$19]       6245  ld([vAC+1])                     #45
              14d8 c600  st   [x]         6246  st([X])                         #46
              14d9 0116  ld   [$16]       6247  ld([vPC])                       #47
              14da 8001  adda $01         6248  adda(1)                         #48
              14db c216  st   [$16]       6249  st([vPC])                       #49
              14dc 1403  ld   $03,y       6250  ld(hi('NEXTY'),Y)               #50
              14dd e000  jmp  y,$00       6251  jmp(Y,'NEXTY')                  #51
              14de 00e5  ld   $e5         6252  ld(-54/2)                       #52
                                          6253
                                          6254  label('.subvw#22')
.subvw#22:    14df 0116  ld   [$16]       6255  ld([vPC])                       #22 retry instruction
              14e0 a002  suba $02         6256  suba(2)                         #23
              14e1 c216  st   [$16]       6257  st([vPC])                       #24
              14e2 1403  ld   $03,y       6258  ld(hi('REENTER'),Y)             #25
              14e3 e0cb  jmp  y,$cb       6259  jmp(Y,'REENTER')                #26
              14e4 00f1  ld   $f1         6260  ld(-30/2)                       #27
                                          6261
                                          6262
                                          6263  # PREFX3 implementation
                                          6264  # Original idea by lb3361, see https://forum.gigatron.io/viewtopic.php?p=2099#p2099
                                          6265  label('prefx3#13')
prefx3#13:    14e5 0116  ld   [$16]       6266  ld([vPC])                       #13
              14e6 8002  adda $02         6267  adda(2)                         #14
              14e7 c216  st   [$16]       6268  st([vPC])                       #15 Advance vPC
              14e8 0021  ld   $21         6269  ld(hi('PREFX3_PAGE'))           #16 ENTER is at $(n-1)ff, where n = instruction page
              14e9 c202  st   [$02]       6270  st([vCpuSelect])                #17
              14ea 9401  adda $01,y       6271  adda(1,Y)                       #18
              14eb e000  jmp  y,$00       6272  jmp(Y,'NEXTY')                  #19
              14ec 00f5  ld   $f5         6273  ld(-22/2)                       #20
                                          6274
                                          6275  # PREFX2 implementation
                                          6276  label('prefx2#13')
prefx2#13:    14ed 0116  ld   [$16]       6277  ld([vPC])                       #13
              14ee 8001  adda $01         6278  adda(1)                         #14
              14ef c216  st   [$16]       6279  st([vPC])                       #15 Advance vPC
              14f0 0022  ld   $22         6280  ld(hi('PREFX2_PAGE'))           #16 ENTER is at $(n-1)ff, where n = instruction page
              14f1 c202  st   [$02]       6281  st([vCpuSelect])                #17
              14f2 9401  adda $01,y       6282  adda(1,Y)                       #18
              14f3 e000  jmp  y,$00       6283  jmp(Y,'NEXTY')                  #19
              14f4 00f5  ld   $f5         6284  ld(-22/2)                       #20
                                          6285
                                          6286  # PREFX1 implementation
                                          6287  label('prefx1#13')
prefx1#13:    14f5 c202  st   [$02]       6288  st([vCpuSelect])                #13
              14f6 9401  adda $01,y       6289  adda(1,Y)                       #14
              14f7 e000  jmp  y,$00       6290  jmp(Y,'NEXTY')                  #15
              14f8 00f7  ld   $f7         6291  ld(-18/2)                       #16
                                          6292
                                          6293
              14f9 0200  nop              6294  fillers(until=0xff)
              14fa 0200  nop
              14fb 0200  nop
              * 6 times
              14ff 0200  nop              6295  align(0x100, size=0x100)
                                          6296
                                          6297  #-----------------------------------------------------------------------
                                          6298  #       More vCPU instruction implementations, (0x1500)
                                          6299  #-----------------------------------------------------------------------
                                          6300
                                          6301  # ADDI implementation
                                          6302  label('addi#13')
addi#13:      1500 8118  adda [$18]       6303  adda([vAC])                     #13
              1501 c218  st   [$18]       6304  st([vAC])                       #14 Store low result
              1502 e80c  blt  .addi#17    6305  bmi('.addi#17')                 #15 Now figure out if there was a carry
              1503 a11d  suba [$1d]       6306  suba([vTmp])                    #16 Gets back the initial value of vAC
              1504 411d  ora  [$1d]       6307  ora([vTmp])                     #17 Carry in bit 7
              1505 3080  anda $80,x       6308  anda(0x80,X)                    #18 Move carry to bit 0
              1506 0500  ld   [x]         6309  ld([X])                         #19
              1507 8119  adda [$19]       6310  adda([vAC+1])                   #20 Add the high bytes with carry
              1508 c219  st   [$19]       6311  st([vAC+1])                     #21 Store high result
              1509 1403  ld   $03,y       6312  ld(hi('NEXTY'),Y)               #22
              150a e000  jmp  y,$00       6313  jmp(Y,'NEXTY')                  #23
              150b 00f3  ld   $f3         6314  ld(-26/2)                       #24
                                          6315  label('.addi#17')
.addi#17:     150c 211d  anda [$1d]       6316  anda([vTmp])                    #17 Carry in bit 7
              150d 3080  anda $80,x       6317  anda(0x80,X)                    #18 Move carry to bit 0
              150e 0500  ld   [x]         6318  ld([X])                         #19
              150f 8119  adda [$19]       6319  adda([vAC+1])                   #20 Add the high bytes with carry
              1510 c219  st   [$19]       6320  st([vAC+1])                     #21 Store high result
              1511 1403  ld   $03,y       6321  ld(hi('NEXTY'),Y)               #22
              1512 e000  jmp  y,$00       6322  jmp(Y,'NEXTY')                  #23
              1513 00f3  ld   $f3         6323  ld(-26/2)                       #24
                                          6324
                                          6325  # SUBI implementation
                                          6326  label('subi#13')
subi#13:      1514 0118  ld   [$18]       6327  ld([vAC])                       #13
              1515 e820  blt  .subi#16    6328  bmi('.subi#16')                 #14
              1516 a11d  suba [$1d]       6329  suba([vTmp])                    #15
              1517 c218  st   [$18]       6330  st([vAC])                       #16 Store low result
              1518 411d  ora  [$1d]       6331  ora([vTmp])                     #17 Carry in bit 7
              1519 3080  anda $80,x       6332  anda(0x80,X)                    #18 Move carry to bit 0
              151a 0119  ld   [$19]       6333  ld([vAC+1])                     #19
              151b a500  suba [x]         6334  suba([X])                       #20
              151c c219  st   [$19]       6335  st([vAC+1])                     #21
              151d 1403  ld   $03,y       6336  ld(hi('NEXTY'),Y)               #22
              151e e000  jmp  y,$00       6337  jmp(Y,'NEXTY')                  #23
              151f 00f3  ld   $f3         6338  ld(-26/2)                       #24
                                          6339  label('.subi#16')
.subi#16:     1520 c218  st   [$18]       6340  st([vAC])                       #16 Store low result
              1521 211d  anda [$1d]       6341  anda([vTmp])                    #17 Carry in bit 7
              1522 3080  anda $80,x       6342  anda(0x80,X)                    #18 Move carry to bit 0
              1523 0119  ld   [$19]       6343  ld([vAC+1])                     #19
              1524 a500  suba [x]         6344  suba([X])                       #20
              1525 c219  st   [$19]       6345  st([vAC+1])                     #21
              1526 1403  ld   $03,y       6346  ld(hi('NEXTY'),Y)               #22
              1527 e000  jmp  y,$00       6347  jmp(Y,'NEXTY')                  #23
              1528 00f3  ld   $f3         6348  ld(-26/2)                       #24
                                          6349
                                          6350  # XORW implementation
                                          6351  label('xorw#13')
xorw#13:      1529 1400  ld   $00,y       6352  ld(0,Y)                         #13
              152a 0500  ld   [x]         6353  ld([X])                         #14
              152b de00  st   [y,x++]     6354  st([Y,Xpp])                     #15
              152c 6118  xora [$18]       6355  xora([vAC])                     #16
              152d c218  st   [$18]       6356  st([vAC])                       #17
              152e 0500  ld   [x]         6357  ld([X])                         #18
              152f 6119  xora [$19]       6358  xora([vAC+1])                   #19
              1530 c219  st   [$19]       6359  st([vAC+1])                     #20
              1531 1403  ld   $03,y       6360  ld(hi('REENTER'),Y)             #21
              1532 e0cb  jmp  y,$cb       6361  jmp(Y,'REENTER')                #22
              1533 00f3  ld   $f3         6362  ld(-26/2)                       #23
                                          6363
                                          6364  # INCW implementation
                                          6365  label('incw#13')
incw#13:      1534 1400  ld   $00,y       6366  ld(0,Y)                         #13
              1535 1200  ld   ac,x        6367  ld(AC,X)                        #14 address of low byte to be added
              1536 0500  ld   [x]         6368  ld([X])                         #15
              1537 8001  adda $01         6369  adda(1)                         #16
              1538 f03d  beq  .incw#19    6370  beq('.incw#19')                 #17 if low byte is 0x00
              1539 de00  st   [y,x++]     6371  st([Y,Xpp])                     #18 inc low byte
              153a 1403  ld   $03,y       6372  ld(hi('REENTER'),Y)             #19
              153b e0cb  jmp  y,$cb       6373  jmp(Y,'REENTER')                #20
              153c 00f4  ld   $f4         6374  ld(-24/2)                       #21
                                          6375  label('.incw#19')
.incw#19:     153d 0500  ld   [x]         6376  ld([X])                         #19
              153e 8001  adda $01         6377  adda(1)                         #20
              153f c600  st   [x]         6378  st([X])                         #21 inc high byte
              1540 1403  ld   $03,y       6379  ld(hi('NEXTY'),Y)               #22
              1541 e000  jmp  y,$00       6380  jmp(Y,'NEXTY')                  #23
              1542 00f3  ld   $f3         6381  ld(-26/2)                       #24
                                          6382
                                          6383  # DECW implementation
                                          6384  label('decw#13')
decw#13:      1543 1400  ld   $00,y       6385  ld(0,Y)                         #13
              1544 1200  ld   ac,x        6386  ld(AC,X)                        #14 address of low byte to be added
              1545 0500  ld   [x]         6387  ld([X])                         #15
              1546 a001  suba $01         6388  suba(1)                         #16
              1547 de00  st   [y,x++]     6389  st([Y,Xpp])                     #17 dec low byte
              1548 60ff  xora $ff         6390  xora(0xff)                      #18 if low byte is 0xff
              1549 f04d  beq  .decw#21    6391  beq('.decw#21')                 #19
              154a 1403  ld   $03,y       6392  ld(hi('NEXTY'),Y)               #20
              154b e000  jmp  y,$00       6393  jmp(Y,'NEXTY')                  #21
              154c 00f4  ld   $f4         6394  ld(-24/2)                       #22
                                          6395  label('.decw#21')
.decw#21:     154d 0500  ld   [x]         6396  ld([X])                         #21
              154e a001  suba $01         6397  suba(1)                         #22
              154f c600  st   [x]         6398  st([X])                         #23 dec high byte
              1550 1403  ld   $03,y       6399  ld(hi('NEXTY'),Y)               #24
              1551 e000  jmp  y,$00       6400  jmp(Y,'NEXTY')                  #25
              1552 00f2  ld   $f2         6401  ld(-28/2)                       #26
                                          6402
                                          6403  # DBNE implementation
                                          6404  label('dbne#13')
dbne#13:      1553 c21d  st   [$1d]       6405  st([vTmp])                      #13 branch offset
              1554 de00  st   [y,x++]     6406  st([Y,Xpp])                     #14 X++, address of counter
              1555 0d00  ld   [y,x]       6407  ld([Y,X])                       #15
              1556 1200  ld   ac,x        6408  ld(AC,X)                        #16 fetch counter
              1557 0500  ld   [x]         6409  ld([X])                         #17
              1558 a001  suba $01         6410  suba(1)                         #18 decrement counter
              1559 f060  beq  .dbne#21    6411  beq('.dbne#21')                 #19 if zero BRA
              155a c600  st   [x]         6412  st([X])                         #20
              155b 011d  ld   [$1d]       6413  ld([vTmp])                      #21
              155c c216  st   [$16]       6414  st([vPC])                       #22 BRA to branch offset
              155d 1403  ld   $03,y       6415  ld(hi('REENTER'),Y)             #23
              155e e0cb  jmp  y,$cb       6416  jmp(Y,'REENTER')                #24
              155f 00f2  ld   $f2         6417  ld(-28/2)                       #25
                                          6418  label('.dbne#21')
.dbne#21:     1560 0116  ld   [$16]       6419  ld([vPC])                       #21
              1561 8001  adda $01         6420  adda(1)                         #22
              1562 c216  st   [$16]       6421  st([vPC])                       #23 advance vPC by 1
              1563 1403  ld   $03,y       6422  ld(hi('NEXTY'),Y)               #24
              1564 e000  jmp  y,$00       6423  jmp(Y,'NEXTY')                  #25
              1565 00f2  ld   $f2         6424  ld(-28/2)                       #26
                                          6425
                                          6426  # TEQ implementation
                                          6427  label('teq#13')
teq#13:       1566 1200  ld   ac,x        6428  ld(AC,X)                        #13 address of var
              1567 0119  ld   [$19]       6429  ld([vAC+1])                     #14
              1568 4118  ora  [$18]       6430  ora([vAC])                      #15
              1569 f070  beq  .teq#18     6431  beq('.teq#18')                  #16 if (vAC.hi OR vAC.lo) == 0
              156a 1400  ld   $00,y       6432  ld(0,Y)                         #17
              156b dc00  st   $00,[y,x++] 6433  st(0,[Y,Xpp])                   #18 var.lo = 0
              156c cc00  st   $00,[y,x]   6434  st(0,[Y,X])                     #19 var.hi = 0
              156d 1403  ld   $03,y       6435  ld(hi('NEXTY'),Y)               #20
              156e e000  jmp  y,$00       6436  jmp(Y,'NEXTY')                  #21
              156f 00f4  ld   $f4         6437  ld(-24/2)                       #22
                                          6438  label('.teq#18')
.teq#18:      1570 dc01  st   $01,[y,x++] 6439  st(1,[Y,Xpp])                   #18 var.lo = 1
              1571 cc00  st   $00,[y,x]   6440  st(0,[Y,X])                     #19 var.hi = 0
              1572 1403  ld   $03,y       6441  ld(hi('NEXTY'),Y)               #20
              1573 e000  jmp  y,$00       6442  jmp(Y,'NEXTY')                  #21
              1574 00f4  ld   $f4         6443  ld(-24/2)                       #22
                                          6444
                                          6445  # TNE implementation
                                          6446  label('tne#13')
tne#13:       1575 1200  ld   ac,x        6447  ld(AC,X)                        #13 address of var
              1576 0119  ld   [$19]       6448  ld([vAC+1])                     #14
              1577 4118  ora  [$18]       6449  ora([vAC])                      #15
              1578 f07f  beq  .tne#18     6450  beq('.tne#18')                  #16 if (vAC.hi OR vAC.lo) == 0
              1579 1400  ld   $00,y       6451  ld(0,Y)                         #17
              157a dc01  st   $01,[y,x++] 6452  st(1,[Y,Xpp])                   #18 var.lo = 1
              157b cc00  st   $00,[y,x]   6453  st(0,[Y,X])                     #19 var.hi = 0
              157c 1403  ld   $03,y       6454  ld(hi('NEXTY'),Y)               #20
              157d e000  jmp  y,$00       6455  jmp(Y,'NEXTY')                  #21
              157e 00f4  ld   $f4         6456  ld(-24/2)                       #22
                                          6457  label('.tne#18')
.tne#18:      157f dc00  st   $00,[y,x++] 6458  st(0,[Y,Xpp])                   #18 var.lo = 0
              1580 cc00  st   $00,[y,x]   6459  st(0,[Y,X])                     #19 var.hi = 0
              1581 1403  ld   $03,y       6460  ld(hi('NEXTY'),Y)               #20
              1582 e000  jmp  y,$00       6461  jmp(Y,'NEXTY')                  #21
              1583 00f4  ld   $f4         6462  ld(-24/2)                       #22
                                          6463
                                          6464  # TGE implementation
                                          6465  label('tge#13')
tge#13:       1584 1200  ld   ac,x        6466  ld(AC,X)                        #13 address of var
              1585 0119  ld   [$19]       6467  ld([vAC+1])                     #14
              1586 e88d  blt  .tge#17     6468  bmi('.tge#17')                  #15 if vAC.hi < 0
              1587 1400  ld   $00,y       6469  ld(0,Y)                         #16
              1588 dc01  st   $01,[y,x++] 6470  st(1,[Y,Xpp])                   #17 var.lo = 1
              1589 cc00  st   $00,[y,x]   6471  st(0,[Y,X])                     #18 var.hi = 0
              158a 1403  ld   $03,y       6472  ld(hi('REENTER'),Y)             #19
              158b e0cb  jmp  y,$cb       6473  jmp(Y,'REENTER')                #20
              158c 00f4  ld   $f4         6474  ld(-24/2)                       #21
                                          6475  label('.tge#17')
.tge#17:      158d dc00  st   $00,[y,x++] 6476  st(0,[Y,Xpp])                   #17 var.lo = 0
              158e cc00  st   $00,[y,x]   6477  st(0,[Y,X])                     #18 var.hi = 0
              158f 1403  ld   $03,y       6478  ld(hi('REENTER'),Y)             #19
              1590 e0cb  jmp  y,$cb       6479  jmp(Y,'REENTER')                #20
              1591 00f4  ld   $f4         6480  ld(-24/2)                       #21
                                          6481
                                          6482  # TLT implementation
                                          6483  label('tlt#13')
tlt#13:       1592 1200  ld   ac,x        6484  ld(AC,X)                        #13 address of var
              1593 0119  ld   [$19]       6485  ld([vAC+1])                     #14
              1594 e89b  blt  .tlt#17     6486  bmi('.tlt#17')                  #15 if vAC.hi < 0
              1595 1400  ld   $00,y       6487  ld(0,Y)                         #16
              1596 dc00  st   $00,[y,x++] 6488  st(0,[Y,Xpp])                   #17 var.lo = 0
              1597 cc00  st   $00,[y,x]   6489  st(0,[Y,X])                     #18 var.hi = 0
              1598 1403  ld   $03,y       6490  ld(hi('REENTER'),Y)             #19
              1599 e0cb  jmp  y,$cb       6491  jmp(Y,'REENTER')                #20
              159a 00f4  ld   $f4         6492  ld(-24/2)                       #21
                                          6493  label('.tlt#17')
.tlt#17:      159b dc01  st   $01,[y,x++] 6494  st(1,[Y,Xpp])                   #17 var.lo = 1
              159c cc00  st   $00,[y,x]   6495  st(0,[Y,X])                     #18 var.hi = 0
              159d 1403  ld   $03,y       6496  ld(hi('REENTER'),Y)             #19
              159e e0cb  jmp  y,$cb       6497  jmp(Y,'REENTER')                #20
              159f 00f4  ld   $f4         6498  ld(-24/2)                       #21
                                          6499
                                          6500  # TGT implementation
                                          6501  label('tgt#13')
tgt#13:       15a0 1400  ld   $00,y       6502  ld(0,Y)                         #13
              15a1 1200  ld   ac,x        6503  ld(AC,X)                        #14 address of var
              15a2 0119  ld   [$19]       6504  ld([vAC+1])                     #15
              15a3 e8ac  blt  .tgt#18     6505  blt('.tgt#18')                  #16 if vAC.hi < 0
              15a4 4118  ora  [$18]       6506  ora([vAC])                      #17
              15a5 ecb1  bne  .tgt#20     6507  bne('.tgt#20')                  #18 if (vAC.hi OR vAC.lo) != 0
              15a6 0200  nop              6508  nop()                           #19
              15a7 dc00  st   $00,[y,x++] 6509  st(0,[Y,Xpp])                   #20 var.lo = 0
              15a8 cc00  st   $00,[y,x]   6510  st(0,[Y,X])                     #21 var.hi = 0
              15a9 1403  ld   $03,y       6511  ld(hi('NEXTY'),Y)               #22
              15aa e000  jmp  y,$00       6512  jmp(Y,'NEXTY')                  #23
              15ab 00f3  ld   $f3         6513  ld(-26/2)                       #24
                                          6514  label('.tgt#18')
.tgt#18:      15ac dc00  st   $00,[y,x++] 6515  st(0,[Y,Xpp])                   #18 var.lo = 0
              15ad cc00  st   $00,[y,x]   6516  st(0,[Y,X])                     #19 var.hi = 0
              15ae 1403  ld   $03,y       6517  ld(hi('NEXTY'),Y)               #20
              15af e000  jmp  y,$00       6518  jmp(Y,'NEXTY')                  #21
              15b0 00f4  ld   $f4         6519  ld(-24/2)                       #22
                                          6520  label('.tgt#20')
.tgt#20:      15b1 dc01  st   $01,[y,x++] 6521  st(1,[Y,Xpp])                   #20 var.lo = 1
              15b2 cc00  st   $00,[y,x]   6522  st(0,[Y,X])                     #21 var.hi = 0
              15b3 1403  ld   $03,y       6523  ld(hi('NEXTY'),Y)               #22
              15b4 e000  jmp  y,$00       6524  jmp(Y,'NEXTY')                  #23
              15b5 00f3  ld   $f3         6525  ld(-26/2)                       #24
                                          6526
                                          6527  # TLE implementation
                                          6528  label('tle#13')
tle#13:       15b6 1400  ld   $00,y       6529  ld(0,Y)                         #13
              15b7 1200  ld   ac,x        6530  ld(AC,X)                        #14 address of var
              15b8 0119  ld   [$19]       6531  ld([vAC+1])                     #15
              15b9 e8c2  blt  .tle#18     6532  blt('.tle#18')                  #16 if vAC.hi < 0
              15ba 4118  ora  [$18]       6533  ora([vAC])                      #17
              15bb ecc7  bne  .tle#20     6534  bne('.tle#20')                  #18 if (vAC.hi OR vAC.lo) != 0
              15bc 0200  nop              6535  nop()                           #19
              15bd dc01  st   $01,[y,x++] 6536  st(1,[Y,Xpp])                   #20 var.lo = 1
              15be cc00  st   $00,[y,x]   6537  st(0,[Y,X])                     #21 var.hi = 0
              15bf 1403  ld   $03,y       6538  ld(hi('NEXTY'),Y)               #22
              15c0 e000  jmp  y,$00       6539  jmp(Y,'NEXTY')                  #23
              15c1 00f3  ld   $f3         6540  ld(-26/2)                       #24
                                          6541  label('.tle#18')
.tle#18:      15c2 dc01  st   $01,[y,x++] 6542  st(1,[Y,Xpp])                   #18 var.lo = 1
              15c3 cc00  st   $00,[y,x]   6543  st(0,[Y,X])                     #19 var.hi = 0
              15c4 1403  ld   $03,y       6544  ld(hi('NEXTY'),Y)               #20
              15c5 e000  jmp  y,$00       6545  jmp(Y,'NEXTY')                  #21
              15c6 00f4  ld   $f4         6546  ld(-24/2)                       #22
                                          6547  label('.tle#20')
.tle#20:      15c7 dc00  st   $00,[y,x++] 6548  st(0,[Y,Xpp])                   #20 var.lo = 0
              15c8 cc00  st   $00,[y,x]   6549  st(0,[Y,X])                     #21 var.hi = 0
              15c9 1403  ld   $03,y       6550  ld(hi('NEXTY'),Y)               #22
              15ca e000  jmp  y,$00       6551  jmp(Y,'NEXTY')                  #23
              15cb 00f3  ld   $f3         6552  ld(-26/2)                       #24
                                          6553
                                          6554
              15cc 0200  nop              6555  fillers(until=0xff)
              15cd 0200  nop
              15ce 0200  nop
              * 51 times
              15ff 0200  nop              6556  align(0x100, size=0x100)
                                          6557
                                          6558  #-----------------------------------------------------------------------
                                          6559  #       More vCPU instruction implementations, (0x1600)
                                          6560  #-----------------------------------------------------------------------
                                          6561
                                          6562  # INC implementation
                                          6563  label('inc#13')
inc#13:       1600 1200  ld   ac,x        6564  ld(AC,X)                        #13
              1601 0500  ld   [x]         6565  ld([X])                         #14
              1602 8001  adda $01         6566  adda(1)                         #15
              1603 c600  st   [x]         6567  st([X])                         #16
              1604 1403  ld   $03,y       6568  ld(hi('REENTER'),Y)             #17
              1605 e0cb  jmp  y,$cb       6569  jmp(Y,'REENTER')                #18
              1606 00f5  ld   $f5         6570  ld(-22/2)                       #19
                                          6571
                                          6572  # DEC implementation
                                          6573  label('dec#13')
dec#13:       1607 1200  ld   ac,x        6574  ld(AC,X)                        #13
              1608 0500  ld   [x]         6575  ld([X])                         #14
              1609 a001  suba $01         6576  suba(1)                         #15
              160a c600  st   [x]         6577  st([X])                         #16
              160b 1403  ld   $03,y       6578  ld(hi('REENTER'),Y)             #17
              160c e0cb  jmp  y,$cb       6579  jmp(Y,'REENTER')                #18
              160d 00f5  ld   $f5         6580  ld(-22/2)                       #19
                                          6581
                                          6582  # LD implementation
                                          6583  label('ld#13')
ld#13:        160e 1200  ld   ac,x        6584  ld(AC,X)                        #13
              160f 0500  ld   [x]         6585  ld([X])                         #14
              1610 c218  st   [$18]       6586  st([vAC])                       #15
              1611 0000  ld   $00         6587  ld(0)                           #16
              1612 c219  st   [$19]       6588  st([vAC+1])                     #17
              1613 1403  ld   $03,y       6589  ld(hi('NEXTY'),Y)               #18
              1614 e000  jmp  y,$00       6590  jmp(Y,'NEXTY')                  #19
              1615 00f5  ld   $f5         6591  ld(-22/2)                       #20
                                          6592
                                          6593  # LDI implementation
                                          6594  label('ldi#13')
ldi#13:       1616 c218  st   [$18]       6595  st([vAC])                       #13
              1617 0000  ld   $00         6596  ld(0)                           #14
              1618 c219  st   [$19]       6597  st([vAC+1])                     #15
              1619 1403  ld   $03,y       6598  ld(hi('NEXTY'),Y)               #16
              161a e000  jmp  y,$00       6599  jmp(Y,'NEXTY')                  #17
              161b 00f6  ld   $f6         6600  ld(-20/2)                       #18
                                          6601
                                          6602  # ST implementation
                                          6603  label('st#13')
st#13:        161c 1200  ld   ac,x        6604  ld(AC,X)                        #13
              161d 0118  ld   [$18]       6605  ld([vAC])                       #14
              161e c600  st   [x]         6606  st([X])                         #15
              161f 1403  ld   $03,y       6607  ld(hi('NEXTY'),Y)               #16
              1620 e000  jmp  y,$00       6608  jmp(Y,'NEXTY')                  #17
              1621 00f6  ld   $f6         6609  ld(-20/2)                       #18
                                          6610
                                          6611  # ORI implementation
                                          6612  label('ori#13')
ori#13:       1622 4118  ora  [$18]       6613  ora([vAC])                      #13
              1623 c218  st   [$18]       6614  st([vAC])                       #14
              1624 1403  ld   $03,y       6615  ld(hi('REENTER'),Y)             #15
              1625 e0cb  jmp  y,$cb       6616  jmp(Y,'REENTER')                #16
              1626 00f6  ld   $f6         6617  ld(-20/2)                       #17
                                          6618
                                          6619  # ALLOC implementation
                                          6620  label('alloc#13')
alloc#13:     1627 811c  adda [$1c]       6621  adda([vSP])                     #13
              1628 c21c  st   [$1c]       6622  st([vSP])                       #14
              1629 1403  ld   $03,y       6623  ld(hi('REENTER'),Y)             #15
              162a e0cb  jmp  y,$cb       6624  jmp(Y,'REENTER')                #16
              162b 00f6  ld   $f6         6625  ld(-20/2)                       #17
                                          6626
                                          6627  # MOV implementation
                                          6628  label('mov#13')
mov#13:       162c 1517  ld   [$17],y     6629  ld([vPC+1],Y)                   #13
              162d c21d  st   [$1d]       6630  st([vTmp])                      #14 save address of dst var
              162e de00  st   [y,x++]     6631  st([Y,Xpp])                     #15 X++
              162f 0d00  ld   [y,x]       6632  ld([Y,X])                       #16 address of src var
              1630 1200  ld   ac,x        6633  ld(AC,X)                        #17
              1631 0500  ld   [x]         6634  ld([X])                         #18 get src
              1632 111d  ld   [$1d],x     6635  ld([vTmp],X)                    #19 address of dst var
              1633 c600  st   [x]         6636  st([X])                         #20 dst = src
              1634 0116  ld   [$16]       6637  ld([vPC])                       #21
              1635 8001  adda $01         6638  adda(1)                         #22
              1636 c216  st   [$16]       6639  st([vPC])                       #23
              1637 1403  ld   $03,y       6640  ld(hi('NEXTY'),Y)               #24
              1638 e000  jmp  y,$00       6641  jmp(Y,'NEXTY')                  #25
              1639 00f2  ld   $f2         6642  ld(-28/2)                       #26
                                          6643
                                          6644  # PEEKA implementation
                                          6645  label('peeka#13')
peeka#13:     163a c21d  st   [$1d]       6646  st([vTmp])                      #13
              163b 1519  ld   [$19],y     6647  ld([vAC+1],Y)                   #14
              163c 1118  ld   [$18],x     6648  ld([vAC],X)                     #15
              163d 0d00  ld   [y,x]       6649  ld([Y,X])                       #16 peek [vAC]
              163e 111d  ld   [$1d],x     6650  ld([vTmp],X)                    #17 dst var
              163f c600  st   [x]         6651  st([X])                         #18 dst = peek [vAC]
              1640 1403  ld   $03,y       6652  ld(hi('REENTER'),Y)             #19
              1641 e0cb  jmp  y,$cb       6653  jmp(Y,'REENTER')                #20
              1642 00f4  ld   $f4         6654  ld(-24/2)                       #21
                                          6655
                                          6656  # DEEKA implementation
                                          6657  label('deeka#13')
deeka#13:     1643 1519  ld   [$19],y     6658  ld([vAC+1],Y)                   #13
              1644 1118  ld   [$18],x     6659  ld([vAC],X)                     #14
              1645 0d00  ld   [y,x]       6660  ld([Y,X])                       #15 peek [vAC]
              1646 de00  st   [y,x++]     6661  st([Y,Xpp])                     #16
              1647 c22a  st   [$2a]       6662  st([sysArgs+6])                 #17
              1648 0d00  ld   [y,x]       6663  ld([Y,X])                       #18 peek [vAC+1]
              1649 c22b  st   [$2b]       6664  st([sysArgs+7])                 #19
              164a 1400  ld   $00,y       6665  ld(0,Y)                         #20
              164b 111d  ld   [$1d],x     6666  ld([vTmp],X)                    #21 dst var
              164c 012a  ld   [$2a]       6667  ld([sysArgs+6])                 #22
              164d de00  st   [y,x++]     6668  st([Y,Xpp])                     #23 [var.lo] = peek [vAC]
              164e 012b  ld   [$2b]       6669  ld([sysArgs+7])                 #24
              164f ce00  st   [y,x]       6670  st([Y,X])                       #25 [var.hi] = peek [vAC+1]
              1650 1403  ld   $03,y       6671  ld(hi('NEXTY'),Y)               #26
              1651 e000  jmp  y,$00       6672  jmp(Y,'NEXTY')                  #27
              1652 00f1  ld   $f1         6673  ld(-30/2)                       #28
                                          6674
                                          6675  # PEEKA implementation
                                          6676  #label('peeka#13')
                                          6677  #ld(0,Y)                         #13
                                          6678  #ld(AC,X)                        #14 address of var
                                          6679  #ld([Y,X])                       #15
                                          6680  #st([vTmp])                      #16 low byte of src pointer
                                          6681  #st([Y,Xpp])                     #17 X++
                                          6682  #ld([Y,X])                       #18
                                          6683  #ld(AC,Y)                        #19 high byte of src pointer
                                          6684  #ld([vTmp],X)                    #20
                                          6685  #ld([Y,X])                       #21 peek src
                                          6686  #ld([vAC],X)                     #22 low byte of dst pointer
                                          6687  #ld([vAC+1],Y)                   #23 high byte of dst pointer
                                          6688  #st([Y,X])                       #24 poke dst
                                          6689  #ld(hi('REENTER'),Y)             #25
                                          6690  #jmp(Y,'REENTER')                #26
                                          6691  #ld(-30/2)                       #27
                                          6692
                                          6693  # SUBBI implementation, var -= imm, does NOT modify var.hi
                                          6694  label('subbi#13')
subbi#13:     1653 1517  ld   [$17],y     6695  ld([vPC+1],Y)                   #13
              1654 c21d  st   [$1d]       6696  st([vTmp])                      #14 immediate value
              1655 de00  st   [y,x++]     6697  st([Y,Xpp])                     #15 X++
              1656 0d00  ld   [y,x]       6698  ld([Y,X])                       #16
              1657 1200  ld   ac,x        6699  ld(AC,X)                        #17 address of var
              1658 0500  ld   [x]         6700  ld([X])                         #18
              1659 a11d  suba [$1d]       6701  suba([vTmp])                    #19
              165a c600  st   [x]         6702  st([X])                         #20
              165b 0116  ld   [$16]       6703  ld([vPC])                       #21
              165c 8001  adda $01         6704  adda(1)                         #22
              165d c216  st   [$16]       6705  st([vPC])                       #23 advance vPC by 1
              165e 1403  ld   $03,y       6706  ld(hi('NEXTY'),Y)               #24
              165f e000  jmp  y,$00       6707  jmp(Y,'NEXTY')                  #25
              1660 00f2  ld   $f2         6708  ld(-28/2)                       #26
                                          6709
                                          6710  # MOVQB implementation
                                          6711  label('movqb#13')
movqb#13:     1661 1517  ld   [$17],y     6712  ld([vPC+1],Y)                   #13 vPC.hi
              1662 c21d  st   [$1d]       6713  st([vTmp])                      #14 immediate value
              1663 de00  st   [y,x++]     6714  st([Y,Xpp])                     #15 X++
              1664 0d00  ld   [y,x]       6715  ld([Y,X])                       #16
              1665 1200  ld   ac,x        6716  ld(AC,X)                        #17 address of var
              1666 011d  ld   [$1d]       6717  ld([vTmp])                      #18
              1667 c600  st   [x]         6718  st([X])                         #19 var.lo = immediate value
              1668 0116  ld   [$16]       6719  ld([vPC])                       #20
              1669 8001  adda $01         6720  adda(1)                         #21
              166a c216  st   [$16]       6721  st([vPC])                       #22 advance vPC by 1
              166b 1403  ld   $03,y       6722  ld(hi('REENTER'),Y)             #23
              166c e0cb  jmp  y,$cb       6723  jmp(Y,'REENTER')                #24
              166d 00f2  ld   $f2         6724  ld(-28/2)                       #25
                                          6725
                                          6726  # MOVQW implementation
                                          6727  label('movqw#13')
movqw#13:     166e c21d  st   [$1d]       6728  st([vTmp])                      #13 immediate value
              166f de00  st   [y,x++]     6729  st([Y,Xpp])                     #14 X++
              1670 0d00  ld   [y,x]       6730  ld([Y,X])                       #15
              1671 1200  ld   ac,x        6731  ld(AC,X)                        #16 address of var
              1672 011d  ld   [$1d]       6732  ld([vTmp])                      #17
              1673 c600  st   [x]         6733  st([X])                         #18 var.lo = immediate value
              1674 1400  ld   $00,y       6734  ld(0,Y)                         #19
              1675 de00  st   [y,x++]     6735  st([Y,Xpp])                     #20 X++
              1676 0000  ld   $00         6736  ld(0)                           #21
              1677 c600  st   [x]         6737  st([X])                         #22 var.hi = 0
              1678 0116  ld   [$16]       6738  ld([vPC])                       #23
              1679 8001  adda $01         6739  adda(1)                         #24
              167a c216  st   [$16]       6740  st([vPC])                       #25 advance vPC by 1
              167b 1403  ld   $03,y       6741  ld(hi('NEXTY'),Y)               #26
              167c e000  jmp  y,$00       6742  jmp(Y,'NEXTY')                  #27
              167d 00f1  ld   $f1         6743  ld(-30/2)                       #28
                                          6744
                                          6745  # LSRB implementation
                                          6746  label('lsrb#13')
lsrb#13:      167e 1200  ld   ac,x        6747  ld(AC,X)                        #13 var
              167f 1405  ld   $05,y       6748  ld(hi('shiftTable'),Y)          #14 logical shift right 1 bit (X >> 1)
              1680 00c8  ld   $c8         6749  ld('.lsrb#24')                  #15 continuation address
              1681 c21d  st   [$1d]       6750  st([vTmp])                      #16
              1682 0500  ld   [x]         6751  ld([X])                         #17 load byte from var
              1683 20fe  anda $fe         6752  anda(0xfe)                      #18
              1684 e200  jmp  y,ac        6753  jmp(Y,AC)                       #19
              1685 fcff  bra  $ff         6754  bra(255)                        #20 bra shiftTable+255
                                          6755  #dummy
                                          6756  # continues in page 0x0600 at label('.lsrb#24') after fetching shifted byte from 0x0500
                                          6757
                                          6758  # PEEKV implementation
                                          6759  label('peekv#13')
peekv#13:     1686 1200  ld   ac,x        6760  ld(AC,X)                        #13
              1687 1400  ld   $00,y       6761  ld(0,Y)                         #14
              1688 0d00  ld   [y,x]       6762  ld([Y,X])                       #15 low byte peek address
              1689 de00  st   [y,x++]     6763  st([Y,Xpp])                     #16 X++
              168a c21d  st   [$1d]       6764  st([vTmp])                      #17
              168b 0d00  ld   [y,x]       6765  ld([Y,X])                       #18 high byte peek address
              168c 1600  ld   ac,y        6766  ld(AC,Y)                        #19
              168d 111d  ld   [$1d],x     6767  ld([vTmp],X)                    #20
              168e 0d00  ld   [y,x]       6768  ld([Y,X])                       #21 peek byte
              168f c218  st   [$18]       6769  st([vAC])                       #22
              1690 0000  ld   $00         6770  ld(0)                           #23
              1691 c219  st   [$19]       6771  st([vAC+1])                     #24
              1692 1403  ld   $03,y       6772  ld(hi('REENTER'),Y)             #25
              1693 e0cb  jmp  y,$cb       6773  jmp(Y,'REENTER')                #26
              1694 00f1  ld   $f1         6774  ld(-30/2)                       #27
                                          6775
                                          6776  # DEEKV implementation
                                          6777  label('deekv#13')
deekv#13:     1695 1200  ld   ac,x        6778  ld(AC,X)                        #13
              1696 1400  ld   $00,y       6779  ld(0,Y)                         #14
              1697 0d00  ld   [y,x]       6780  ld([Y,X])                       #15 low byte deek address
              1698 de00  st   [y,x++]     6781  st([Y,Xpp])                     #16 X++
              1699 c21d  st   [$1d]       6782  st([vTmp])                      #17
              169a 0d00  ld   [y,x]       6783  ld([Y,X])                       #18 high byte deek address
              169b 1600  ld   ac,y        6784  ld(AC,Y)                        #19
              169c 111d  ld   [$1d],x     6785  ld([vTmp],X)                    #20
              169d 0d00  ld   [y,x]       6786  ld([Y,X])                       #21 peek low byte
              169e c218  st   [$18]       6787  st([vAC])                       #22
              169f de00  st   [y,x++]     6788  st([Y,Xpp])                     #23 X++
              16a0 0d00  ld   [y,x]       6789  ld([Y,X])                       #24 peek high byte
              16a1 c219  st   [$19]       6790  st([vAC+1])                     #25
              16a2 1403  ld   $03,y       6791  ld(hi('NEXTY'),Y)               #26
              16a3 e000  jmp  y,$00       6792  jmp(Y,'NEXTY')                  #27
              16a4 00f1  ld   $f1         6793  ld(-30/2)                       #28
                                          6794
                                          6795  # LSLV implementation
                                          6796  label('lslv#13')
lslv#13:      16a5 1400  ld   $00,y       6797  ld(0,Y)                         #13
              16a6 1200  ld   ac,x        6798  ld(AC,X)                        #14 var
              16a7 0500  ld   [x]         6799  ld([X])                         #15
              16a8 f4b2  bge  .lslv#18    6800  bge('.lslv#18')                 #16
              16a9 8500  adda [x]         6801  adda([X])                       #17
              16aa de00  st   [y,x++]     6802  st([Y,Xpp])                     #18 var.lo <<1
              16ab 0500  ld   [x]         6803  ld([X])                         #19
              16ac 8500  adda [x]         6804  adda([X])                       #20
              16ad 4001  ora  $01         6805  ora(1)                          #21
              16ae c600  st   [x]         6806  st([X])                         #22 var.hi <<1 | 1
              16af 1403  ld   $03,y       6807  ld(hi('REENTER'),Y)             #23
              16b0 e0cb  jmp  y,$cb       6808  jmp(Y,'REENTER')                #24
              16b1 00f2  ld   $f2         6809  ld(-28/2)                       #25
                                          6810  label('.lslv#18')
.lslv#18:     16b2 de00  st   [y,x++]     6811  st([Y,Xpp])                     #18
              16b3 0500  ld   [x]         6812  ld([X])                         #19
              16b4 8500  adda [x]         6813  adda([X])                       #20
              16b5 c600  st   [x]         6814  st([X])                         #21
              16b6 1403  ld   $03,y       6815  ld(hi('NEXTY'),Y)               #22
              16b7 e000  jmp  y,$00       6816  jmp(Y,'NEXTY')                  #23
              16b8 00f3  ld   $f3         6817  ld(-26/2)                       #24
                                          6818
                                          6819  # LDW implementation
                                          6820  label('ldw#13')
ldw#13:       16b9 1400  ld   $00,y       6821  ld(0,Y)                         #13
              16ba 1200  ld   ac,x        6822  ld(AC,X)                        #14 Operand
              16bb 0500  ld   [x]         6823  ld([X])                         #15
              16bc c218  st   [$18]       6824  st([vAC])                       #16
              16bd de00  st   [y,x++]     6825  st([Y,Xpp])                     #17 X++
              16be 0500  ld   [x]         6826  ld([X])                         #18
              16bf c219  st   [$19]       6827  st([vAC+1])                     #19
              16c0 1403  ld   $03,y       6828  ld(hi('NEXTY'),Y)               #20
              16c1 e000  jmp  y,$00       6829  jmp(Y,'NEXTY')                  #21
              16c2 00f4  ld   $f4         6830  ld(-24/2)                       #22
                                          6831
                                          6832  # STW implementation
                                          6833  label('stw#13')
stw#13:       16c3 1400  ld   $00,y       6834  ld(0,Y)                         #13
              16c4 1200  ld   ac,x        6835  ld(AC,X)                        #14 Operand
              16c5 0118  ld   [$18]       6836  ld([vAC])                       #15
              16c6 de00  st   [y,x++]     6837  st([Y,Xpp])                     #16
              16c7 0119  ld   [$19]       6838  ld([vAC+1])                     #17
              16c8 c600  st   [x]         6839  st([X])                         #18
              16c9 1403  ld   $03,y       6840  ld(hi('REENTER'),Y)             #19
              16ca e0cb  jmp  y,$cb       6841  jmp(Y,'REENTER')                #20
              16cb 00f4  ld   $f4         6842  ld(-24/2)                       #21
                                          6843
                                          6844  # POKE+ implementation
                                          6845  label('poke+#13')
poke+#13:     16cc 1200  ld   ac,x        6846  ld(AC,X)                        #13 Operand
              16cd 1400  ld   $00,y       6847  ld(0,Y)                         #14
              16ce 0500  ld   [x]         6848  ld([X])                         #15 low byte poke address
              16cf c21d  st   [$1d]       6849  st([vTmp])                      #16
              16d0 8001  adda $01         6850  adda(1)                         #17
              16d1 de00  st   [y,x++]     6851  st([Y,Xpp])                     #18
              16d2 0500  ld   [x]         6852  ld([X])                         #19 high byte poke address
              16d3 1600  ld   ac,y        6853  ld(AC,Y)                        #20
              16d4 111d  ld   [$1d],x     6854  ld([vTmp],X)                    #21
              16d5 0118  ld   [$18]       6855  ld([vAC])                       #22
              16d6 ce00  st   [y,x]       6856  st([Y,X])                       #23
              16d7 1403  ld   $03,y       6857  ld(hi('NEXTY'),Y)               #24
              16d8 e000  jmp  y,$00       6858  jmp(Y,'NEXTY')                  #25
              16d9 00f2  ld   $f2         6859  ld(-28/2)                       #26
                                          6860
                                          6861  # ADDBI implementation, var += imm, does NOT modify var.hi
                                          6862  label('addbi#13')
addbi#13:     16da 1517  ld   [$17],y     6863  ld([vPC+1],Y)                   #13
              16db c21d  st   [$1d]       6864  st([vTmp])                      #14 immediate value
              16dc de00  st   [y,x++]     6865  st([Y,Xpp])                     #15 X++
              16dd 0d00  ld   [y,x]       6866  ld([Y,X])                       #16
              16de 1200  ld   ac,x        6867  ld(AC,X)                        #17 var
              16df 0500  ld   [x]         6868  ld([X])                         #18
              16e0 811d  adda [$1d]       6869  adda([vTmp])                    #19
              16e1 c600  st   [x]         6870  st([X])                         #20
              16e2 0116  ld   [$16]       6871  ld([vPC])                       #21
              16e3 8001  adda $01         6872  adda(1)                         #22
              16e4 c216  st   [$16]       6873  st([vPC])                       #23 advance vPC by 1
              16e5 1403  ld   $03,y       6874  ld(hi('NEXTY'),Y)               #24
              16e6 e000  jmp  y,$00       6875  jmp(Y,'NEXTY')                  #25
              16e7 00f2  ld   $f2         6876  ld(-28/2)                       #26
                                          6877
                                          6878
              16e8 0200  nop              6879  fillers(until=0xff)
              16e9 0200  nop
              16ea 0200  nop
              * 23 times
              16ff 0200  nop              6880  align(0x100, size=0x100)
                                          6881
                                          6882  #-----------------------------------------------------------------------
                                          6883  #       More vCPU instruction implementations, (0x1700)
                                          6884  #-----------------------------------------------------------------------
                                          6885
                                          6886  # LDWI implementation (vCPU instruction)
                                          6887  label('ldwi#13')
ldwi#13:      1700 c218  st   [$18]       6888  st([vAC])                       #13 Operand
              1701 de00  st   [y,x++]     6889  st([Y,Xpp])                     #14 Just X++
              1702 0d00  ld   [y,x]       6890  ld([Y,X])                       #15 Fetch second operand
              1703 c219  st   [$19]       6891  st([vAC+1])                     #16
              1704 0116  ld   [$16]       6892  ld([vPC])                       #17 Advance vPC one more
              1705 8001  adda $01         6893  adda(1)                         #18
              1706 c216  st   [$16]       6894  st([vPC])                       #19
              1707 1403  ld   $03,y       6895  ld(hi('NEXTY'),Y)               #20
              1708 e000  jmp  y,$00       6896  jmp(Y,'NEXTY')                  #21
              1709 00f4  ld   $f4         6897  ld(-24/2)                       #22
                                          6898
                                          6899  # CALLI implementation (vCPU instruction)
                                          6900  label('calli#13')
calli#13:     170a 8003  adda $03         6901  adda(3)                         #13
              170b c21a  st   [$1a]       6902  st([vLR])                       #14
              170c 0117  ld   [$17]       6903  ld([vPC+1])                     #15
              170d d61b  st   [$1b],y     6904  st([vLR+1],Y)                   #16
              170e 0d00  ld   [y,x]       6905  ld([Y,X])                       #17
              170f de00  st   [y,x++]     6906  st([Y,Xpp])                     #18 Just X++
              1710 a002  suba $02         6907  suba(2)                         #19
              1711 c216  st   [$16]       6908  st([vPC])                       #20
              1712 0d00  ld   [y,x]       6909  ld([Y,X])                       #21
              1713 1403  ld   $03,y       6910  ld(hi('REENTER_28'),Y)          #22
              1714 e0ca  jmp  y,$ca       6911  jmp(Y,'REENTER_28')             #23
              1715 c217  st   [$17]       6912  st([vPC+1])                     #24
                                          6913
                                          6914  # SUBW implemetation
                                          6915  label('subw#13')
subw#13:      1716 8001  adda $01         6916  adda(1)                         #13
              1717 c21d  st   [$1d]       6917  st([vTmp])                      #14 Address of high byte to be subtracted
              1718 0118  ld   [$18]       6918  ld([vAC])                       #15 Low byte
              1719 e826  blt  .subw#18    6919  bmi('.subw#18')                 #16
              171a a500  suba [x]         6920  suba([X])                       #17
              171b c218  st   [$18]       6921  st([vAC])                       #18 Store low result
              171c 4500  ora  [x]         6922  ora([X])                        #19 Carry in bit 7
              171d 3080  anda $80,x       6923  anda(0x80,X)                    #20 Move carry to bit 0
              171e 0119  ld   [$19]       6924  ld([vAC+1])                     #21
              171f a500  suba [x]         6925  suba([X])                       #22
              1720 111d  ld   [$1d],x     6926  ld([vTmp],X)                    #23
              1721 a500  suba [x]         6927  suba([X])                       #24
              1722 c219  st   [$19]       6928  st([vAC+1])                     #25
              1723 1403  ld   $03,y       6929  ld(hi('NEXTY'),Y)               #26
              1724 e000  jmp  y,$00       6930  jmp(Y,'NEXTY')                  #27
              1725 00f1  ld   $f1         6931  ld(-30/2)                       #28
                                          6932  label('.subw#18')
.subw#18:     1726 c218  st   [$18]       6933  st([vAC])                       #18 Store low result
              1727 2500  anda [x]         6934  anda([X])                       #19 Carry in bit 7
              1728 3080  anda $80,x       6935  anda(0x80,X)                    #20 Move carry to bit 0
              1729 0119  ld   [$19]       6936  ld([vAC+1])                     #21
              172a a500  suba [x]         6937  suba([X])                       #22
              172b 111d  ld   [$1d],x     6938  ld([vTmp],X)                    #23
              172c a500  suba [x]         6939  suba([X])                       #24
              172d c219  st   [$19]       6940  st([vAC+1])                     #25
              172e 1403  ld   $03,y       6941  ld(hi('NEXTY'),Y)               #26
              172f e000  jmp  y,$00       6942  jmp(Y,'NEXTY')                  #27
              1730 00f1  ld   $f1         6943  ld(-30/2)                       #28
                                          6944
                                          6945  # BEQ implementation
                                          6946  label('beq#15')
beq#15:       1731 0119  ld   [$19]       6947  ld([vAC+1])                     #15
              1732 4118  ora  [$18]       6948  ora([vAC])                      #16
              1733 f03b  beq  .beq#19     6949  beq('.beq#19')                  #17 if (vAC.hi OR vAC.lo) == 0
              1734 0d00  ld   [y,x]       6950  ld([Y,X])                       #18 address of branch destination
              1735 0116  ld   [$16]       6951  ld([vPC])                       #19
              1736 8001  adda $01         6952  adda(1)                         #20
              1737 c216  st   [$16]       6953  st([vPC])                       #21
              1738 1403  ld   $03,y       6954  ld(hi('NEXTY'),Y)               #22
              1739 e000  jmp  y,$00       6955  jmp(Y,'NEXTY')                  #23
              173a 00f3  ld   $f3         6956  ld(-26/2)                       #24
                                          6957  label('.beq#19')
.beq#19:      173b c216  st   [$16]       6958  st([vPC])                       #19
              173c 1403  ld   $03,y       6959  ld(hi('NEXTY'),Y)               #20
              173d e000  jmp  y,$00       6960  jmp(Y,'NEXTY')                  #21
              173e 00f4  ld   $f4         6961  ld(-24/2)                       #22
                                          6962
                                          6963  # BNE implementation
                                          6964  label('bne#15')
bne#15:       173f 0119  ld   [$19]       6965  ld([vAC+1])                     #15
              1740 4118  ora  [$18]       6966  ora([vAC])                      #16
              1741 ec49  bne  .bne#19     6967  bne('.bne#19')                  #17 if (vAC.hi OR vAC.lo) != 0
              1742 0d00  ld   [y,x]       6968  ld([Y,X])                       #18 address of branch destination
              1743 0116  ld   [$16]       6969  ld([vPC])                       #19
              1744 8001  adda $01         6970  adda(1)                         #20
              1745 c216  st   [$16]       6971  st([vPC])                       #21
              1746 1403  ld   $03,y       6972  ld(hi('NEXTY'),Y)               #22
              1747 e000  jmp  y,$00       6973  jmp(Y,'NEXTY')                  #23
              1748 00f3  ld   $f3         6974  ld(-26/2)                       #24
                                          6975  label('.bne#19')
.bne#19:      1749 c216  st   [$16]       6976  st([vPC])                       #19
              174a 1403  ld   $03,y       6977  ld(hi('NEXTY'),Y)               #20
              174b e000  jmp  y,$00       6978  jmp(Y,'NEXTY')                  #21
              174c 00f4  ld   $f4         6979  ld(-24/2)                       #22
                                          6980
                                          6981  # BGT implementation
                                          6982  label('bgt#15')
bgt#15:       174d 0119  ld   [$19]       6983  ld([vAC+1])                     #15
              174e e857  blt  .bgt#18     6984  blt('.bgt#18')                  #16 if vAC.hi < 0
              174f 4118  ora  [$18]       6985  ora([vAC])                      #17
              1750 ec5d  bne  .bgt#20     6986  bne('.bgt#20')                  #18 if (vAC.hi OR vAC.lo) != 0
              1751 0116  ld   [$16]       6987  ld([vPC])                       #19
              1752 8001  adda $01         6988  adda(1)                         #20
              1753 c216  st   [$16]       6989  st([vPC])                       #21
              1754 1403  ld   $03,y       6990  ld(hi('NEXTY'),Y)               #22
              1755 e000  jmp  y,$00       6991  jmp(Y,'NEXTY')                  #23
              1756 00f3  ld   $f3         6992  ld(-26/2)                       #24
                                          6993  label('.bgt#18')
.bgt#18:      1757 0116  ld   [$16]       6994  ld([vPC])                       #18
              1758 8001  adda $01         6995  adda(1)                         #19
              1759 c216  st   [$16]       6996  st([vPC])                       #20
              175a 1403  ld   $03,y       6997  ld(hi('REENTER'),Y)             #21
              175b e0cb  jmp  y,$cb       6998  jmp(Y,'REENTER')                #22
              175c 00f3  ld   $f3         6999  ld(-26/2)                       #23
                                          7000  label('.bgt#20')
.bgt#20:      175d 0d00  ld   [y,x]       7001  ld([Y,X])                       #20 address of branch destination
              175e c216  st   [$16]       7002  st([vPC])                       #21
              175f 1403  ld   $03,y       7003  ld(hi('NEXTY'),Y)               #22
              1760 e000  jmp  y,$00       7004  jmp(Y,'NEXTY')                  #23
              1761 00f3  ld   $f3         7005  ld(-26/2)                       #24
                                          7006
                                          7007  # BLT implementation
                                          7008  label('blt#15')
blt#15:       1762 0119  ld   [$19]       7009  ld([vAC+1])                     #15
              1763 e86a  blt  .blt#18     7010  blt('.blt#18')                  #16 if vAC.hi < 0
              1764 0116  ld   [$16]       7011  ld([vPC])                       #17
              1765 8001  adda $01         7012  adda(1)                         #18
              1766 c216  st   [$16]       7013  st([vPC])                       #19
              1767 1403  ld   $03,y       7014  ld(hi('NEXTY'),Y)               #20
              1768 e000  jmp  y,$00       7015  jmp(Y,'NEXTY')                  #21
              1769 00f4  ld   $f4         7016  ld(-24/2)                       #22
                                          7017  label('.blt#18')
.blt#18:      176a 0d00  ld   [y,x]       7018  ld([Y,X])                       #18 address of branch destination
              176b c216  st   [$16]       7019  st([vPC])                       #19
              176c 1403  ld   $03,y       7020  ld(hi('NEXTY'),Y)               #20
              176d e000  jmp  y,$00       7021  jmp(Y,'NEXTY')                  #21
              176e 00f4  ld   $f4         7022  ld(-24/2)                       #22
                                          7023
                                          7024  # BGE implementation
                                          7025  label('bge#15')
bge#15:       176f 0119  ld   [$19]       7026  ld([vAC+1])                     #15
              1770 e877  blt  .bge#18     7027  blt('.bge#18')                  #16 if vAC.hi < 0
              1771 0116  ld   [$16]       7028  ld([vPC])                       #17
              1772 0d00  ld   [y,x]       7029  ld([Y,X])                       #18 address of branch destination
              1773 c216  st   [$16]       7030  st([vPC])                       #19
              1774 1403  ld   $03,y       7031  ld(hi('NEXTY'),Y)               #20
              1775 e000  jmp  y,$00       7032  jmp(Y,'NEXTY')                  #21
              1776 00f4  ld   $f4         7033  ld(-24/2)                       #22
                                          7034  label('.bge#18')
.bge#18:      1777 8001  adda $01         7035  adda(1)                         #18
              1778 c216  st   [$16]       7036  st([vPC])                       #19
              1779 1403  ld   $03,y       7037  ld(hi('NEXTY'),Y)               #20
              177a e000  jmp  y,$00       7038  jmp(Y,'NEXTY')                  #21
              177b 00f4  ld   $f4         7039  ld(-24/2)                       #22
                                          7040
                                          7041  # BLE implementation
                                          7042  label('ble#15')
ble#15:       177c 0119  ld   [$19]       7043  ld([vAC+1])                     #15
              177d e886  blt  .ble#18     7044  blt('.ble#18')                  #16 if vAC.hi < 0
              177e 4118  ora  [$18]       7045  ora([vAC])                      #17
              177f ec8b  bne  .ble#20     7046  bne('.ble#20')                  #18 if (vAC.hi OR vAC.lo) != 0
              1780 0116  ld   [$16]       7047  ld([vPC])                       #19
              1781 0d00  ld   [y,x]       7048  ld([Y,X])                       #20 address of branch destination
              1782 c216  st   [$16]       7049  st([vPC])                       #21
              1783 1403  ld   $03,y       7050  ld(hi('NEXTY'),Y)               #22
              1784 e000  jmp  y,$00       7051  jmp(Y,'NEXTY')                  #23
              1785 00f3  ld   $f3         7052  ld(-26/2)                       #24
                                          7053  label('.ble#18')
.ble#18:      1786 0d00  ld   [y,x]       7054  ld([Y,X])                       #18 address of branch destination
              1787 c216  st   [$16]       7055  st([vPC])                       #19
              1788 1403  ld   $03,y       7056  ld(hi('NEXTY'),Y)               #20
              1789 e000  jmp  y,$00       7057  jmp(Y,'NEXTY')                  #21
              178a 00f4  ld   $f4         7058  ld(-24/2)                       #22
                                          7059  label('.ble#20')
.ble#20:      178b 8001  adda $01         7060  adda(1)                         #20
              178c c216  st   [$16]       7061  st([vPC])                       #21
              178d 1403  ld   $03,y       7062  ld(hi('NEXTY'),Y)               #22
              178e e000  jmp  y,$00       7063  jmp(Y,'NEXTY')                  #23
              178f 00f3  ld   $f3         7064  ld(-26/2)                       #24
                                          7065
                                          7066  # ADDBA implementation
                                          7067  label('addba#13')
addba#13:     1790 1200  ld   ac,x        7068  ld(AC,X)                        #13 src var
              1791 0118  ld   [$18]       7069  ld([vAC])                       #14
              1792 8500  adda [x]         7070  adda([X])                       #15
              1793 c218  st   [$18]       7071  st([vAC])                       #16 vAC.lo += var.lo
              1794 e89e  blt  .addba#19   7072  bmi('.addba#19')                #17 Now figure out if there was a carry
              1795 a500  suba [x]         7073  suba([X])                       #18 Gets back the initial value of vAC
              1796 4500  ora  [x]         7074  ora([X])                        #19 Carry in bit 7
              1797 3080  anda $80,x       7075  anda(0x80,X)                    #20 Move carry to bit 0
              1798 0500  ld   [x]         7076  ld([X])                         #21
              1799 8119  adda [$19]       7077  adda([vAC+1])                   #22 Add the high byte and carry
              179a c219  st   [$19]       7078  st([vAC+1])                     #23 Store high result
              179b 1403  ld   $03,y       7079  ld(hi('NEXTY'),Y)               #24
              179c e000  jmp  y,$00       7080  jmp(Y,'NEXTY')                  #25
              179d 00f2  ld   $f2         7081  ld(-28/2)                       #26
                                          7082  label('.addba#19')
.addba#19:    179e 2500  anda [x]         7083  anda([X])                       #19 Carry in bit 7
              179f 3080  anda $80,x       7084  anda(0x80,X)                    #20 Move carry to bit 0
              17a0 0500  ld   [x]         7085  ld([X])                         #21
              17a1 8119  adda [$19]       7086  adda([vAC+1])                   #22 Add high byte and carry
              17a2 c219  st   [$19]       7087  st([vAC+1])                     #23 Store high result
              17a3 1403  ld   $03,y       7088  ld(hi('NEXTY'),Y)               #24
              17a4 e000  jmp  y,$00       7089  jmp(Y,'NEXTY')                  #25
              17a5 00f2  ld   $f2         7090  ld(-28/2)                       #26
                                          7091
                                          7092  # SUBBA implementation
                                          7093  label('subba#13')
subba#13:     17a6 1200  ld   ac,x        7094  ld(AC,X)                        #13 src var
              17a7 0118  ld   [$18]       7095  ld([vAC])                       #14
              17a8 e8b3  blt  .subba#17   7096  bmi('.subba#17')                 #15
              17a9 a500  suba [x]         7097  suba([X])                       #16
              17aa c218  st   [$18]       7098  st([vAC])                       #17 vAC.lo -= var.lo
              17ab 4500  ora  [x]         7099  ora([X])                        #18 Borrow in bit 7
              17ac 3080  anda $80,x       7100  anda(0x80,X)                    #19 Move borrow to bit 0
              17ad 0119  ld   [$19]       7101  ld([vAC+1])                     #20
              17ae a500  suba [x]         7102  suba([X])                       #21 Sub borrow from high byte
              17af c219  st   [$19]       7103  st([vAC+1])                     #22 Store high result
              17b0 1403  ld   $03,y       7104  ld(hi('REENTER'),Y)             #23
              17b1 e0cb  jmp  y,$cb       7105  jmp(Y,'REENTER')                #24
              17b2 00f2  ld   $f2         7106  ld(-28/2)                       #25
                                          7107  label('.subba#17')
.subba#17:    17b3 c218  st   [$18]       7108  st([vAC])                       #17
              17b4 2500  anda [x]         7109  anda([X])                       #18 Borrow in bit 7
              17b5 3080  anda $80,x       7110  anda(0x80,X)                    #19 Move borrow to bit 0
              17b6 0119  ld   [$19]       7111  ld([vAC+1])                     #20
              17b7 a500  suba [x]         7112  suba([X])                       #21 Sub borrow from high byte
              17b8 c219  st   [$19]       7113  st([vAC+1])                     #22 Store high result
              17b9 1403  ld   $03,y       7114  ld(hi('REENTER'),Y)             #23
              17ba e0cb  jmp  y,$cb       7115  jmp(Y,'REENTER')                #24
              17bb 00f2  ld   $f2         7116  ld(-28/2)                       #25
                                          7117
                                          7118  # ADDB implementation, dst += src, does NOT modify dst.hi
                                          7119  #label('addb#13')
                                          7120  #ld([vPC+1],Y)                   #13
                                          7121  #st([vTmp])                      #14 dst var
                                          7122  #st([Y,Xpp])                     #15 X++
                                          7123  #ld([Y,X])                       #16
                                          7124  #ld(AC,X)                        #17 src var
                                          7125  #ld([X])                         #18
                                          7126  #ld([vTmp],X)                    #19
                                          7127  #adda([X])                       #20
                                          7128  #st([X])                         #21 dst += src
                                          7129  #ld([vPC])                       #22
                                          7130  #adda(1)                         #23
                                          7131  #st([vPC])                       #24 advance vPC by 1
                                          7132  #ld(hi('REENTER'),Y)             #25
                                          7133  #jmp(Y,'REENTER')                #26
                                          7134  #ld(-30/2)                       #27
                                          7135
                                          7136  # ADDBA implementation, vAC.lo = dst + src, does NOT modify vAC.hi
                                          7137  #label('addba#13')
                                          7138  #ld([vPC+1],Y)                   #13
                                          7139  #st([vTmp])                      #14 dst var
                                          7140  #st([Y,Xpp])                     #15 X++
                                          7141  #ld([Y,X])                       #16
                                          7142  #ld(AC,X)                        #17 src var
                                          7143  #ld([X])                         #18
                                          7144  #ld([vTmp],X)                    #19
                                          7145  #adda([X])                       #20
                                          7146  #st([vAC])                       #21 vAC.lo = dst + src
                                          7147  #ld([vPC])                       #22
                                          7148  #adda(1)                         #23
                                          7149  #st([vPC])                       #24 advance vPC by 1
                                          7150  #ld(hi('REENTER'),Y)             #25
                                          7151  #jmp(Y,'REENTER')                #26
                                          7152  #ld(-30/2)                       #27
                                          7153
                                          7154  # POKEA implementation
                                          7155  label('pokea#13')
pokea#13:     17bc 1200  ld   ac,x        7156  ld(AC,X)                        #13
              17bd 0500  ld   [x]         7157  ld([X])                         #14 var.lo
              17be 1118  ld   [$18],x     7158  ld([vAC],X)                     #15
              17bf 1519  ld   [$19],y     7159  ld([vAC+1],Y)                   #16
              17c0 ce00  st   [y,x]       7160  st([Y,X])                       #17 poke [vAC], var.lo
              17c1 1403  ld   $03,y       7161  ld(hi('NEXTY'),Y)               #18
              17c2 e000  jmp  y,$00       7162  jmp(Y,'NEXTY')                  #19
              17c3 00f5  ld   $f5         7163  ld(-22/2)                       #20
                                          7164
                                          7165  # DOKEA implementation
                                          7166  label('dokea#13')
dokea#13:     17c4 d21d  st   [$1d],x     7167  st([vTmp],X)                    #13
              17c5 0500  ld   [x]         7168  ld([X])                         #14 var.lo
              17c6 1118  ld   [$18],x     7169  ld([vAC],X)                     #15
              17c7 1519  ld   [$19],y     7170  ld([vAC+1],Y)                   #16
              17c8 ce00  st   [y,x]       7171  st([Y,X])                       #17 poke [vAC], var.lo
              17c9 011d  ld   [$1d]       7172  ld([vTmp])                      #18
              17ca 9001  adda $01,x       7173  adda(1,X)                       #19
              17cb 0500  ld   [x]         7174  ld([X])                         #20 var.hi
              17cc c21d  st   [$1d]       7175  st([vTmp])                      #21
              17cd 0118  ld   [$18]       7176  ld([vAC])                       #22
              17ce 9001  adda $01,x       7177  adda(1,X)                       #23
              17cf 011d  ld   [$1d]       7178  ld([vTmp])                      #24
              17d0 ce00  st   [y,x]       7179  st([Y,X])                       #25 poke [vAC+1], var.hi
              17d1 1403  ld   $03,y       7180  ld(hi('NEXTY'),Y)               #26
              17d2 e000  jmp  y,$00       7181  jmp(Y,'NEXTY')                  #27
              17d3 00f1  ld   $f1         7182  ld(-30/2)                       #28
                                          7183
                                          7184  # POKEI implementation
                                          7185  label('pokei#13')
pokei#13:     17d4 1519  ld   [$19],y     7186  ld([vAC+1],Y)                   #13
              17d5 1118  ld   [$18],x     7187  ld([vAC],X)                     #14
              17d6 de00  st   [y,x++]     7188  st([Y,Xpp])                     #15
              17d7 1403  ld   $03,y       7189  ld(hi('NEXTY'),Y)               #16
              17d8 e000  jmp  y,$00       7190  jmp(Y,'NEXTY')                  #17
              17d9 00f6  ld   $f6         7191  ld(-20/2)                       #18
                                          7192
                                          7193  # DOKEI implementation
                                          7194  label('dokei#13')
dokei#13:     17da 1517  ld   [$17],y     7195  ld([vPC+1],Y)                   #13
              17db c21d  st   [$1d]       7196  st([vTmp])                      #14 imm.hi
              17dc de00  st   [y,x++]     7197  st([Y,Xpp])                     #15 X++
              17dd 0d00  ld   [y,x]       7198  ld([Y,X])                       #16 imm.lo
              17de 1519  ld   [$19],y     7199  ld([vAC+1],Y)                   #17
              17df 1118  ld   [$18],x     7200  ld([vAC],X)                     #18
              17e0 de00  st   [y,x++]     7201  st([Y,Xpp])                     #19
              17e1 011d  ld   [$1d]       7202  ld([vTmp])                      #20
              17e2 ce00  st   [y,x]       7203  st([Y,X])                       #21
              17e3 0116  ld   [$16]       7204  ld([vPC])                       #22
              17e4 8001  adda $01         7205  adda(1)                         #23
              17e5 c216  st   [$16]       7206  st([vPC])                       #24
              17e6 1403  ld   $03,y       7207  ld(hi('REENTER'),Y)             #25
              17e7 e0cb  jmp  y,$cb       7208  jmp(Y,'REENTER')                #26
              17e8 00f1  ld   $f1         7209  ld(-30/2)                       #27
                                          7210
                                          7211  # DEEK+ implementation
                                          7212  label('deek+#13')
deek+#13:     17e9 1200  ld   ac,x        7213  ld(AC,X)                        #13
              17ea 0500  ld   [x]         7214  ld([X])                         #14 low byte deek address
              17eb c21d  st   [$1d]       7215  st([vTmp])                      #15
              17ec 8002  adda $02         7216  adda(2)                         #16
              17ed de00  st   [y,x++]     7217  st([Y,Xpp])                     #17
              17ee 0500  ld   [x]         7218  ld([X])                         #18 high byte deek address
              17ef 1600  ld   ac,y        7219  ld(AC,Y)                        #19
              17f0 111d  ld   [$1d],x     7220  ld([vTmp],X)                    #20
              17f1 0d00  ld   [y,x]       7221  ld([Y,X])                       #21
              17f2 de00  st   [y,x++]     7222  st([Y,Xpp])                     #22 X++
              17f3 c218  st   [$18]       7223  st([vAC])                       #23
              17f4 0d00  ld   [y,x]       7224  ld([Y,X])                       #24
              17f5 c219  st   [$19]       7225  st([vAC+1])                     #25
              17f6 1403  ld   $03,y       7226  ld(hi('NEXTY'),Y)               #26
              17f7 e000  jmp  y,$00       7227  jmp(Y,'NEXTY')                  #27
              17f8 00f1  ld   $f1         7228  ld(-30/2)                       #28
                                          7229
                                          7230
              17f9 0200  nop              7231  fillers(until=0xff)
              17fa 0200  nop
              17fb 0200  nop
              * 6 times
              17ff 0200  nop              7232  align(0x100, size=0x100)
                                          7233
                                          7234  #-----------------------------------------------------------------------
                                          7235  #       More vCPU instruction implementations, (0x1800)
                                          7236  #-----------------------------------------------------------------------
                                          7237
                                          7238  # SYS retry implementation
                                          7239  label('.sys#16')
.sys#16:      1800 0116  ld   [$16]       7240  ld([vPC])                       #16
              1801 a002  suba $02         7241  suba(2)                         #17
              1802 c216  st   [$16]       7242  st([vPC])                       #18
              1803 1403  ld   $03,y       7243  ld(hi('REENTER'),Y)             #19
              1804 e0cb  jmp  y,$cb       7244  jmp(Y,'REENTER')                #20
              1805 00f4  ld   $f4         7245  ld(-24/2)                       #21
                                          7246
                                          7247  # LUP return, no longer part of PEEK
                                          7248  label('lupReturn#19')
lupReturn#19: 1806 0000  ld   $00         7249  ld(0)                           #19
              1807 c219  st   [$19]       7250  st([vAC+1])                     #20
              1808 1403  ld   $03,y       7251  ld(hi('REENTER'),Y)             #21
              1809 e0cb  jmp  y,$cb       7252  jmp(Y,'REENTER')                #22
              180a 00f3  ld   $f3         7253  ld(-26/2)                       #23
                                          7254
                                          7255  # NOTB implementation
                                          7256  label('notb#13')
notb#13:      180b 1200  ld   ac,x        7257  ld(AC,X)                        #13 address of var
              180c 0500  ld   [x]         7258  ld([X])                         #14
              180d 60ff  xora $ff         7259  xora(255)                       #15
              180e c600  st   [x]         7260  st([X])                         #16
              180f 1403  ld   $03,y       7261  ld(hi('REENTER'),Y)             #17
              1810 e0cb  jmp  y,$cb       7262  jmp(Y,'REENTER')                #18
              1811 00f5  ld   $f5         7263  ld(-22/2)                       #19
                                          7264
                                          7265  # DOKE+ implementation
                                          7266  label('doke+#13')
doke+#13:     1812 1200  ld   ac,x        7267  ld(AC,X)                        #13
              1813 1400  ld   $00,y       7268  ld(0,Y)                         #14
              1814 0500  ld   [x]         7269  ld([X])                         #15 low byte poke address
              1815 c21d  st   [$1d]       7270  st([vTmp])                      #16
              1816 8002  adda $02         7271  adda(2)                         #17
              1817 de00  st   [y,x++]     7272  st([Y,Xpp])                     #18
              1818 0500  ld   [x]         7273  ld([X])                         #19 high byte poke address
              1819 1600  ld   ac,y        7274  ld(AC,Y)                        #20
              181a 111d  ld   [$1d],x     7275  ld([vTmp],X)                    #21
              181b 0118  ld   [$18]       7276  ld([vAC])                       #22
              181c de00  st   [y,x++]     7277  st([Y,Xpp])                     #23
              181d 0119  ld   [$19]       7278  ld([vAC+1])                     #24
              181e ce00  st   [y,x]       7279  st([Y,X])                       #25
              181f 1403  ld   $03,y       7280  ld(hi('NEXTY'),Y)               #26
              1820 e000  jmp  y,$00       7281  jmp(Y,'NEXTY')                  #27
              1821 00f1  ld   $f1         7282  ld(-30/2)                       #28
                                          7283
                                          7284  # XORI implementation
                                          7285  label('xori#13')
xori#13:      1822 6118  xora [$18]       7286  xora([vAC])                     #13
              1823 c218  st   [$18]       7287  st([vAC])                       #14
              1824 1403  ld   $03,y       7288  ld(hi('REENTER'),Y)             #15
              1825 e0cb  jmp  y,$cb       7289  jmp(Y,'REENTER')                #16
              1826 00f6  ld   $f6         7290  ld(-20/2)                       #17
                                          7291
                                          7292  # NOP implementation
                                          7293  label('nop#13')
nop#13:       1827 0116  ld   [$16]       7294  ld([vPC])                       #13
              1828 a001  suba $01         7295  suba(1)                         #14
              1829 c216  st   [$16]       7296  st([vPC])                       #15 vPC--
              182a 1403  ld   $03,y       7297  ld(hi('NEXTY'),Y)               #16
              182b e000  jmp  y,$00       7298  jmp(Y,'NEXTY')                  #17
              182c 00f6  ld   $f6         7299  ld(-20/2)                       #18
                                          7300
                                          7301  # BRA implementation
                                          7302  label('bra#13')
bra#13:       182d 1403  ld   $03,y       7303  ld(hi('REENTER'),Y)             #13
              182e e0cb  jmp  y,$cb       7304  jmp(Y,'REENTER')                #14
              182f 00f7  ld   $f7         7305  ld(-18/2)                       #15
                                          7306
                                          7307  # DBGE implementation
                                          7308  label('dbge#13')
dbge#13:      1830 1517  ld   [$17],y     7309  ld([vPC+1],Y)                   #13 vPC.hi
              1831 c21d  st   [$1d]       7310  st([vTmp])                      #14 branch offset
              1832 de00  st   [y,x++]     7311  st([Y,Xpp])                     #15 X++, address of counter
              1833 0d00  ld   [y,x]       7312  ld([Y,X])                       #16
              1834 1200  ld   ac,x        7313  ld(AC,X)                        #17 fetch counter
              1835 0500  ld   [x]         7314  ld([X])                         #18
              1836 a001  suba $01         7315  suba(1)                         #19 decrement counter
              1837 e83e  blt  .dbge#22    7316  blt('.dbge#22')                 #20 if < 0 BRA
              1838 c600  st   [x]         7317  st([X])                         #21
              1839 011d  ld   [$1d]       7318  ld([vTmp])                      #22
              183a c216  st   [$16]       7319  st([vPC])                       #23 BRA to branch offset
              183b 1403  ld   $03,y       7320  ld(hi('NEXTY'),Y)               #24
              183c e000  jmp  y,$00       7321  jmp(Y,'NEXTY')                  #25
              183d 00f2  ld   $f2         7322  ld(-28/2)                       #26
                                          7323  label('.dbge#22')
.dbge#22:     183e 0116  ld   [$16]       7324  ld([vPC])                       #22
              183f 8001  adda $01         7325  adda(1)                         #23
              1840 c216  st   [$16]       7326  st([vPC])                       #24 advance vPC by 1
              1841 1403  ld   $03,y       7327  ld(hi('REENTER'),Y)             #25
              1842 e0cb  jmp  y,$cb       7328  jmp(Y,'REENTER')                #26
              1843 00f1  ld   $f1         7329  ld(-30/2)                       #27
                                          7330
                                          7331  # LDNI implementation
                                          7332  label('ldni#13')
ldni#13:      1844 60ff  xora $ff         7333  xora(255)                       #13
              1845 8001  adda $01         7334  adda(1)                         #14
              1846 c218  st   [$18]       7335  st([vAC])                       #15
              1847 00ff  ld   $ff         7336  ld(255)                         #16
              1848 c219  st   [$19]       7337  st([vAC+1])                     #17
              1849 1403  ld   $03,y       7338  ld(hi('NEXTY'),Y)               #18
              184a e000  jmp  y,$00       7339  jmp(Y,'NEXTY')                  #19
              184b 00f5  ld   $f5         7340  ld(-22/2)                       #20
                                          7341
                                          7342  # ANDBK implementation
                                          7343  label('andbk#13')
andbk#13:     184c 1517  ld   [$17],y     7344  ld([vPC+1],Y)                   #13
              184d c21d  st   [$1d]       7345  st([vTmp])                      #14 immediate value
              184e de00  st   [y,x++]     7346  st([Y,Xpp])                     #15 X++
              184f 0d00  ld   [y,x]       7347  ld([Y,X])                       #16
              1850 1200  ld   ac,x        7348  ld(AC,X)                        #17 address of var
              1851 0500  ld   [x]         7349  ld([X])                         #18
              1852 211d  anda [$1d]       7350  anda([vTmp])                    #19
              1853 c218  st   [$18]       7351  st([vAC])                       #20
              1854 0000  ld   $00         7352  ld(0)                           #21
              1855 c219  st   [$19]       7353  st([vAC+1])                     #22 Store high result
              1856 0116  ld   [$16]       7354  ld([vPC])                       #23
              1857 8001  adda $01         7355  adda(1)                         #24
              1858 c216  st   [$16]       7356  st([vPC])                       #25 advance vPC by 1
              1859 1403  ld   $03,y       7357  ld(hi('NEXTY'),Y)               #26
              185a e000  jmp  y,$00       7358  jmp(Y,'NEXTY')                  #27
              185b 00f1  ld   $f1         7359  ld(-30/2)                       #28
                                          7360
                                          7361  # ORBK implementation
                                          7362  label('orbk#13')
orbk#13:      185c 1517  ld   [$17],y     7363  ld([vPC+1],Y)                   #13
              185d c21d  st   [$1d]       7364  st([vTmp])                      #14 immediate value
              185e de00  st   [y,x++]     7365  st([Y,Xpp])                     #15 X++
              185f 0d00  ld   [y,x]       7366  ld([Y,X])                       #16
              1860 1200  ld   ac,x        7367  ld(AC,X)                        #17 address of var
              1861 0500  ld   [x]         7368  ld([X])                         #18
              1862 411d  ora  [$1d]       7369  ora([vTmp])                     #19
              1863 c218  st   [$18]       7370  st([vAC])                       #20
              1864 0000  ld   $00         7371  ld(0)                           #21
              1865 c219  st   [$19]       7372  st([vAC+1])                     #22 Store high result
              1866 0116  ld   [$16]       7373  ld([vPC])                       #23
              1867 8001  adda $01         7374  adda(1)                         #24
              1868 c216  st   [$16]       7375  st([vPC])                       #25 advance vPC by 1
              1869 1403  ld   $03,y       7376  ld(hi('NEXTY'),Y)               #26
              186a e000  jmp  y,$00       7377  jmp(Y,'NEXTY')                  #27
              186b 00f1  ld   $f1         7378  ld(-30/2)                       #28
                                          7379
                                          7380  # XORBK implementation
                                          7381  label('xorbk#13')
xorbk#13:     186c 1517  ld   [$17],y     7382  ld([vPC+1],Y)                   #13
              186d c21d  st   [$1d]       7383  st([vTmp])                      #14 immediate value
              186e de00  st   [y,x++]     7384  st([Y,Xpp])                     #15 X++
              186f 0d00  ld   [y,x]       7385  ld([Y,X])                       #16
              1870 1200  ld   ac,x        7386  ld(AC,X)                        #17 address of var
              1871 0500  ld   [x]         7387  ld([X])                         #18
              1872 611d  xora [$1d]       7388  xora([vTmp])                    #19
              1873 c218  st   [$18]       7389  st([vAC])                       #20
              1874 0000  ld   $00         7390  ld(0)                           #21
              1875 c219  st   [$19]       7391  st([vAC+1])                     #22 Store high result
              1876 0116  ld   [$16]       7392  ld([vPC])                       #23
              1877 8001  adda $01         7393  adda(1)                         #24
              1878 c216  st   [$16]       7394  st([vPC])                       #25 advance vPC by 1
              1879 1403  ld   $03,y       7395  ld(hi('NEXTY'),Y)               #26
              187a e000  jmp  y,$00       7396  jmp(Y,'NEXTY')                  #27
              187b 00f1  ld   $f1         7397  ld(-30/2)                       #28
                                          7398
                                          7399  # CMPI implementation
                                          7400  label('cmpi#13')
cmpi#13:      187c c21d  st   [$1d]       7401  st([vTmp])                      #13 immediate value
              187d 00fd  ld   $fd         7402  ld(min(0,maxTicks-36/2))        #14
              187e 8115  adda [$15]       7403  adda([vTicks])                  #15
              187f e89c  blt  .cmpi#18    7404  blt('.cmpi#18')                 #16 not enough time left, so retry
              1880 1517  ld   [$17],y     7405  ld([vPC+1],Y)                   #17
              1881 011d  ld   [$1d]       7406  ld([vTmp])                      #18 immediate value
              1882 de00  st   [y,x++]     7407  st([Y,Xpp])                     #19 X++
              1883 0d00  ld   [y,x]       7408  ld([Y,X])                       #20 address of var
              1884 1200  ld   ac,x        7409  ld(AC,X)                        #21
              1885 0500  ld   [x]         7410  ld([X])                         #22 low byte of var
              1886 e892  blt  .cmpi#25    7411  bmi('.cmpi#25')                 #23
              1887 a11d  suba [$1d]       7412  suba([vTmp])                    #24
              1888 c218  st   [$18]       7413  st([vAC])                       #25 store low result
              1889 411d  ora  [$1d]       7414  ora([vTmp])                     #26
              188a 2080  anda $80         7415  anda(0x80)                      #27
              188b c219  st   [$19]       7416  st([vAC+1])                     #28 [vAC.hi] = sign bit, numerical accuracy is not important
              188c 0116  ld   [$16]       7417  ld([vPC])                       #29
              188d 8001  adda $01         7418  adda(1)                         #30
              188e c216  st   [$16]       7419  st([vPC])                       #31 advance vPC by 1
              188f 1403  ld   $03,y       7420  ld(hi('NEXTY'),Y)               #32
              1890 e000  jmp  y,$00       7421  jmp(Y,'NEXTY')                  #33
              1891 00ee  ld   $ee         7422  ld(-36/2)                       #34
                                          7423  label('.cmpi#25')
.cmpi#25:     1892 c218  st   [$18]       7424  st([vAC])                       #25 store low result
              1893 211d  anda [$1d]       7425  anda([vTmp])                    #26
              1894 2080  anda $80         7426  anda(0x80)                      #27
              1895 c219  st   [$19]       7427  st([vAC+1])                     #28 [vAC.hi] = sign bit, numerical accuracy is not important
              1896 0116  ld   [$16]       7428  ld([vPC])                       #29
              1897 8001  adda $01         7429  adda(1)                         #30
              1898 c216  st   [$16]       7430  st([vPC])                       #31 advance vPC by 1
              1899 1403  ld   $03,y       7431  ld(hi('NEXTY'),Y)               #32
              189a e000  jmp  y,$00       7432  jmp(Y,'NEXTY')                  #33
              189b 00ee  ld   $ee         7433  ld(-36/2)                       #34
                                          7434  label('.cmpi#18')
.cmpi#18:     189c 0116  ld   [$16]       7435  ld([vPC])                       #18 retry instruction
              189d a002  suba $02         7436  suba(2)                         #19
              189e c216  st   [$16]       7437  st([vPC])                       #20
              189f 1403  ld   $03,y       7438  ld(hi('REENTER'),Y)             #21
              18a0 e0cb  jmp  y,$cb       7439  jmp(Y,'REENTER')                #22
              18a1 00f3  ld   $f3         7440  ld(-26/2)                       #23
                                          7441
                                          7442  # JEQ implementation
                                          7443  label('jeq#13')
jeq#13:       18a2 1517  ld   [$17],y     7444  ld([vPC+1],Y)                   #13 vPC.hi
              18a3 0119  ld   [$19]       7445  ld([vAC+1])                     #14
              18a4 4118  ora  [$18]       7446  ora([vAC])                      #15
              18a5 f0ad  beq  .jeq#18     7447  beq('.jeq#18')                  #16 if (vAC.hi OR vAC.lo) == 0
              18a6 0d00  ld   [y,x]       7448  ld([Y,X])                       #17 lo address of jump destination
              18a7 0116  ld   [$16]       7449  ld([vPC])                       #18
              18a8 8001  adda $01         7450  adda(1)                         #19
              18a9 c216  st   [$16]       7451  st([vPC])                       #20
              18aa 1403  ld   $03,y       7452  ld(hi('REENTER'),Y)             #21
              18ab e0cb  jmp  y,$cb       7453  jmp(Y,'REENTER')                #22
              18ac 00f3  ld   $f3         7454  ld(-26/2)                       #23
                                          7455  label('.jeq#18')
.jeq#18:      18ad c216  st   [$16]       7456  st([vPC])                       #18
              18ae de00  st   [y,x++]     7457  st([Y,Xpp])                     #19
              18af 0d00  ld   [y,x]       7458  ld([Y,X])                       #20 hi address of jump destination
              18b0 c217  st   [$17]       7459  st([vPC+1])                     #21
              18b1 1403  ld   $03,y       7460  ld(hi('NEXTY'),Y)               #22
              18b2 e000  jmp  y,$00       7461  jmp(Y,'NEXTY')                  #23
              18b3 00f3  ld   $f3         7462  ld(-26/2)                       #24
                                          7463
                                          7464  # JNE implementation
                                          7465  label('jne#13')
jne#13:       18b4 1517  ld   [$17],y     7466  ld([vPC+1],Y)                   #13 vPC.hi
              18b5 0119  ld   [$19]       7467  ld([vAC+1])                     #14
              18b6 4118  ora  [$18]       7468  ora([vAC])                      #15
              18b7 ecbf  bne  .jne#18     7469  bne('.jne#18')                  #16 if (vAC.hi OR vAC.lo) != 0
              18b8 0d00  ld   [y,x]       7470  ld([Y,X])                       #17 address of branch destination
              18b9 0116  ld   [$16]       7471  ld([vPC])                       #18
              18ba 8001  adda $01         7472  adda(1)                         #19
              18bb c216  st   [$16]       7473  st([vPC])                       #20
              18bc 1403  ld   $03,y       7474  ld(hi('REENTER'),Y)             #21
              18bd e0cb  jmp  y,$cb       7475  jmp(Y,'REENTER')                #22
              18be 00f3  ld   $f3         7476  ld(-26/2)                       #23
                                          7477  label('.jne#18')
.jne#18:      18bf c216  st   [$16]       7478  st([vPC])                       #18
              18c0 de00  st   [y,x++]     7479  st([Y,Xpp])                     #19
              18c1 0d00  ld   [y,x]       7480  ld([Y,X])                       #20 hi address of jump destination
              18c2 c217  st   [$17]       7481  st([vPC+1])                     #21
              18c3 1403  ld   $03,y       7482  ld(hi('NEXTY'),Y)               #22
              18c4 e000  jmp  y,$00       7483  jmp(Y,'NEXTY')                  #23
              18c5 00f3  ld   $f3         7484  ld(-26/2)                       #24
                                          7485
                                          7486  # JLT implementation
                                          7487  label('jlt#13')
jlt#13:       18c6 1517  ld   [$17],y     7488  ld([vPC+1],Y)                   #13 vPC.hi
              18c7 0119  ld   [$19]       7489  ld([vAC+1])                     #14
              18c8 e8d0  blt  .jlt#17     7490  blt('.jlt#17')                  #15 if vAC.hi < 0
              18c9 0d00  ld   [y,x]       7491  ld([Y,X])                       #16 address of branch destination
              18ca 0116  ld   [$16]       7492  ld([vPC])                       #17
              18cb 8001  adda $01         7493  adda(1)                         #18
              18cc c216  st   [$16]       7494  st([vPC])                       #19
              18cd 1403  ld   $03,y       7495  ld(hi('NEXTY'),Y)               #20
              18ce e000  jmp  y,$00       7496  jmp(Y,'NEXTY')                  #21
              18cf 00f4  ld   $f4         7497  ld(-24/2)                       #22
                                          7498  label('.jlt#17')
.jlt#17:      18d0 c216  st   [$16]       7499  st([vPC])                       #17
              18d1 de00  st   [y,x++]     7500  st([Y,Xpp])                     #18
              18d2 0d00  ld   [y,x]       7501  ld([Y,X])                       #19 hi address of jump destination
              18d3 c217  st   [$17]       7502  st([vPC+1])                     #20
              18d4 1403  ld   $03,y       7503  ld(hi('REENTER'),Y)             #21
              18d5 e0cb  jmp  y,$cb       7504  jmp(Y,'REENTER')                #22
              18d6 00f3  ld   $f3         7505  ld(-26/2)                       #23
                                          7506
                                          7507  # BBEQ implementation
                                          7508  #label('bbeq#13')
                                          7509  #ld([vPC+1],Y)                   #13 vPC.hi
                                          7510  #st([vTmp])                      #14 branch offset
                                          7511  #st([Y,Xpp])                     #15 X++
                                          7512  #ld([Y,X])                       #16
                                          7513  #ld(AC,X)                        #17
                                          7514  #ld([X])                         #18 low byte of var
                                          7515  #beq('.bbeq#21')                 #19
                                          7516  #ld([vPC])                       #20
                                          7517  #adda(1)                         #21
                                          7518  #st([vPC])                       #22 advance vPC by 1
                                          7519  #ld(hi('REENTER'),Y)             #23
                                          7520  #jmp(Y,'REENTER')                #24
                                          7521  #ld(-28/2)                       #25
                                          7522  #label('.bbeq#21')
                                          7523  #ld([vTmp])                      #21
                                          7524  #st([vPC])                       #22 branch to offset
                                          7525  #ld(hi('REENTER'),Y)             #23
                                          7526  #jmp(Y,'REENTER')                #24
                                          7527  #ld(-28/2)                       #25
                                          7528
                                          7529  # BWEQ implementation
                                          7530  #label('bweq#13')
                                          7531  #ld([vPC+1],Y)                   #13 vPC.hi
                                          7532  #st([vTmp])                      #14 branch offset
                                          7533  #st([Y,Xpp])                     #15 X++
                                          7534  #ld([Y,X])                       #16
                                          7535  #ld(AC,X)                        #17
                                          7536  #ld([X])                         #18 low byte of var
                                          7537  #ld(0,Y)                         #19
                                          7538  #st([Y,Xpp])                     #20 X++
                                          7539  #ora([Y,X])                      #21 or with high byte of var
                                          7540  #beq('.bweq#24')                 #22
                                          7541  #ld([vPC])                       #23
                                          7542  #adda(1)                         #24
                                          7543  #st([vPC])                       #25 advance vPC by 1
                                          7544  #ld(hi('NEXTY'),Y)               #26
                                          7545  #jmp(Y,'NEXTY')                  #27
                                          7546  #ld(-30/2)                       #28
                                          7547  #label('.bweq#24')
                                          7548  #ld([vTmp])                      #24
                                          7549  #st([vPC])                       #25 branch to offset
                                          7550  #ld(hi('NEXTY'),Y)               #26
                                          7551  #jmp(Y,'NEXTY')                  #27
                                          7552  #ld(-30/2)                       #28
                                          7553
                                          7554
              18d7 0200  nop              7555  fillers(until=0xff)
              18d8 0200  nop
              18d9 0200  nop
              * 40 times
              18ff 0200  nop              7556  align(0x100, size=0x100)
                                          7557
                                          7558  #-----------------------------------------------------------------------
                                          7559  #       More sys implementations, (0x1900)
                                          7560  #-----------------------------------------------------------------------
                                          7561  # sys_Multiply_s16, sum:s16 = x:s16 * y:s16
                                          7562  # x:args0:1 y:args2:3 sum:args4:5 mask:args6:7
                                          7563  label('sys_Multiply_s16')
sys_Multiply_s16:
              1900 2126  anda [$26]       7564  anda([sysArgs+2])               #18,
              1901 c218  st   [$18]       7565  st([vAC])                       #19, AC.lo = mask.lo AND y.lo
              1902 012b  ld   [$2b]       7566  ld([sysArgs+7])                 #20, load mask.hio
              1903 2127  anda [$27]       7567  anda([sysArgs+3])               #21,
              1904 c219  st   [$19]       7568  st([vAC+1])                     #22, AC.hi = mask.hi AND y.hi
              1905 4118  ora  [$18]       7569  ora([vAC])                      #23,
                                          7570  beq('.sys_ms16_26')             #24, AC = 0 then skip
              1906 f00e  beq  .sys_ms16_26
              1907 0128  ld   [$28]       7571  ld([sysArgs+4])                 #25, load sum.lo
              1908 8124  adda [$24]       7572  adda([sysArgs+0])               #26, load x.lo
              1909 c228  st   [$28]       7573  st([sysArgs+4])                 #27, sum.lo = sum.lo + x.lo
                                          7574  blt('.sys_ms16_30')             #28, check for carry
              190a e810  blt  .sys_ms16_30
              190b a124  suba [$24]       7575  suba([sysArgs+0])               #29, get original sum.lo back
                                          7576  bra('.sys_ms16_32')             #30,
              190c fc12  bra  .sys_ms16_32
              190d 4124  ora  [$24]       7577  ora([sysArgs+0])                #31, carry in bit 7
                                          7578
                                          7579  label('.sys_ms16_26')
                                          7580  bra('.sys_ms16_28')             #26,
.sys_ms16_26: 190e fc18  bra  .sys_ms16_28
              190f 00e4  ld   $e4         7581  ld(-56/2)                       #27, no accumulate sys ticks
                                          7582
                                          7583  label('.sys_ms16_30')
.sys_ms16_30: 1910 2124  anda [$24]       7584  anda([sysArgs+0])               #30, carry in bit 7
              1911 0200  nop              7585  nop()                           #31,
                                          7586
                                          7587  label('.sys_ms16_32')
.sys_ms16_32: 1912 3080  anda $80,x       7588  anda(0x80,X)                    #32,
              1913 0500  ld   [x]         7589  ld([X])                         #33, move carry to bit 0
              1914 8129  adda [$29]       7590  adda([sysArgs+5])               #34,
              1915 8125  adda [$25]       7591  adda([sysArgs+1])               #35,
              1916 c229  st   [$29]       7592  st([sysArgs+5])                 #36, sum.hi = sum.hi + x.hi
              1917 00df  ld   $df         7593  ld(-66/2)                       #37, accumulate sys ticks
                                          7594
                                          7595  label('.sys_ms16_28')
.sys_ms16_28: 1918 c21d  st   [$1d]       7596  st([vTmp])                      #28,#38,
              1919 0124  ld   [$24]       7597  ld([sysArgs+0])                 #29,#39, AC = x.lo
              191a 3080  anda $80,x       7598  anda(0x80,X)                    #30,#40, X = AC & 0x80
              191b 8124  adda [$24]       7599  adda([sysArgs+0])               #31,#41, AC = x.lo <<1
              191c c224  st   [$24]       7600  st([sysArgs+0])                 #32,#42, x.lo = AC
              191d 0500  ld   [x]         7601  ld([X])                         #33,#43, AC = X >>7
              191e 8125  adda [$25]       7602  adda([sysArgs+1])               #34,#44,
              191f 8125  adda [$25]       7603  adda([sysArgs+1])               #35,#45,
              1920 c225  st   [$25]       7604  st([sysArgs+1])                 #36,#46, x.hi = x.hi <<1 + AC
              1921 012a  ld   [$2a]       7605  ld([sysArgs+6])                 #37,#47, AC = mask.lo
              1922 3080  anda $80,x       7606  anda(0x80,X)                    #38,#48, X = AC & 0x80
              1923 812a  adda [$2a]       7607  adda([sysArgs+6])               #39,#49, AC = mask.lo <<1
              1924 c22a  st   [$2a]       7608  st([sysArgs+6])                 #40,#50, mask.lo = AC
              1925 0500  ld   [x]         7609  ld([X])                         #41,#51, AC = X >>7
              1926 812b  adda [$2b]       7610  adda([sysArgs+7])               #42,#52,
              1927 812b  adda [$2b]       7611  adda([sysArgs+7])               #43,#53,
              1928 c22b  st   [$2b]       7612  st([sysArgs+7])                 #44,#54, mask.hi = mask.hi <<1 + AC
              1929 412a  ora  [$2a]       7613  ora([sysArgs+6])                #45,#55,
                                          7614  beq('.sys_ms16_48')             #46,#56, if mask = 0
              192a f032  beq  .sys_ms16_48
              192b 0128  ld   [$28]       7615  ld([sysArgs+4])                 #47,#57
              192c 0116  ld   [$16]       7616  ld([vPC])                       #48,#58,
              192d a002  suba $02         7617  suba(2)                         #49,#59,
              192e c216  st   [$16]       7618  st([vPC])                       #50,#60, restart SYS function
              192f 1403  ld   $03,y       7619  ld(hi('REENTER'),Y)             #51,#61,
              1930 e0cb  jmp  y,$cb       7620  jmp(Y,'REENTER')                #52,#62,
              1931 011d  ld   [$1d]       7621  ld([vTmp])                      #53,#63,
                                          7622
                                          7623  label('.sys_ms16_48')
.sys_ms16_48: 1932 c218  st   [$18]       7624  st([vAC])                       #48,#58,
              1933 0129  ld   [$29]       7625  ld([sysArgs+5])                 #49,#59,
              1934 c219  st   [$19]       7626  st([vAC+1])                     #50,#60,
              1935 1403  ld   $03,y       7627  ld(hi('REENTER'),Y)             #51,#61,
              1936 e0cb  jmp  y,$cb       7628  jmp(Y,'REENTER')                #52,#62,
              1937 011d  ld   [$1d]       7629  ld([vTmp])                      #53,#63,
                                          7630
                                          7631
                                          7632  #-----------------------------------------------------------------------
                                          7633  # sys_Divide_s16, x:s16 = x:s16 / y:s16, rem:s16 = x:s16 % y:s16
                                          7634  # x:args0:1 y:args2:3 rem:args4:5 mask:args6:7
                                          7635  label('sys_Divide_s16')
sys_Divide_s16:
              1938 3080  anda $80,x       7636  anda(0x80,X)                    #18, X = AC & 0x80
              1939 8128  adda [$28]       7637  adda([sysArgs+4])               #19, AC = rem.lo <<1
              193a c228  st   [$28]       7638  st([sysArgs+4])                 #20, rem.lo = AC
              193b 0500  ld   [x]         7639  ld([X])                         #21, AC = X >>7
              193c 8129  adda [$29]       7640  adda([sysArgs+5])               #22,
              193d 8129  adda [$29]       7641  adda([sysArgs+5])               #23,
              193e c229  st   [$29]       7642  st([sysArgs+5])                 #24, rem.hi = rem.hi <<1 + AC
              193f 0125  ld   [$25]       7643  ld([sysArgs+1])                 #25,
              1940 2080  anda $80         7644  anda(0x80)                      #26, sign of x
                                          7645  beq('.sys_ds16_29')             #27, if x >= 0
              1941 f046  beq  .sys_ds16_29
              1942 0128  ld   [$28]       7646  ld([sysArgs+4])                 #28,
              1943 8001  adda $01         7647  adda(1)                         #29,
                                          7648  bra('.sys_ds16_32')             #30,
              1944 fc49  bra  .sys_ds16_32
              1945 c228  st   [$28]       7649  st([sysArgs+4])                 #31, rem.lo++
                                          7650
                                          7651  label('.sys_ds16_29')
.sys_ds16_29: 1946 0200  nop              7652  nop()                           #29
              1947 0200  nop              7653  nop()                           #30
              1948 0200  nop              7654  nop()                           #31
                                          7655
                                          7656  label('.sys_ds16_32')
.sys_ds16_32: 1949 0124  ld   [$24]       7657  ld([sysArgs+0])                 #32, AC = x.lo
              194a 3080  anda $80,x       7658  anda(0x80,X)                    #33, X = AC & 0x80
              194b 8124  adda [$24]       7659  adda([sysArgs+0])               #34, AC = x.lo <<1
              194c c224  st   [$24]       7660  st([sysArgs+0])                 #35, x.lo = AC
              194d 0500  ld   [x]         7661  ld([X])                         #36, AC = X >>7
              194e 8125  adda [$25]       7662  adda([sysArgs+1])               #37,
              194f 8125  adda [$25]       7663  adda([sysArgs+1])               #38,
              1950 c225  st   [$25]       7664  st([sysArgs+1])                 #39, x.hi = x.hi <<1 + AC
                                          7665
              1951 0128  ld   [$28]       7666  ld([sysArgs+4])                 #40, load rem.lo
                                          7667  blt('.sys_ds16_43')             #41, check for borrow
              1952 e857  blt  .sys_ds16_43
              1953 a126  suba [$26]       7668  suba([sysArgs+2])               #42,
              1954 c218  st   [$18]       7669  st([vAC])                       #43, vAC.lo = rem.lo - y.lo
                                          7670  bra('.sys_ds16_46')             #44,
              1955 fc5a  bra  .sys_ds16_46
              1956 4126  ora  [$26]       7671  ora([sysArgs+2])                #45,
                                          7672
                                          7673  label('.sys_ds16_43')
.sys_ds16_43: 1957 c218  st   [$18]       7674  st([vAC])                       #43,
              1958 2126  anda [$26]       7675  anda([sysArgs+2])               #44,
              1959 0200  nop              7676  nop()                           #45,
                                          7677
                                          7678  label('.sys_ds16_46')
.sys_ds16_46: 195a 3080  anda $80,x       7679  anda(0x80,X)                    #46, move borrow to bit 0
              195b 0129  ld   [$29]       7680  ld([sysArgs+5])                 #47, load rem.hi
              195c a500  suba [x]         7681  suba([X])                       #48,
              195d a127  suba [$27]       7682  suba([sysArgs+3])               #49,
              195e c219  st   [$19]       7683  st([vAC+1])                     #50, vAC.hi = rem.hi - y.hi
                                          7684  blt('.sys_ds16_53')             #51,
              195f e869  blt  .sys_ds16_53
              1960 00dc  ld   $dc         7685  ld(-72/2)                       #52
              1961 0118  ld   [$18]       7686  ld([vAC])                       #53,
              1962 c228  st   [$28]       7687  st([sysArgs+4])                 #54,
              1963 0119  ld   [$19]       7688  ld([vAC+1])                     #55,
              1964 c229  st   [$29]       7689  st([sysArgs+5])                 #56, rem = vAC
              1965 0124  ld   [$24]       7690  ld([sysArgs+0])                 #57,
              1966 8001  adda $01         7691  adda(1)                         #58,
              1967 c224  st   [$24]       7692  st([sysArgs+0])                 #59, x.lo++
              1968 00d8  ld   $d8         7693  ld(-80/2)                       #60,
                                          7694
                                          7695  label('.sys_ds16_53')
.sys_ds16_53: 1969 c21d  st   [$1d]       7696  st([vTmp])                      #53, #61,
              196a 012a  ld   [$2a]       7697  ld([sysArgs+6])                 #54, #62, AC = mask.lo
              196b 3080  anda $80,x       7698  anda(0x80,X)                    #55, #63, X = AC & 0x80
              196c 812a  adda [$2a]       7699  adda([sysArgs+6])               #56, #64, AC = mask.lo <<1
              196d c22a  st   [$2a]       7700  st([sysArgs+6])                 #57, #65, mask.lo = AC
              196e 0500  ld   [x]         7701  ld([X])                         #58, #66, AC = X >>7
              196f 812b  adda [$2b]       7702  adda([sysArgs+7])               #59, #67,
              1970 812b  adda [$2b]       7703  adda([sysArgs+7])               #60, #68,
              1971 c22b  st   [$2b]       7704  st([sysArgs+7])                 #61, #69, mask.hi = mask.hi <<1 + AC
              1972 412a  ora  [$2a]       7705  ora([sysArgs+6])                #62, #70,
                                          7706  bne('.sys_ds16_65')             #63, #71,
              1973 ec7a  bne  .sys_ds16_65
              1974 0116  ld   [$16]       7707  ld([vPC])                       #64, #72,
              1975 0200  nop              7708  nop()                           #65, #73,
              1976 0200  nop              7709  nop()                           #66, #74,
              1977 1403  ld   $03,y       7710  ld(hi('REENTER'),Y)             #67, #75,
              1978 e0cb  jmp  y,$cb       7711  jmp(Y,'REENTER')                #68, #76,
              1979 011d  ld   [$1d]       7712  ld([vTmp])                      #69, #77,
                                          7713
                                          7714  label('.sys_ds16_65')
.sys_ds16_65: 197a a002  suba $02         7715  suba(2)                         #65, #73,
              197b c216  st   [$16]       7716  st([vPC])                       #66, #74, restart SYS function
              197c 1403  ld   $03,y       7717  ld(hi('REENTER'),Y)             #67, #75,
              197d e0cb  jmp  y,$cb       7718  jmp(Y,'REENTER')                #68, #76,
              197e 011d  ld   [$1d]       7719  ld([vTmp])                      #69, #77,
                                          7720
                                          7721
                                          7722  #-----------------------------------------------------------------------
                                          7723  # sys_DrawLine
                                          7724  label('sys_DrawLine')
sys_DrawLine: 197f 1182  ld   [$82],x     7725  ld([0x82],X)                    #18, X = [xy1].lo
              1980 1583  ld   [$83],y     7726  ld([0x83],Y)                    #19, Y = [xy1].hi
              1981 ce00  st   [y,x]       7727  st([Y,X])                       #20, [Y, X] = fgColour
              1982 1184  ld   [$84],x     7728  ld([0x84],X)                    #21, X = [xy2].lo
              1983 1585  ld   [$85],y     7729  ld([0x85],Y)                    #22, Y = [xy2].hi
              1984 ce00  st   [y,x]       7730  st([Y,X])                       #23, [Y, X] = fgColour
                                          7731
              1985 01a0  ld   [$a0]       7732  ld([0xA0])                      #24, num.lo
              1986 819c  adda [$9c]       7733  adda([0x9C])                    #25, sy.lo
              1987 c2a0  st   [$a0]       7734  st([0xA0])                      #26, num.lo = num.lo + sy.lo
                                          7735  blt('.sys_drawl_29')            #27, check for carry
              1988 e88c  blt  .sys_drawl_29
              1989 a19c  suba [$9c]       7736  suba([0x9C])                    #28, get original num.lo back
                                          7737  bra('.sys_drawl_31')            #29,
              198a fc8e  bra  .sys_drawl_31
              198b 419c  ora  [$9c]       7738  ora([0x9C])                     #30, carry in bit 7
                                          7739
                                          7740  label('.sys_drawl_29')
.sys_drawl_29:
              198c 219c  anda [$9c]       7741  anda([0x9C])                    #29, carry in bit 7
              198d 0200  nop              7742  nop()                           #30,
                                          7743
                                          7744  label('.sys_drawl_31')
.sys_drawl_31:
              198e 3080  anda $80,x       7745  anda(0x80,X)                    #31,
              198f 0500  ld   [x]         7746  ld([X])                         #32, move carry to bit 0
              1990 81a1  adda [$a1]       7747  adda([0xA1])                    #33,
              1991 819d  adda [$9d]       7748  adda([0x9D])                    #34,
              1992 c2a1  st   [$a1]       7749  st([0xA1])                      #35, num.hi = num.hi + sy.hi
                                          7750
              1993 01a0  ld   [$a0]       7751  ld([0xA0])                      #36, num.lo
                                          7752  blt('.sys_drawl_39')            #37, check for borrow
              1994 e899  blt  .sys_drawl_39
              1995 a19a  suba [$9a]       7753  suba([0x9A])                    #38, sx.lo
              1996 c218  st   [$18]       7754  st([vAC])                       #39, vAC.lo = num.lo - sx.lo
                                          7755  bra('.sys_drawl_42')            #40,
              1997 fc9c  bra  .sys_drawl_42
              1998 419a  ora  [$9a]       7756  ora([0x9A])                     #41,
                                          7757
                                          7758  label('.sys_drawl_39')
.sys_drawl_39:
              1999 c218  st   [$18]       7759  st([vAC])                       #39,
              199a 219a  anda [$9a]       7760  anda([0x9A])                    #40,
              199b 0200  nop              7761  nop()                           #41,
                                          7762
                                          7763  label('.sys_drawl_42')
.sys_drawl_42:
              199c 3080  anda $80,x       7764  anda(0x80,X)                    #42, move borrow to bit 0
              199d 01a1  ld   [$a1]       7765  ld([0xA1])                      #43, num.hi
              199e a500  suba [x]         7766  suba([X])                       #44,
              199f a19b  suba [$9b]       7767  suba([0x9B])                    #45,
                                          7768  blt('.sys_drawl_48')            #46,
              19a0 e8cf  blt  .sys_drawl_48
              19a1 c219  st   [$19]       7769  st([vAC+1])                     #47, vAC.hi = num.hi - sx.hi
              19a2 0118  ld   [$18]       7770  ld([vAC])                       #48,
              19a3 c2a0  st   [$a0]       7771  st([0xA0])                      #49,
              19a4 0119  ld   [$19]       7772  ld([vAC+1])                     #50,
              19a5 c2a1  st   [$a1]       7773  st([0xA1])                      #51, num = vAC
                                          7774
              19a6 0182  ld   [$82]       7775  ld([0x82])                      #52, xy1.lo
              19a7 8186  adda [$86]       7776  adda([0x86])                    #53, dxy1.lo
              19a8 c282  st   [$82]       7777  st([0x82])                      #54, xy1.lo = xy1.lo + dxy1.lo
                                          7778  blt('.sys_drawl_57')            #55, check for carry
              19a9 e8ad  blt  .sys_drawl_57
              19aa a186  suba [$86]       7779  suba([0x86])                    #56, get original xy1.lo back
                                          7780  bra('.sys_drawl_59')            #57,
              19ab fcaf  bra  .sys_drawl_59
              19ac 4186  ora  [$86]       7781  ora([0x86])                     #58, carry in bit 7
                                          7782
                                          7783  label('.sys_drawl_57')
.sys_drawl_57:
              19ad 2186  anda [$86]       7784  anda([0x86])                    #57, carry in bit 7
              19ae 0200  nop              7785  nop()                           #58,
                                          7786
                                          7787  label('.sys_drawl_59')
.sys_drawl_59:
              19af 3080  anda $80,x       7788  anda(0x80,X)                    #59,
              19b0 0500  ld   [x]         7789  ld([X])                         #60, move carry to bit 0
              19b1 8183  adda [$83]       7790  adda([0x83])                    #61,
              19b2 8187  adda [$87]       7791  adda([0x87])                    #62,
              19b3 c283  st   [$83]       7792  st([0x83])                      #63, xy1.hi = xy1.hi + dxy1.hi
                                          7793
              19b4 0184  ld   [$84]       7794  ld([0x84])                      #64, xy2.lo
                                          7795  blt('.sys_drawl_67')            #65, check for borrow
              19b5 e8ba  blt  .sys_drawl_67
              19b6 a186  suba [$86]       7796  suba([0x86])                    #66, dxy1.lo
              19b7 c284  st   [$84]       7797  st([0x84])                      #67, xy2.lo = xy2.lo - dxy1.lo
                                          7798  bra('.sys_drawl_70')            #68,
              19b8 fcbd  bra  .sys_drawl_70
              19b9 4186  ora  [$86]       7799  ora([0x86])                     #69,
                                          7800
                                          7801  label('.sys_drawl_67')
.sys_drawl_67:
              19ba c284  st   [$84]       7802  st([0x84])                      #67,
              19bb 2186  anda [$86]       7803  anda([0x86])                    #68,
              19bc 0200  nop              7804  nop()                           #69,
                                          7805
                                          7806  label('.sys_drawl_70')
.sys_drawl_70:
              19bd 3080  anda $80,x       7807  anda(0x80,X)                    #70, move borrow to bit 0
              19be 0185  ld   [$85]       7808  ld([0x85])                      #71, xy2.hi
              19bf a500  suba [x]         7809  suba([X])                       #72,
              19c0 a187  suba [$87]       7810  suba([0x87])                    #73,
              19c1 c285  st   [$85]       7811  st([0x85])                      #74, xy2.hi = xy2.hi - dxy1.hi
                                          7812
              19c2 019e  ld   [$9e]       7813  ld([0x9E])                      #75,
              19c3 a001  suba $01         7814  suba(1)                         #76,
                                          7815  bne('.sys_drawl_79')            #77,
              19c4 ecc9  bne  .sys_drawl_79
              19c5 c29e  st   [$9e]       7816  st([0x9E])                      #78, drawLine_count--
              19c6 1403  ld   $03,y       7817  ld(hi('REENTER'),Y)             #79,
              19c7 e0cb  jmp  y,$cb       7818  jmp(Y,'REENTER')                #80,
              19c8 00d6  ld   $d6         7819  ld(-84/2)                       #81,
                                          7820
                                          7821  label('.sys_drawl_79')
.sys_drawl_79:
              19c9 0116  ld   [$16]       7822  ld([vPC])                       #79,
              19ca a002  suba $02         7823  suba(2)                         #80,
              19cb c216  st   [$16]       7824  st([vPC])                       #81, restart
              19cc 1403  ld   $03,y       7825  ld(hi('NEXTY'),Y)               #82,
              19cd e000  jmp  y,$00       7826  jmp(Y,'NEXTY')                  #83,
              19ce 00d5  ld   $d5         7827  ld(-86/2)                       #84,
                                          7828
                                          7829  label('.sys_drawl_48')
.sys_drawl_48:
              19cf 0182  ld   [$82]       7830  ld([0x82])                      #48, xy1.lo
              19d0 8188  adda [$88]       7831  adda([0x88])                    #49, dxy2.lo
              19d1 c282  st   [$82]       7832  st([0x82])                      #50, xy1.lo = xy1.lo + dxy2.lo
                                          7833  blt('.sys_drawl_53')            #51, check for carry
              19d2 e8d6  blt  .sys_drawl_53
              19d3 a188  suba [$88]       7834  suba([0x88])                    #52, get original xy1.lo back
                                          7835  bra('.sys_drawl_55')            #53,
              19d4 fcd8  bra  .sys_drawl_55
              19d5 4188  ora  [$88]       7836  ora([0x88])                     #54, carry in bit 7
                                          7837
                                          7838  label('.sys_drawl_53')
.sys_drawl_53:
              19d6 2188  anda [$88]       7839  anda([0x88])                    #53, carry in bit 7
              19d7 0200  nop              7840  nop()                           #54,
                                          7841
                                          7842  label('.sys_drawl_55')
.sys_drawl_55:
              19d8 3080  anda $80,x       7843  anda(0x80,X)                    #55,
              19d9 0500  ld   [x]         7844  ld([X])                         #56, move carry to bit 0
              19da 8183  adda [$83]       7845  adda([0x83])                    #57,
              19db 8189  adda [$89]       7846  adda([0x89])                    #58,
              19dc c283  st   [$83]       7847  st([0x83])                      #59, xy1.hi = xy1.hi + dxy2.hi
                                          7848
              19dd 0184  ld   [$84]       7849  ld([0x84])                      #60, xy2.lo
                                          7850  blt('.sys_drawl_63')            #61, check for borrow
              19de e8e3  blt  .sys_drawl_63
              19df a188  suba [$88]       7851  suba([0x88])                    #62, dxy2.lo
              19e0 c284  st   [$84]       7852  st([0x84])                      #63, xy2.lo = xy2.lo - dxy2.lo
                                          7853  bra('.sys_drawl_66')            #64,
              19e1 fce6  bra  .sys_drawl_66
              19e2 4188  ora  [$88]       7854  ora([0x88])                     #65,
                                          7855
                                          7856  label('.sys_drawl_63')
.sys_drawl_63:
              19e3 c284  st   [$84]       7857  st([0x84])                      #63,
              19e4 2188  anda [$88]       7858  anda([0x88])                    #64,
              19e5 0200  nop              7859  nop()                           #65,
                                          7860
                                          7861  label('.sys_drawl_66')
.sys_drawl_66:
              19e6 3080  anda $80,x       7862  anda(0x80,X)                    #66, move borrow to bit 0
              19e7 0185  ld   [$85]       7863  ld([0x85])                      #67, xy2.hi
              19e8 a500  suba [x]         7864  suba([X])                       #68,
              19e9 a189  suba [$89]       7865  suba([0x89])                    #69,
              19ea c285  st   [$85]       7866  st([0x85])                      #70, xy2.hi = xy2.hi - dxy2.hi
                                          7867
              19eb 019e  ld   [$9e]       7868  ld([0x9E])                      #71,
              19ec a001  suba $01         7869  suba(1)                         #72,
                                          7870  bne('.sys_drawl_75')            #73,
              19ed ecf2  bne  .sys_drawl_75
              19ee c29e  st   [$9e]       7871  st([0x9E])                      #74, drawLine_count--
              19ef 1403  ld   $03,y       7872  ld(hi('REENTER'),Y)             #75,
              19f0 e0cb  jmp  y,$cb       7873  jmp(Y,'REENTER')                #76,
              19f1 00d8  ld   $d8         7874  ld(-80/2)                       #77,
                                          7875
                                          7876  label('.sys_drawl_75')
.sys_drawl_75:
              19f2 0116  ld   [$16]       7877  ld([vPC])                       #75,
              19f3 a002  suba $02         7878  suba(2)                         #76,
              19f4 c216  st   [$16]       7879  st([vPC])                       #77, restart
              19f5 1403  ld   $03,y       7880  ld(hi('NEXTY'),Y)               #78,
              19f6 e000  jmp  y,$00       7881  jmp(Y,'NEXTY')                  #79,
              19f7 00d7  ld   $d7         7882  ld(-82/2)                       #80,
                                          7883
                                          7884
              19f8 0200  nop              7885  fillers(until=0xff)
              19f9 0200  nop
              19fa 0200  nop
              * 7 times
              19ff 0200  nop              7886  align(0x100, size=0x100)
                                          7887
                                          7888  #-----------------------------------------------------------------------
                                          7889  #       More sys implementations, (0x1A00)
                                          7890  #-----------------------------------------------------------------------
                                          7891
                                          7892
                                          7893  # sys_WaitVBlank
                                          7894  label('sys_WaitVBlank')
sys_WaitVBlank:
              1a00 60b3  xora $b3         7895  xora(videoYline0)               #18,
                                          7896  beq('.sys_waitvblank_21')       #19,
              1a01 f008  beq  .sys_waitvblank_21
              1a02 0116  ld   [$16]       7897  ld([vPC])                       #20,
              1a03 a002  suba $02         7898  suba(2)                         #21,
              1a04 c216  st   [$16]       7899  st([vPC])                       #22, restart
              1a05 1403  ld   $03,y       7900  ld(hi('REENTER'),Y)             #23,
              1a06 e0cb  jmp  y,$cb       7901  jmp(Y,'REENTER')                #24,
              1a07 00f2  ld   $f2         7902  ld(-28/2)                       #25,
                                          7903  label('.sys_waitvblank_21')
.sys_waitvblank_21:
              1a08 1403  ld   $03,y       7904  ld(hi('REENTER'),Y)             #21,
              1a09 e0cb  jmp  y,$cb       7905  jmp(Y,'REENTER')                #22,
              1a0a 00f2  ld   $f2         7906  ld(-28/2)                       #23,
                                          7907
                                          7908
                                          7909  # sys_SortUint8Array, sysArgs0,1=array, sysArg2=i, sysArg3=j, sysArg4=key, sysArg5=length
                                          7910  label('sys_SortUint8Array')
sys_SortUint8Array:
              1a0b 0127  ld   [$27]       7911  ld([sysArgs+3])                 #18,
                                          7912  ble('.sys_sortuint8array_21')   #19, j == 0
              1a0c f824  ble  .sys_sortuint8array_21
              1a0d 0124  ld   [$24]       7913  ld([sysArgs+0])                 #20,
              1a0e 8127  adda [$27]       7914  adda([sysArgs+3])               #21,
              1a0f b001  suba $01,x       7915  suba(1,X)                       #22,
              1a10 0d00  ld   [y,x]       7916  ld([Y,X])                       #23,
                                          7917  bmi('.sys_sortuint8array_26')   #24, convert signed < to unsigned <
              1a11 e815  blt  .sys_sortuint8array_26
              1a12 a128  suba [$28]       7918  suba([sysArgs+4])               #25,
                                          7919  bra('.sys_sortuint8array_28')   #26,
              1a13 fc17  bra  .sys_sortuint8array_28
              1a14 4128  ora  [$28]       7920  ora([sysArgs+4])                #27, borrow
                                          7921  label('.sys_sortuint8array_26')
.sys_sortuint8array_26:
              1a15 2128  anda [$28]       7922  anda([sysArgs+4])               #26, borrow
              1a16 0200  nop              7923  nop()                           #27,
                                          7924  label('.sys_sortuint8array_28')
.sys_sortuint8array_28:                   7925  bmi('.sys_sortuint8array_30_0') #28, a[j-1] < key
              1a17 e830  blt  .sys_sortuint8array_30_0
              1a18 0d00  ld   [y,x]       7926  ld([Y,X])                       #29,
              1a19 de00  st   [y,x++]     7927  st([Y,Xpp])                     #30,
              1a1a ce00  st   [y,x]       7928  st([Y,X])                       #31, a[j] = a[j-1]
              1a1b 0127  ld   [$27]       7929  ld([sysArgs+3])                 #32,
              1a1c a001  suba $01         7930  suba(1)                         #33,
              1a1d c227  st   [$27]       7931  st([sysArgs+3])                 #34, j--
              1a1e 0116  ld   [$16]       7932  ld([vPC])                       #35,
              1a1f a002  suba $02         7933  suba(2)                         #36,
              1a20 c216  st   [$16]       7934  st([vPC])                       #37, restart
              1a21 1403  ld   $03,y       7935  ld(hi('NEXTY'),Y)               #38,
              1a22 e000  jmp  y,$00       7936  jmp(Y,'NEXTY')                  #39,
              1a23 00eb  ld   $eb         7937  ld(-42/2)                       #40,
                                          7938  label('.sys_sortuint8array_21')
.sys_sortuint8array_21:
              1a24 9127  adda [$27],x     7939  adda([sysArgs+3],X)             #21,
              1a25 0128  ld   [$28]       7940  ld([sysArgs+4])                 #22,
              1a26 ce00  st   [y,x]       7941  st([Y,X])                       #23, a[j] = key
              1a27 0126  ld   [$26]       7942  ld([sysArgs+2])                 #24,
              1a28 8001  adda $01         7943  adda(1)                         #25,
              1a29 c226  st   [$26]       7944  st([sysArgs+2])                 #26, i++
              1a2a a129  suba [$29]       7945  suba([sysArgs+5])               #27,
                                          7946  blt('.sys_sortuint8array_30_1') #28, i < length
              1a2b e83c  blt  .sys_sortuint8array_30_1
              1a2c 0124  ld   [$24]       7947  ld([sysArgs+0])                 #29,
              1a2d 1403  ld   $03,y       7948  ld(hi('NEXTY'),Y)               #30,
              1a2e e000  jmp  y,$00       7949  jmp(Y,'NEXTY')                  #31,
              1a2f 00ef  ld   $ef         7950  ld(-34/2)                       #32,
                                          7951  label('.sys_sortuint8array_30_0')
.sys_sortuint8array_30_0:
              1a30 de00  st   [y,x++]     7952  st([Y,Xpp])                     #30,
              1a31 0128  ld   [$28]       7953  ld([sysArgs+4])                 #31,
              1a32 ce00  st   [y,x]       7954  st([Y,X])                       #32, a[j] = key
              1a33 0126  ld   [$26]       7955  ld([sysArgs+2])                 #33,
              1a34 8001  adda $01         7956  adda(1)                         #34,
              1a35 c226  st   [$26]       7957  st([sysArgs+2])                 #35, i++
              1a36 a129  suba [$29]       7958  suba([sysArgs+5])               #36,
                                          7959  blt('.sys_sortuint8array_39')   #37, i < length
              1a37 e847  blt  .sys_sortuint8array_39
              1a38 0124  ld   [$24]       7960  ld([sysArgs+0])                 #38,
              1a39 1403  ld   $03,y       7961  ld(hi('REENTER'),Y)             #39,
              1a3a e0cb  jmp  y,$cb       7962  jmp(Y,'REENTER')                #40,
              1a3b 00ea  ld   $ea         7963  ld(-44/2)                       #41,
                                          7964  label('.sys_sortuint8array_30_1')
.sys_sortuint8array_30_1:
              1a3c 9126  adda [$26],x     7965  adda([sysArgs+2],X)             #30,
              1a3d 0d00  ld   [y,x]       7966  ld([Y,X])                       #31,
              1a3e c228  st   [$28]       7967  st([sysArgs+4])                 #32, key = a[i]
              1a3f 0126  ld   [$26]       7968  ld([sysArgs+2])                 #33,
              1a40 c227  st   [$27]       7969  st([sysArgs+3])                 #34, j = i
              1a41 0116  ld   [$16]       7970  ld([vPC])                       #35,
              1a42 a002  suba $02         7971  suba(2)                         #36,
              1a43 c216  st   [$16]       7972  st([vPC])                       #37, restart
              1a44 1403  ld   $03,y       7973  ld(hi('NEXTY'),Y)               #38,
              1a45 e000  jmp  y,$00       7974  jmp(Y,'NEXTY')                  #39,
              1a46 00eb  ld   $eb         7975  ld(-42/2)                       #40,
                                          7976  label('.sys_sortuint8array_39')
.sys_sortuint8array_39:
              1a47 9126  adda [$26],x     7977  adda([sysArgs+2],X)             #39,
              1a48 0d00  ld   [y,x]       7978  ld([Y,X])                       #40,
              1a49 c228  st   [$28]       7979  st([sysArgs+4])                 #41, key = a[i]
              1a4a 0126  ld   [$26]       7980  ld([sysArgs+2])                 #42,
              1a4b c227  st   [$27]       7981  st([sysArgs+3])                 #43, j = i
              1a4c 0116  ld   [$16]       7982  ld([vPC])                       #44,
              1a4d a002  suba $02         7983  suba(2)                         #45,
              1a4e c216  st   [$16]       7984  st([vPC])                       #46, restart
              1a4f 1403  ld   $03,y       7985  ld(hi('REENTER'),Y)             #47,
              1a50 e0cb  jmp  y,$cb       7986  jmp(Y,'REENTER')                #48,
              1a51 00e6  ld   $e6         7987  ld(-52/2)                       #49,
                                          7988
                                          7989
                                          7990  # sys_SortViaIndices, sysArgs0,1=indices, sysArgs2,3=src, sysArg4,5=dst, sysArg6=dst step, vAC=count
                                          7991  label('sys_SortViaIndices')
sys_SortViaIndices:
              1a52 1124  ld   [$24],x     7992  ld([sysArgs+0],X)               #18,
              1a53 0d00  ld   [y,x]       7993  ld([Y,X])                       #19, [index]
              1a54 1527  ld   [$27],y     7994  ld([sysArgs+3],Y)               #20,
              1a55 9126  adda [$26],x     7995  adda([sysArgs+2],X)             #21, src
              1a56 0d00  ld   [y,x]       7996  ld([Y,X])                       #22, peek(src + index)
              1a57 1529  ld   [$29],y     7997  ld([sysArgs+5],Y)               #23,
              1a58 1128  ld   [$28],x     7998  ld([sysArgs+4],X)               #24, dst
              1a59 ce00  st   [y,x]       7999  st([Y,X])                       #25,
              1a5a 0124  ld   [$24]       8000  ld([sysArgs+0])                 #26,
              1a5b 8001  adda $01         8001  adda(1)                         #27,
              1a5c c224  st   [$24]       8002  st([sysArgs+0])                 #28, indices++
              1a5d 0128  ld   [$28]       8003  ld([sysArgs+4])                 #29,
              1a5e 812a  adda [$2a]       8004  adda([sysArgs+6])               #30,
              1a5f c228  st   [$28]       8005  st([sysArgs+4])                 #31, dst += step
              1a60 0118  ld   [$18]       8006  ld([vAC])                       #32,
              1a61 a001  suba $01         8007  suba(1)                         #33,
                                          8008  beq('.sys_sortviaindices_36')   #34,
              1a62 f06a  beq  .sys_sortviaindices_36
              1a63 c218  st   [$18]       8009  st([vAC])                       #35, count--
              1a64 0116  ld   [$16]       8010  ld([vPC])                       #36,
              1a65 a002  suba $02         8011  suba(2)                         #37,
              1a66 c216  st   [$16]       8012  st([vPC])                       #38, restart
              1a67 1403  ld   $03,y       8013  ld(hi('REENTER'),Y)             #39,
              1a68 e0cb  jmp  y,$cb       8014  jmp(Y,'REENTER')                #40,
              1a69 00ea  ld   $ea         8015  ld(-44/2)                       #41,
                                          8016  label('.sys_sortviaindices_36')
.sys_sortviaindices_36:
              1a6a 1403  ld   $03,y       8017  ld(hi('NEXTY'),Y)               #36,
              1a6b e000  jmp  y,$00       8018  jmp(Y,'NEXTY')                  #37,
              1a6c 00ec  ld   $ec         8019  ld(-40/2)                       #38,
                                          8020
                                          8021
              1a6d 0200  nop              8022  fillers(until=0xd0)
              1a6e 0200  nop
              1a6f 0200  nop
              * 99 times
                                          8023
                                          8024  #-----------------------------------------------------------------------
                                          8025  # Extension SYS_Unpack_56
                                          8026  #-----------------------------------------------------------------------
                                          8027
                                          8028  # Unpack 3 bytes into 4 pixels
                                          8029  #
                                          8030  # Variables:
                                          8031  #       sysArgs[0:2]    Packed bytes (in)
                                          8032  #       sysArgs[0:3]    Pixels (out)
                                          8033
                                          8034  label('SYS_Unpack_56')
SYS_Unpack_56:
              1ad0 1407  ld   $07,y       8035  ld(soundTable>>8,Y)             #15
              1ad1 0126  ld   [$26]       8036  ld([sysArgs+2])                 #16 a[2]>>2
              1ad2 5003  ora  $03,x       8037  ora(0x03,X)                     #17
              1ad3 0d00  ld   [y,x]       8038  ld([Y,X])                       #18
              1ad4 c227  st   [$27]       8039  st([sysArgs+3])                 #19 -> Pixel 3
                                          8040
              1ad5 0126  ld   [$26]       8041  ld([sysArgs+2])                 #20 (a[2]&3)<<4
              1ad6 2003  anda $03         8042  anda(0x03)                      #21
              1ad7 8200  adda ac          8043  adda(AC)                        #22
              1ad8 8200  adda ac          8044  adda(AC)                        #23
              1ad9 8200  adda ac          8045  adda(AC)                        #24
              1ada 8200  adda ac          8046  adda(AC)                        #25
              1adb c226  st   [$26]       8047  st([sysArgs+2])                 #26
              1adc 0125  ld   [$25]       8048  ld([sysArgs+1])                 #27 | a[1]>>4
              1add 5003  ora  $03,x       8049  ora(0x03,X)                     #28
              1ade 0d00  ld   [y,x]       8050  ld([Y,X])                       #29
              1adf 5003  ora  $03,x       8051  ora(0x03,X)                     #30
              1ae0 0d00  ld   [y,x]       8052  ld([Y,X])                       #31
              1ae1 4126  ora  [$26]       8053  ora([sysArgs+2])                #32
              1ae2 c226  st   [$26]       8054  st([sysArgs+2])                 #33 -> Pixel 2
                                          8055
              1ae3 0125  ld   [$25]       8056  ld([sysArgs+1])                 #34 (a[1]&15)<<2
              1ae4 200f  anda $0f         8057  anda(0x0f)                      #35
              1ae5 8200  adda ac          8058  adda(AC)                        #36
              1ae6 8200  adda ac          8059  adda(AC)                        #37
              1ae7 c225  st   [$25]       8060  st([sysArgs+1])                 #38
                                          8061
              1ae8 0124  ld   [$24]       8062  ld([sysArgs+0])                 #39 | a[0]>>6
              1ae9 5003  ora  $03,x       8063  ora(0x03,X)                     #40
              1aea 0d00  ld   [y,x]       8064  ld([Y,X])                       #41
              1aeb 5003  ora  $03,x       8065  ora(0x03,X)                     #42
              1aec 0d00  ld   [y,x]       8066  ld([Y,X])                       #43
              1aed 5003  ora  $03,x       8067  ora(0x03,X)                     #44
              1aee 0d00  ld   [y,x]       8068  ld([Y,X])                       #45
              1aef 4125  ora  [$25]       8069  ora([sysArgs+1])                #46
              1af0 c225  st   [$25]       8070  st([sysArgs+1])                 #47 -> Pixel 1
                                          8071
              1af1 0124  ld   [$24]       8072  ld([sysArgs+0])                 #48 a[1]&63
              1af2 203f  anda $3f         8073  anda(0x3f)                      #49
              1af3 c224  st   [$24]       8074  st([sysArgs+0])                 #50 -> Pixel 0
                                          8075
              1af4 1403  ld   $03,y       8076  ld(hi('REENTER'),Y)             #51
              1af5 e0cb  jmp  y,$cb       8077  jmp(Y,'REENTER')                #52
              1af6 00e4  ld   $e4         8078  ld(-56/2)                       #53
                                          8079
                                          8080
              1af7 0200  nop              8081  fillers(until=0xff)
              1af8 0200  nop
              1af9 0200  nop
              * 8 times
              1aff 0200  nop              8082  align(0x100, size=0x100)
                                          8083
                                          8084  #-----------------------------------------------------------------------
                                          8085  #       More sys implementations, (0x1B00)
                                          8086  #-----------------------------------------------------------------------
                                          8087
                                          8088  # sys_MemCopyByte, sysArgs0,1=src, sysArg2,3=dst, sysArg4=src step, sysArg5=dst step, vAC=count
                                          8089  label('sys_MemCopyByte')
sys_MemCopyByte:
              1b00 1124  ld   [$24],x     8090  ld([sysArgs+0],X)               #18,
              1b01 0d00  ld   [y,x]       8091  ld([Y,X])                       #19, [src]
              1b02 1527  ld   [$27],y     8092  ld([sysArgs+3],Y)               #20,
              1b03 1126  ld   [$26],x     8093  ld([sysArgs+2],X)               #21,
              1b04 ce00  st   [y,x]       8094  st([Y,X])                       #22, [dst] = [src]
              1b05 0124  ld   [$24]       8095  ld([sysArgs+0])                 #23,
              1b06 8128  adda [$28]       8096  adda([sysArgs+4])               #24,
              1b07 c224  st   [$24]       8097  st([sysArgs+0])                 #25, src++
              1b08 0126  ld   [$26]       8098  ld([sysArgs+2])                 #26,
              1b09 8129  adda [$29]       8099  adda([sysArgs+5])               #27,
              1b0a c226  st   [$26]       8100  st([sysArgs+2])                 #28, dst++
              1b0b 0118  ld   [$18]       8101  ld([vAC])                       #29,
              1b0c a001  suba $01         8102  suba(1)                         #30,
                                          8103  beq('.sys_memcopybyte_33')      #31,
              1b0d f015  beq  .sys_memcopybyte_33
              1b0e c218  st   [$18]       8104  st([vAC])                       #32, count--
              1b0f 0116  ld   [$16]       8105  ld([vPC])                       #33,
              1b10 a002  suba $02         8106  suba(2)                         #34,
              1b11 c216  st   [$16]       8107  st([vPC])                       #35, restart
              1b12 1403  ld   $03,y       8108  ld(hi('NEXTY'),Y)               #36,
              1b13 e000  jmp  y,$00       8109  jmp(Y,'NEXTY')                  #37,
              1b14 00ec  ld   $ec         8110  ld(-40/2)                       #38,
                                          8111  label('.sys_memcopybyte_33')
.sys_memcopybyte_33:
              1b15 1403  ld   $03,y       8112  ld(hi('REENTER'),Y)             #33,
              1b16 e0cb  jmp  y,$cb       8113  jmp(Y,'REENTER')                #34,
              1b17 00ed  ld   $ed         8114  ld(-38/2)                       #35,
                                          8115
                                          8116
                                          8117  # sys_MemCopyWord, sysArgs0,1=src, sysArg2,3=dst, vAC=count, sysArg4,5=tmp
                                          8118  label('sys_MemCopyWord')
sys_MemCopyWord:
              1b18 1124  ld   [$24],x     8119  ld([sysArgs+0],X)               #18,
              1b19 0d00  ld   [y,x]       8120  ld([Y,X])                       #19, [src + 0]
              1b1a de00  st   [y,x++]     8121  st([Y,Xpp])                     #20
              1b1b c228  st   [$28]       8122  st([sysArgs+4])                 #21,
              1b1c 0d00  ld   [y,x]       8123  ld([Y,X])                       #22, [src + 1]
              1b1d c229  st   [$29]       8124  st([sysArgs+5])                 #23,
              1b1e 1527  ld   [$27],y     8125  ld([sysArgs+3],Y)               #24,
              1b1f 1126  ld   [$26],x     8126  ld([sysArgs+2],X)               #25,
              1b20 0128  ld   [$28]       8127  ld([sysArgs+4])                 #26,
              1b21 de00  st   [y,x++]     8128  st([Y,Xpp])                     #27, [dst + 0] = [src + 0]
              1b22 0129  ld   [$29]       8129  ld([sysArgs+5])                 #28,
              1b23 ce00  st   [y,x]       8130  st([Y,X])                       #29, [dst + 1] = [src + 1]
              1b24 0124  ld   [$24]       8131  ld([sysArgs+0])                 #30,
              1b25 8002  adda $02         8132  adda(2)                         #31,
              1b26 c224  st   [$24]       8133  st([sysArgs+0])                 #32, src += 2
              1b27 0126  ld   [$26]       8134  ld([sysArgs+2])                 #33,
              1b28 8002  adda $02         8135  adda(2)                         #34,
              1b29 c226  st   [$26]       8136  st([sysArgs+2])                 #35, dst += 2
              1b2a 0118  ld   [$18]       8137  ld([vAC])                       #36,
              1b2b a001  suba $01         8138  suba(1)                         #37,
                                          8139  beq('.sys_memcopyword_40')      #38,
              1b2c f034  beq  .sys_memcopyword_40
              1b2d c218  st   [$18]       8140  st([vAC])                       #39, count--
              1b2e 0116  ld   [$16]       8141  ld([vPC])                       #40,
              1b2f a002  suba $02         8142  suba(2)                         #41,
              1b30 c216  st   [$16]       8143  st([vPC])                       #42, restart
              1b31 1403  ld   $03,y       8144  ld(hi('REENTER'),Y)             #43,
              1b32 e0cb  jmp  y,$cb       8145  jmp(Y,'REENTER')                #44,
              1b33 00e8  ld   $e8         8146  ld(-48/2)                       #45,
                                          8147  label('.sys_memcopyword_40')
.sys_memcopyword_40:
              1b34 1403  ld   $03,y       8148  ld(hi('NEXTY'),Y)               #40,
              1b35 e000  jmp  y,$00       8149  jmp(Y,'NEXTY')                  #41,
              1b36 00ea  ld   $ea         8150  ld(-44/2)                       #42,
                                          8151
                                          8152
                                          8153  # sys_MemCopyDWord, sysArgs0,1=src, sysArg2,3=dst, vAC=count, sysArg4,5=tmp, sysArg6,7=tmp
                                          8154  label('sys_MemCopyDWord')
sys_MemCopyDWord:
              1b37 1124  ld   [$24],x     8155  ld([sysArgs+0],X)               #18,
              1b38 0d00  ld   [y,x]       8156  ld([Y,X])                       #19, [src + 0]
              1b39 de00  st   [y,x++]     8157  st([Y,Xpp])                     #20
              1b3a c228  st   [$28]       8158  st([sysArgs+4])                 #21,
              1b3b 0d00  ld   [y,x]       8159  ld([Y,X])                       #22, [src + 1]
              1b3c de00  st   [y,x++]     8160  st([Y,Xpp])                     #23
              1b3d c229  st   [$29]       8161  st([sysArgs+5])                 #24,
              1b3e 0d00  ld   [y,x]       8162  ld([Y,X])                       #25, [src + 2]
              1b3f de00  st   [y,x++]     8163  st([Y,Xpp])                     #26
              1b40 c22a  st   [$2a]       8164  st([sysArgs+6])                 #27,
              1b41 0d00  ld   [y,x]       8165  ld([Y,X])                       #28, [src + 3]
              1b42 c22b  st   [$2b]       8166  st([sysArgs+7])                 #29,
              1b43 1527  ld   [$27],y     8167  ld([sysArgs+3],Y)               #30,
              1b44 1126  ld   [$26],x     8168  ld([sysArgs+2],X)               #31,
              1b45 0128  ld   [$28]       8169  ld([sysArgs+4])                 #32,
              1b46 de00  st   [y,x++]     8170  st([Y,Xpp])                     #33, [dst + 0] = [src + 0]
              1b47 0129  ld   [$29]       8171  ld([sysArgs+5])                 #34,
              1b48 de00  st   [y,x++]     8172  st([Y,Xpp])                     #35, [dst + 1] = [src + 1]
              1b49 012a  ld   [$2a]       8173  ld([sysArgs+6])                 #36,
              1b4a de00  st   [y,x++]     8174  st([Y,Xpp])                     #37, [dst + 2] = [src + 2]
              1b4b 012b  ld   [$2b]       8175  ld([sysArgs+7])                 #38,
              1b4c ce00  st   [y,x]       8176  st([Y,X])                       #39, [dst + 3] = [src + 3]
              1b4d 0124  ld   [$24]       8177  ld([sysArgs+0])                 #40,
              1b4e 8004  adda $04         8178  adda(4)                         #41,
              1b4f c224  st   [$24]       8179  st([sysArgs+0])                 #42, src += 4
              1b50 0126  ld   [$26]       8180  ld([sysArgs+2])                 #43,
              1b51 8004  adda $04         8181  adda(4)                         #44,
              1b52 c226  st   [$26]       8182  st([sysArgs+2])                 #45, dst += 4
              1b53 0118  ld   [$18]       8183  ld([vAC])                       #46,
              1b54 a001  suba $01         8184  suba(1)                         #47,
                                          8185  beq('.sys_memcopydword_50')     #48,
              1b55 f05d  beq  .sys_memcopydword_50
              1b56 c218  st   [$18]       8186  st([vAC])                       #49, count--
              1b57 0116  ld   [$16]       8187  ld([vPC])                       #50,
              1b58 a002  suba $02         8188  suba(2)                         #51,
              1b59 c216  st   [$16]       8189  st([vPC])                       #52, restart
              1b5a 1403  ld   $03,y       8190  ld(hi('REENTER'),Y)             #53,
              1b5b e0cb  jmp  y,$cb       8191  jmp(Y,'REENTER')                #54,
              1b5c 00e3  ld   $e3         8192  ld(-58/2)                       #55,
                                          8193  label('.sys_memcopydword_50')
.sys_memcopydword_50:
              1b5d 1403  ld   $03,y       8194  ld(hi('NEXTY'),Y)               #50,
              1b5e e000  jmp  y,$00       8195  jmp(Y,'NEXTY')                  #51,
              1b5f 00e5  ld   $e5         8196  ld(-54/2)                       #52,
                                          8197
                                          8198
                                          8199  # sys_ReadPixel
                                          8200  label('sys_ReadPixel')
sys_ReadPixel:
              1b60 8119  adda [$19]       8201  adda([vAC+1])                   #18,
              1b61 1200  ld   ac,x        8202  ld(AC,X)                        #19,
              1b62 1401  ld   $01,y       8203  ld(1,Y)                         #20, Y,X = 0x0100 + 2*y, (0 >= y <= 127)
              1b63 0d00  ld   [y,x]       8204  ld([Y,X])                       #21,
              1b64 1600  ld   ac,y        8205  ld(AC,Y)                        #22, Y = [Y,X]
              1b65 1118  ld   [$18],x     8206  ld([vAC],X)                     #23, X = x
              1b66 0d00  ld   [y,x]       8207  ld([Y,X])                       #24,
              1b67 c218  st   [$18]       8208  st([vAC])                       #25, vAC = [Y,X]
              1b68 0000  ld   $00         8209  ld(0)                           #26,
              1b69 c219  st   [$19]       8210  st([vAC+1])                     #27,
              1b6a 1403  ld   $03,y       8211  ld(hi('NEXTY'),Y)               #28,
              1b6b e000  jmp  y,$00       8212  jmp(Y,'NEXTY')                  #29,
              1b6c 00f0  ld   $f0         8213  ld(-32/2)                       #30,
                                          8214
                                          8215
                                          8216  # sys_DrawPixel
                                          8217  label('sys_DrawPixel')
sys_DrawPixel:
              1b6d 8125  adda [$25]       8218  adda([sysArgs+1])               #18,
              1b6e 1200  ld   ac,x        8219  ld(AC,X)                        #19,
              1b6f 1401  ld   $01,y       8220  ld(1,Y)                         #20, Y,X = 0x0100 + 2*y, (0 >= y <= 127)
              1b70 0d00  ld   [y,x]       8221  ld([Y,X])                       #21,
              1b71 1600  ld   ac,y        8222  ld(AC,Y)                        #22, Y = [Y,X]
              1b72 1124  ld   [$24],x     8223  ld([sysArgs+0],X)               #23, X = x
              1b73 0126  ld   [$26]       8224  ld([sysArgs+2])                 #24, colour
              1b74 ce00  st   [y,x]       8225  st([Y,X])                       #25, [Y,X] = colour
              1b75 1403  ld   $03,y       8226  ld(hi('NEXTY'),Y)               #26,
              1b76 e000  jmp  y,$00       8227  jmp(Y,'NEXTY')                  #27,
              1b77 00f1  ld   $f1         8228  ld(-30/2)                       #28,
                                          8229
                                          8230
              1b78 0200  nop              8231  fillers(until=0xff)
              1b79 0200  nop
              1b7a 0200  nop
              * 135 times
              1bff 0200  nop              8232  align(0x100, size=0x100)
                                          8233
                                          8234  #-----------------------------------------------------------------------
                                          8235  #       More sys implementations, (0x1C00)
                                          8236  #-----------------------------------------------------------------------
                                          8237
                                          8238  # sys_SortSprites, sysArgs0,1=_y_array, sysArg2=i, sysArg3=j, sysArg4=key0, sysArg5=length
                                          8239  #                  sysArgs6,7=_is_array, vAC.lo=key1
                                          8240  label('sys_SortSprites')
sys_SortSprites:
              1c00 0127  ld   [$27]       8241  ld([sysArgs+3])                 #18,
                                          8242  ble('.sys_sortsprites_21')      #19, j <= 0
              1c01 f820  ble  .sys_sortsprites_21
              1c02 0124  ld   [$24]       8243  ld([sysArgs+0])                 #20,
              1c03 8127  adda [$27]       8244  adda([sysArgs+3])               #21,
              1c04 b001  suba $01,x       8245  suba(1,X)                       #22,
              1c05 0d00  ld   [y,x]       8246  ld([Y,X])                       #23,
                                          8247  bmi('.sys_sortsprites_26')      #24, convert signed < to unsigned <
              1c06 e80a  blt  .sys_sortsprites_26
              1c07 a128  suba [$28]       8248  suba([sysArgs+4])               #25,
                                          8249  bra('.sys_sortsprites_28')      #26,
              1c08 fc0c  bra  .sys_sortsprites_28
              1c09 4128  ora  [$28]       8250  ora([sysArgs+4])                #27, borrow
                                          8251  label('.sys_sortsprites_26')
.sys_sortsprites_26:
              1c0a 2128  anda [$28]       8252  anda([sysArgs+4])               #26, borrow
              1c0b 0200  nop              8253  nop()                           #27,
                                          8254  label('.sys_sortsprites_28')
.sys_sortsprites_28:                      8255  bmi('.sys_sortsprites_30')      #28, y[j-1] < key
              1c0c e831  blt  .sys_sortsprites_30
              1c0d 0d00  ld   [y,x]       8256  ld([Y,X])                       #29,
              1c0e de00  st   [y,x++]     8257  st([Y,Xpp])                     #30,
              1c0f ce00  st   [y,x]       8258  st([Y,X])                       #31, y[j] = y[j-1]
              1c10 152b  ld   [$2b],y     8259  ld([sysArgs+7],Y)               #32,
              1c11 012a  ld   [$2a]       8260  ld([sysArgs+6])                 #33,
              1c12 8127  adda [$27]       8261  adda([sysArgs+3])               #34,
              1c13 b001  suba $01,x       8262  suba(1,X)                       #35,
              1c14 0d00  ld   [y,x]       8263  ld([Y,X])                       #36,
              1c15 de00  st   [y,x++]     8264  st([Y,Xpp])                     #37,
              1c16 ce00  st   [y,x]       8265  st([Y,X])                       #38, is[j] = is[j-1]
              1c17 0127  ld   [$27]       8266  ld([sysArgs+3])                 #39,
              1c18 a001  suba $01         8267  suba(1)                         #40,
              1c19 c227  st   [$27]       8268  st([sysArgs+3])                 #41, j--
              1c1a 0116  ld   [$16]       8269  ld([vPC])                       #42,
              1c1b a002  suba $02         8270  suba(2)                         #43,
              1c1c c216  st   [$16]       8271  st([vPC])                       #44, restart
              1c1d 1403  ld   $03,y       8272  ld(hi('REENTER'),Y)             #45,
              1c1e e0cb  jmp  y,$cb       8273  jmp(Y,'REENTER')                #46,
              1c1f 00e7  ld   $e7         8274  ld(-50/2)                       #47,
                                          8275  label('.sys_sortsprites_21')
.sys_sortsprites_21:
              1c20 9127  adda [$27],x     8276  adda([sysArgs+3],X)             #21,
              1c21 0128  ld   [$28]       8277  ld([sysArgs+4])                 #22,
              1c22 ce00  st   [y,x]       8278  st([Y,X])                       #23, y[j] = key0
              1c23 152b  ld   [$2b],y     8279  ld([sysArgs+7],Y)               #24,
              1c24 012a  ld   [$2a]       8280  ld([sysArgs+6])                 #25,
              1c25 9127  adda [$27],x     8281  adda([sysArgs+3],X)             #26,
              1c26 0182  ld   [$82]       8282  ld([0x82])                      #27,
              1c27 ce00  st   [y,x]       8283  st([Y,X])                       #28, is[j] = key1
              1c28 0126  ld   [$26]       8284  ld([sysArgs+2])                 #29,
              1c29 8001  adda $01         8285  adda(1)                         #30,
              1c2a c226  st   [$26]       8286  st([sysArgs+2])                 #31, i++
              1c2b a129  suba [$29]       8287  suba([sysArgs+5])               #32,
                                          8288  blt('.sys_sortsprites_35')      #33, i < length
              1c2c e842  blt  .sys_sortsprites_35
              1c2d 1525  ld   [$25],y     8289  ld([sysArgs+1],Y)               #34,
              1c2e 1403  ld   $03,y       8290  ld(hi('REENTER'),Y)             #35,
              1c2f e0cb  jmp  y,$cb       8291  jmp(Y,'REENTER')                #36,
              1c30 00ec  ld   $ec         8292  ld(-40/2)                       #37,
                                          8293  label('.sys_sortsprites_30')
.sys_sortsprites_30:
              1c31 de00  st   [y,x++]     8294  st([Y,Xpp])                     #30,
              1c32 0128  ld   [$28]       8295  ld([sysArgs+4])                 #31,
              1c33 ce00  st   [y,x]       8296  st([Y,X])                       #32, y[j] = key0
              1c34 152b  ld   [$2b],y     8297  ld([sysArgs+7],Y)               #33,
              1c35 012a  ld   [$2a]       8298  ld([sysArgs+6])                 #34,
              1c36 9127  adda [$27],x     8299  adda([sysArgs+3],X)             #35,
              1c37 0182  ld   [$82]       8300  ld([0x82])                      #36,
              1c38 ce00  st   [y,x]       8301  st([Y,X])                       #37, is[j] = key1
              1c39 0126  ld   [$26]       8302  ld([sysArgs+2])                 #38,
              1c3a 8001  adda $01         8303  adda(1)                         #39,
              1c3b c226  st   [$26]       8304  st([sysArgs+2])                 #40, i++
              1c3c a129  suba [$29]       8305  suba([sysArgs+5])               #41,
                                          8306  blt('.sys_sortsprites_44')      #42, i < length
              1c3d e853  blt  .sys_sortsprites_44
              1c3e 1525  ld   [$25],y     8307  ld([sysArgs+1],Y)               #43
              1c3f 1403  ld   $03,y       8308  ld(hi('NEXTY'),Y)               #44,
              1c40 e000  jmp  y,$00       8309  jmp(Y,'NEXTY')                  #45,
              1c41 00e8  ld   $e8         8310  ld(-48/2)                       #46,
                                          8311  label('.sys_sortsprites_35')
.sys_sortsprites_35:
              1c42 0124  ld   [$24]       8312  ld([sysArgs+0])                 #35,
              1c43 9126  adda [$26],x     8313  adda([sysArgs+2],X)             #36,
              1c44 0d00  ld   [y,x]       8314  ld([Y,X])                       #37,
              1c45 c228  st   [$28]       8315  st([sysArgs+4])                 #38, key0 = y[i]
              1c46 152b  ld   [$2b],y     8316  ld([sysArgs+7],Y)               #39,
              1c47 012a  ld   [$2a]       8317  ld([sysArgs+6])                 #40,
              1c48 9126  adda [$26],x     8318  adda([sysArgs+2],X)             #41,
              1c49 0d00  ld   [y,x]       8319  ld([Y,X])                       #42,
              1c4a c282  st   [$82]       8320  st([0x82])                      #43, key1 = is[i]
              1c4b 0126  ld   [$26]       8321  ld([sysArgs+2])                 #44,
              1c4c c227  st   [$27]       8322  st([sysArgs+3])                 #45, j = i
              1c4d 0116  ld   [$16]       8323  ld([vPC])                       #46,
              1c4e a002  suba $02         8324  suba(2)                         #47,
              1c4f c216  st   [$16]       8325  st([vPC])                       #48, restart
              1c50 1403  ld   $03,y       8326  ld(hi('REENTER'),Y)             #49,
              1c51 e0cb  jmp  y,$cb       8327  jmp(Y,'REENTER')                #50,
              1c52 00e5  ld   $e5         8328  ld(-54/2)                       #51,
                                          8329  label('.sys_sortsprites_44')
.sys_sortsprites_44:
              1c53 0124  ld   [$24]       8330  ld([sysArgs+0])                 #44,
              1c54 9126  adda [$26],x     8331  adda([sysArgs+2],X)             #45,
              1c55 0d00  ld   [y,x]       8332  ld([Y,X])                       #46,
              1c56 c228  st   [$28]       8333  st([sysArgs+4])                 #47, key0 = y[i]
              1c57 152b  ld   [$2b],y     8334  ld([sysArgs+7],Y)               #48,
              1c58 012a  ld   [$2a]       8335  ld([sysArgs+6])                 #49,
              1c59 9126  adda [$26],x     8336  adda([sysArgs+2],X)             #50,
              1c5a 0d00  ld   [y,x]       8337  ld([Y,X])                       #51,
              1c5b c282  st   [$82]       8338  st([0x82])                      #52, key1 = is[i]
              1c5c 0126  ld   [$26]       8339  ld([sysArgs+2])                 #53,
              1c5d c227  st   [$27]       8340  st([sysArgs+3])                 #54, j = i
              1c5e 0116  ld   [$16]       8341  ld([vPC])                       #55,
              1c5f a002  suba $02         8342  suba(2)                         #56,
              1c60 c216  st   [$16]       8343  st([vPC])                       #57, restart
              1c61 1403  ld   $03,y       8344  ld(hi('NEXTY'),Y)               #58,
              1c62 e000  jmp  y,$00       8345  jmp(Y,'NEXTY')                  #59,
              1c63 00e1  ld   $e1         8346  ld(-62/2)                       #60,
                                          8347
                                          8348
              1c64 0200  nop              8349  fillers(until=0xff)
              1c65 0200  nop
              1c66 0200  nop
              * 155 times
              1cff 0200  nop              8350  align(0x100, size=0x100)
                                          8351
                                          8352  #-----------------------------------------------------------------------
                                          8353  #       More sys implementations, (0x1D00)
                                          8354  #-----------------------------------------------------------------------
                                          8355
                                          8356  # sys_DrawSprite
                                          8357  label('sys_DrawSprite')
sys_DrawSprite:
              1d00 1583  ld   [$83],y     8358  ld([0x83],Y)                    #18, spriteY
                                          8359
              1d01 0d00  ld   [y,x]       8360  ld([Y,X])                       #19, get back0
              1d02 1587  ld   [$87],y     8361  ld([0x87],Y)                    #20, spriteData
              1d03 caa2  st   [y,$a2]     8362  st([Y,0xA2])                    #21, save back0
              1d04 09a3  ld   [y,$a3]     8363  ld([Y,0xA3])                    #22, load pixel0
              1d05 1583  ld   [$83],y     8364  ld([0x83],Y)                    #23, spriteY
              1d06 ec09  bne  $1d09       8365  bne(pc()+3)                     #24, colourkey
              1d07 fc0a  bra  $1d0a       8366  bra(pc()+3)                     #25,
              1d08 0d00  ld   [y,x]       8367  ld([Y,X])                       #26,
              1d09 0200  nop              8368  nop()                           #26, (!)
              1d0a de00  st   [y,x++]     8369  st([Y,Xpp])                     #27, draw pixel0
                                          8370
              1d0b 0d00  ld   [y,x]       8371  ld([Y,X])                       #28, get back1
              1d0c 1587  ld   [$87],y     8372  ld([0x87],Y)                    #29, spriteData
              1d0d caa4  st   [y,$a4]     8373  st([Y,0xA4])                    #30, save back1
              1d0e 09a5  ld   [y,$a5]     8374  ld([Y,0xA5])                    #31, load pixel1
              1d0f 1583  ld   [$83],y     8375  ld([0x83],Y)                    #32, spriteY
              1d10 ec13  bne  $1d13       8376  bne(pc()+3)                     #33, colourkey
              1d11 fc14  bra  $1d14       8377  bra(pc()+3)                     #34,
              1d12 0d00  ld   [y,x]       8378  ld([Y,X])                       #35,
              1d13 0200  nop              8379  nop()                           #35, (!)
              1d14 de00  st   [y,x++]     8380  st([Y,Xpp])                     #36, draw pixel1
                                          8381
              1d15 0d00  ld   [y,x]       8382  ld([Y,X])                       #37, get back2
              1d16 1587  ld   [$87],y     8383  ld([0x87],Y)                    #38, spriteData
              1d17 caa6  st   [y,$a6]     8384  st([Y,0xA6])                    #39, save back2
              1d18 09a7  ld   [y,$a7]     8385  ld([Y,0xA7])                    #40, load pixel2
              1d19 1583  ld   [$83],y     8386  ld([0x83],Y)                    #41, spriteY
              1d1a ec1d  bne  $1d1d       8387  bne(pc()+3)                     #42, colourkey
              1d1b fc1e  bra  $1d1e       8388  bra(pc()+3)                     #43,
              1d1c 0d00  ld   [y,x]       8389  ld([Y,X])                       #44,
              1d1d 0200  nop              8390  nop()                           #44, (!)
              1d1e de00  st   [y,x++]     8391  st([Y,Xpp])                     #45, draw pixel2
                                          8392
              1d1f 0d00  ld   [y,x]       8393  ld([Y,X])                       #46, get back3
              1d20 1587  ld   [$87],y     8394  ld([0x87],Y)                    #47, spriteData
              1d21 caa8  st   [y,$a8]     8395  st([Y,0xA8])                    #48, save back3
              1d22 09a9  ld   [y,$a9]     8396  ld([Y,0xA9])                    #49, load pixel3
              1d23 1583  ld   [$83],y     8397  ld([0x83],Y)                    #50, spriteY
              1d24 ec27  bne  $1d27       8398  bne(pc()+3)                     #51, colourkey
              1d25 fc28  bra  $1d28       8399  bra(pc()+3)                     #52,
              1d26 0d00  ld   [y,x]       8400  ld([Y,X])                       #53,
              1d27 0200  nop              8401  nop()                           #53, (!)
              1d28 de00  st   [y,x++]     8402  st([Y,Xpp])                     #54, draw pixel3
                                          8403
              1d29 0d00  ld   [y,x]       8404  ld([Y,X])                       #55, get back4
              1d2a 1587  ld   [$87],y     8405  ld([0x87],Y)                    #56, spriteData
              1d2b caaa  st   [y,$aa]     8406  st([Y,0xAA])                    #57, save back4
              1d2c 09ab  ld   [y,$ab]     8407  ld([Y,0xAB])                    #58, load pixel4
              1d2d 1583  ld   [$83],y     8408  ld([0x83],Y)                    #59, spriteY
              1d2e ec31  bne  $1d31       8409  bne(pc()+3)                     #60, colourkey
              1d2f fc32  bra  $1d32       8410  bra(pc()+3)                     #61,
              1d30 0d00  ld   [y,x]       8411  ld([Y,X])                       #62,
              1d31 0200  nop              8412  nop()                           #62, (!)
              1d32 de00  st   [y,x++]     8413  st([Y,Xpp])                     #63, draw pixel4
                                          8414
              1d33 0d00  ld   [y,x]       8415  ld([Y,X])                       #64, get back5
              1d34 1587  ld   [$87],y     8416  ld([0x87],Y)                    #65, spriteData
              1d35 caac  st   [y,$ac]     8417  st([Y,0xAC])                    #66, save back5
              1d36 09ad  ld   [y,$ad]     8418  ld([Y,0xAD])                    #67, load pixel5
              1d37 1583  ld   [$83],y     8419  ld([0x83],Y)                    #68, spriteY
              1d38 ec3b  bne  $1d3b       8420  bne(pc()+3)                     #69, colourkey
              1d39 fc3c  bra  $1d3c       8421  bra(pc()+3)                     #70,
              1d3a 0d00  ld   [y,x]       8422  ld([Y,X])                       #71,
              1d3b 0200  nop              8423  nop()                           #71, (!)
              1d3c de00  st   [y,x++]     8424  st([Y,Xpp])                     #72, draw pixel5
                                          8425
              1d3d 0d00  ld   [y,x]       8426  ld([Y,X])                       #73, get back6
              1d3e 1587  ld   [$87],y     8427  ld([0x87],Y)                    #74, spriteData
              1d3f caae  st   [y,$ae]     8428  st([Y,0xAE])                    #75, save back6
              1d40 09af  ld   [y,$af]     8429  ld([Y,0xAF])                    #76, load pixel6
              1d41 1583  ld   [$83],y     8430  ld([0x83],Y)                    #77, spriteY
              1d42 ec45  bne  $1d45       8431  bne(pc()+3)                     #78, colourkey
              1d43 fc46  bra  $1d46       8432  bra(pc()+3)                     #79,
              1d44 0d00  ld   [y,x]       8433  ld([Y,X])                       #80,
              1d45 0200  nop              8434  nop()                           #80, (!)
              1d46 de00  st   [y,x++]     8435  st([Y,Xpp])                     #81, draw pixel6
                                          8436
              1d47 0d00  ld   [y,x]       8437  ld([Y,X])                       #82, get back7
              1d48 1587  ld   [$87],y     8438  ld([0x87],Y)                    #83, spriteData
              1d49 cab0  st   [y,$b0]     8439  st([Y,0xB0])                    #84, save back7
              1d4a 09b1  ld   [y,$b1]     8440  ld([Y,0xB1])                    #85, load pixel7
              1d4b 1583  ld   [$83],y     8441  ld([0x83],Y)                    #86, spriteY
              1d4c ec4f  bne  $1d4f       8442  bne(pc()+3)                     #87, colourkey
              1d4d fc50  bra  $1d50       8443  bra(pc()+3)                     #88,
              1d4e 0d00  ld   [y,x]       8444  ld([Y,X])                       #89,
              1d4f 0200  nop              8445  nop()                           #89, (!)
              1d50 de00  st   [y,x++]     8446  st([Y,Xpp])                     #90, draw pixel7
                                          8447
              1d51 0d00  ld   [y,x]       8448  ld([Y,X])                       #91, get back8
              1d52 1587  ld   [$87],y     8449  ld([0x87],Y)                    #92, spriteData
              1d53 cab2  st   [y,$b2]     8450  st([Y,0xB2])                    #93, save back8
              1d54 09b3  ld   [y,$b3]     8451  ld([Y,0xB3])                    #94, load pixel8
              1d55 1583  ld   [$83],y     8452  ld([0x83],Y)                    #95, spriteY
              1d56 ec59  bne  $1d59       8453  bne(pc()+3)                     #96, colourkey
              1d57 fc5a  bra  $1d5a       8454  bra(pc()+3)                     #97,
              1d58 0d00  ld   [y,x]       8455  ld([Y,X])                       #98,
              1d59 0200  nop              8456  nop()                           #98, (!)
              1d5a de00  st   [y,x++]     8457  st([Y,Xpp])                     #99, draw pixel8
                                          8458
              1d5b 1587  ld   [$87],y     8459  ld([0x87],Y)                    #100, spriteData
              1d5c 0182  ld   [$82]       8460  ld([0x82])                      #101, spriteX
              1d5d caa0  st   [y,$a0]     8461  st([Y,0xA0])                    #102, spriteOldX
              1d5e 0183  ld   [$83]       8462  ld([0x83])                      #103, spriteY
              1d5f caa1  st   [y,$a1]     8463  st([Y,0xA1])                    #104, spriteOldY
              1d60 0186  ld   [$86]       8464  ld([0x86])                      #105,
              1d61 a001  suba $01         8465  suba(1)                         #106,
                                          8466  beq('.sys_drawsprite_109')      #107,
              1d62 f070  beq  .sys_drawsprite_109
              1d63 c286  st   [$86]       8467  st([0x86])                      #108, scanLines--
              1d64 0183  ld   [$83]       8468  ld([0x83])                      #109, spriteY
              1d65 8001  adda $01         8469  adda(1)                         #110,
              1d66 c283  st   [$83]       8470  st([0x83])                      #111, spriteY++
              1d67 0187  ld   [$87]       8471  ld([0x87])                      #112,
              1d68 8001  adda $01         8472  adda(1)                         #113,
              1d69 c287  st   [$87]       8473  st([0x87])                      #114, spriteData++
              1d6a 0116  ld   [$16]       8474  ld([vPC])                       #115,
              1d6b a002  suba $02         8475  suba(2)                         #116,
              1d6c c216  st   [$16]       8476  st([vPC])                       #117, restart
              1d6d 1403  ld   $03,y       8477  ld(hi('NEXTY'),Y)               #118,
              1d6e e000  jmp  y,$00       8478  jmp(Y,'NEXTY')                  #119,
              1d6f 00c3  ld   $c3         8479  ld(-122/2)                      #120,
                                          8480  label('.sys_drawsprite_109')
.sys_drawsprite_109:
              1d70 019c  ld   [$9c]       8481  ld([0x9C])                      #109,
              1d71 8001  adda $01         8482  adda(1)                         #110,
              1d72 d29c  st   [$9c],x     8483  st([0x9C],X)                    #111, register13++
              1d73 159d  ld   [$9d],y     8484  ld([0x9D],Y)                    #112,
              1d74 0d00  ld   [y,x]       8485  ld([Y,X])                       #113, peek(register13)
              1d75 c282  st   [$82]       8486  st([0x82])                      #114, spriteX
              1d76 019e  ld   [$9e]       8487  ld([0x9E])                      #115,
              1d77 8001  adda $01         8488  adda(1)                         #116,
              1d78 d29e  st   [$9e],x     8489  st([0x9E],X)                    #117, register14++
              1d79 159f  ld   [$9f],y     8490  ld([0x9F],Y)                    #118,
              1d7a 0d00  ld   [y,x]       8491  ld([Y,X])                       #119, peek(register14)
              1d7b c283  st   [$83]       8492  st([0x83])                      #120, spriteY
              1d7c 01a0  ld   [$a0]       8493  ld([0xA0])                      #121,
              1d7d 8001  adda $01         8494  adda(1)                         #122,
              1d7e d2a0  st   [$a0],x     8495  st([0xA0],X)                    #123, register15++
              1d7f 15a1  ld   [$a1],y     8496  ld([0xA1],Y)                    #124,
              1d80 0d00  ld   [y,x]       8497  ld([Y,X])                       #125, peek(register15)
              1d81 c287  st   [$87]       8498  st([0x87])                      #126, spriteData
              1d82 1403  ld   $03,y       8499  ld(hi('REENTER'),Y)             #127,
              1d83 e0cb  jmp  y,$cb       8500  jmp(Y,'REENTER')                #128,
              1d84 00be  ld   $be         8501  ld(-132/2)                      #129,
                                          8502
                                          8503
                                          8504  # sys_DrawVLine, sysArgs0,1=count:colour, sysArgs2,3=X:Y address
                                          8505  label('sys_DrawVLine')
sys_DrawVLine:
              1d85 1126  ld   [$26],x     8506  ld([sysArgs+2],X)               #18,
              1d86 0124  ld   [$24]       8507  ld([sysArgs+0])                 #19,
              1d87 a008  suba $08         8508  suba(8)                         #20,
                                          8509  blt('.sys_drawvline_23')        #21,
              1d88 e8b3  blt  .sys_drawvline_23
              1d89 0124  ld   [$24]       8510  ld([sysArgs+0])                 #22,
              1d8a 0125  ld   [$25]       8511  ld([sysArgs+1])                 #23, 8 pixels
              1d8b ce00  st   [y,x]       8512  st([Y,X])                       #24,
              1d8c 0127  ld   [$27]       8513  ld([sysArgs+3])                 #25,
              1d8d 9401  adda $01,y       8514  adda(1,Y)                       #26,
              1d8e 0125  ld   [$25]       8515  ld([sysArgs+1])                 #27,
              1d8f ce00  st   [y,x]       8516  st([Y,X])                       #28,
              1d90 0127  ld   [$27]       8517  ld([sysArgs+3])                 #29,
              1d91 9402  adda $02,y       8518  adda(2,Y)                       #30,
              1d92 0125  ld   [$25]       8519  ld([sysArgs+1])                 #31,
              1d93 ce00  st   [y,x]       8520  st([Y,X])                       #32,
              1d94 0127  ld   [$27]       8521  ld([sysArgs+3])                 #33,
              1d95 9403  adda $03,y       8522  adda(3,Y)                       #34,
              1d96 0125  ld   [$25]       8523  ld([sysArgs+1])                 #35,
              1d97 ce00  st   [y,x]       8524  st([Y,X])                       #36,
              1d98 0127  ld   [$27]       8525  ld([sysArgs+3])                 #37,
              1d99 9404  adda $04,y       8526  adda(4,Y)                       #38,
              1d9a 0125  ld   [$25]       8527  ld([sysArgs+1])                 #39,
              1d9b ce00  st   [y,x]       8528  st([Y,X])                       #40,
              1d9c 0127  ld   [$27]       8529  ld([sysArgs+3])                 #41,
              1d9d 9405  adda $05,y       8530  adda(5,Y)                       #42,
              1d9e 0125  ld   [$25]       8531  ld([sysArgs+1])                 #43,
              1d9f ce00  st   [y,x]       8532  st([Y,X])                       #44,
              1da0 0127  ld   [$27]       8533  ld([sysArgs+3])                 #45,
              1da1 9406  adda $06,y       8534  adda(6,Y)                       #46,
              1da2 0125  ld   [$25]       8535  ld([sysArgs+1])                 #47,
              1da3 ce00  st   [y,x]       8536  st([Y,X])                       #48,
              1da4 0127  ld   [$27]       8537  ld([sysArgs+3])                 #49,
              1da5 9407  adda $07,y       8538  adda(7,Y)                       #50,
              1da6 8008  adda $08         8539  adda(8)                         #51,
              1da7 c227  st   [$27]       8540  st([sysArgs+3])                 #52,
              1da8 0125  ld   [$25]       8541  ld([sysArgs+1])                 #53,
              1da9 ce00  st   [y,x]       8542  st([Y,X])                       #54,
              1daa 0124  ld   [$24]       8543  ld([sysArgs+0])                 #55,
              1dab a008  suba $08         8544  suba(8)                         #56,
              1dac c224  st   [$24]       8545  st([sysArgs+0])                 #57,
              1dad 0116  ld   [$16]       8546  ld([vPC])                       #58,
              1dae a002  suba $02         8547  suba(2)                         #59,
              1daf c216  st   [$16]       8548  st([vPC])                       #60, restart
              1db0 1403  ld   $03,y       8549  ld(hi('REENTER'),Y)             #61,
              1db1 e0cb  jmp  y,$cb       8550  jmp(Y,'REENTER')                #62,
              1db2 00df  ld   $df         8551  ld(-66/2)                       #63,
                                          8552  label('.sys_drawvline_23')
.sys_drawvline_23:
              1db3 a004  suba $04         8553  suba(4)                         #23,
                                          8554  blt('.sys_drawvline_26')        #24,
              1db4 e8cf  blt  .sys_drawvline_26
              1db5 0124  ld   [$24]       8555  ld([sysArgs+0])                 #25,
              1db6 0125  ld   [$25]       8556  ld([sysArgs+1])                 #26, 4 pixels
              1db7 ce00  st   [y,x]       8557  st([Y,X])                       #27,
              1db8 0127  ld   [$27]       8558  ld([sysArgs+3])                 #28,
              1db9 9401  adda $01,y       8559  adda(1,Y)                       #29,
              1dba 0125  ld   [$25]       8560  ld([sysArgs+1])                 #30,
              1dbb ce00  st   [y,x]       8561  st([Y,X])                       #31,
              1dbc 0127  ld   [$27]       8562  ld([sysArgs+3])                 #32,
              1dbd 9402  adda $02,y       8563  adda(2,Y)                       #33,
              1dbe 0125  ld   [$25]       8564  ld([sysArgs+1])                 #34,
              1dbf ce00  st   [y,x]       8565  st([Y,X])                       #35,
              1dc0 0127  ld   [$27]       8566  ld([sysArgs+3])                 #36,
              1dc1 9403  adda $03,y       8567  adda(3,Y)                       #37,
              1dc2 8004  adda $04         8568  adda(4)                         #38,
              1dc3 c227  st   [$27]       8569  st([sysArgs+3])                 #39,
              1dc4 0125  ld   [$25]       8570  ld([sysArgs+1])                 #40,
              1dc5 ce00  st   [y,x]       8571  st([Y,X])                       #41,
              1dc6 0124  ld   [$24]       8572  ld([sysArgs+0])                 #42,
              1dc7 a004  suba $04         8573  suba(4)                         #43,
              1dc8 c224  st   [$24]       8574  st([sysArgs+0])                 #44,
              1dc9 0116  ld   [$16]       8575  ld([vPC])                       #45,
              1dca a002  suba $02         8576  suba(2)                         #46,
              1dcb c216  st   [$16]       8577  st([vPC])                       #47, restart
              1dcc 1403  ld   $03,y       8578  ld(hi('NEXTY'),Y)               #48,
              1dcd e000  jmp  y,$00       8579  jmp(Y,'NEXTY')                  #49,
              1dce 00e6  ld   $e6         8580  ld(-52/2)                       #50,
                                          8581  label('.sys_drawvline_26')
.sys_drawvline_26:
              1dcf a002  suba $02         8582  suba(2)                         #26,
                                          8583  blt('.sys_drawvline_29')        #27,
              1dd0 e8e3  blt  .sys_drawvline_29
              1dd1 0124  ld   [$24]       8584  ld([sysArgs+0])                 #28,
              1dd2 0125  ld   [$25]       8585  ld([sysArgs+1])                 #29, 2 pixels
              1dd3 ce00  st   [y,x]       8586  st([Y,X])                       #30,
              1dd4 0127  ld   [$27]       8587  ld([sysArgs+3])                 #31,
              1dd5 9401  adda $01,y       8588  adda(1,Y)                       #32,
              1dd6 8002  adda $02         8589  adda(2)                         #33,
              1dd7 c227  st   [$27]       8590  st([sysArgs+3])                 #34,
              1dd8 0125  ld   [$25]       8591  ld([sysArgs+1])                 #35,
              1dd9 ce00  st   [y,x]       8592  st([Y,X])                       #36,
              1dda 0124  ld   [$24]       8593  ld([sysArgs+0])                 #37,
              1ddb a002  suba $02         8594  suba(2)                         #38,
              1ddc c224  st   [$24]       8595  st([sysArgs+0])                 #39,
              1ddd 0116  ld   [$16]       8596  ld([vPC])                       #40,
              1dde a002  suba $02         8597  suba(2)                         #41,
              1ddf c216  st   [$16]       8598  st([vPC])                       #42, restart
              1de0 1403  ld   $03,y       8599  ld(hi('REENTER'),Y)             #43,
              1de1 e0cb  jmp  y,$cb       8600  jmp(Y,'REENTER')                #44,
              1de2 00e8  ld   $e8         8601  ld(-48/2)                       #45,
                                          8602  label('.sys_drawvline_29')
.sys_drawvline_29:
              1de3 a001  suba $01         8603  suba(1)                         #29,
                                          8604  blt('.sys_drawvline_32')        #30,
              1de4 e8f1  blt  .sys_drawvline_32
              1de5 0124  ld   [$24]       8605  ld([sysArgs+0])                 #31,
              1de6 0125  ld   [$25]       8606  ld([sysArgs+1])                 #32, 1 pixel
              1de7 ce00  st   [y,x]       8607  st([Y,X])                       #33,
              1de8 0124  ld   [$24]       8608  ld([sysArgs+0])                 #34,
              1de9 a001  suba $01         8609  suba(1)                         #35,
              1dea c224  st   [$24]       8610  st([sysArgs+0])                 #36,
              1deb 0116  ld   [$16]       8611  ld([vPC])                       #37,
              1dec a002  suba $02         8612  suba(2)                         #38,
              1ded c216  st   [$16]       8613  st([vPC])                       #39, restart
              1dee 1403  ld   $03,y       8614  ld(hi('NEXTY'),Y)               #40,
              1def e000  jmp  y,$00       8615  jmp(Y,'NEXTY')                  #41,
              1df0 00ea  ld   $ea         8616  ld(-44/2)                       #42,
                                          8617  label('.sys_drawvline_32')
.sys_drawvline_32:
              1df1 1403  ld   $03,y       8618  ld(hi('NEXTY'),Y)               #32, done
              1df2 e000  jmp  y,$00       8619  jmp(Y,'NEXTY')                  #33,
              1df3 00ee  ld   $ee         8620  ld(-36/2)                       #34,
                                          8621
                                          8622
              1df4 0200  nop              8623  fillers(until=0xff)
              1df5 0200  nop
              1df6 0200  nop
              * 11 times
              1dff 0200  nop              8624  align(0x100, size=0x100)
                                          8625
                                          8626  #-----------------------------------------------------------------------
                                          8627  #       More sys implementations, (0x1E00)
                                          8628  #-----------------------------------------------------------------------
                                          8629
                                          8630  # sys_SpritePattern, sysArgs0,1=src, sysArgs2=dstY, sysArgs3=height/2, sysArgs4,5=patternLut
                                          8631  label('sys_SpritePattern')
sys_SpritePattern:
              1e00 1525  ld   [$25],y     8632  ld([sysArgs+1],Y)               #18, src.hi
              1e01 0d00  ld   [y,x]       8633  ld([Y,X])                       #19,
              1e02 de00  st   [y,x++]     8634  st([Y,Xpp])                     #20, src.lo++
              1e03 1526  ld   [$26],y     8635  ld([sysArgs+2],Y)               #21,
              1e04 caa3  st   [y,$a3]     8636  st([Y,0xA3])                    #22, pixel0
              1e05 1525  ld   [$25],y     8637  ld([sysArgs+1],Y)               #23, src.hi
              1e06 0d00  ld   [y,x]       8638  ld([Y,X])                       #24,
              1e07 de00  st   [y,x++]     8639  st([Y,Xpp])                     #25, src.lo++
              1e08 1526  ld   [$26],y     8640  ld([sysArgs+2],Y)               #26,
              1e09 caa5  st   [y,$a5]     8641  st([Y,0xA5])                    #27, pixel1
              1e0a 1525  ld   [$25],y     8642  ld([sysArgs+1],Y)               #28, src.hi
              1e0b 0d00  ld   [y,x]       8643  ld([Y,X])                       #29,
              1e0c de00  st   [y,x++]     8644  st([Y,Xpp])                     #30, src.lo++
              1e0d 1526  ld   [$26],y     8645  ld([sysArgs+2],Y)               #31,
              1e0e caa7  st   [y,$a7]     8646  st([Y,0xA7])                    #32, pixel2
              1e0f 1525  ld   [$25],y     8647  ld([sysArgs+1],Y)               #33, src.hi
              1e10 0d00  ld   [y,x]       8648  ld([Y,X])                       #34,
              1e11 de00  st   [y,x++]     8649  st([Y,Xpp])                     #35, src.lo++
              1e12 1526  ld   [$26],y     8650  ld([sysArgs+2],Y)               #36,
              1e13 caa9  st   [y,$a9]     8651  st([Y,0xA9])                    #37, pixel3
              1e14 1525  ld   [$25],y     8652  ld([sysArgs+1],Y)               #38, src.hi
              1e15 0d00  ld   [y,x]       8653  ld([Y,X])                       #39,
              1e16 de00  st   [y,x++]     8654  st([Y,Xpp])                     #40, src.lo++
              1e17 1526  ld   [$26],y     8655  ld([sysArgs+2],Y)               #41,
              1e18 caab  st   [y,$ab]     8656  st([Y,0xAB])                    #42, pixel4
              1e19 1525  ld   [$25],y     8657  ld([sysArgs+1],Y)               #43, src.hi
              1e1a 0d00  ld   [y,x]       8658  ld([Y,X])                       #44,
              1e1b de00  st   [y,x++]     8659  st([Y,Xpp])                     #45, src.lo++
              1e1c 1526  ld   [$26],y     8660  ld([sysArgs+2],Y)               #46,
              1e1d caad  st   [y,$ad]     8661  st([Y,0xAD])                    #47, pixel5
              1e1e 1525  ld   [$25],y     8662  ld([sysArgs+1],Y)               #48, src.hi
              1e1f 0d00  ld   [y,x]       8663  ld([Y,X])                       #49,
              1e20 de00  st   [y,x++]     8664  st([Y,Xpp])                     #50, src.lo++
              1e21 1526  ld   [$26],y     8665  ld([sysArgs+2],Y)               #51,
              1e22 caaf  st   [y,$af]     8666  st([Y,0xAF])                    #52, pixel6
              1e23 1525  ld   [$25],y     8667  ld([sysArgs+1],Y)               #53, src.hi
              1e24 0d00  ld   [y,x]       8668  ld([Y,X])                       #54,
              1e25 de00  st   [y,x++]     8669  st([Y,Xpp])                     #55, src.lo++
              1e26 1526  ld   [$26],y     8670  ld([sysArgs+2],Y)               #56,
              1e27 cab1  st   [y,$b1]     8671  st([Y,0xB1])                    #57, pixel7
              1e28 1525  ld   [$25],y     8672  ld([sysArgs+1],Y)               #58, src.hi
              1e29 0d00  ld   [y,x]       8673  ld([Y,X])                       #59,
              1e2a de00  st   [y,x++]     8674  st([Y,Xpp])                     #60, src.lo++
              1e2b 1526  ld   [$26],y     8675  ld([sysArgs+2],Y)               #61,
              1e2c cab3  st   [y,$b3]     8676  st([Y,0xB3])                    #62, pixel8
              1e2d 0126  ld   [$26]       8677  ld([sysArgs+2])                 #63,
              1e2e 8001  adda $01         8678  adda(1)                         #64,
              1e2f c226  st   [$26]       8679  st([sysArgs+2])                 #65, dstY++
              1e30 1525  ld   [$25],y     8680  ld([sysArgs+1],Y)               #66, src.hi
              1e31 0d00  ld   [y,x]       8681  ld([Y,X])                       #67,
              1e32 de00  st   [y,x++]     8682  st([Y,Xpp])                     #68, src.lo++
              1e33 1526  ld   [$26],y     8683  ld([sysArgs+2],Y)               #69,
              1e34 caa3  st   [y,$a3]     8684  st([Y,0xA3])                    #70, pixel9
              1e35 1525  ld   [$25],y     8685  ld([sysArgs+1],Y)               #71, src.hi
              1e36 0d00  ld   [y,x]       8686  ld([Y,X])                       #72,
              1e37 de00  st   [y,x++]     8687  st([Y,Xpp])                     #73, src.lo++
              1e38 1526  ld   [$26],y     8688  ld([sysArgs+2],Y)               #74,
              1e39 caa5  st   [y,$a5]     8689  st([Y,0xA5])                    #75, pixel10
              1e3a 1525  ld   [$25],y     8690  ld([sysArgs+1],Y)               #76, src.hi
              1e3b 0d00  ld   [y,x]       8691  ld([Y,X])                       #77,
              1e3c de00  st   [y,x++]     8692  st([Y,Xpp])                     #78, src.lo++
              1e3d 1526  ld   [$26],y     8693  ld([sysArgs+2],Y)               #79,
              1e3e caa7  st   [y,$a7]     8694  st([Y,0xA7])                    #80, pixel11
              1e3f 1525  ld   [$25],y     8695  ld([sysArgs+1],Y)               #81, src.hi
              1e40 0d00  ld   [y,x]       8696  ld([Y,X])                       #82,
              1e41 de00  st   [y,x++]     8697  st([Y,Xpp])                     #83, src.lo++
              1e42 1526  ld   [$26],y     8698  ld([sysArgs+2],Y)               #84,
              1e43 caa9  st   [y,$a9]     8699  st([Y,0xA9])                    #85, pixel12
              1e44 1525  ld   [$25],y     8700  ld([sysArgs+1],Y)               #86, src.hi
              1e45 0d00  ld   [y,x]       8701  ld([Y,X])                       #87,
              1e46 de00  st   [y,x++]     8702  st([Y,Xpp])                     #88, src.lo++
              1e47 1526  ld   [$26],y     8703  ld([sysArgs+2],Y)               #89,
              1e48 caab  st   [y,$ab]     8704  st([Y,0xAB])                    #90, pixel13
              1e49 1525  ld   [$25],y     8705  ld([sysArgs+1],Y)               #91, src.hi
              1e4a 0d00  ld   [y,x]       8706  ld([Y,X])                       #92,
              1e4b de00  st   [y,x++]     8707  st([Y,Xpp])                     #93, src.lo++
              1e4c 1526  ld   [$26],y     8708  ld([sysArgs+2],Y)               #94,
              1e4d caad  st   [y,$ad]     8709  st([Y,0xAD])                    #95, pixel14
              1e4e 1525  ld   [$25],y     8710  ld([sysArgs+1],Y)               #96, src.hi
              1e4f 0d00  ld   [y,x]       8711  ld([Y,X])                       #97,
              1e50 de00  st   [y,x++]     8712  st([Y,Xpp])                     #98, src.lo++
              1e51 1526  ld   [$26],y     8713  ld([sysArgs+2],Y)               #99,
              1e52 caaf  st   [y,$af]     8714  st([Y,0xAF])                    #100, pixel15
              1e53 1525  ld   [$25],y     8715  ld([sysArgs+1],Y)               #101, src.hi
              1e54 0d00  ld   [y,x]       8716  ld([Y,X])                       #102,
              1e55 de00  st   [y,x++]     8717  st([Y,Xpp])                     #103, src.lo++
              1e56 1526  ld   [$26],y     8718  ld([sysArgs+2],Y)               #104,
              1e57 cab1  st   [y,$b1]     8719  st([Y,0xB1])                    #105, pixel16
              1e58 1525  ld   [$25],y     8720  ld([sysArgs+1],Y)               #106, src.hi
              1e59 0d00  ld   [y,x]       8721  ld([Y,X])                       #107,
              1e5a de00  st   [y,x++]     8722  st([Y,Xpp])                     #108, src.lo++
              1e5b 1526  ld   [$26],y     8723  ld([sysArgs+2],Y)               #109,
              1e5c cab3  st   [y,$b3]     8724  st([Y,0xB3])                    #110, pixel17
              1e5d 0126  ld   [$26]       8725  ld([sysArgs+2])                 #111,
              1e5e 8001  adda $01         8726  adda(1)                         #112,
              1e5f c226  st   [$26]       8727  st([sysArgs+2])                 #113, dstY++
                                          8728
              1e60 0128  ld   [$28]       8729  ld([sysArgs+4])                 #114,
              1e61 8002  adda $02         8730  adda(2)                         #115,
              1e62 d228  st   [$28],x     8731  st([sysArgs+4],X)               #116, patternLut += 2
              1e63 1529  ld   [$29],y     8732  ld([sysArgs+5],Y)               #117,
              1e64 0d00  ld   [y,x]       8733  ld([Y,X])                       #118,
              1e65 de00  st   [y,x++]     8734  st([Y,Xpp])                     #119,
              1e66 c224  st   [$24]       8735  st([sysArgs+0])                 #120, src.lo
              1e67 0d00  ld   [y,x]       8736  ld([Y,X])                       #121,
              1e68 c225  st   [$25]       8737  st([sysArgs+1])                 #122, src.hi
                                          8738
              1e69 0127  ld   [$27]       8739  ld([sysArgs+3])                 #123,
              1e6a a001  suba $01         8740  suba(1)                         #124,
              1e6b c227  st   [$27]       8741  st([sysArgs+3])                 #125, height/2 --
                                          8742  beq('.sys_spritepattern_128')   #126,
              1e6c f073  beq  .sys_spritepattern_128
              1e6d 0116  ld   [$16]       8743  ld([vPC])                       #127,
              1e6e a002  suba $02         8744  suba(2)                         #128,
              1e6f c216  st   [$16]       8745  st([vPC])                       #129, restart
              1e70 1403  ld   $03,y       8746  ld(hi('NEXTY'),Y)               #130,
              1e71 e000  jmp  y,$00       8747  jmp(Y,'NEXTY')                  #131,
              1e72 00bd  ld   $bd         8748  ld(-134/2)                      #132,
                                          8749
                                          8750  label('.sys_spritepattern_128')
.sys_spritepattern_128:
              1e73 1403  ld   $03,y       8751  ld(hi('NEXTY'),Y)               #128,
              1e74 e000  jmp  y,$00       8752  jmp(Y,'NEXTY')                  #129,
              1e75 00be  ld   $be         8753  ld(-132/2)                      #130,
                                          8754
                                          8755
                                          8756  # sys_DrawBullet
                                          8757  label('sys_DrawBullet')
sys_DrawBullet:
              1e76 1583  ld   [$83],y     8758  ld([0x83],Y)                    #18, bulletY
              1e77 0d00  ld   [y,x]       8759  ld([Y,X])                       #19, AC = screen
              1e78 1587  ld   [$87],y     8760  ld([0x87],Y)                    #20, bulletData
              1e79 69b4  xora [y,$b4]     8761  xora([Y,0xB4])                  #21, AC ^= bullet
              1e7a 1583  ld   [$83],y     8762  ld([0x83],Y)                    #22, bulletY
              1e7b de00  st   [y,x++]     8763  st([Y,Xpp])                     #23, screen = AC
                                          8764
              1e7c 0d00  ld   [y,x]       8765  ld([Y,X])                       #24, AC = screen
              1e7d 1587  ld   [$87],y     8766  ld([0x87],Y)                    #25, bulletData
              1e7e 69b5  xora [y,$b5]     8767  xora([Y,0xB5])                  #26, AC ^= bullet
              1e7f 1583  ld   [$83],y     8768  ld([0x83],Y)                    #27, bulletY
              1e80 de00  st   [y,x++]     8769  st([Y,Xpp])                     #28, screen = AC
                                          8770
              1e81 0d00  ld   [y,x]       8771  ld([Y,X])                       #29, AC = screen
              1e82 1587  ld   [$87],y     8772  ld([0x87],Y)                    #30, bulletData
              1e83 69b6  xora [y,$b6]     8773  xora([Y,0xB6])                  #31, AC ^= bullet
              1e84 1583  ld   [$83],y     8774  ld([0x83],Y)                    #32, bulletY
              1e85 de00  st   [y,x++]     8775  st([Y,Xpp])                     #33, screen = AC
                                          8776
              1e86 0d00  ld   [y,x]       8777  ld([Y,X])                       #34, AC = screen
              1e87 1587  ld   [$87],y     8778  ld([0x87],Y)                    #35, bulletData
              1e88 69b7  xora [y,$b7]     8779  xora([Y,0xB7])                  #36, AC ^= bullet
              1e89 1583  ld   [$83],y     8780  ld([0x83],Y)                    #37, bulletY
              1e8a de00  st   [y,x++]     8781  st([Y,Xpp])                     #38, screen = AC
                                          8782
              1e8b 1182  ld   [$82],x     8783  ld([0x82],X)                    #39, bulletX
              1e8c 0183  ld   [$83]       8784  ld([0x83])                      #40,
              1e8d 8001  adda $01         8785  adda(1)                         #41,
              1e8e d683  st   [$83],y     8786  st([0x83],Y)                    #42, bulletY++
                                          8787
              1e8f 0d00  ld   [y,x]       8788  ld([Y,X])                       #43, AC = screen
              1e90 1587  ld   [$87],y     8789  ld([0x87],Y)                    #44, bulletData
              1e91 69b8  xora [y,$b8]     8790  xora([Y,0xB8])                  #45, AC ^= bullet
              1e92 1583  ld   [$83],y     8791  ld([0x83],Y)                    #46, bulletY
              1e93 de00  st   [y,x++]     8792  st([Y,Xpp])                     #47, screen = AC
                                          8793
              1e94 0d00  ld   [y,x]       8794  ld([Y,X])                       #48, AC = screen
              1e95 1587  ld   [$87],y     8795  ld([0x87],Y)                    #49, bulletData
              1e96 69b9  xora [y,$b9]     8796  xora([Y,0xB9])                  #50, AC ^= bullet
              1e97 1583  ld   [$83],y     8797  ld([0x83],Y)                    #51, bulletY
              1e98 de00  st   [y,x++]     8798  st([Y,Xpp])                     #52, screen = AC
                                          8799
              1e99 0d00  ld   [y,x]       8800  ld([Y,X])                       #53, AC = screen
              1e9a 1587  ld   [$87],y     8801  ld([0x87],Y)                    #54, bulletData
              1e9b 69ba  xora [y,$ba]     8802  xora([Y,0xBA])                  #55, AC ^= bullet
              1e9c 1583  ld   [$83],y     8803  ld([0x83],Y)                    #56, bulletY
              1e9d de00  st   [y,x++]     8804  st([Y,Xpp])                     #57, screen = AC
                                          8805
              1e9e 0d00  ld   [y,x]       8806  ld([Y,X])                       #58, AC = screen
              1e9f 1587  ld   [$87],y     8807  ld([0x87],Y)                    #59, bulletData
              1ea0 69bb  xora [y,$bb]     8808  xora([Y,0xBB])                  #60, AC ^= bullet
              1ea1 1583  ld   [$83],y     8809  ld([0x83],Y)                    #61, bulletY
              1ea2 de00  st   [y,x++]     8810  st([Y,Xpp])                     #62, screen = AC
                                          8811
              1ea3 1182  ld   [$82],x     8812  ld([0x82],X)                    #63, bulletX
              1ea4 0183  ld   [$83]       8813  ld([0x83])                      #64,
              1ea5 8001  adda $01         8814  adda(1)                         #65,
              1ea6 d683  st   [$83],y     8815  st([0x83],Y)                    #66, bulletY++
                                          8816
              1ea7 0d00  ld   [y,x]       8817  ld([Y,X])                       #67, AC = screen
              1ea8 1587  ld   [$87],y     8818  ld([0x87],Y)                    #68, bulletData
              1ea9 69bc  xora [y,$bc]     8819  xora([Y,0xBC])                  #69, AC ^= bullet
              1eaa 1583  ld   [$83],y     8820  ld([0x83],Y)                    #70, bulletY
              1eab de00  st   [y,x++]     8821  st([Y,Xpp])                     #71, screen = AC
                                          8822
              1eac 0d00  ld   [y,x]       8823  ld([Y,X])                       #72, AC = screen
              1ead 1587  ld   [$87],y     8824  ld([0x87],Y)                    #73, bulletData
              1eae 69bd  xora [y,$bd]     8825  xora([Y,0xBD])                  #74, AC ^= bullet
              1eaf 1583  ld   [$83],y     8826  ld([0x83],Y)                    #75, bulletY
              1eb0 de00  st   [y,x++]     8827  st([Y,Xpp])                     #76, screen = AC
                                          8828
              1eb1 0d00  ld   [y,x]       8829  ld([Y,X])                       #77, AC = screen
              1eb2 1587  ld   [$87],y     8830  ld([0x87],Y)                    #78, bulletData
              1eb3 69be  xora [y,$be]     8831  xora([Y,0xBE])                  #79, AC ^= bullet
              1eb4 1583  ld   [$83],y     8832  ld([0x83],Y)                    #80, bulletY
              1eb5 de00  st   [y,x++]     8833  st([Y,Xpp])                     #81, screen = AC
                                          8834
              1eb6 0d00  ld   [y,x]       8835  ld([Y,X])                       #82, AC = screen
              1eb7 1587  ld   [$87],y     8836  ld([0x87],Y)                    #83, bulletData
              1eb8 69bf  xora [y,$bf]     8837  xora([Y,0xBF])                  #84, AC ^= bullet
              1eb9 1583  ld   [$83],y     8838  ld([0x83],Y)                    #85, bulletY
              1eba de00  st   [y,x++]     8839  st([Y,Xpp])                     #86, screen = AC
                                          8840
              1ebb 1182  ld   [$82],x     8841  ld([0x82],X)                    #87, bulletX
              1ebc 0183  ld   [$83]       8842  ld([0x83])                      #88,
              1ebd 8001  adda $01         8843  adda(1)                         #89,
              1ebe d683  st   [$83],y     8844  st([0x83],Y)                    #90, bulletY++
                                          8845
              1ebf 0d00  ld   [y,x]       8846  ld([Y,X])                       #91, AC = screen
              1ec0 1587  ld   [$87],y     8847  ld([0x87],Y)                    #92, bulletData
              1ec1 69c0  xora [y,$c0]     8848  xora([Y,0xC0])                  #93, AC ^= bullet
              1ec2 1583  ld   [$83],y     8849  ld([0x83],Y)                    #94, bulletY
              1ec3 de00  st   [y,x++]     8850  st([Y,Xpp])                     #95, screen = AC
                                          8851
              1ec4 0d00  ld   [y,x]       8852  ld([Y,X])                       #96, AC = screen
              1ec5 1587  ld   [$87],y     8853  ld([0x87],Y)                    #97, bulletData
              1ec6 69c1  xora [y,$c1]     8854  xora([Y,0xC1])                  #98, AC ^= bullet
              1ec7 1583  ld   [$83],y     8855  ld([0x83],Y)                    #99, bulletY
              1ec8 de00  st   [y,x++]     8856  st([Y,Xpp])                     #100, screen = AC
                                          8857
              1ec9 0d00  ld   [y,x]       8858  ld([Y,X])                       #101, AC = screen
              1eca 1587  ld   [$87],y     8859  ld([0x87],Y)                    #102, bulletData
              1ecb 69c2  xora [y,$c2]     8860  xora([Y,0xC2])                  #103, AC ^= bullet
              1ecc 1583  ld   [$83],y     8861  ld([0x83],Y)                    #104, bulletY
              1ecd de00  st   [y,x++]     8862  st([Y,Xpp])                     #105, screen = AC
                                          8863
              1ece 0d00  ld   [y,x]       8864  ld([Y,X])                       #106, AC = screen
              1ecf 1587  ld   [$87],y     8865  ld([0x87],Y)                    #107, bulletData
              1ed0 69c3  xora [y,$c3]     8866  xora([Y,0xC3])                  #108, AC ^= bullet
              1ed1 1583  ld   [$83],y     8867  ld([0x83],Y)                    #109, bulletY
              1ed2 de00  st   [y,x++]     8868  st([Y,Xpp])                     #110, screen = AC
                                          8869
              1ed3 019c  ld   [$9c]       8870  ld([0x9C])                      #111, register13
              1ed4 8001  adda $01         8871  adda(1)                         #112,
              1ed5 d29c  st   [$9c],x     8872  st([0x9C],X)                    #113, register13++
              1ed6 159d  ld   [$9d],y     8873  ld([0x9D],Y)                    #114,
              1ed7 0d00  ld   [y,x]       8874  ld([Y,X])                       #115, peek(register13)
              1ed8 c282  st   [$82]       8875  st([0x82])                      #116, bulletX
                                          8876
              1ed9 019e  ld   [$9e]       8877  ld([0x9E])                      #117,
              1eda 8001  adda $01         8878  adda(1)                         #118,
              1edb d29e  st   [$9e],x     8879  st([0x9E],X)                    #119, register14++
              1edc 159f  ld   [$9f],y     8880  ld([0x9F],Y)                    #120,
              1edd 0d00  ld   [y,x]       8881  ld([Y,X])                       #121, peek(register14)
              1ede c283  st   [$83]       8882  st([0x83])                      #122, bulletY
                                          8883
              1edf 01a0  ld   [$a0]       8884  ld([0xA0])                      #123,
              1ee0 8001  adda $01         8885  adda(1)                         #124,
              1ee1 d2a0  st   [$a0],x     8886  st([0xA0],X)                    #125, register15++
              1ee2 15a1  ld   [$a1],y     8887  ld([0xA1],Y)                    #126,
              1ee3 0d00  ld   [y,x]       8888  ld([Y,X])                       #127, peek(register15)
              1ee4 c287  st   [$87]       8889  st([0x87])                      #128, bulletData
                                          8890
              1ee5 019a  ld   [$9a]       8891  ld([0x9A])                      #129,
              1ee6 a001  suba $01         8892  suba(1)                         #130,
                                          8893  beq('.sys_drawbullet_133')      #131,
              1ee7 f0ef  beq  .sys_drawbullet_133
              1ee8 c29a  st   [$9a]       8894  st([0x9A])                      #132, register12--
              1ee9 1403  ld   $03,y       8895  ld(hi('NEXTY'),Y)               #133,
              1eea 0116  ld   [$16]       8896  ld([vPC])                       #134,
              1eeb a002  suba $02         8897  suba(2)                         #135,
              1eec c216  st   [$16]       8898  st([vPC])                       #136, restart
              1eed e000  jmp  y,$00       8899  jmp(Y,'NEXTY')                  #137,
              1eee 00ba  ld   $ba         8900  ld(-140/2)                      #138,
                                          8901  label('.sys_drawbullet_133')
.sys_drawbullet_133:
              1eef 1403  ld   $03,y       8902  ld(hi('REENTER'),Y)             #133,
              1ef0 e0cb  jmp  y,$cb       8903  jmp(Y,'REENTER')                #134,
              1ef1 00bb  ld   $bb         8904  ld(-138/2)                      #135,
                                          8905
                                          8906
              1ef2 0200  nop              8907  fillers(until=0xff)
              1ef3 0200  nop
              1ef4 0200  nop
              * 13 times
              1eff 0200  nop              8908  align(0x100, size=0x100)
                                          8909
                                          8910  #-----------------------------------------------------------------------
                                          8911  #       More sys implementations, (0x1F00)
                                          8912  #-----------------------------------------------------------------------
                                          8913
                                          8914  # sys_CmpByteBounds, 0xB8,B9=src, 0xBA,BB=vPC_bounds, 0xBC,BD=bounds, 0xBE=index,
                                          8915  #                    0xBF=count, output:vAC.lo=index
                                          8916  label('sys_CmpByteBounds')
sys_CmpByteBounds:
              1f00 a001  suba $01         8917  suba(1)                         #18,
                                          8918  bge('.sys_cmpbytebounds_21')    #19,
              1f01 f406  bge  .sys_cmpbytebounds_21
              1f02 c2bf  st   [$bf]       8919  st([0xBF])                      #20, count--
              1f03 1403  ld   $03,y       8920  ld(hi('REENTER'),Y)             #21,
              1f04 e0cb  jmp  y,$cb       8921  jmp(Y,'REENTER')                #22,
              1f05 00f3  ld   $f3         8922  ld(-26/2)                       #23,
                                          8923  label('.sys_cmpbytebounds_21')
.sys_cmpbytebounds_21:
              1f06 01b8  ld   [$b8]       8924  ld([0xB8])                      #21,
              1f07 91be  adda [$be],x     8925  adda([0xBE],X)                  #22,
              1f08 15b9  ld   [$b9],y     8926  ld([0xB9],Y)                    #23,
              1f09 0d00  ld   [y,x]       8927  ld([Y,X])                       #24,
                                          8928  bmi('.sys_cmpbytebounds_27')    #25,
              1f0a e80e  blt  .sys_cmpbytebounds_27
              1f0b a1bc  suba [$bc]       8929  suba([0xBC])                    #26,
                                          8930  bra('.sys_cmpbytebounds_29')    #27,
              1f0c fc10  bra  .sys_cmpbytebounds_29
              1f0d 41bc  ora  [$bc]       8931  ora([0xBC])                     #28,
                                          8932  label('.sys_cmpbytebounds_27')
.sys_cmpbytebounds_27:
              1f0e 21bc  anda [$bc]       8933  anda([0xBC])                    #27,
              1f0f 0200  nop              8934  nop()                           #28,
                                          8935
                                          8936  label('.sys_cmpbytebounds_29')
.sys_cmpbytebounds_29:                    8937  bpl('.sys_cmpbytebounds_31')    #29,
              1f10 f422  bge  .sys_cmpbytebounds_31
              1f11 0d00  ld   [y,x]       8938  ld([Y,X])                       #30,
              1f12 0116  ld   [$16]       8939  ld([vPC])                       #31, < lbounds
              1f13 c21a  st   [$1a]       8940  st([vLR])                       #32, return to SYS call
              1f14 0117  ld   [$17]       8941  ld([vPC+1])                     #33,
              1f15 c21b  st   [$1b]       8942  st([vLR+1])                     #34,
              1f16 01ba  ld   [$ba]       8943  ld([0xBA])                      #35,
              1f17 a002  suba $02         8944  suba(2)                         #36,
              1f18 c216  st   [$16]       8945  st([vPC])                       #37, NEXT adds 2
              1f19 01bb  ld   [$bb]       8946  ld([0xBB])                      #38,
              1f1a c217  st   [$17]       8947  st([vPC+1])                     #39, bounds call address
              1f1b 01be  ld   [$be]       8948  ld([0xBE])                      #40,
              1f1c c218  st   [$18]       8949  st([vAC])                       #41, vAC.lo = index
              1f1d 8001  adda $01         8950  adda(1)                         #42,
              1f1e c2be  st   [$be]       8951  st([0xBE])                      #43, index++
              1f1f 1403  ld   $03,y       8952  ld(hi('NEXTY'),Y)               #44,
              1f20 e000  jmp  y,$00       8953  jmp(Y,'NEXTY')                  #45,
              1f21 00e8  ld   $e8         8954  ld(-48/2)                       #46,
                                          8955
                                          8956  label('.sys_cmpbytebounds_31')
.sys_cmpbytebounds_31:                    8957  bmi('.sys_cmpbytebounds_33')    #31,
              1f22 e826  blt  .sys_cmpbytebounds_33
              1f23 a1bd  suba [$bd]       8958  suba([0xBD])                    #32,
                                          8959  bra('.sys_cmpbytebounds_35')    #33,
              1f24 fc28  bra  .sys_cmpbytebounds_35
              1f25 41bd  ora  [$bd]       8960  ora([0xBD])                     #34,
                                          8961  label('.sys_cmpbytebounds_33')
.sys_cmpbytebounds_33:
              1f26 21bd  anda [$bd]       8962  anda([0xBD])                    #33,
              1f27 0200  nop              8963  nop()                           #34,
                                          8964  label('.sys_cmpbytebounds_35')
.sys_cmpbytebounds_35:                    8965  bmi('.sys_cmpbytebounds_37')    #35,
              1f28 e839  blt  .sys_cmpbytebounds_37
              1f29 0116  ld   [$16]       8966  ld([vPC])                       #36, >= ubounds
              1f2a c21a  st   [$1a]       8967  st([vLR])                       #37, return to SYS call
              1f2b 0117  ld   [$17]       8968  ld([vPC+1])                     #38,
              1f2c c21b  st   [$1b]       8969  st([vLR+1])                     #39,
              1f2d 01ba  ld   [$ba]       8970  ld([0xBA])                      #40,
              1f2e a002  suba $02         8971  suba(2)                         #41,
              1f2f c216  st   [$16]       8972  st([vPC])                       #42, NEXT adds 2
              1f30 01bb  ld   [$bb]       8973  ld([0xBB])                      #43,
              1f31 c217  st   [$17]       8974  st([vPC+1])                     #44, bounds call address
              1f32 01be  ld   [$be]       8975  ld([0xBE])                      #45,
              1f33 c218  st   [$18]       8976  st([vAC])                       #46, vAC.lo = index
              1f34 8001  adda $01         8977  adda(1)                         #47,
              1f35 c2be  st   [$be]       8978  st([0xBE])                      #48, index++
              1f36 1403  ld   $03,y       8979  ld(hi('REENTER'),Y)             #49,
              1f37 e0cb  jmp  y,$cb       8980  jmp(Y,'REENTER')                #50,
              1f38 00e5  ld   $e5         8981  ld(-54/2)                       #51,
                                          8982
                                          8983  label('.sys_cmpbytebounds_37')
.sys_cmpbytebounds_37:
              1f39 a002  suba $02         8984  suba(2)                         #37,
              1f3a c216  st   [$16]       8985  st([vPC])                       #38, restart
              1f3b 01be  ld   [$be]       8986  ld([0xBE])                      #39,
              1f3c 8001  adda $01         8987  adda(1)                         #40,
              1f3d c2be  st   [$be]       8988  st([0xBE])                      #41, index++
              1f3e 1403  ld   $03,y       8989  ld(hi('NEXTY'),Y)               #42,
              1f3f e000  jmp  y,$00       8990  jmp(Y,'NEXTY')                  #43,
              1f40 00e9  ld   $e9         8991  ld(-46/2)                       #44,
                                          8992
                                          8993
                                          8994  # SYS_Reset_88 imolementation
                                          8995  label('sys_Reset_88')
sys_Reset_88: 1f41 c221  st   [$21]       8996  st([romType])                   #18
              1f42 0000  ld   $00         8997  ld(0)                           #19
              1f43 c21c  st   [$1c]       8998  st([vSP])                       #20 vSP
              1f44 c204  st   [$04]       8999  st([vSPH])                      #21 vSPH
              1f45 1401  ld   $01,y       9000  ld(hi('videoTop_v5'),Y)         #22
              1f46 caf9  st   [y,$f9]     9001  st([Y,lo('videoTop_v5')])       #23 Show all 120 pixel lines
              1f47 caf6  st   [y,$f6]     9002  st([Y,vIRQ_v5])                 #24 Disable vIRQ dispatch
              1f48 caf7  st   [y,$f7]     9003  st([Y,vIRQ_v5+1])               #25
              1f49 c22c  st   [$2c]       9004  st([soundTimer])                #26 soundTimer
                                          9005  assert userCode&255 == 0
              1f4a c21a  st   [$1a]       9006  st([vLR])                       #27 vLR
              1f4b 0002  ld   $02         9007  ld(userCode>>8)                 #28
              1f4c c21b  st   [$1b]       9008  st([vLR+1])                     #29
              1f4d 00f6  ld   $f6         9009  ld('nopixels')                  #30 Video mode 3 (fast)
              1f4e c20a  st   [$0a]       9010  st([videoModeB])                #31
              1f4f c20b  st   [$0b]       9011  st([videoModeC])                #32
              1f50 c20c  st   [$0c]       9012  st([videoModeD])                #33
              1f51 00ad  ld   $ad         9013  ld('SYS_Exec_88')               #34 SYS_Exec_88
              1f52 c222  st   [$22]       9014  st([sysFn])                     #35 High byte (remains) 0
              1f53 008d  ld   $8d         9015  ld('Reset')                     #36 Reset.gt1 from EPROM
              1f54 c224  st   [$24]       9016  st([sysArgs+0])                 #37
              1f55 00de  ld   $de         9017  ld(hi('Reset'))                 #38
              1f56 c225  st   [$25]       9018  st([sysArgs+1])                 #39
              1f57 0116  ld   [$16]       9019  ld([vPC])                       #40 Force second SYS call
              1f58 a002  suba $02         9020  suba(2)                         #41
              1f59 c216  st   [$16]       9021  st([vPC])                       #42
              1f5a 1403  ld   $03,y       9022  ld(hi('REENTER'),Y)             #43
              1f5b e0cb  jmp  y,$cb       9023  jmp(Y,'REENTER')                #44
              1f5c 00e8  ld   $e8         9024  ld(-48/2)                       #45
                                          9025
                                          9026
                                          9027  #-----------------------------------------------------------------------
                                          9028  # sys_Divide_u168, x:u8 = x:u16 / y:u8, rem:u8 = x:u16 % y:u8
                                          9029  # sysArgs0,1=x, sysArgs2=y, sysArgs4=count, output : sysArgs0=res, sysArgs1=rem
                                          9030  label('sys_Divide_u168')
sys_Divide_u168:
              1f5d c229  st   [$29]       9031  st([sysArgs+5])                 #18, save x.hi
              1f5e 0128  ld   [$28]       9032  ld([sysArgs+4])                 #19,
              1f5f a001  suba $01         9033  suba(1)                         #20, count--
                                          9034  bge('.sys_divide_u168_23')      #21,
              1f60 f465  bge  .sys_divide_u168_23
              1f61 c228  st   [$28]       9035  st([sysArgs+4])                 #22,
              1f62 1403  ld   $03,y       9036  ld(hi('REENTER'),Y)             #23,
              1f63 e0cb  jmp  y,$cb       9037  jmp(Y,'REENTER')                #24,
              1f64 00f2  ld   $f2         9038  ld(-28/2)                       #25,
                                          9039
                                          9040  label('.sys_divide_u168_23')
.sys_divide_u168_23:
              1f65 0124  ld   [$24]       9041  ld([sysArgs+0])                 #23,
              1f66 3080  anda $80,x       9042  anda(128,X)                     #24,
              1f67 8124  adda [$24]       9043  adda([sysArgs+0])               #25,
              1f68 c224  st   [$24]       9044  st([sysArgs+0])                 #26,
              1f69 0500  ld   [x]         9045  ld([X])                         #27,
              1f6a 8125  adda [$25]       9046  adda([sysArgs+1])               #28,
              1f6b 8125  adda [$25]       9047  adda([sysArgs+1])               #29,
              1f6c c225  st   [$25]       9048  st([sysArgs+1])                 #30, x <<1
                                          9049  bmi('.sys_divide_u168_33')      #31, unsigned compare
              1f6d e872  blt  .sys_divide_u168_33
              1f6e a126  suba [$26]       9050  suba([sysArgs+2])               #32, x.hi - y
              1f6f c21d  st   [$1d]       9051  st([vTmp])                      #33,
                                          9052  bra('.sys_divide_u168_36')      #34,
              1f70 fc75  bra  .sys_divide_u168_36
              1f71 4126  ora  [$26]       9053  ora([sysArgs+2])                #35,
                                          9054  label('.sys_divide_u168_33')
.sys_divide_u168_33:
              1f72 c21d  st   [$1d]       9055  st([vTmp])                      #33,
              1f73 2126  anda [$26]       9056  anda([sysArgs+2])               #34,
              1f74 0200  nop              9057  nop()                           #35,
                                          9058
                                          9059  label('.sys_divide_u168_36')
.sys_divide_u168_36:                      9060  bmi('.sys_divide_u168_38')      #36,
              1f75 e88b  blt  .sys_divide_u168_38
              1f76 011d  ld   [$1d]       9061  ld([vTmp])                      #37, x.hi >= y
              1f77 c225  st   [$25]       9062  st([sysArgs+1])                 #38, x.hi = (x.hi - y) <<8
              1f78 0124  ld   [$24]       9063  ld([sysArgs+0])                 #39,
              1f79 8001  adda $01         9064  adda(1)                         #40, x.lo++
                                          9065  bne('.sys_divide_u168_43')      #41,
              1f7a ec85  bne  .sys_divide_u168_43
              1f7b c224  st   [$24]       9066  st([sysArgs+0])                 #42,
              1f7c 0125  ld   [$25]       9067  ld([sysArgs+1])                 #43,
              1f7d 8001  adda $01         9068  adda(1)                         #44, x.hi++
              1f7e c225  st   [$25]       9069  st([sysArgs+1])                 #45,
              1f7f 0116  ld   [$16]       9070  ld([vPC])                       #46,
              1f80 a002  suba $02         9071  suba(2)                         #47,
              1f81 c216  st   [$16]       9072  st([vPC])                       #48, restart
              1f82 1403  ld   $03,y       9073  ld(hi('REENTER'),Y)             #49,
              1f83 e0cb  jmp  y,$cb       9074  jmp(Y,'REENTER')                #50,
              1f84 00e5  ld   $e5         9075  ld(-54/2)                       #51,
                                          9076  label('.sys_divide_u168_43')
.sys_divide_u168_43:
              1f85 0116  ld   [$16]       9077  ld([vPC])                       #43,
              1f86 a002  suba $02         9078  suba(2)                         #44,
              1f87 c216  st   [$16]       9079  st([vPC])                       #45, restart
              1f88 1403  ld   $03,y       9080  ld(hi('NEXTY'),Y)               #46,
              1f89 e000  jmp  y,$00       9081  jmp(Y,'NEXTY')                  #47,
              1f8a 00e7  ld   $e7         9082  ld(-50/2)                       #48,
                                          9083
                                          9084  label('.sys_divide_u168_38')
.sys_divide_u168_38:
              1f8b 0129  ld   [$29]       9085  ld([sysArgs+5])                 #38,
                                          9086  bpl('.sys_divide_u168_41')      #39, msb(x.hi) = 0
              1f8c f4a2  bge  .sys_divide_u168_41
              1f8d 011d  ld   [$1d]       9087  ld([vTmp])                      #40, x.hi >= y
              1f8e c225  st   [$25]       9088  st([sysArgs+1])                 #41, x.hi = (x.hi - y) <<8
              1f8f 0124  ld   [$24]       9089  ld([sysArgs+0])                 #42,
              1f90 8001  adda $01         9090  adda(1)                         #43, x.lo++
                                          9091  bne('.sys_divide_u168_46')      #44,
              1f91 ec9c  bne  .sys_divide_u168_46
              1f92 c224  st   [$24]       9092  st([sysArgs+0])                 #45,
              1f93 0125  ld   [$25]       9093  ld([sysArgs+1])                 #46,
              1f94 8001  adda $01         9094  adda(1)                         #47, x.hi++
              1f95 c225  st   [$25]       9095  st([sysArgs+1])                 #48,
              1f96 0116  ld   [$16]       9096  ld([vPC])                       #49,
              1f97 a002  suba $02         9097  suba(2)                         #50,
              1f98 c216  st   [$16]       9098  st([vPC])                       #51, restart
              1f99 1403  ld   $03,y       9099  ld(hi('NEXTY'),Y)               #52,
              1f9a e000  jmp  y,$00       9100  jmp(Y,'NEXTY')                  #53,
              1f9b 00e4  ld   $e4         9101  ld(-56/2)                       #54,
                                          9102  label('.sys_divide_u168_46')
.sys_divide_u168_46:
              1f9c 0116  ld   [$16]       9103  ld([vPC])                       #46,
              1f9d a002  suba $02         9104  suba(2)                         #47,
              1f9e c216  st   [$16]       9105  st([vPC])                       #48, restart
              1f9f 1403  ld   $03,y       9106  ld(hi('REENTER'),Y)             #49,
              1fa0 e0cb  jmp  y,$cb       9107  jmp(Y,'REENTER')                #50,
              1fa1 00e5  ld   $e5         9108  ld(-54/2)                       #51,
                                          9109
                                          9110  label('.sys_divide_u168_41')
.sys_divide_u168_41:
              1fa2 0116  ld   [$16]       9111  ld([vPC])                       #41,
              1fa3 a002  suba $02         9112  suba(2)                         #42,
              1fa4 c216  st   [$16]       9113  st([vPC])                       #43, restart
              1fa5 1403  ld   $03,y       9114  ld(hi('NEXTY'),Y)               #44,
              1fa6 e000  jmp  y,$00       9115  jmp(Y,'NEXTY')                  #45,
              1fa7 00e8  ld   $e8         9116  ld(-48/2)                       #46,
                                          9117
                                          9118
              1fa8 0200  nop              9119  fillers(until=0xc0)
              1fa9 0200  nop
              1faa 0200  nop
              * 24 times
                                          9120
                                          9121  # sys_ConvertVTableX, sysArgs0=dst, sysArgs2=offsetX, sysArgs3=accum, sysArgs4=count
                                          9122  label('SYS_ConvertVTableX_66')
SYS_ConvertVTableX_66:
              1fc0 1401  ld   $01,y       9123  ld(1,Y)                         #15, VTable.hi
              1fc1 1126  ld   [$26],x     9124  ld([sysArgs+2],X)               #16, VTable.lo
              1fc2 0d00  ld   [y,x]       9125  ld([Y,X])                       #17, get VTableX
              1fc3 8127  adda [$27]       9126  adda([sysArgs+3])               #18,
              1fc4 1525  ld   [$25],y     9127  ld([sysArgs+1],Y)               #19, dst.hi
              1fc5 1124  ld   [$24],x     9128  ld([sysArgs+0],X)               #20, dst.lo
              1fc6 ce00  st   [y,x]       9129  st([Y,X])                       #21,
              1fc7 c227  st   [$27]       9130  st([sysArgs+3])                 #22, accum
                                          9131
              1fc8 1401  ld   $01,y       9132  ld(1,Y)                         #23
              1fc9 0124  ld   [$24]       9133  ld([sysArgs+0])                 #24,
              1fca 8001  adda $01         9134  adda(1)                         #25,
              1fcb c224  st   [$24]       9135  st([sysArgs+0])                 #26, dst++
              1fcc 0126  ld   [$26]       9136  ld([sysArgs+2])                 #27,
              1fcd 8002  adda $02         9137  adda(2)                         #28,
              1fce d226  st   [$26],x     9138  st([sysArgs+2],X)               #29, offsetX += 2
              1fcf 0d00  ld   [y,x]       9139  ld([Y,X])                       #30, get video table X
              1fd0 8127  adda [$27]       9140  adda([sysArgs+3])               #31,
              1fd1 1525  ld   [$25],y     9141  ld([sysArgs+1],Y)               #32, dst.hi
              1fd2 1124  ld   [$24],x     9142  ld([sysArgs+0],X)               #33, dst.lo
              1fd3 ce00  st   [y,x]       9143  st([Y,X])                       #34,
              1fd4 c227  st   [$27]       9144  st([sysArgs+3])                 #35, accum
                                          9145
              1fd5 1401  ld   $01,y       9146  ld(1,Y)                         #36
              1fd6 0124  ld   [$24]       9147  ld([sysArgs+0])                 #37,
              1fd7 8001  adda $01         9148  adda(1)                         #38,
              1fd8 c224  st   [$24]       9149  st([sysArgs+0])                 #39, dst++
              1fd9 0126  ld   [$26]       9150  ld([sysArgs+2])                 #40,
              1fda 8002  adda $02         9151  adda(2)                         #41,
              1fdb d226  st   [$26],x     9152  st([sysArgs+2],X)               #42, offsetX += 2
              1fdc 0d00  ld   [y,x]       9153  ld([Y,X])                       #43, get video table X
              1fdd 8127  adda [$27]       9154  adda([sysArgs+3])               #44,
              1fde 1525  ld   [$25],y     9155  ld([sysArgs+1],Y)               #45, dst.hi
              1fdf 1124  ld   [$24],x     9156  ld([sysArgs+0],X)               #46, dst.lo
              1fe0 ce00  st   [y,x]       9157  st([Y,X])                       #47,
              1fe1 c227  st   [$27]       9158  st([sysArgs+3])                 #48, accum
                                          9159
              1fe2 0128  ld   [$28]       9160  ld([sysArgs+4])                 #49,
              1fe3 a001  suba $01         9161  suba(1)                         #50,
              1fe4 c228  st   [$28]       9162  st([sysArgs+4])                 #51, count--
                                          9163  beq('.sys_convertvtablex_54')   #52,
              1fe5 f0f2  beq  .sys_convertvtablex_54
              1fe6 0124  ld   [$24]       9164  ld([sysArgs+0])                 #53,
              1fe7 8001  adda $01         9165  adda(1)                         #54,
              1fe8 c224  st   [$24]       9166  st([sysArgs+0])                 #55, dst++
              1fe9 0126  ld   [$26]       9167  ld([sysArgs+2])                 #56,
              1fea 8002  adda $02         9168  adda(2)                         #57,
              1feb c226  st   [$26]       9169  st([sysArgs+2])                 #58, offsetX += 2
              1fec 0116  ld   [$16]       9170  ld([vPC])                       #59,
              1fed a002  suba $02         9171  suba(2)                         #60,
              1fee c216  st   [$16]       9172  st([vPC])                       #61, restart
              1fef 1403  ld   $03,y       9173  ld(hi('NEXTY'),Y)               #62,
              1ff0 e000  jmp  y,$00       9174  jmp(Y,'NEXTY')                  #63,
              1ff1 00df  ld   $df         9175  ld(-66/2)                       #64,
                                          9176  label('.sys_convertvtablex_54')
.sys_convertvtablex_54:
              1ff2 1403  ld   $03,y       9177  ld(hi('NEXTY'),Y)               #54,
              1ff3 e000  jmp  y,$00       9178  jmp(Y,'NEXTY')                  #55,
              1ff4 00e3  ld   $e3         9179  ld(-58/2)                       #56,
                                          9180
                                          9181
              1ff5 0200  nop              9182  fillers(until=0xff)
              1ff6 0200  nop
              1ff7 0200  nop
              * 10 times
              1fff 0200  nop              9183  align(0x100, size=0x100)
                                          9184
                                          9185  #-----------------------------------------------------------------------
                                          9186  #       More sys implementations, (0x2000)
                                          9187  #-----------------------------------------------------------------------
                                          9188
                                          9189  # SYS_DrawSpriteH_vX_140
                                          9190  label('SYS_DrawSpriteH_vX_140')
SYS_DrawSpriteH_vX_140:
              2000 0186  ld   [$86]       9191  ld([0x86])                      #15, spriteEnable
                                          9192  bmi('.sys_drawspriteh_18')      #16,
              2001 e89b  blt  .sys_drawspriteh_18
              2002 0183  ld   [$83]       9193  ld([0x83])                      #17, spriteY
              2003 8183  adda [$83]       9194  adda([0x83])                    #18, spriteY
              2004 1200  ld   ac,x        9195  ld(AC,X)                        #19,
              2005 1401  ld   $01,y       9196  ld(1,Y)                         #20, 0x0100
              2006 0d00  ld   [y,x]       9197  ld([Y,X])                       #21, VTableY
              2007 c285  st   [$85]       9198  st([0x85])                      #22,
              2008 1525  ld   [$25],y     9199  ld([sysArgs+1],Y)               #23, VTableAbsX.hi
              2009 0124  ld   [$24]       9200  ld([sysArgs+0])                 #24, VTableAbsX.lo
              200a 8183  adda [$83]       9201  adda([0x83])                    #25, spriteY
              200b 1200  ld   ac,x        9202  ld(AC,X)                        #26,
              200c 0182  ld   [$82]       9203  ld([0x82])                      #27, spriteX
              200d 8d00  adda [y,x]       9204  adda([Y,X])                     #28, VTableX offset, (absolute)
              200e d284  st   [$84],x     9205  st([0x84],X)                    #29,
              200f 1585  ld   [$85],y     9206  ld([0x85],Y)                    #30,
                                          9207
              2010 0d00  ld   [y,x]       9208  ld([Y,X])                       #31, get back0
              2011 1587  ld   [$87],y     9209  ld([0x87],Y)                    #32, spriteData
              2012 caa2  st   [y,$a2]     9210  st([Y,0xA2])                    #33, save back0
              2013 09a3  ld   [y,$a3]     9211  ld([Y,0xA3])                    #34, load pixel0
              2014 1585  ld   [$85],y     9212  ld([0x85],Y)                    #35, spriteY
              2015 ec18  bne  $2018       9213  bne(pc()+3)                     #36, colourkey
              2016 fc19  bra  $2019       9214  bra(pc()+3)                     #37,
              2017 0d00  ld   [y,x]       9215  ld([Y,X])                       #38,
              2018 0200  nop              9216  nop()                           #38, (!)
              2019 de00  st   [y,x++]     9217  st([Y,Xpp])                     #39, draw pixel0
                                          9218
              201a 0d00  ld   [y,x]       9219  ld([Y,X])                       #40, get back1
              201b 1587  ld   [$87],y     9220  ld([0x87],Y)                    #41, spriteData
              201c caa4  st   [y,$a4]     9221  st([Y,0xA4])                    #42, save back1
              201d 09a5  ld   [y,$a5]     9222  ld([Y,0xA5])                    #43, load pixel1
              201e 1585  ld   [$85],y     9223  ld([0x85],Y)                    #44, spriteY
              201f ec22  bne  $2022       9224  bne(pc()+3)                     #45, colourkey
              2020 fc23  bra  $2023       9225  bra(pc()+3)                     #46,
              2021 0d00  ld   [y,x]       9226  ld([Y,X])                       #47,
              2022 0200  nop              9227  nop()                           #47, (!)
              2023 de00  st   [y,x++]     9228  st([Y,Xpp])                     #48, draw pixel1
                                          9229
              2024 0d00  ld   [y,x]       9230  ld([Y,X])                       #49, get back2
              2025 1587  ld   [$87],y     9231  ld([0x87],Y)                    #50, spriteData
              2026 caa6  st   [y,$a6]     9232  st([Y,0xA6])                    #51, save back2
              2027 09a7  ld   [y,$a7]     9233  ld([Y,0xA7])                    #52, load pixel2
              2028 1585  ld   [$85],y     9234  ld([0x85],Y)                    #53, spriteY
              2029 ec2c  bne  $202c       9235  bne(pc()+3)                     #54, colourkey
              202a fc2d  bra  $202d       9236  bra(pc()+3)                     #55,
              202b 0d00  ld   [y,x]       9237  ld([Y,X])                       #56,
              202c 0200  nop              9238  nop()                           #56, (!)
              202d de00  st   [y,x++]     9239  st([Y,Xpp])                     #57, draw pixel2
                                          9240
              202e 0d00  ld   [y,x]       9241  ld([Y,X])                       #58, get back3
              202f 1587  ld   [$87],y     9242  ld([0x87],Y)                    #59, spriteData
              2030 caa8  st   [y,$a8]     9243  st([Y,0xA8])                    #60, save back3
              2031 09a9  ld   [y,$a9]     9244  ld([Y,0xA9])                    #61, load pixel3
              2032 1585  ld   [$85],y     9245  ld([0x85],Y)                    #62, spriteY
              2033 ec36  bne  $2036       9246  bne(pc()+3)                     #63, colourkey
              2034 fc37  bra  $2037       9247  bra(pc()+3)                     #64,
              2035 0d00  ld   [y,x]       9248  ld([Y,X])                       #65,
              2036 0200  nop              9249  nop()                           #65, (!)
              2037 de00  st   [y,x++]     9250  st([Y,Xpp])                     #66, draw pixel3
                                          9251
              2038 0d00  ld   [y,x]       9252  ld([Y,X])                       #67, get back4
              2039 1587  ld   [$87],y     9253  ld([0x87],Y)                    #68, spriteData
              203a caaa  st   [y,$aa]     9254  st([Y,0xAA])                    #69, save back4
              203b 09ab  ld   [y,$ab]     9255  ld([Y,0xAB])                    #70, load pixel4
              203c 1585  ld   [$85],y     9256  ld([0x85],Y)                    #71, spriteY
              203d ec40  bne  $2040       9257  bne(pc()+3)                     #72, colourkey
              203e fc41  bra  $2041       9258  bra(pc()+3)                     #73,
              203f 0d00  ld   [y,x]       9259  ld([Y,X])                       #74,
              2040 0200  nop              9260  nop()                           #74, (!)
              2041 de00  st   [y,x++]     9261  st([Y,Xpp])                     #75, draw pixel4
                                          9262
              2042 0d00  ld   [y,x]       9263  ld([Y,X])                       #76, get back5
              2043 1587  ld   [$87],y     9264  ld([0x87],Y)                    #77, spriteData
              2044 caac  st   [y,$ac]     9265  st([Y,0xAC])                    #78, save back5
              2045 09ad  ld   [y,$ad]     9266  ld([Y,0xAD])                    #79, load pixel5
              2046 1585  ld   [$85],y     9267  ld([0x85],Y)                    #80, spriteY
              2047 ec4a  bne  $204a       9268  bne(pc()+3)                     #81, colourkey
              2048 fc4b  bra  $204b       9269  bra(pc()+3)                     #82,
              2049 0d00  ld   [y,x]       9270  ld([Y,X])                       #83,
              204a 0200  nop              9271  nop()                           #83, (!)
              204b de00  st   [y,x++]     9272  st([Y,Xpp])                     #84, draw pixel5
                                          9273
              204c 0d00  ld   [y,x]       9274  ld([Y,X])                       #85, get back6
              204d 1587  ld   [$87],y     9275  ld([0x87],Y)                    #86, spriteData
              204e caae  st   [y,$ae]     9276  st([Y,0xAE])                    #87, save back6
              204f 09af  ld   [y,$af]     9277  ld([Y,0xAF])                    #88, load pixel6
              2050 1585  ld   [$85],y     9278  ld([0x85],Y)                    #89, spriteY
              2051 ec54  bne  $2054       9279  bne(pc()+3)                     #90, colourkey
              2052 fc55  bra  $2055       9280  bra(pc()+3)                     #91,
              2053 0d00  ld   [y,x]       9281  ld([Y,X])                       #92,
              2054 0200  nop              9282  nop()                           #92, (!)
              2055 de00  st   [y,x++]     9283  st([Y,Xpp])                     #93, draw pixel6
                                          9284
              2056 0d00  ld   [y,x]       9285  ld([Y,X])                       #94, get back7
              2057 1587  ld   [$87],y     9286  ld([0x87],Y)                    #95, spriteData
              2058 cab0  st   [y,$b0]     9287  st([Y,0xB0])                    #96, save back7
              2059 09b1  ld   [y,$b1]     9288  ld([Y,0xB1])                    #97, load pixel7
              205a 1585  ld   [$85],y     9289  ld([0x85],Y)                    #98, spriteY
              205b ec5e  bne  $205e       9290  bne(pc()+3)                     #99, colourkey
              205c fc5f  bra  $205f       9291  bra(pc()+3)                     #100,
              205d 0d00  ld   [y,x]       9292  ld([Y,X])                       #101,
              205e 0200  nop              9293  nop()                           #101, (!)
              205f de00  st   [y,x++]     9294  st([Y,Xpp])                     #102, draw pixel7
                                          9295
              2060 0d00  ld   [y,x]       9296  ld([Y,X])                       #103, get back8
              2061 1587  ld   [$87],y     9297  ld([0x87],Y)                    #104, spriteData
              2062 cab2  st   [y,$b2]     9298  st([Y,0xB2])                    #105, save back8
              2063 09b3  ld   [y,$b3]     9299  ld([Y,0xB3])                    #106, load pixel8
              2064 1585  ld   [$85],y     9300  ld([0x85],Y)                    #107, spriteY
              2065 ec68  bne  $2068       9301  bne(pc()+3)                     #108, colourkey
              2066 fc69  bra  $2069       9302  bra(pc()+3)                     #109,
              2067 0d00  ld   [y,x]       9303  ld([Y,X])                       #110,
              2068 0200  nop              9304  nop()                           #110, (!)
              2069 de00  st   [y,x++]     9305  st([Y,Xpp])                     #111, draw pixel8
                                          9306
              206a 1587  ld   [$87],y     9307  ld([0x87],Y)                    #112, spriteData
              206b 0184  ld   [$84]       9308  ld([0x84])                      #113, spriteX
              206c caa0  st   [y,$a0]     9309  st([Y,0xA0])                    #114, spriteOldX
              206d 0185  ld   [$85]       9310  ld([0x85])                      #115, spriteY
              206e caa1  st   [y,$a1]     9311  st([Y,0xA1])                    #116, spriteOldY
              206f 0186  ld   [$86]       9312  ld([0x86])                      #117,
              2070 a001  suba $01         9313  suba(1)                         #118,
              2071 c286  st   [$86]       9314  st([0x86])                      #119, scanLines--
                                          9315  beq('.sys_drawspriteh_122')     #120,
              2072 f07f  beq  .sys_drawspriteh_122
              2073 0183  ld   [$83]       9316  ld([0x83])                      #121, spriteY
              2074 8001  adda $01         9317  adda(1)                         #122,
              2075 c283  st   [$83]       9318  st([0x83])                      #123, spriteY++
              2076 0187  ld   [$87]       9319  ld([0x87])                      #124,
              2077 8001  adda $01         9320  adda(1)                         #125,
              2078 c287  st   [$87]       9321  st([0x87])                      #126, spriteData++
              2079 0116  ld   [$16]       9322  ld([vPC])                       #127,
              207a a002  suba $02         9323  suba(2)                         #128,
              207b c216  st   [$16]       9324  st([vPC])                       #129, restart
              207c 1403  ld   $03,y       9325  ld(hi('NEXTY'),Y)               #130,
              207d e000  jmp  y,$00       9326  jmp(Y,'NEXTY')                  #131,
              207e 00bd  ld   $bd         9327  ld(-134/2)                      #132,
                                          9328
                                          9329  label('.sys_drawspriteh_122')
.sys_drawspriteh_122:
              207f 01a0  ld   [$a0]       9330  ld([0xA0])                      #122,
              2080 8004  adda $04         9331  adda(4)                         #123,
              2081 d2a0  st   [$a0],x     9332  st([0xA0],X)                    #124, register15 += 4
              2082 15a1  ld   [$a1],y     9333  ld([0xA1],Y)                    #125,
              2083 0d00  ld   [y,x]       9334  ld([Y,X])                       #126, peek(register15 + 0)
              2084 c282  st   [$82]       9335  st([0x82])                      #127, spriteX
              2085 de00  st   [y,x++]     9336  st([Y,Xpp])                     #128, X++
              2086 0d00  ld   [y,x]       9337  ld([Y,X])                       #129, peek(register15 + 1)
              2087 c283  st   [$83]       9338  st([0x83])                      #130, spriteY
              2088 de00  st   [y,x++]     9339  st([Y,Xpp])                     #131, X++
              2089 0d00  ld   [y,x]       9340  ld([Y,X])                       #132, peek(register15 + 2)
              208a c286  st   [$86]       9341  st([0x86])                      #133, spriteHeight
              208b de00  st   [y,x++]     9342  st([Y,Xpp])                     #134, X++
              208c 0d00  ld   [y,x]       9343  ld([Y,X])                       #135, peek(register15 + 3)
              208d c287  st   [$87]       9344  st([0x87])                      #136, spriteData
              208e 0188  ld   [$88]       9345  ld([0x88])                      #137,
              208f a001  suba $01         9346  suba(1)                         #138,
              2090 c288  st   [$88]       9347  st([0x88])                      #139, register3--, spriteCount
                                          9348  beq('.sys_drawspriteh_142')     #140,
              2091 f098  beq  .sys_drawspriteh_142
              2092 0116  ld   [$16]       9349  ld([vPC])                       #141,
              2093 a002  suba $02         9350  suba(2)                         #142,
              2094 c216  st   [$16]       9351  st([vPC])                       #143, restart
              2095 1403  ld   $03,y       9352  ld(hi('NEXTY'),Y)               #144,
              2096 e000  jmp  y,$00       9353  jmp(Y,'NEXTY')                  #145,
              2097 00b6  ld   $b6         9354  ld(-148/2)                      #146,
                                          9355  label('.sys_drawspriteh_142')
.sys_drawspriteh_142:
              2098 1403  ld   $03,y       9356  ld(hi('NEXTY'),Y)               #142,
              2099 e000  jmp  y,$00       9357  jmp(Y,'NEXTY')                  #143,
              209a 00b7  ld   $b7         9358  ld(-146/2)                      #144,
                                          9359
                                          9360  label('.sys_drawspriteh_18')
.sys_drawspriteh_18:
              209b 01a0  ld   [$a0]       9361  ld([0xA0])                      #18,
              209c 8004  adda $04         9362  adda(4)                         #19,
              209d d2a0  st   [$a0],x     9363  st([0xA0],X)                    #20, register15 += 4
              209e 15a1  ld   [$a1],y     9364  ld([0xA1],Y)                    #21,
              209f 0d00  ld   [y,x]       9365  ld([Y,X])                       #22, peek(register15 + 0)
              20a0 c282  st   [$82]       9366  st([0x82])                      #23, spriteX
              20a1 de00  st   [y,x++]     9367  st([Y,Xpp])                     #24, X++
              20a2 0d00  ld   [y,x]       9368  ld([Y,X])                       #25, peek(register15 + 1)
              20a3 c283  st   [$83]       9369  st([0x83])                      #26, spriteY
              20a4 de00  st   [y,x++]     9370  st([Y,Xpp])                     #27, X++
              20a5 0d00  ld   [y,x]       9371  ld([Y,X])                       #28, peek(register15 + 2)
              20a6 c286  st   [$86]       9372  st([0x86])                      #29, spriteHeight
              20a7 de00  st   [y,x++]     9373  st([Y,Xpp])                     #30, X++
              20a8 0d00  ld   [y,x]       9374  ld([Y,X])                       #31, peek(register15 + 3)
              20a9 c287  st   [$87]       9375  st([0x87])                      #32, spriteData
              20aa 0188  ld   [$88]       9376  ld([0x88])                      #33,
              20ab a001  suba $01         9377  suba(1)                         #34,
              20ac c288  st   [$88]       9378  st([0x88])                      #35, register3--, spriteCount
                                          9379  beq('.sys_drawspriteh_38')      #36,
              20ad f0b4  beq  .sys_drawspriteh_38
              20ae 0116  ld   [$16]       9380  ld([vPC])                       #37,
              20af a002  suba $02         9381  suba(2)                         #38,
              20b0 c216  st   [$16]       9382  st([vPC])                       #39, restart
              20b1 1403  ld   $03,y       9383  ld(hi('NEXTY'),Y)               #40,
              20b2 e000  jmp  y,$00       9384  jmp(Y,'NEXTY')                  #41,
              20b3 00ea  ld   $ea         9385  ld(-44/2)                       #42,
                                          9386  label('.sys_drawspriteh_38')
.sys_drawspriteh_38:
              20b4 1403  ld   $03,y       9387  ld(hi('NEXTY'),Y)               #38,
              20b5 e000  jmp  y,$00       9388  jmp(Y,'NEXTY')                  #39,
              20b6 00eb  ld   $eb         9389  ld(-42/2)                       #40,
                                          9390
                                          9391
              20b7 0200  nop              9392  fillers(until=0xc0)
              20b8 0200  nop
              20b9 0200  nop
              * 9 times
                                          9393
                                          9394  # SYS_ScrollVTableY_vX_38, sysArgs0=scrollOffset, sysArgs1=scanCount, sysArgs2,3=videoTable
                                          9395  label('SYS_ScrollVTableY_vX_38')
SYS_ScrollVTableY_vX_38:
              20c0 0125  ld   [$25]       9396  ld([sysArgs+1])                 #15,
              20c1 a001  suba $01         9397  suba(1)                         #16,
              20c2 c225  st   [$25]       9398  st([sysArgs+1])                 #17, scanCount--
                                          9399  bge('.sys_scrollvty_20')        #18,
              20c3 f4c8  bge  .sys_scrollvty_20
              20c4 1527  ld   [$27],y     9400  ld([sysArgs+3],Y)               #19, VTable.hi
              20c5 1403  ld   $03,y       9401  ld(hi('NEXTY'),Y)               #20,
              20c6 e000  jmp  y,$00       9402  jmp(Y,'NEXTY')                  #21,
              20c7 00f4  ld   $f4         9403  ld(-24/2)                       #22,
                                          9404  label('.sys_scrollvty_20')
.sys_scrollvty_20:
              20c8 1126  ld   [$26],x     9405  ld([sysArgs+2],X)               #20, VTable.low
              20c9 0d00  ld   [y,x]       9406  ld([Y,X])                       #21, scanline = peek [VTable]
              20ca 8124  adda [$24]       9407  adda([sysArgs+0])               #22, scanline += scrollOffset
              20cb a07f  suba $7f         9408  suba(0x7f)                      #23, scanline -= 0x7f
                                          9409  ble('.sys_scrollvty_26')        #24,
              20cc f8d9  ble  .sys_scrollvty_26
              20cd 807f  adda $7f         9410  adda(0x7F)                      #25, original scanline
              20ce 8088  adda $88         9411  adda(0x88)                      #26, overflow into the range 0x08 to 0x7f
              20cf ce00  st   [y,x]       9412  st([Y,X])                       #27,
              20d0 0126  ld   [$26]       9413  ld([sysArgs+2])                 #28,
              20d1 8002  adda $02         9414  adda(2)                         #29,
              20d2 c226  st   [$26]       9415  st([sysArgs+2])                 #30,
              20d3 0116  ld   [$16]       9416  ld([vPC])                       #31,
              20d4 a002  suba $02         9417  suba(2)                         #32,
              20d5 c216  st   [$16]       9418  st([vPC])                       #33, restart
              20d6 1403  ld   $03,y       9419  ld(hi('NEXTY'),Y)               #34,
              20d7 e000  jmp  y,$00       9420  jmp(Y,'NEXTY')                  #35,
              20d8 00ed  ld   $ed         9421  ld(-38/2)                       #36,
                                          9422
                                          9423  label('.sys_scrollvty_26')
.sys_scrollvty_26:
              20d9 ce00  st   [y,x]       9424  st([Y,X])                       #26,
              20da 0126  ld   [$26]       9425  ld([sysArgs+2])                 #27,
              20db 8002  adda $02         9426  adda(2)                         #28,
              20dc c226  st   [$26]       9427  st([sysArgs+2])                 #29,
              20dd 0116  ld   [$16]       9428  ld([vPC])                       #30,
              20de a002  suba $02         9429  suba(2)                         #31,
              20df c216  st   [$16]       9430  st([vPC])                       #32, restart
              20e0 1403  ld   $03,y       9431  ld(hi('REENTER'),Y)             #33,
              20e1 e0cb  jmp  y,$cb       9432  jmp(Y,'REENTER')                #34,
              20e2 00ed  ld   $ed         9433  ld(-38/2)                       #35,
                                          9434
                                          9435
              20e3 0200  nop              9436  fillers(until=0xff)
              20e4 0200  nop
              20e5 0200  nop
              * 28 times
              20ff 0200  nop              9437  align(0x100, size=0x100)
                                          9438
                                          9439  #-----------------------------------------------------------------------
                                          9440  #       More sys implementations, (0x2100)
                                          9441  #-----------------------------------------------------------------------
                                          9442  # SYS_RestoreSprite_vX_126
                                          9443  label('SYS_RestoreSprite_vX_126')
SYS_RestoreSprite_vX_126:
              2100 0186  ld   [$86]       9444  ld([0x86])                      #15, spriteEnable
                                          9445  bmi('.sys_restoresprite_18')    #16,
              2101 e877  blt  .sys_restoresprite_18
              2102 1587  ld   [$87],y     9446  ld([0x87],Y)                    #17, spriteData
              2103 09a0  ld   [y,$a0]     9447  ld([Y,0xA0])                    #18, spriteOldX
              2104 1200  ld   ac,x        9448  ld(AC,X)                        #19,
              2105 09a1  ld   [y,$a1]     9449  ld([Y,0xA1])                    #20, spriteOldY
              2106 c21d  st   [$1d]       9450  st([vTmp])                      #21,
                                          9451
              2107 09a2  ld   [y,$a2]     9452  ld([Y,0xA2])                    #22, load back0
              2108 151d  ld   [$1d],y     9453  ld([vTmp],Y)                    #23, spriteOldY
              2109 de00  st   [y,x++]     9454  st([Y,Xpp])                     #24, restore back0
                                          9455
              210a 1587  ld   [$87],y     9456  ld([0x87],Y)                    #25, spriteData
              210b 09a4  ld   [y,$a4]     9457  ld([Y,0xA4])                    #26, load back1
              210c 151d  ld   [$1d],y     9458  ld([vTmp],Y)                    #27, spriteOldY
              210d de00  st   [y,x++]     9459  st([Y,Xpp])                     #28, restore back1
                                          9460
              210e 1587  ld   [$87],y     9461  ld([0x87],Y)                    #29, spriteData
              210f 09a6  ld   [y,$a6]     9462  ld([Y,0xA6])                    #30, load back2
              2110 151d  ld   [$1d],y     9463  ld([vTmp],Y)                    #31, spriteOldY
              2111 de00  st   [y,x++]     9464  st([Y,Xpp])                     #32, restore back2
                                          9465
              2112 1587  ld   [$87],y     9466  ld([0x87],Y)                    #33, spriteData
              2113 09a8  ld   [y,$a8]     9467  ld([Y,0xA8])                    #34, load back3
              2114 151d  ld   [$1d],y     9468  ld([vTmp],Y)                    #35, spriteOldY
              2115 de00  st   [y,x++]     9469  st([Y,Xpp])                     #36, restore back3
                                          9470
              2116 1587  ld   [$87],y     9471  ld([0x87],Y)                    #37, spriteData
              2117 09aa  ld   [y,$aa]     9472  ld([Y,0xAA])                    #38, load back4
              2118 151d  ld   [$1d],y     9473  ld([vTmp],Y)                    #39, spriteOldY
              2119 de00  st   [y,x++]     9474  st([Y,Xpp])                     #40, restore back4
                                          9475
              211a 1587  ld   [$87],y     9476  ld([0x87],Y)                    #41, spriteData
              211b 09ac  ld   [y,$ac]     9477  ld([Y,0xAC])                    #42, load back5
              211c 151d  ld   [$1d],y     9478  ld([vTmp],Y)                    #43, spriteOldY
              211d de00  st   [y,x++]     9479  st([Y,Xpp])                     #44, restore back5
                                          9480
              211e 1587  ld   [$87],y     9481  ld([0x87],Y)                    #45, spriteData
              211f 09ae  ld   [y,$ae]     9482  ld([Y,0xAE])                    #46, load back6
              2120 151d  ld   [$1d],y     9483  ld([vTmp],Y)                    #47, spriteOldY
              2121 de00  st   [y,x++]     9484  st([Y,Xpp])                     #48, restore back6
                                          9485
              2122 1587  ld   [$87],y     9486  ld([0x87],Y)                    #49, spriteData
              2123 09b0  ld   [y,$b0]     9487  ld([Y,0xB0])                    #50, load back7
              2124 151d  ld   [$1d],y     9488  ld([vTmp],Y)                    #51, spriteOldY
              2125 de00  st   [y,x++]     9489  st([Y,Xpp])                     #52, restore back7
                                          9490
              2126 1587  ld   [$87],y     9491  ld([0x87],Y)                    #53, spriteData
              2127 09b2  ld   [y,$b2]     9492  ld([Y,0xB2])                    #54, load back8
              2128 151d  ld   [$1d],y     9493  ld([vTmp],Y)                    #55, spriteOldY
              2129 de00  st   [y,x++]     9494  st([Y,Xpp])                     #56, restore back8
                                          9495
              212a 0187  ld   [$87]       9496  ld([0x87])                      #57,
              212b 8001  adda $01         9497  adda(1)                         #58,
              212c d687  st   [$87],y     9498  st([0x87],Y)                    #59, spriteData++
                                          9499
              212d 09a0  ld   [y,$a0]     9500  ld([Y,0xA0])                    #60, spriteOldX
              212e 1200  ld   ac,x        9501  ld(AC,X)                        #61,
              212f 09a1  ld   [y,$a1]     9502  ld([Y,0xA1])                    #62, spriteOldY
              2130 c21d  st   [$1d]       9503  st([vTmp])                      #63,
                                          9504
              2131 09a2  ld   [y,$a2]     9505  ld([Y,0xA2])                    #64, load back0
              2132 151d  ld   [$1d],y     9506  ld([vTmp],Y)                    #65, spriteOldY
              2133 de00  st   [y,x++]     9507  st([Y,Xpp])                     #66, restore back0
                                          9508
              2134 1587  ld   [$87],y     9509  ld([0x87],Y)                    #67, spriteData
              2135 09a4  ld   [y,$a4]     9510  ld([Y,0xA4])                    #68, load back1
              2136 151d  ld   [$1d],y     9511  ld([vTmp],Y)                    #69, spriteOldY
              2137 de00  st   [y,x++]     9512  st([Y,Xpp])                     #70, restore back1
                                          9513
              2138 1587  ld   [$87],y     9514  ld([0x87],Y)                    #71, spriteData
              2139 09a6  ld   [y,$a6]     9515  ld([Y,0xA6])                    #72, load back2
              213a 151d  ld   [$1d],y     9516  ld([vTmp],Y)                    #73, spriteOldY
              213b de00  st   [y,x++]     9517  st([Y,Xpp])                     #74, restore back2
                                          9518
              213c 1587  ld   [$87],y     9519  ld([0x87],Y)                    #75, spriteData
              213d 09a8  ld   [y,$a8]     9520  ld([Y,0xA8])                    #76, load back3
              213e 151d  ld   [$1d],y     9521  ld([vTmp],Y)                    #77, spriteOldY
              213f de00  st   [y,x++]     9522  st([Y,Xpp])                     #78, restore back3
                                          9523
              2140 1587  ld   [$87],y     9524  ld([0x87],Y)                    #79, spriteData
              2141 09aa  ld   [y,$aa]     9525  ld([Y,0xAA])                    #80, load back4
              2142 151d  ld   [$1d],y     9526  ld([vTmp],Y)                    #81, spriteOldY
              2143 de00  st   [y,x++]     9527  st([Y,Xpp])                     #82, restore back4
                                          9528
              2144 1587  ld   [$87],y     9529  ld([0x87],Y)                    #83, spriteData
              2145 09ac  ld   [y,$ac]     9530  ld([Y,0xAC])                    #84, load back5
              2146 151d  ld   [$1d],y     9531  ld([vTmp],Y)                    #85, spriteOldY
              2147 de00  st   [y,x++]     9532  st([Y,Xpp])                     #86, restore back5
                                          9533
              2148 1587  ld   [$87],y     9534  ld([0x87],Y)                    #87, spriteData
              2149 09ae  ld   [y,$ae]     9535  ld([Y,0xAE])                    #88, load back6
              214a 151d  ld   [$1d],y     9536  ld([vTmp],Y)                    #89, spriteOldY
              214b de00  st   [y,x++]     9537  st([Y,Xpp])                     #90, restore back6
                                          9538
              214c 1587  ld   [$87],y     9539  ld([0x87],Y)                    #91, spriteData
              214d 09b0  ld   [y,$b0]     9540  ld([Y,0xB0])                    #92, load back7
              214e 151d  ld   [$1d],y     9541  ld([vTmp],Y)                    #93, spriteOldY
              214f de00  st   [y,x++]     9542  st([Y,Xpp])                     #94, restore back7
                                          9543
              2150 1587  ld   [$87],y     9544  ld([0x87],Y)                    #95, spriteData
              2151 09b2  ld   [y,$b2]     9545  ld([Y,0xB2])                    #96, load back8
              2152 151d  ld   [$1d],y     9546  ld([vTmp],Y)                    #97, spriteOldY
              2153 de00  st   [y,x++]     9547  st([Y,Xpp])                     #98, restore back8
                                          9548
              2154 0186  ld   [$86]       9549  ld([0x86])                      #99,
              2155 a002  suba $02         9550  suba(2)                         #100,
              2156 c286  st   [$86]       9551  st([0x86])                      #101, scanLines -= 2
                                          9552  beq('.sys_restoresprite_104')   #102,
              2157 f061  beq  .sys_restoresprite_104
              2158 0187  ld   [$87]       9553  ld([0x87])                      #103,
              2159 8001  adda $01         9554  adda(1)                         #104,
              215a c287  st   [$87]       9555  st([0x87])                      #105, spriteData++
              215b 0116  ld   [$16]       9556  ld([vPC])                       #106,
              215c a002  suba $02         9557  suba(2)                         #107,
              215d c216  st   [$16]       9558  st([vPC])                       #108, restart
              215e 1403  ld   $03,y       9559  ld(hi('REENTER'),Y)             #109,
              215f e0cb  jmp  y,$cb       9560  jmp(Y,'REENTER')                #110,
              2160 00c7  ld   $c7         9561  ld(-114/2)                      #111,
                                          9562  label('.sys_restoresprite_104')
.sys_restoresprite_104:
              2161 01a0  ld   [$a0]       9563  ld([0xA0])                      #104,
              2162 a004  suba $04         9564  suba(4)                         #105,
              2163 d2a0  st   [$a0],x     9565  st([0xA0],X)                    #106, register15 -= 4
              2164 15a1  ld   [$a1],y     9566  ld([0xA1],Y)                    #107,
              2165 0d00  ld   [y,x]       9567  ld([Y,X])                       #108, peek(register15 + 2)
              2166 c286  st   [$86]       9568  st([0x86])                      #109, spriteHeight
              2167 de00  st   [y,x++]     9569  st([Y,Xpp])                     #110, X++
              2168 0d00  ld   [y,x]       9570  ld([Y,X])                       #111, peek(register15 + 3)
              2169 c287  st   [$87]       9571  st([0x87])                      #112, spriteData
              216a 0188  ld   [$88]       9572  ld([0x88])                      #113,
              216b a001  suba $01         9573  suba(1)                         #114,
              216c c288  st   [$88]       9574  st([0x88])                      #115, numSprites--
                                          9575  beq('.sys_restoresprite_118')   #116,
              216d f074  beq  .sys_restoresprite_118
              216e 0116  ld   [$16]       9576  ld([vPC])                       #117,
              216f a002  suba $02         9577  suba(2)                         #118,
              2170 c216  st   [$16]       9578  st([vPC])                       #119, restart
              2171 1403  ld   $03,y       9579  ld(hi('NEXTY'),Y)               #120,
              2172 e000  jmp  y,$00       9580  jmp(Y,'NEXTY')                  #121,
              2173 00c2  ld   $c2         9581  ld(-124/2)                      #122,
                                          9582  label('.sys_restoresprite_118')
.sys_restoresprite_118:
              2174 1403  ld   $03,y       9583  ld(hi('NEXTY'),Y)               #118,
              2175 e000  jmp  y,$00       9584  jmp(Y,'NEXTY')                  #119,
              2176 00c3  ld   $c3         9585  ld(-122/2)                      #120,
                                          9586
                                          9587  label('.sys_restoresprite_18')
.sys_restoresprite_18:
              2177 01a0  ld   [$a0]       9588  ld([0xA0])                      #18,
              2178 a004  suba $04         9589  suba(4)                         #19,
              2179 d2a0  st   [$a0],x     9590  st([0xA0],X)                    #20, register15 -= 4
              217a 15a1  ld   [$a1],y     9591  ld([0xA1],Y)                    #21,
              217b 0d00  ld   [y,x]       9592  ld([Y,X])                       #22, peek(register15 + 2)
              217c c286  st   [$86]       9593  st([0x86])                      #23, spriteHeight
              217d de00  st   [y,x++]     9594  st([Y,Xpp])                     #24, X++
              217e 0d00  ld   [y,x]       9595  ld([Y,X])                       #25, peek(register15 + 3)
              217f c287  st   [$87]       9596  st([0x87])                      #26, spriteData
              2180 0188  ld   [$88]       9597  ld([0x88])                      #27,
              2181 a001  suba $01         9598  suba(1)                         #28,
              2182 c288  st   [$88]       9599  st([0x88])                      #29, numSprites--
                                          9600  beq('.sys_restoresprite_32')    #30,
              2183 f08a  beq  .sys_restoresprite_32
              2184 0116  ld   [$16]       9601  ld([vPC])                       #31,
              2185 a002  suba $02         9602  suba(2)                         #32,
              2186 c216  st   [$16]       9603  st([vPC])                       #33, restart
              2187 1403  ld   $03,y       9604  ld(hi('NEXTY'),Y)               #34,
              2188 e000  jmp  y,$00       9605  jmp(Y,'NEXTY')                  #35,
              2189 00ed  ld   $ed         9606  ld(-38/2)                       #36,
                                          9607  label('.sys_restoresprite_32')
.sys_restoresprite_32:
              218a 1403  ld   $03,y       9608  ld(hi('NEXTY'),Y)               #32,
              218b e000  jmp  y,$00       9609  jmp(Y,'NEXTY')                  #33,
              218c 00ee  ld   $ee         9610  ld(-36/2)                       #34,
                                          9611
                                          9612
              218d 0200  nop              9613  fillers(until=0xa0)
              218e 0200  nop
              218f 0200  nop
              * 19 times
                                          9614
                                          9615  # SYS_ScrollRectVTableY_vX_44, sysArgs0=scrollOffset, sysArgs1=scanCount, sysArgs2,3=videoTable,
                                          9616  #                              sysArgs4,5=scrollStart,scrollEnd
                                          9617  label('SYS_ScrollRectVTableY_vX_44')
SYS_ScrollRectVTableY_vX_44:
              21a0 0125  ld   [$25]       9618  ld([sysArgs+1])                 #15,
              21a1 a001  suba $01         9619  suba(1)                         #16,
              21a2 c225  st   [$25]       9620  st([sysArgs+1])                 #17, scanCount--
                                          9621  bge('.sys_scrollrectvty_20')    #18,
              21a3 f4a8  bge  .sys_scrollrectvty_20
              21a4 1527  ld   [$27],y     9622  ld([sysArgs+3],Y)               #19, VTable.hi
              21a5 1403  ld   $03,y       9623  ld(hi('NEXTY'),Y)               #20,
              21a6 e000  jmp  y,$00       9624  jmp(Y,'NEXTY')                  #21,
              21a7 00f4  ld   $f4         9625  ld(-24/2)                       #22,
                                          9626  label('.sys_scrollrectvty_20')
.sys_scrollrectvty_20:
              21a8 1126  ld   [$26],x     9627  ld([sysArgs+2],X)               #20, VTable.low
              21a9 0d00  ld   [y,x]       9628  ld([Y,X])                       #21, scanline = peek [VTable]
              21aa 8124  adda [$24]       9629  adda([sysArgs+0])               #22, scanline += scrollOffset
              21ab c21d  st   [$1d]       9630  st([vTmp])                      #23,
              21ac a128  suba [$28]       9631  suba([sysArgs+4])               #24,
                                          9632  bge('.sys_scrollrectvty_27')    #25,
              21ad f4b9  bge  .sys_scrollrectvty_27
              21ae 8129  adda [$29]       9633  adda([sysArgs+5])               #26,
              21af ce00  st   [y,x]       9634  st([Y,X])                       #27,
              21b0 0126  ld   [$26]       9635  ld([sysArgs+2])                 #28,
              21b1 8002  adda $02         9636  adda(2)                         #29,
              21b2 c226  st   [$26]       9637  st([sysArgs+2])                 #30,
              21b3 0116  ld   [$16]       9638  ld([vPC])                       #31,
              21b4 a002  suba $02         9639  suba(2)                         #32,
              21b5 c216  st   [$16]       9640  st([vPC])                       #33, restart
              21b6 1403  ld   $03,y       9641  ld(hi('NEXTY'),Y)               #34,
              21b7 e000  jmp  y,$00       9642  jmp(Y,'NEXTY')                  #35,
              21b8 00ed  ld   $ed         9643  ld(-38/2)                       #36,
                                          9644
                                          9645  label('.sys_scrollrectvty_27')
.sys_scrollrectvty_27:
              21b9 011d  ld   [$1d]       9646  ld([vTmp])                      #27,
              21ba a129  suba [$29]       9647  suba([sysArgs+5])               #28,
                                          9648  blt('.sys_scrollrectvty_31')    #29,
              21bb e8c7  blt  .sys_scrollrectvty_31
              21bc 8128  adda [$28]       9649  adda([sysArgs+4])               #30,
              21bd ce00  st   [y,x]       9650  st([Y,X])                       #31,
              21be 0126  ld   [$26]       9651  ld([sysArgs+2])                 #32,
              21bf 8002  adda $02         9652  adda(2)                         #33,
              21c0 c226  st   [$26]       9653  st([sysArgs+2])                 #34,
              21c1 0116  ld   [$16]       9654  ld([vPC])                       #35,
              21c2 a002  suba $02         9655  suba(2)                         #36,
              21c3 c216  st   [$16]       9656  st([vPC])                       #37, restart
              21c4 1403  ld   $03,y       9657  ld(hi('NEXTY'),Y)               #38,
              21c5 e000  jmp  y,$00       9658  jmp(Y,'NEXTY')                  #39,
              21c6 00eb  ld   $eb         9659  ld(-42/2)                       #40,
                                          9660
                                          9661  label('.sys_scrollrectvty_31')
.sys_scrollrectvty_31:
              21c7 011d  ld   [$1d]       9662  ld([vTmp])                      #31,
              21c8 ce00  st   [y,x]       9663  st([Y,X])                       #32,
              21c9 0126  ld   [$26]       9664  ld([sysArgs+2])                 #33,
              21ca 8002  adda $02         9665  adda(2)                         #34,
              21cb c226  st   [$26]       9666  st([sysArgs+2])                 #35,
              21cc 0116  ld   [$16]       9667  ld([vPC])                       #36,
              21cd a002  suba $02         9668  suba(2)                         #37,
              21ce c216  st   [$16]       9669  st([vPC])                       #38, restart
              21cf 1403  ld   $03,y       9670  ld(hi('REENTER'),Y)             #39,
              21d0 e0cb  jmp  y,$cb       9671  jmp(Y,'REENTER')                #40,
              21d1 00ea  ld   $ea         9672  ld(-44/2)                       #41,
                                          9673
                                          9674
              21d2 0200  nop              9675  fillers(until=0xff)
              21d3 0200  nop
              21d4 0200  nop
              * 45 times
                                          9676
                                          9677  #-----------------------------------------------------------------------
                                          9678  #       PREFX3 instruction page, (0x2200), PREFIX ARG1 OPCODE ARG0
                                          9679  #-----------------------------------------------------------------------
                                          9680  # Original idea by lb3361, see https://forum.gigatron.io/viewtopic.php?p=2099#p2099
                                          9681  #
                                          9682  label('PREFX3_PAGE')
PREFX3_PAGE:  21ff fc03  bra  $2203       9683  bra('.next2')                   #0 Enter at '.next2' (so no startup overhead)
                                          9684  # --- Page boundary ---
                                          9685  align(0x100,size=0x100)
              2200 1517  ld   [$17],y     9686  ld([vPC+1],Y)                   #1
                                          9687
                                          9688  # Fetch next instruction and execute it, but only if there are sufficient
                                          9689  # ticks left for the slowest instruction.
              2201 8115  adda [$15]       9690  adda([vTicks])                  #0 Track elapsed ticks (actually counting down: AC<0)
              2202 e80b  blt  $220b       9691  blt('EXIT')                     #1 Escape near time out
              2203 c215  st   [$15]       9692  st([vTicks])                    #2
              2204 1116  ld   [$16],x     9693  ld([vPC],X)                     #3 PREFIX+ARG1 is 2 bytes, vPC has been incremented by 2
              2205 0200  nop              9694  nop()                           #4
              2206 c002  st   $02,[$02]   9695  st(vCpuSelect,[vCpuSelect])     #5 Reset to default vCPU page
              2207 0d00  ld   [y,x]       9696  ld([Y,X])                       #6 Fetch opcode (actually a branch target)
              2208 de00  st   [y,x++]     9697  st([Y,Xpp])                     #7 Just X++
              2209 fe00  bra  ac          9698  bra(AC)                         #8 Dispatch
              220a 0d00  ld   [y,x]       9699  ld([Y,X])                       #9 Prefetch operand
                                          9700
                                          9701  # Resync with video driver and transfer control
              220b 800f  adda $0f         9702  adda(maxTicks)                  #3
              220c e40c  bgt  $220c       9703  bgt(pc()&255)                   #4 Resync
              220d a001  suba $01         9704  suba(1)                         #5
              220e 1401  ld   $01,y       9705  ld(hi('vBlankStart'),Y)         #6
              220f e11e  jmp  y,[$1e]     9706  jmp(Y,[vReturn])                #7 To video driver
              2210 0000  ld   $00         9707  ld(0)                           #8 AC should be 0 already. Still..
                                          9708  assert vCPU_overhead ==          9
                                          9709
                                          9710  # pc = 0x2211, Opcode = 0x11
                                          9711  # Instruction STB2: Store vAC.lo into 16bit immediate address, 22 + 20 cycles
                                          9712  # Original idea by lb3361, see https://forum.gigatron.io/viewtopic.php?p=2135#p2135
                                          9713  label('STB2')
STB2:         2211 1425  ld   $25,y       9714  ld(hi('stb2#13'),Y)             #10
              2212 e000  jmp  y,$00       9715  jmp(Y,'stb2#13')                #11
              2213 1200  ld   ac,x        9716  ld(AC,X)                        #12
                                          9717
                                          9718  # pc = 0x2214, Opcode = 0x14
                                          9719  # Instruction STW2: Store vAC into 16bit immediate address, 22 + 22 cycles
                                          9720  # Original idea by lb3361, see https://forum.gigatron.io/viewtopic.php?p=2135#p2135
                                          9721  label('STW2')
STW2:         2214 1425  ld   $25,y       9722  ld(hi('stw2#13'),Y)             #10
              2215 e006  jmp  y,$06       9723  jmp(Y,'stw2#13')                #11
              2216 1200  ld   ac,x        9724  ld(AC,X)                        #12
                                          9725
                                          9726  # pc = 0x2217, Opcode = 0x17
                                          9727  # Instruction XCHGB: Exchange two zero byte variables, 22 + 28 cycles
                                          9728  label('XCHGB')
XCHGB:        2217 1425  ld   $25,y       9729  ld(hi('xchgb#13'),Y)            #10
              2218 e00e  jmp  y,$0e       9730  jmp(Y,'xchgb#13')               #11
                                          9731  # dummy                         #12
                                          9732  #
                                          9733  # pc = 0x2219, Opcode = 0x19
                                          9734  # Instruction MOVW: Move 16bits from src zero page var to dst zero page var, 22 + 30 cycles
                                          9735  label('MOVW')
MOVW:         2219 1425  ld   $25,y       9736  ld(hi('movw#13'),Y)             #10
              221a e03f  jmp  y,$3f       9737  jmp(Y,'movw#13')                #11
                                          9738  # dummy                         #12
                                          9739  #
                                          9740  # pc = 0x221b, Opcode = 0x1b
                                          9741  # Instruction ADDWI: vAC += immediate 16bit value, 22 + 28 cycles
                                          9742  label('ADDWI')
ADDWI:        221b 1425  ld   $25,y       9743  ld(hi('addwi#13'),Y)            #10 #12
              221c e04f  jmp  y,$4f       9744  jmp(Y,'addwi#13')               #11
                                          9745  # dummy                         #12
                                          9746  #
                                          9747  # pc = 0x221d, Opcode = 0x1d
                                          9748  # Instruction SUBWI: vAC -= immediate 16bit value, 22 + 28 cycles
                                          9749  label('SUBWI')
SUBWI:        221d 1425  ld   $25,y       9750  ld(hi('subwi#13'),Y)            #10 #12
              221e e06a  jmp  y,$6a       9751  jmp(Y,'subwi#13')               #11
                                          9752  # dummy                         #12
                                          9753  #
                                          9754  # pc = 0x221f, Opcode = 0x1f
                                          9755  # Instruction ANDWI: vAC &= immediate 16bit value, 22 + 22 cycles
                                          9756  label('ANDWI')
ANDWI:        221f 1425  ld   $25,y       9757  ld(hi('andwi#13'),Y)            #10 #12
              2220 e082  jmp  y,$82       9758  jmp(Y,'andwi#13')               #11
                                          9759  # dummy                         #12
                                          9760  #
                                          9761  # pc = 0x2221, Opcode = 0x21
                                          9762  # Instruction ORWI: vAC |= immediate 16bit value, 22 + 22 cycles
                                          9763  label('ORWI')
ORWI:         2221 1425  ld   $25,y       9764  ld(hi('orwi#13'),Y)             #10 #12
              2222 e08a  jmp  y,$8a       9765  jmp(Y,'orwi#13')                #11
                                          9766  # dummy                         #12
                                          9767  #
                                          9768  # pc = 0x2223, Opcode = 0x23
                                          9769  # Instruction XORWI: vAC ^= immediate 16bit value, 22 + 22 cycles
                                          9770  label('XORWI')
XORWI:        2223 1425  ld   $25,y       9771  ld(hi('xorwi#13'),Y)            #10 #12
              2224 e092  jmp  y,$92       9772  jmp(Y,'xorwi#13')               #11
                                          9773  # dummy                         #12
                                          9774  #
                                          9775  # pc = 0x2225, Opcode = 0x25
                                          9776  # Instruction LDPX: Load Pixel, <address var>, <colour var>, 22 + 30 cycles
                                          9777  label('LDPX')
LDPX:         2225 1425  ld   $25,y       9778  ld(hi('ldpx#13'),Y)             #10 #12
              2226 e09a  jmp  y,$9a       9779  jmp(Y,'ldpx#13')                #11
              2227 c21d  st   [$1d]       9780  st([vTmp])                      #12
                                          9781
                                          9782  # pc = 0x2228, Opcode = 0x28
                                          9783  # Instruction STPX: Store Pixel, <address var>, <colour var>, 22 + 30 cycles
                                          9784  label('STPX')
STPX:         2228 1400  ld   $00,y       9785  ld(hi('stpx#13'),Y)             #10
              2229 e061  jmp  y,$61       9786  jmp(Y,'stpx#13')                #11
              222a 1200  ld   ac,x        9787  ld(AC,X)                        #12
                                          9788
                                          9789  # pc = 0x222b, Opcode = 0x2b
                                          9790  # Instruction CONDI: chooses immediate operand based on condition, (vAC == 0), 22 + 26 cycles
                                          9791  label('CONDI')
CONDI:        222b 1425  ld   $25,y       9792  ld(hi('condi#13'),Y)            #10
              222c e0aa  jmp  y,$aa       9793  jmp(Y,'condi#13')               #11
                                          9794  # dummy                         #12
                                          9795  #
                                          9796  # pc = 0x222d, Opcode = 0x2d
                                          9797  # Instruction CONDB: chooses zero page byte var based on condition, (vAC == 0), 22 + 26 cycles
                                          9798  label('CONDB')
CONDB:        222d 1425  ld   $25,y       9799  ld(hi('condb#13'),Y)            #10 #12
              222e e0b7  jmp  y,$b7       9800  jmp(Y,'condb#13')               #11
              222f 1200  ld   ac,x        9801  ld(AC,X)                        #12
                                          9802
                                          9803  # pc = 0x2230, Opcode = 0x30
                                          9804  # Instruction CONDIB: chooses between imm and zero page byte var based on condition, (vAC == 0), 22 + 26 cycles
                                          9805  label('CONDIB')
CONDIB:       2230 1425  ld   $25,y       9806  ld(hi('condib#13'),Y)           #10
              2231 e0c6  jmp  y,$c6       9807  jmp(Y,'condib#13')              #11
              2232 c21d  st   [$1d]       9808  st([vTmp])                      #12
                                          9809
                                          9810  # pc = 0x2233, Opcode = 0x33
                                          9811  # Instruction CONDBI: chooses between zero page byte var and imm based on condition, (vAC == 0), 22 + 26 cycles
                                          9812  label('CONDBI')
CONDBI:       2233 1425  ld   $25,y       9813  ld(hi('condbi#13'),Y)           #10
              2234 e0d3  jmp  y,$d3       9814  jmp(Y,'condbi#13')              #11
                                          9815  # dummy                         #12
                                          9816  #
                                          9817  # pc = 0x2235, Opcode = 0x35
                                          9818  # Instruction XCHGW: Exchange two zero word variables, 22 + 46 cycles, destroys vAC
                                          9819  label('XCHGW')
XCHGW:        2235 1425  ld   $25,y       9820  ld(hi('xchgw#13'),Y)            #10 #12
              2236 e01c  jmp  y,$1c       9821  jmp(Y,'xchgw#13')               #11
              2237 c22a  st   [$2a]       9822  st([sysArgs+6])                 #12 var1
                                          9823
                                          9824  # pc = 0x2238, Opcode = 0x38
                                          9825  # Instruction OSCPX:
                                          9826  label('OSCPX')
OSCPX:        2238 1428  ld   $28,y       9827  ld(hi('oscpx#13'),Y)            #10
              2239 e073  jmp  y,$73       9828  jmp(Y,'oscpx#13')               #11
                                          9829  # dummy                         #12
                                          9830  #
                                          9831  # pc = 0x223a, Opcode = 0x3a
                                          9832  # Instruction SWAPB: Swap two bytes in memory, 22 + 46 cycles
                                          9833  label('SWAPB')
SWAPB:        223a 1429  ld   $29,y       9834  ld(hi('swapb#13'),Y)            #10 #12
              223b e093  jmp  y,$93       9835  jmp(Y,'swapb#13')               #11
              223c 1200  ld   ac,x        9836  ld(AC,X)                        #12 var1
                                          9837  #
                                          9838  # pc = 0x223d, Opcode = 0x3d
                                          9839  # Instruction SWAPW: Swap two words in memory, 22 + 58 cycles
                                          9840  label('SWAPW')
SWAPW:        223d 1429  ld   $29,y       9841  ld(hi('swapw#13'),Y)            #10
              223e e0b8  jmp  y,$b8       9842  jmp(Y,'swapw#13')               #11
              223f 1200  ld   ac,x        9843  ld(AC,X)                        #12 var1
                                          9844
                                          9845  # pc = 0x2240, Opcode = 0x40
                                          9846  # Instruction NEEKA: Peek <n> bytes from [vAC] into [var], 22 + 34*n + 24 cycles
                                          9847  label('NEEKA')
NEEKA:        2240 142a  ld   $2a,y       9848  ld(hi('neeka#13'),Y)            #10
              2241 e06e  jmp  y,$6e       9849  jmp(Y,'neeka#13')               #11
              2242 c22a  st   [$2a]       9850  st([sysArgs+6])                 #12 var
                                          9851
                                          9852  # pc = 0x2243, Opcode = 0x43
                                          9853  # Instruction NOKEA: Poke <n> bytes from [var] into [vAC], 22 + 34*n + 24 cycles
                                          9854  label('NOKEA')
NOKEA:        2243 142a  ld   $2a,y       9855  ld(hi('nokea#13'),Y)            #10
              2244 e08a  jmp  y,$8a       9856  jmp(Y,'nokea#13')               #11
              2245 c22a  st   [$2a]       9857  st([sysArgs+6])                 #12 var
                                          9858
                                          9859  # pc = 0x2246, Opcode = 0x46
                                          9860  # Instruction ADDVL: Add two 32bit zero page vars, dst += src, 22 + 78 cycles
                                          9861  label('ADDVL')
ADDVL:        2246 142b  ld   $2b,y       9862  ld(hi('addvl#13'),Y)            #10
              2247 e02f  jmp  y,$2f       9863  jmp(Y,'addvl#13')               #11
              2248 d22a  st   [$2a],x     9864  st([sysArgs+6],X)               #12 src var
                                          9865
                                          9866  # pc = 0x2249, Opcode = 0x49
                                          9867  # Instruction SUBVL: Subtract two 32bit zero page vars, dst -= src, 22 + 74 cycles
                                          9868  label('SUBVL')
SUBVL:        2249 142b  ld   $2b,y       9869  ld(hi('subvl#13'),Y)            #10
              224a e079  jmp  y,$79       9870  jmp(Y,'subvl#13')               #11
              224b d22a  st   [$2a],x     9871  st([sysArgs+6],X)               #12 src var
                                          9872
                                          9873  # pc = 0x224c, Opcode = 0x4c
                                          9874  # Instruction ANDVL: And two 32bit zero page vars, dst &= src, 22 + 46 cycles
                                          9875  label('ANDVL')
ANDVL:        224c 142b  ld   $2b,y       9876  ld(hi('andvl#13'),Y)            #10
              224d e0c5  jmp  y,$c5       9877  jmp(Y,'andvl#13')               #11
              224e 1200  ld   ac,x        9878  ld(AC,X)                        #12 src var
                                          9879
                                          9880  # pc = 0x224f, Opcode = 0x4f
                                          9881  # Instruction ORVL: Or two 32bit zero page vars, dst |= src, 22 + 46 cycles
                                          9882  label('ORVL')
ORVL:         224f 142c  ld   $2c,y       9883  ld(hi('orvl#13'),Y)             #10
              2250 e000  jmp  y,$00       9884  jmp(Y,'orvl#13')                #11
              2251 1200  ld   ac,x        9885  ld(AC,X)                        #12 src var
                                          9886
                                          9887  # pc = 0x2252, Opcode = 0x52
                                          9888  # Instruction XORVL: Xor two 32bit zero page vars, dst ^= src, 22 + 76 cycles
                                          9889  label('XORVL')
XORVL:        2252 142c  ld   $2c,y       9890  ld(hi('xorvl#13'),Y)            #10
              2253 e024  jmp  y,$24       9891  jmp(Y,'xorvl#13')               #11
              2254 1200  ld   ac,x        9892  ld(AC,X)                        #12 src var
                                          9893
                                          9894  # pc = 0x2255, Opcode = 0x55
                                          9895  # Instruction JEQL: 22 + 40 cycles
                                          9896  label('JEQL')
JEQL:         2255 142d  ld   $2d,y       9897  ld(hi('jeql#13'),Y)             #10
              2256 e000  jmp  y,$00       9898  jmp(Y,'jeql#13')                #11
              2257 c22a  st   [$2a]       9899  st([sysArgs+6])                 #12 jump.hi
                                          9900
                                          9901  # pc = 0x2258, Opcode = 0x58
                                          9902  # Instruction JNEL: 22 + 40 cycles
                                          9903  label('JNEL')
JNEL:         2258 142d  ld   $2d,y       9904  ld(hi('jnel#13'),Y)             #10
              2259 e022  jmp  y,$22       9905  jmp(Y,'jnel#13')                #11
              225a c22a  st   [$2a]       9906  st([sysArgs+6])                 #12 jump.hi
                                          9907
                                          9908  # pc = 0x225B, Opcode = 0x5B
                                          9909  # Instruction JLTL: 22 + 26 cycles
                                          9910  label('JLTL')
JLTL:         225b 142d  ld   $2d,y       9911  ld(hi('jltl#13'),Y)             #10
              225c e044  jmp  y,$44       9912  jmp(Y,'jltl#13')                #11
              225d c22a  st   [$2a]       9913  st([sysArgs+6])                 #12 jump.hi
                                          9914
                                          9915  # pc = 0x225E, Opcode = 0x5E
                                          9916  # Instruction JGTL: 22 + 42 cycles
                                          9917  label('JGTL')
JGTL:         225e 142d  ld   $2d,y       9918  ld(hi('jgtl#13'),Y)             #10
              225f e053  jmp  y,$53       9919  jmp(Y,'jgtl#13')                #11
              2260 c22a  st   [$2a]       9920  st([sysArgs+6])                 #12 jump.hi
                                          9921
                                          9922  # pc = 0x2261, Opcode = 0x61
                                          9923  # Instruction JLEL: 22 + 42 cycles
                                          9924  label('JLEL')
JLEL:         2261 142d  ld   $2d,y       9925  ld(hi('jlel#13'),Y)             #10
              2262 e07a  jmp  y,$7a       9926  jmp(Y,'jlel#13')                #11
              2263 c22a  st   [$2a]       9927  st([sysArgs+6])                 #12 jump.hi
                                          9928
                                          9929  # pc = 0x2264, Opcode = 0x64
                                          9930  # Instruction JGEL: 22 + 26 cycles
                                          9931  label('JGEL')
JGEL:         2264 142d  ld   $2d,y       9932  ld(hi('jgel#13'),Y)             #10
              2265 e0a5  jmp  y,$a5       9933  jmp(Y,'jgel#13')                #11
              2266 c22a  st   [$2a]       9934  st([sysArgs+6])                 #12 jump.hi
                                          9935
                                          9936  # pc = 0x2267, Opcode = 0x67
                                          9937  # Instruction ANDBI: And immediate byte with byte var, result in byte var, 22 + 20 cycles
                                          9938  label('ANDBI')
ANDBI:        2267 142e  ld   $2e,y       9939  ld(hi('andbi#13'),Y)            #10 #12
              2268 e000  jmp  y,$00       9940  jmp(Y,'andbi#13')               #11
              2269 1200  ld   ac,x        9941  ld(AC,X)                        #12 address of var
                                          9942
                                          9943  # pc = 0x226A, Opcode = 0x6A
                                          9944  # Instruction ORBI: OR immediate byte with byte var, result in byte var, 22 + 20 cycles
                                          9945  label('ORBI')
ORBI:         226a 142e  ld   $2e,y       9946  ld(hi('orbi#13'),Y)             #10 #12
              226b e006  jmp  y,$06       9947  jmp(Y,'orbi#13')                #11
              226c 1200  ld   ac,x        9948  ld(AC,X)                        #12 address of var
                                          9949
                                          9950  # pc = 0x226D, Opcode = 0x6D
                                          9951  # Instruction XORBI: var.lo ^= imm, 22 + 20 cycles
                                          9952  label('XORBI')
XORBI:        226d 142e  ld   $2e,y       9953  ld(hi('xorbi#13'),Y)            #10 #12
              226e e00c  jmp  y,$0c       9954  jmp(Y,'xorbi#13')               #11
              226f 1200  ld   ac,x        9955  ld(AC,X)                        #12 address of var
                                          9956
                                          9957
                                          9958  # SYS calls and instruction implementations rely on these
              2270 0200  nop              9959  fillers(until=0xca)
              2271 0200  nop
              2272 0200  nop
              * 90 times
              22ca 00f2  ld   $f2         9960  ld(-28/2)                       #25
              22cb fc01  bra  $2201       9961  bra('NEXT')                     #26 Return from SYS calls
              22cc 1517  ld   [$17],y     9962  ld([vPC+1],Y)                   #27
                                          9963
                                          9964
              22cd 0200  nop              9965  fillers(until=0xff)
              22ce 0200  nop
              22cf 0200  nop
              * 50 times
                                          9966
                                          9967  #-----------------------------------------------------------------------
                                          9968  #       PREFX2 instruction page, (0x2300), PREFIX ARG0 OPCODE
                                          9969  #-----------------------------------------------------------------------
                                          9970  #
                                          9971  label('PREFX2_PAGE')
PREFX2_PAGE:  22ff fc03  bra  $2303       9972  bra('.next2')                   #0 Enter at '.next2' (so no startup overhead)
                                          9973  # --- Page boundary ---
                                          9974  align(0x100,size=0x100)
              2300 1517  ld   [$17],y     9975  ld([vPC+1],Y)                   #1
                                          9976
                                          9977  # Fetch next instruction and execute it, but only if there are sufficient
                                          9978  # ticks left for the slowest instruction.
              2301 8115  adda [$15]       9979  adda([vTicks])                  #0 Track elapsed ticks (actually counting down: AC<0)
              2302 e80b  blt  $230b       9980  blt('EXIT')                     #1 Escape near time out
              2303 c215  st   [$15]       9981  st([vTicks])                    #2
              2304 0116  ld   [$16]       9982  ld([vPC])                       #3 PREFIX+ARG0 is 2 bytes, vPC has been incremented by 1
              2305 9001  adda $01,x       9983  adda(1,X)                       #4 point to opcode
              2306 c002  st   $02,[$02]   9984  st(vCpuSelect,[vCpuSelect])     #5 Reset to default vCPU page
              2307 0d00  ld   [y,x]       9985  ld([Y,X])                       #6 Fetch opcode (actually a branch target)
              2308 de00  st   [y,x++]     9986  st([Y,Xpp])                     #7 Just X++
              2309 fe00  bra  ac          9987  bra(AC)                         #8 Dispatch
              230a 012b  ld   [$2b]       9988  ld([sysArgs+7])                 #9 Operand
                                          9989
                                          9990  # Resync with video driver and transfer control
              230b 800f  adda $0f         9991  adda(maxTicks)                  #3
              230c e40c  bgt  $230c       9992  bgt(pc()&255)                   #4 Resync
              230d a001  suba $01         9993  suba(1)                         #5
              230e 1401  ld   $01,y       9994  ld(hi('vBlankStart'),Y)         #6
              230f e11e  jmp  y,[$1e]     9995  jmp(Y,[vReturn])                #7 To video driver
              2310 0000  ld   $00         9996  ld(0)                           #8 AC should be 0 already. Still..
                                          9997  assert vCPU_overhead ==          9
                                          9998
                                          9999  # pc = 0x2311, Opcode = 0x11
                                          10000  # Instruction LSLN: Logical shift left vAC, (16bit), n times, 22 + 30*n + 20 cycles
                                          10001  label('LSLN')
LSLN:         2311 1426  ld   $26,y       10002  ld(hi('lsln#13'),Y)             #10
              2312 e000  jmp  y,$00       10003  jmp(Y,'lsln#13')                #11
                                          10004  #dummy                          #12 Overlap
                                          10005  #
                                          10006  # pc = 0x2313, Opcode = 0x13
                                          10007  # Instruction SEXT: Sign extend vAC based on a variable mask, 22 + 24 cycles
                                          10008  label('SEXT')
SEXT:         2313 1426  ld   $26,y       10009  ld(hi('sext#13'),Y)             #10 #12
              2314 e032  jmp  y,$32       10010  jmp(Y,'sext#13')                #11
                                          10011  #dummy                          #12 Overlap
                                          10012  #
                                          10013  # pc = 0x2315, Opcode = 0x15
                                          10014  # Instruction NOTW: Boolean invert var, 22 + 26 cycles
                                          10015  label('NOTW')
NOTW:         2315 1426  ld   $26,y       10016  ld(hi('notw#13'),Y)             #10 #12
              2316 e013  jmp  y,$13       10017  jmp(Y,'notw#13')                #11
                                          10018  #dummy                          #12 Overlap
                                          10019  #
                                          10020  # pc = 0x2317, Opcode = 0x17
                                          10021  # Instruction NEGW: Arithmetic negate var, 22 + 28 cycles
                                          10022  label('NEGW')
NEGW:         2317 1426  ld   $26,y       10023  ld(hi('negw#13'),Y)             #10, #12
              2318 e01e  jmp  y,$1e       10024  jmp(Y,'negw#13')                #11
                                          10025  #dummy                          #12 Overlap
                                          10026  #
                                          10027  # pc = 0x2319, Opcode = 0x19
                                          10028  # Instruction ANDBA: vAC &= var.lo, 22 + 22 cycles
                                          10029  label('ANDBA')
ANDBA:        2319 1426  ld   $26,y       10030  ld(hi('andba#13'),Y)            #10 #12
              231a e03f  jmp  y,$3f       10031  jmp(Y,'andba#13')               #11
              231b 1200  ld   ac,x        10032  ld(AC,X)                        #12 var
                                          10033
                                          10034  # pc = 0x231c, Opcode = 0x1c
                                          10035  # Instruction ORBA: vAC |= var.lo, 22 + 20 cycles
                                          10036  label('ORBA')
ORBA:         231c 1426  ld   $26,y       10037  ld(hi('orba#13'),Y)             #10
              231d e047  jmp  y,$47       10038  jmp(Y,'orba#13')                #11
              231e 1200  ld   ac,x        10039  ld(AC,X)                        #12 var
                                          10040
                                          10041  # pc = 0x231f, Opcode = 0x1f
                                          10042  # Instruction XORBA: vAC ^= var.lo, 22 + 20 cycles
                                          10043  label('XORBA')
XORBA:        231f 1426  ld   $26,y       10044  ld(hi('xorba#13'),Y)            #10
              2320 e04d  jmp  y,$4d       10045  jmp(Y,'xorba#13')               #11
              2321 1200  ld   ac,x        10046  ld(AC,X)                        #12 var
                                          10047
                                          10048  # pc = 0x2322, Opcode = 0x22
                                          10049  # Instruction FREQM: [(((chan & 3) + 1) <<8) | 0x00FC] = vAC, chan var = [0..3], 22 + 26 cycles
                                          10050  label('FREQM')
FREQM:        2322 1426  ld   $26,y       10051  ld(hi('freqm#13'),Y)            #10
              2323 e053  jmp  y,$53       10052  jmp(Y,'freqm#13')               #11
                                          10053  #dummy                          #12 Overlap
                                          10054  #
                                          10055  # pc = 0x2324, Opcode = 0x24
                                          10056  # Instruction FREQA: [((((chan - 1) & 3) + 1) <<8) | 0x00FC] = vAC, chan var = [1..4], 22 + 26 cycles
                                          10057  label('FREQA')
FREQA:        2324 1426  ld   $26,y       10058  ld(hi('freqa#13'),Y)            #10 #12
              2325 e05f  jmp  y,$5f       10059  jmp(Y,'freqa#13')               #11
              2326 1200  ld   ac,x        10060  ld(AC,X)                        #12 var
                                          10061
                                          10062  # pc = 0x2327, Opcode = 0x27
                                          10063  # Instruction FREQZ: [(((imm & 3) + 1) <<8) | 0x00FC] = 0, imm = [0..3], 22 + 22 cycles
                                          10064  label('FREQZ')
FREQZ:        2327 1426  ld   $26,y       10065  ld(hi('freqz#13'),Y)            #10
              2328 e06b  jmp  y,$6b       10066  jmp(Y,'freqz#13')               #11
              2329 2003  anda $03         10067  anda(3)                         #12 channel
                                          10068
                                          10069  # pc = 0x232a, Opcode = 0x2a
                                          10070  # Instruction VOLM: [(((chan & 3) + 1) <<8) | 0x00FA] = vAC.low, chan var = [0..3], 22 + 24 cycles
                                          10071  label('VOLM')
VOLM:         232a 1426  ld   $26,y       10072  ld(hi('volm#13'),Y)             #10
              232b e073  jmp  y,$73       10073  jmp(Y,'volm#13')                #11
                                          10074  #dummy                          #12 Overlap
                                          10075  #
                                          10076  # pc = 0x232c, Opcode = 0x2c
                                          10077  # Instruction VOLA: [((((chan - 1) & 3) + 1) <<8) | 0x00FA] = 63 - vAC.low + 64, chan var = [1..4],  22 + 26 cycles
                                          10078  label('VOLA')
VOLA:         232c 1426  ld   $26,y       10079  ld(hi('vola#13'),Y)             #10 #12
              232d e07d  jmp  y,$7d       10080  jmp(Y,'vola#13')                #11
              232e 1200  ld   ac,x        10081  ld(AC,X)                        #12 chan + 1
                                          10082
                                          10083  # pc = 0x232f, Opcode = 0x2f
                                          10084  # Instruction MODA: [((((chan - 1) & 3) + 1) <<8) | 0x00FB] = vAC.low, chan var = [1..4], 22 + 24 cycles
                                          10085  label('MODA')
MODA:         232f 1426  ld   $26,y       10086  ld(hi('moda#13'),Y)             #10
              2330 e089  jmp  y,$89       10087  jmp(Y,'moda#13')                #11
              2331 1200  ld   ac,x        10088  ld(AC,X)                        #12 chan + 1
                                          10089
                                          10090  # pc = 0x2332, Opcode = 0x32
                                          10091  # Instruction MODZ: [(((imm & 3) + 1) <<8) | 0x00FA] = 0x0200, imm = [0..3], 22 + 24 cycles
                                          10092  label('MODZ')
MODZ:         2332 1426  ld   $26,y       10093  ld(hi('modz#13'),Y)             #10
              2333 e093  jmp  y,$93       10094  jmp(Y,'modz#13')                #11
                                          10095  #dummy                          #12 Overlap
                                          10096  #
                                          10097  # pc = 0x2234, Opcode = 0x34
                                          10098  # Instruction SMPCPY:
                                          10099  label('SMPCPY')
SMPCPY:       2334 1426  ld   $26,y       10100  ld(hi('smpcpy#13'),Y)           #10 #12
              2335 e09d  jmp  y,$9d       10101  jmp(Y,'smpcpy#13')              #11
              2336 1200  ld   ac,x        10102  ld(AC,X)                        #12 dst var
                                          10103
                                          10104  # pc = 0x2237, Opcode = 0x37
                                          10105  # Instruction CMPWS:
                                          10106  label('CMPWS')
CMPWS:        2337 1428  ld   $28,y       10107  ld(hi('cmpws#13'),Y)            #10
              2338 e094  jmp  y,$94       10108  jmp(Y,'cmpws#13')               #11
                                          10109  #dummy                          #12 Overlap
                                          10110  #
                                          10111  # pc = 0x2239, Opcode = 0x39
                                          10112  # Instruction CMPWU:
                                          10113  label('CMPWU')
CMPWU:        2339 1428  ld   $28,y       10114  ld(hi('cmpwu#13'),Y)            #10 #12
              233a e0c7  jmp  y,$c7       10115  jmp(Y,'cmpwu#13')               #11
                                          10116  #dummy                          #12 Overlap
                                          10117  #
                                          10118  # pc = 0x223b, Opcode = 0x3b
                                          10119  # Instruction LEEKA:
                                          10120  label('LEEKA')
LEEKA:        233b 1429  ld   $29,y       10121  ld(hi('leeka#13'),Y)            #10 #12
              233c e000  jmp  y,$00       10122  jmp(Y,'leeka#13')               #11
                                          10123  #dummy                          #12 Overlap
                                          10124  #
                                          10125  # pc = 0x223d, Opcode = 0x3d
                                          10126  # Instruction LOKEA:
                                          10127  label('LOKEA')
LOKEA:        233d 1429  ld   $29,y       10128  ld(hi('lokea#13'),Y)            #10 #12
              233e e023  jmp  y,$23       10129  jmp(Y,'lokea#13')               #11
                                          10130  # dummy                         #12
                                          10131  #
                                          10132  # pc = 0x223f, Opcode = 0x3f
                                          10133  # Instruction FEEKA:
                                          10134  label('FEEKA')
FEEKA:        233f 1429  ld   $29,y       10135  ld(hi('feeka#13'),Y)            #10 #12
              2340 e045  jmp  y,$45       10136  jmp(Y,'feeka#13')               #11
              2341 c21d  st   [$1d]       10137  st([vTmp])                      #12 dst var
                                          10138
                                          10139  # pc = 0x2242, Opcode = 0x42
                                          10140  # Instruction FOKEA:
                                          10141  label('FOKEA')
FOKEA:        2342 1429  ld   $29,y       10142  ld(hi('fokea#13'),Y)            #10
              2343 e06c  jmp  y,$6c       10143  jmp(Y,'fokea#13')               #11
                                          10144  # dummy                         #12
                                          10145  #
                                          10146  # pc = 0x2344, Opcode = 0x44
                                          10147  # Instruction MEEKA: Peek 8 bytes from [vAC] to [var], 22 + 64 cycles
                                          10148  label('MEEKA')
MEEKA:        2344 142a  ld   $2a,y       10149  ld(hi('meeka#13'),Y)            #10 #12
              2345 e000  jmp  y,$00       10150  jmp(Y,'meeka#13')               #11
                                          10151  # dummy                         #12
                                          10152  #
                                          10153  # pc = 0x2346, Opcode = 0x46
                                          10154  # Instruction MOKEA: Poke 8 bytes from [var] to [vAC], 22 + 64 cycles
                                          10155  label('MOKEA')
MOKEA:        2346 142a  ld   $2a,y       10156  ld(hi('mokea#13'),Y)            #10 #12
              2347 e037  jmp  y,$37       10157  jmp(Y,'mokea#13')               #11
                                          10158  # dummy                         #12
                                          10159  #
                                          10160  # pc = 0x2348, Opcode = 0x48
                                          10161  # Instruction LSRVL: Logical shift right var long, 22 + 104 cycles
                                          10162  label('LSRVL')
LSRVL:        2348 142c  ld   $2c,y       10163  ld(hi('lsrvl#13'),Y)            #10 #12
              2349 e06b  jmp  y,$6b       10164  jmp(Y,'lsrvl#13')               #11
              234a 1200  ld   ac,x        10165  ld(AC,X)                        #12 var
                                          10166
                                          10167  # pc = 0x234b, Opcode = 0x4b
                                          10168  # Instruction LSLVL: Logical shift left var long, 22 + 56 cycles
                                          10169  label('LSLVL')
LSLVL:        234b 142c  ld   $2c,y       10170  ld(hi('lslvl#13'),Y)            #10 #12
              234c e0b0  jmp  y,$b0       10171  jmp(Y,'lslvl#13')               #11
              234d 1200  ld   ac,x        10172  ld(AC,X)                        #12 var
                                          10173
                                          10174  # pc = 0x234e, Opcode = 0x4e
                                          10175  # Instruction INCL: Increment var long, 22 + 36 cycles
                                          10176  label('INCL')
INCL:         234e 142e  ld   $2e,y       10177  ld(hi('incl#13'),Y)             #10 #12
              234f e012  jmp  y,$12       10178  jmp(Y,'incl#13')                #11
              2350 1200  ld   ac,x        10179  ld(AC,X)                        #12 var
                                          10180
                                          10181  # pc = 0x2351, Opcode = 0x51
                                          10182  # Instruction DECL: Decrement var long, 22 + 40 cycles
                                          10183  label('DECL')
DECL:         2351 142e  ld   $2e,y       10184  ld(hi('decl#13'),Y)             #10 #12
              2352 e036  jmp  y,$36       10185  jmp(Y,'decl#13')                #11
                                          10186  # dummy                         #12
                                          10187  #
                                          10188
                                          10189  # SYS calls and instruction implementations rely on these
              2353 0200  nop              10190  fillers(until=0xca)
              2354 0200  nop
              2355 0200  nop
              * 119 times
              23ca 00f2  ld   $f2         10191  ld(-28/2)                       #25
              23cb fc01  bra  $2301       10192  bra('NEXT')                     #26 Return from SYS calls
              23cc 1517  ld   [$17],y     10193  ld([vPC+1],Y)                   #27
                                          10194
                                          10195
              23cd 0200  nop              10196  fillers(until=0xff)
              23ce 0200  nop
              23cf 0200  nop
              * 50 times
                                          10197
                                          10198  #-----------------------------------------------------------------------
                                          10199  #       PREFX1 instruction page, (0x2400), PREFIX OPCODE
                                          10200  #-----------------------------------------------------------------------
                                          10201  #
                                          10202  label('PREFX1_PAGE')
PREFX1_PAGE:  23ff fc03  bra  $2403       10203  bra('.next2')                   #0 Enter at '.next2' (so no startup overhead)
                                          10204  # --- Page boundary ---
                                          10205  align(0x100,size=0x100)
              2400 1517  ld   [$17],y     10206  ld([vPC+1],Y)                   #1
                                          10207
                                          10208  # Fetch next instruction and execute it, but only if there are sufficient
                                          10209  # ticks left for the slowest instruction.
              2401 8115  adda [$15]       10210  adda([vTicks])                  #0 Track elapsed ticks (actually counting down: AC<0)
              2402 e80b  blt  $240b       10211  blt('EXIT')                     #1 Escape near time out
              2403 c215  st   [$15]       10212  st([vTicks])                    #2
              2404 0116  ld   [$16]       10213  ld([vPC])                       #3 PREFIX is 1 byte, vPC hasn't been incremented
              2405 9001  adda $01,x       10214  adda(1,X)                       #4
              2406 c002  st   $02,[$02]   10215  st(vCpuSelect,[vCpuSelect])     #5 Reset to default vCPU page
              2407 0d00  ld   [y,x]       10216  ld([Y,X])                       #6 Fetch opcode (actually a branch target)
              2408 de00  st   [y,x++]     10217  st([Y,Xpp])                     #7 Just X++
              2409 fe00  bra  ac          10218  bra(AC)                         #8 Dispatch
              240a 0d00  ld   [y,x]       10219  ld([Y,X])                       #9 Prefetch operand
                                          10220
                                          10221  # Resync with video driver and transfer control
              240b 800f  adda $0f         10222  adda(maxTicks)                  #3
              240c e40c  bgt  $240c       10223  bgt(pc()&255)                   #4 Resync
              240d a001  suba $01         10224  suba(1)                         #5
              240e 1401  ld   $01,y       10225  ld(hi('vBlankStart'),Y)         #6
              240f e11e  jmp  y,[$1e]     10226  jmp(Y,[vReturn])                #7 To video driver
              2410 0000  ld   $00         10227  ld(0)                           #8 AC should be 0 already. Still..
                                          10228  assert vCPU_overhead ==          9
                                          10229
                                          10230  # pc = 0x2411, Opcode = 0x11
                                          10231  # Instruction NOTE: vAC = ROM:[NotesTable + vAC.lo*2], 22 + 28 cycles
                                          10232  label('NOTE')
NOTE:         2411 1427  ld   $27,y       10233  ld(hi('note#13'),Y)             #10
              2412 e000  jmp  y,$00       10234  jmp(Y,'note#13')                #11
              2413 0009  ld   $09         10235  ld('.note#28')                  #12 low byte of low note return address
                                          10236
                                          10237  # pc = 0x2414, Opcode = 0x14
                                          10238  # Instruction MIDI: vAC = ROM:[NotesTable + (vAC.lo - 11)*2], 22 + 30 cycles
                                          10239  label('MIDI')
MIDI:         2414 1427  ld   $27,y       10240  ld(hi('midi#13'),Y)             #10
              2415 e019  jmp  y,$19       10241  jmp(Y,'midi#13')                #11
              2416 0023  ld   $23         10242  ld('.midi#29')                  #12 low byte of low midi return address
                                          10243
                                          10244
                                          10245  # SYS calls and instruction implementations rely on these
              2417 0200  nop              10246  fillers(until=0xca)
              2418 0200  nop
              2419 0200  nop
              * 179 times
              24ca 00f2  ld   $f2         10247  ld(-28/2)                       #25
              24cb fc01  bra  $2401       10248  bra('NEXT')                     #26 Return from SYS calls
              24cc 1517  ld   [$17],y     10249  ld([vPC+1],Y)                   #27
                                          10250
                                          10251
              24cd 0200  nop              10252  fillers(until=0xff)
              24ce 0200  nop
              24cf 0200  nop
              * 50 times
              24ff 0200  nop              10253  align(0x100, size=0x100)
                                          10254
                                          10255  #-----------------------------------------------------------------------
                                          10256  #       PREFX3 implementation page, (0x2500)
                                          10257  #-----------------------------------------------------------------------
                                          10258  # Original idea by lb3361, see https://forum.gigatron.io/viewtopic.php?p=2099#p2099
                                          10259  #
                                          10260  # STB2 implementation
                                          10261  # Original idea by lb3361, see https://forum.gigatron.io/viewtopic.php?p=2135#p2135
                                          10262  label('stb2#13')
stb2#13:      2500 152b  ld   [$2b],y     10263  ld([sysArgs+7],Y)               #13 Second operand
              2501 0118  ld   [$18]       10264  ld([vAC])                       #14
              2502 ce00  st   [y,x]       10265  st([Y,X])                       #15
              2503 1403  ld   $03,y       10266  ld(hi('NEXTY'),Y)               #16
              2504 e000  jmp  y,$00       10267  jmp(Y,'NEXTY')                  #17
              2505 00f6  ld   $f6         10268  ld(-20/2)                       #18
                                          10269
                                          10270  # STW2 implementation
                                          10271  # Original idea by lb3361, see https://forum.gigatron.io/viewtopic.php?p=2135#p2135
                                          10272  label('stw2#13')
stw2#13:      2506 152b  ld   [$2b],y     10273  ld([sysArgs+7],Y)               #13 Second operand
              2507 0118  ld   [$18]       10274  ld([vAC])                       #14
              2508 de00  st   [y,x++]     10275  st([Y,Xpp])                     #15
              2509 0119  ld   [$19]       10276  ld([vAC+1])                     #16
              250a ce00  st   [y,x]       10277  st([Y,X])                       #17
              250b 1403  ld   $03,y       10278  ld(hi('NEXTY'),Y)               #18
              250c e000  jmp  y,$00       10279  jmp(Y,'NEXTY')                  #19
              250d 00f5  ld   $f5         10280  ld(-22/2)                       #20
                                          10281
                                          10282  # XCHGB implementation
                                          10283  label('xchgb#13')
xchgb#13:     250e c22a  st   [$2a]       10284  st([sysArgs+6])                 #13 1st var
              250f 112b  ld   [$2b],x     10285  ld([sysArgs+7],X)               #14 2nd var
              2510 0500  ld   [x]         10286  ld([X])                         #15
              2511 c21d  st   [$1d]       10287  st([vTmp])                      #16
              2512 112a  ld   [$2a],x     10288  ld([sysArgs+6],X)               #17
              2513 0500  ld   [x]         10289  ld([X])                         #18
              2514 112b  ld   [$2b],x     10290  ld([sysArgs+7],X)               #19
              2515 c600  st   [x]         10291  st([X])                         #20
              2516 112a  ld   [$2a],x     10292  ld([sysArgs+6],X)               #21
              2517 011d  ld   [$1d]       10293  ld([vTmp])                      #22
              2518 c600  st   [x]         10294  st([X])                         #23
              2519 1403  ld   $03,y       10295  ld(hi('NEXTY'),Y)               #24
              251a e000  jmp  y,$00       10296  jmp(Y,'NEXTY')                  #25
              251b 00f2  ld   $f2         10297  ld(-28/2)                       #26
                                          10298
                                          10299  # XCHGW implementation
                                          10300  label('xchgw#13')
xchgw#13:     251c 00f9  ld   $f9         10301  ld(min(0,maxTicks-44/2))        #13
              251d 8115  adda [$15]       10302  adda([vTicks])                  #14
              251e e83a  blt  .xchgw#17   10303  blt('.xchgw#17')                #15 not enough time left, so retry
              251f 1400  ld   $00,y       10304  ld(0,Y)                         #16 vPC.hi
              2520 112b  ld   [$2b],x     10305  ld([sysArgs+7],X)               #17 var2
              2521 0500  ld   [x]         10306  ld([X])                         #18
              2522 c218  st   [$18]       10307  st([vAC])                       #19 vAC.lo = var2.lo
              2523 de00  st   [y,x++]     10308  st([Y,Xpp])                     #20 X++
              2524 0500  ld   [x]         10309  ld([X])                         #21
              2525 c219  st   [$19]       10310  st([vAC+1])                     #22 vAC.hi = var2.hi
              2526 112a  ld   [$2a],x     10311  ld([sysArgs+6],X)               #23
              2527 0500  ld   [x]         10312  ld([X])                         #24
              2528 112b  ld   [$2b],x     10313  ld([sysArgs+7],X)               #25
              2529 c600  st   [x]         10314  st([X])                         #26 var2.lo = var1.lo
              252a 012a  ld   [$2a]       10315  ld([sysArgs+6])                 #27
              252b 9001  adda $01,x       10316  adda(1,X)                       #28
              252c 0500  ld   [x]         10317  ld([X])                         #29
              252d c21d  st   [$1d]       10318  st([vTmp])                      #30
              252e 012b  ld   [$2b]       10319  ld([sysArgs+7])                 #31
              252f 9001  adda $01,x       10320  adda(1,X)                       #32
              2530 011d  ld   [$1d]       10321  ld([vTmp])                      #33
              2531 c600  st   [x]         10322  st([X])                         #34 var2.hi = var1.hi
              2532 112a  ld   [$2a],x     10323  ld([sysArgs+6],X)               #35
              2533 0118  ld   [$18]       10324  ld([vAC])                       #36
              2534 de00  st   [y,x++]     10325  st([Y,Xpp])                     #37 var1.lo = vAC.lo, X++
              2535 0119  ld   [$19]       10326  ld([vAC+1])                     #38
              2536 c600  st   [x]         10327  st([X])                         #39 var1.hi = vAC.hi
              2537 1403  ld   $03,y       10328  ld(hi('NEXTY'),Y)               #40
              2538 e000  jmp  y,$00       10329  jmp(Y,'NEXTY')                  #41
              2539 00ea  ld   $ea         10330  ld(-44/2)                       #42
                                          10331  label('.xchgw#17')
.xchgw#17:    253a 0021  ld   $21         10332  ld(hi('PREFX3_PAGE'))           #17 ENTER is at $(n-1)ff, where n = instruction page
              253b c202  st   [$02]       10333  st([vCpuSelect])                #18 restore PREFX3 instruction page
              253c 9401  adda $01,y       10334  adda(1,Y)                       #19 retry instruction
              253d e0cb  jmp  y,$cb       10335  jmp(Y,'REENTER')                #20
              253e 00f4  ld   $f4         10336  ld(-24/2)                       #21
                                          10337
                                          10338  # MOVW implementation
                                          10339  label('movw#13')
movw#13:      253f 1200  ld   ac,x        10340  ld(AC,X)                        #13
              2540 8001  adda $01         10341  adda(1)                         #14
              2541 c21d  st   [$1d]       10342  st([vTmp])                      #15 address of src.hi
              2542 0500  ld   [x]         10343  ld([X])                         #16 src.lo
              2543 112b  ld   [$2b],x     10344  ld([sysArgs+7],X)               #17 address of dst.lo
              2544 c600  st   [x]         10345  st([X])                         #18 dst.lo = src.lo
              2545 111d  ld   [$1d],x     10346  ld([vTmp],X)                    #19
              2546 0500  ld   [x]         10347  ld([X])                         #20 src.hi
              2547 c21d  st   [$1d]       10348  st([vTmp])                      #21
              2548 012b  ld   [$2b]       10349  ld([sysArgs+7])                 #22
              2549 9001  adda $01,x       10350  adda(1,X)                       #23 address of dst.hi
              254a 011d  ld   [$1d]       10351  ld([vTmp])                      #24
              254b c600  st   [x]         10352  st([X])                         #25 dst.hi = src.hi
              254c 1403  ld   $03,y       10353  ld(hi('NEXTY'),Y)               #26
              254d e000  jmp  y,$00       10354  jmp(Y,'NEXTY')                  #27
              254e 00f1  ld   $f1         10355  ld(-30/2)                       #28
                                          10356
                                          10357  # ADDWI implementation
                                          10358  label('addwi#13')
addwi#13:     254f c21d  st   [$1d]       10359  st([vTmp])                      #13 save imm.lo
              2550 8118  adda [$18]       10360  adda([vAC])                     #14
              2551 c218  st   [$18]       10361  st([vAC])                       #15 vAC.lo += imm.lo
              2552 e85c  blt  .addwi#18   10362  bmi('.addwi#18')                #16 overflow
              2553 a11d  suba [$1d]       10363  suba([vTmp])                    #17 restore vAC.lo
              2554 411d  ora  [$1d]       10364  ora([vTmp])                     #18 imm.lo | vAC.lo
              2555 e864  blt  .addwi#21   10365  bmi('.addwi#21')                #19 if carry == 1
              2556 012b  ld   [$2b]       10366  ld([sysArgs+7])                 #20 imm.hi
              2557 8119  adda [$19]       10367  adda([vAC+1])                   #21 carry = 0
              2558 c219  st   [$19]       10368  st([vAC+1])                     #22 vAC.hi += imm.hi
              2559 1403  ld   $03,y       10369  ld(hi('REENTER'),Y)             #23
              255a e0cb  jmp  y,$cb       10370  jmp(Y,'REENTER')                #24
              255b 00f2  ld   $f2         10371  ld(-28/2)                       #25
                                          10372  label('.addwi#18')
.addwi#18:    255c 211d  anda [$1d]       10373  anda([vTmp])                    #18 imm.lo & vAC.lo
              255d e864  blt  .addwi#21   10374  bmi('.addwi#21')                #19 If carry == 1
              255e 012b  ld   [$2b]       10375  ld([sysArgs+7])                 #20 imm.hi
              255f 8119  adda [$19]       10376  adda([vAC+1])                   #21 carry = 0
              2560 c219  st   [$19]       10377  st([vAC+1])                     #22 vAC.hi += imm.hi
              2561 1403  ld   $03,y       10378  ld(hi('REENTER'),Y)             #23
              2562 e0cb  jmp  y,$cb       10379  jmp(Y,'REENTER')                #24
              2563 00f2  ld   $f2         10380  ld(-28/2)                       #25
                                          10381  label('.addwi#21')
.addwi#21:    2564 8001  adda $01         10382  adda(1)                         #21 carry = 1
              2565 8119  adda [$19]       10383  adda([vAC+1])                   #22
              2566 c219  st   [$19]       10384  st([vAC+1])                     #23 vAC.hi = vAC.hi + carry + imm.hi
              2567 1403  ld   $03,y       10385  ld(hi('NEXTY'),Y)               #24
              2568 e000  jmp  y,$00       10386  jmp(Y,'NEXTY')                  #25
              2569 00f2  ld   $f2         10387  ld(-28/2)                       #26
                                          10388
                                          10389  # SUBWI implementation
                                          10390  label('subwi#13')
subwi#13:     256a c21d  st   [$1d]       10391  st([vTmp])                      #13 save imm.lo
              256b 0118  ld   [$18]       10392  ld([vAC])                       #14
              256c e878  blt  .subwi#17   10393  bmi('.subwi#17')                #15 is -ve?
              256d a11d  suba [$1d]       10394  suba([vTmp])                    #16
              256e c218  st   [$18]       10395  st([vAC])                       #17 vAC.lo -= imm.lo
              256f 411d  ora  [$1d]       10396  ora([vTmp])                     #18 borrow in bit 7
              2570 3080  anda $80,x       10397  anda(0x80,X)                    #19 move borrow to bit 0
              2571 0119  ld   [$19]       10398  ld([vAC+1])                     #20
              2572 a500  suba [x]         10399  suba([X])                       #21
              2573 a12b  suba [$2b]       10400  suba([sysArgs+7])               #22
              2574 c219  st   [$19]       10401  st([vAC+1])                     #23 vAC.hi = vAC.hi - borrow - imm.hi
              2575 1403  ld   $03,y       10402  ld(hi('NEXTY'),Y)               #24
              2576 e000  jmp  y,$00       10403  jmp(Y,'NEXTY')                  #25
              2577 00f2  ld   $f2         10404  ld(-28/2)                       #26
                                          10405  label('.subwi#17')
.subwi#17:    2578 c218  st   [$18]       10406  st([vAC])                       #17 vAC.lo -= imm.lo
              2579 211d  anda [$1d]       10407  anda([vTmp])                    #18 borrow in bit 7
              257a 3080  anda $80,x       10408  anda(0x80,X)                    #19 move borrow to bit 0
              257b 0119  ld   [$19]       10409  ld([vAC+1])                     #20
              257c a500  suba [x]         10410  suba([X])                       #21
              257d a12b  suba [$2b]       10411  suba([sysArgs+7])               #22
              257e c219  st   [$19]       10412  st([vAC+1])                     #23 vAC.hi = vAC.hi - borrow - imm.hi
              257f 1403  ld   $03,y       10413  ld(hi('NEXTY'),Y)               #24
              2580 e000  jmp  y,$00       10414  jmp(Y,'NEXTY')                  #25
              2581 00f2  ld   $f2         10415  ld(-28/2)                       #26
                                          10416
                                          10417  # ANDWI implementation
                                          10418  label('andwi#13')
andwi#13:     2582 2118  anda [$18]       10419  anda([vAC])                     #13
              2583 c218  st   [$18]       10420  st([vAC])                       #14 vAC.lo &= imm.lo
              2584 012b  ld   [$2b]       10421  ld([sysArgs+7])                 #15
              2585 2119  anda [$19]       10422  anda([vAC+1])                   #16
              2586 c219  st   [$19]       10423  st([vAC+1])                     #17 vAC.hi &= imm.hi
              2587 1403  ld   $03,y       10424  ld(hi('NEXTY'),Y)               #18
              2588 e000  jmp  y,$00       10425  jmp(Y,'NEXTY')                  #19
              2589 00f5  ld   $f5         10426  ld(-22/2)                       #20
                                          10427
                                          10428  # ORWI implementation
                                          10429  label('orwi#13')
orwi#13:      258a 4118  ora  [$18]       10430  ora([vAC])                      #13
              258b c218  st   [$18]       10431  st([vAC])                       #14 vAC.lo |= imm.lo
              258c 012b  ld   [$2b]       10432  ld([sysArgs+7])                 #15
              258d 4119  ora  [$19]       10433  ora([vAC+1])                    #16
              258e c219  st   [$19]       10434  st([vAC+1])                     #17 vAC.hi |= imm.hi
              258f 1403  ld   $03,y       10435  ld(hi('NEXTY'),Y)               #18
              2590 e000  jmp  y,$00       10436  jmp(Y,'NEXTY')                  #19
              2591 00f5  ld   $f5         10437  ld(-22/2)                       #20
                                          10438
                                          10439  # XORWI implementation
                                          10440  label('xorwi#13')
xorwi#13:     2592 6118  xora [$18]       10441  xora([vAC])                     #13
              2593 c218  st   [$18]       10442  st([vAC])                       #14 vAC.lo ^= imm.lo
              2594 012b  ld   [$2b]       10443  ld([sysArgs+7])                 #15
              2595 6119  xora [$19]       10444  xora([vAC+1])                   #16
              2596 c219  st   [$19]       10445  st([vAC+1])                     #17 vAC.hi ^= imm.hi
              2597 1403  ld   $03,y       10446  ld(hi('NEXTY'),Y)               #18
              2598 e000  jmp  y,$00       10447  jmp(Y,'NEXTY')                  #19
              2599 00f5  ld   $f5         10448  ld(-22/2)                       #20
                                          10449
                                          10450  # LDPX implementation
                                          10451  label('ldpx#13')
ldpx#13:      259a 9001  adda $01,x       10452  adda(1,X)                       #13
              259b 0500  ld   [x]         10453  ld([X])                         #14 y
              259c 8500  adda [x]         10454  adda([X])                       #15 y*2
              259d 1200  ld   ac,x        10455  ld(AC,X)                        #16
              259e 1401  ld   $01,y       10456  ld(1,Y)                         #17 Y,X = 0x0100 + 2*y, (0 >= y <= 127)
              259f 0d00  ld   [y,x]       10457  ld([Y,X])                       #18
              25a0 1600  ld   ac,y        10458  ld(AC,Y)                        #19 Y = [Y,X]
              25a1 111d  ld   [$1d],x     10459  ld([vTmp],X)                    #20
              25a2 0500  ld   [x]         10460  ld([X])                         #21
              25a3 1200  ld   ac,x        10461  ld(AC,X)                        #22 X = x
              25a4 0d00  ld   [y,x]       10462  ld([Y,X])                       #23 colour = [Y,X]
              25a5 112b  ld   [$2b],x     10463  ld([sysArgs+7],X)               #24
              25a6 c600  st   [x]         10464  st([X])                         #25 colour
              25a7 1403  ld   $03,y       10465  ld(hi('NEXTY'),Y)               #26
              25a8 e000  jmp  y,$00       10466  jmp(Y,'NEXTY')                  #27
              25a9 00f1  ld   $f1         10467  ld(-30/2)                       #28
                                          10468
                                          10469  # CONDI implementation
                                          10470  label('condi#13')
condi#13:     25aa c21d  st   [$1d]       10471  st([vTmp])                      #13
              25ab 0118  ld   [$18]       10472  ld([vAC])                       #14
              25ac 4119  ora  [$19]       10473  ora([vAC+1])                    #15
              25ad ecb0  bne  $25b0       10474  bne(pc()+3)                     #16
              25ae fcb1  bra  $25b1       10475  bra(pc()+3)                     #17
              25af 012b  ld   [$2b]       10476  ld([sysArgs+7])                 #18 get result cond == 0
              25b0 011d  ld   [$1d]       10477  ld([vTmp])                      #18 get result cond != 0
              25b1 c218  st   [$18]       10478  st([vAC])                       #19 result.lo
              25b2 0000  ld   $00         10479  ld(0)                           #20
              25b3 c219  st   [$19]       10480  st([vAC+1])                     #21 result.hi = 0
              25b4 1403  ld   $03,y       10481  ld(hi('NEXTY'),Y)               #22
              25b5 e000  jmp  y,$00       10482  jmp(Y,'NEXTY')                  #23
              25b6 00f3  ld   $f3         10483  ld(-26/2)                       #24
                                          10484
                                          10485  # CONDB implementation
                                          10486  label('condb#13')
condb#13:     25b7 0500  ld   [x]         10487  ld([X])                         #13
              25b8 c21d  st   [$1d]       10488  st([vTmp])                      #14
              25b9 112b  ld   [$2b],x     10489  ld([sysArgs+7],X)               #15 get result cond=0
              25ba 0118  ld   [$18]       10490  ld([vAC])                       #16
              25bb 4119  ora  [$19]       10491  ora([vAC+1])                    #17
              25bc ecbf  bne  $25bf       10492  bne(pc()+3)                     #18
              25bd fcc0  bra  $25c0       10493  bra(pc()+3)                     #19
              25be 0500  ld   [x]         10494  ld([X])                         #20 get result cond == 0
              25bf 011d  ld   [$1d]       10495  ld([vTmp])                      #20 get result cond != 0
              25c0 c218  st   [$18]       10496  st([vAC])                       #21 result.lo
              25c1 0000  ld   $00         10497  ld(0)                           #22
              25c2 c219  st   [$19]       10498  st([vAC+1])                     #23 result.hi = 0
              25c3 1403  ld   $03,y       10499  ld(hi('NEXTY'),Y)               #24
              25c4 e000  jmp  y,$00       10500  jmp(Y,'NEXTY')                  #25
              25c5 00f2  ld   $f2         10501  ld(-28/2)                       #26
                                          10502
                                          10503  # CONDIB implementation
                                          10504  label('condib#13')
condib#13:    25c6 112b  ld   [$2b],x     10505  ld([sysArgs+7],X)               #13 get result cond=0
              25c7 0118  ld   [$18]       10506  ld([vAC])                       #14
              25c8 4119  ora  [$19]       10507  ora([vAC+1])                    #15
              25c9 eccc  bne  $25cc       10508  bne(pc()+3)                     #16
              25ca fccd  bra  $25cd       10509  bra(pc()+3)                     #17
              25cb 0500  ld   [x]         10510  ld([X])                         #18 get result cond == 0
              25cc 011d  ld   [$1d]       10511  ld([vTmp])                      #18 get result cond != 0
              25cd c218  st   [$18]       10512  st([vAC])                       #19 result.lo
              25ce 0000  ld   $00         10513  ld(0)                           #20
              25cf c219  st   [$19]       10514  st([vAC+1])                     #21 result.hi = 0
              25d0 1403  ld   $03,y       10515  ld(hi('NEXTY'),Y)               #22
              25d1 e000  jmp  y,$00       10516  jmp(Y,'NEXTY')                  #23
              25d2 00f3  ld   $f3         10517  ld(-26/2)                       #24
                                          10518
                                          10519  # CONDBI implementation
                                          10520  label('condbi#13')
condbi#13:    25d3 1200  ld   ac,x        10521  ld(AC,X)                        #13
              25d4 0118  ld   [$18]       10522  ld([vAC])                       #14
              25d5 4119  ora  [$19]       10523  ora([vAC+1])                    #15
              25d6 ecd9  bne  $25d9       10524  bne(pc()+3)                     #16
              25d7 fcda  bra  $25da       10525  bra(pc()+3)                     #17
              25d8 012b  ld   [$2b]       10526  ld([sysArgs+7])                 #18 get result cond == 0
              25d9 0500  ld   [x]         10527  ld([X])                         #18 get result cond != 0
              25da c218  st   [$18]       10528  st([vAC])                       #19 result.lo
              25db 0000  ld   $00         10529  ld(0)                           #20
              25dc c219  st   [$19]       10530  st([vAC+1])                     #21 result.hi = 0
              25dd 1403  ld   $03,y       10531  ld(hi('NEXTY'),Y)               #22
              25de e000  jmp  y,$00       10532  jmp(Y,'NEXTY')                  #23
              25df 00f3  ld   $f3         10533  ld(-26/2)                       #24
                                          10534
                                          10535
              25e0 0200  nop              10536  fillers(until=0xff)
              25e1 0200  nop
              25e2 0200  nop
              * 31 times
              25ff 0200  nop              10537  align(0x100, size=0x100)
                                          10538
                                          10539  #-----------------------------------------------------------------------
                                          10540  #       PREFX2 implementation page, (0x2600)
                                          10541  #-----------------------------------------------------------------------
                                          10542  #
                                          10543  # LSLN implementation
                                          10544  label('lsln#13')
lsln#13:      2600 a001  suba $01         10545  suba(1)                         #13
              2601 f406  bge  .lsln#16    10546  bge('.lsln#16')                 #14
              2602 c22b  st   [$2b]       10547  st([sysArgs+7])                 #15
              2603 1403  ld   $03,y       10548  ld(hi('NEXTY'),Y)               #16 exit PREFX2 instruction page
              2604 e000  jmp  y,$00       10549  jmp(Y,'NEXTY')                  #17
              2605 00f6  ld   $f6         10550  ld(-20/2)                       #18
                                          10551  label('.lsln#16')
.lsln#16:     2606 0118  ld   [$18]       10552  ld([vAC])                       #16
              2607 3080  anda $80,x       10553  anda(128,X)                     #17
              2608 8118  adda [$18]       10554  adda([vAC])                     #18
              2609 c218  st   [$18]       10555  st([vAC])                       #19
              260a 0500  ld   [x]         10556  ld([X])                         #20
              260b 8119  adda [$19]       10557  adda([vAC+1])                   #21
              260c 8119  adda [$19]       10558  adda([vAC+1])                   #22
              260d c219  st   [$19]       10559  st([vAC+1])                     #23
              260e 0022  ld   $22         10560  ld(hi('PREFX2_PAGE'))           #24 ENTER is at $(n-1)ff, where n = instruction page
              260f c202  st   [$02]       10561  st([vCpuSelect])                #25 restore PREFX2 instruction page
              2610 9401  adda $01,y       10562  adda(1,Y)                       #26 restart instruction
              2611 e000  jmp  y,$00       10563  jmp(Y,'NEXTY')                  #27
              2612 00f1  ld   $f1         10564  ld(-30/2)                       #28
                                          10565
                                          10566  # NOTW implementation
                                          10567  label('notw#13')
notw#13:      2613 112b  ld   [$2b],x     10568  ld([sysArgs+7],X)               #13
              2614 1400  ld   $00,y       10569  ld(0,Y)                         #14
              2615 0500  ld   [x]         10570  ld([X])                         #15
              2616 60ff  xora $ff         10571  xora(255)                       #16
              2617 de00  st   [y,x++]     10572  st([Y,Xpp])                     #17
              2618 0500  ld   [x]         10573  ld([X])                         #18
              2619 60ff  xora $ff         10574  xora(255)                       #19
              261a c600  st   [x]         10575  st([X])                         #20
              261b 1403  ld   $03,y       10576  ld(hi('REENTER'),Y)             #21
              261c e0cb  jmp  y,$cb       10577  jmp(Y,'REENTER')                #22
              261d 00f3  ld   $f3         10578  ld(-26/2)                       #23
                                          10579
                                          10580  # NEGW implementation
                                          10581  label('negw#13')
negw#13:      261e 112b  ld   [$2b],x     10582  ld([sysArgs+7],X)               #13
              261f 1400  ld   $00,y       10583  ld(0,Y)                         #14
              2620 0500  ld   [x]         10584  ld([X])                         #15
              2621 60ff  xora $ff         10585  xora(255)                       #16
              2622 8001  adda $01         10586  adda(1)                         #17
              2623 f02b  beq  .negw#20    10587  beq('.negw#20')                 #18
              2624 de00  st   [y,x++]     10588  st([Y,Xpp])                     #19
              2625 0500  ld   [x]         10589  ld([X])                         #20
              2626 60ff  xora $ff         10590  xora(255)                       #21
              2627 c600  st   [x]         10591  st([X])                         #22
              2628 1403  ld   $03,y       10592  ld(hi('REENTER'),Y)             #23
              2629 e0cb  jmp  y,$cb       10593  jmp(Y,'REENTER')                #24
              262a 00f2  ld   $f2         10594  ld(-28/2)                       #25
                                          10595  label('.negw#20')
.negw#20:     262b 0500  ld   [x]         10596  ld([X])                         #20
              262c 60ff  xora $ff         10597  xora(255)                       #21
              262d 8001  adda $01         10598  adda(1)                         #22
              262e c600  st   [x]         10599  st([X])                         #23
              262f 1403  ld   $03,y       10600  ld(hi('NEXTY'),Y)               #24
              2630 e000  jmp  y,$00       10601  jmp(Y,'NEXTY')                  #25
              2631 00f2  ld   $f2         10602  ld(-28/2)                       #26
                                          10603
                                          10604  # SEXT implementation
                                          10605  label('sext#13')
sext#13:      2632 2119  anda [$19]       10606  anda([vAC+1])                   #13
              2633 ec38  bne  .sext#16    10607  bne('.sext#16')                 #14 check mask
              2634 012b  ld   [$2b]       10608  ld([sysArgs+7])                 #15
              2635 1403  ld   $03,y       10609  ld(hi('NEXTY'),Y)               #16
              2636 e000  jmp  y,$00       10610  jmp(Y,'NEXTY')                  #17
              2637 00f6  ld   $f6         10611  ld(-20/2)                       #18
                                          10612  label('.sext#16')
.sext#16:     2638 60ff  xora $ff         10613  xora(255)                       #16
              2639 8001  adda $01         10614  adda(1)                         #17 mask = (~mask) + 1
              263a 4119  ora  [$19]       10615  ora([vAC+1])                    #18
              263b c219  st   [$19]       10616  st([vAC+1])                     #19 set sign bits
              263c 1403  ld   $03,y       10617  ld(hi('NEXTY'),Y)               #20
              263d e000  jmp  y,$00       10618  jmp(Y,'NEXTY')                  #21
              263e 00f4  ld   $f4         10619  ld(-24/2)                       #22
                                          10620
                                          10621  # ANDBA implementation
                                          10622  label('andba#13')
andba#13:     263f 0118  ld   [$18]       10623  ld([vAC])                       #13
              2640 2500  anda [x]         10624  anda([X])                       #14
              2641 c218  st   [$18]       10625  st([vAC])                       #15 vAC.lo &= var.lo
              2642 0000  ld   $00         10626  ld(0)                           #16
              2643 c219  st   [$19]       10627  st([vAC+1])                     #17 Store high result
              2644 1403  ld   $03,y       10628  ld(hi('NEXTY'),Y)               #18
              2645 e000  jmp  y,$00       10629  jmp(Y,'NEXTY')                  #19
              2646 00f5  ld   $f5         10630  ld(-22/2)                       #20
                                          10631
                                          10632  # ORBA implementation
                                          10633  label('orba#13')
orba#13:      2647 0118  ld   [$18]       10634  ld([vAC])                       #13
              2648 4500  ora  [x]         10635  ora([X])                        #14
              2649 c218  st   [$18]       10636  st([vAC])                       #15 vAC.lo |= var.lo
              264a 1403  ld   $03,y       10637  ld(hi('NEXTY'),Y)               #16
              264b e000  jmp  y,$00       10638  jmp(Y,'NEXTY')                  #17
              264c 00f6  ld   $f6         10639  ld(-20/2)                       #18
                                          10640
                                          10641  # XORBA implementation
                                          10642  label('xorba#13')
xorba#13:     264d 0118  ld   [$18]       10643  ld([vAC])                       #13
              264e 6500  xora [x]         10644  xora([X])                       #14
              264f c218  st   [$18]       10645  st([vAC])                       #15 vAC.lo ^= var.lo
              2650 1403  ld   $03,y       10646  ld(hi('NEXTY'),Y)               #16
              2651 e000  jmp  y,$00       10647  jmp(Y,'NEXTY')                  #17
              2652 00f6  ld   $f6         10648  ld(-20/2)                       #18
                                          10649
                                          10650  # FREQM implementation
                                          10651  label('freqm#13')
freqm#13:     2653 1200  ld   ac,x        10652  ld(AC,X)                        #13 chan var, (operand from PREFX2)
              2654 0500  ld   [x]         10653  ld([X])                         #14
              2655 2003  anda $03         10654  anda(3)                         #15
              2656 9401  adda $01,y       10655  adda(1,Y)                       #16
              2657 10fc  ld   $fc,x       10656  ld(0xFC,X)                      #17
              2658 0118  ld   [$18]       10657  ld([vAC])                       #18
              2659 de00  st   [y,x++]     10658  st([Y,Xpp])                     #19
              265a 0119  ld   [$19]       10659  ld([vAC+1])                     #20
              265b ce00  st   [y,x]       10660  st([Y,X])                       #21
              265c 1403  ld   $03,y       10661  ld(hi('NEXTY'),Y)               #22
              265d e000  jmp  y,$00       10662  jmp(Y,'NEXTY')                  #23
              265e 00f3  ld   $f3         10663  ld(-26/2)                       #24
                                          10664
                                          10665  # FREQA implementation
                                          10666  label('freqa#13')
freqa#13:     265f 0500  ld   [x]         10667  ld([X])                         #13
              2660 a001  suba $01         10668  suba(1)                         #14
              2661 2003  anda $03         10669  anda(3)                         #15
              2662 9401  adda $01,y       10670  adda(1,Y)                       #16
              2663 10fc  ld   $fc,x       10671  ld(0xFC,X)                      #17
              2664 0118  ld   [$18]       10672  ld([vAC])                       #18
              2665 de00  st   [y,x++]     10673  st([Y,Xpp])                     #19
              2666 0119  ld   [$19]       10674  ld([vAC+1])                     #20
              2667 ce00  st   [y,x]       10675  st([Y,X])                       #21
              2668 1403  ld   $03,y       10676  ld(hi('NEXTY'),Y)               #22
              2669 e000  jmp  y,$00       10677  jmp(Y,'NEXTY')                  #23
              266a 00f3  ld   $f3         10678  ld(-26/2)                       #24
                                          10679
                                          10680  # FREQZ implementation
                                          10681  label('freqz#13')
freqz#13:     266b 9401  adda $01,y       10682  adda(1,Y)                       #13
              266c 10fc  ld   $fc,x       10683  ld(0xFC,X)                      #14
              266d 0000  ld   $00         10684  ld(0)                           #15
              266e de00  st   [y,x++]     10685  st([Y,Xpp])                     #16
              266f ce00  st   [y,x]       10686  st([Y,X])                       #17
              2670 1403  ld   $03,y       10687  ld(hi('NEXTY'),Y)               #18
              2671 e000  jmp  y,$00       10688  jmp(Y,'NEXTY')                  #19
              2672 00f5  ld   $f5         10689  ld(-22/2)                       #20
                                          10690
                                          10691  # VOLM implementation
                                          10692  label('volm#13')
volm#13:      2673 1200  ld   ac,x        10693  ld(AC,X)                        #13 chan var, (operand from PREFX2)
              2674 0500  ld   [x]         10694  ld([X])                         #14
              2675 2003  anda $03         10695  anda(3)                         #15
              2676 9401  adda $01,y       10696  adda(1,Y)                       #16
              2677 10fa  ld   $fa,x       10697  ld(0xFA,X)                      #17
              2678 0118  ld   [$18]       10698  ld([vAC])                       #18
              2679 ce00  st   [y,x]       10699  st([Y,X])                       #19
              267a 1403  ld   $03,y       10700  ld(hi('NEXTY'),Y)               #20
              267b e000  jmp  y,$00       10701  jmp(Y,'NEXTY')                  #21
              267c 00f4  ld   $f4         10702  ld(-24/2)                       #22
                                          10703
                                          10704  # VOLA implementation
                                          10705  label('vola#13')
vola#13:      267d 0500  ld   [x]         10706  ld([X])                         #13
              267e a001  suba $01         10707  suba(1)                         #14
              267f 2003  anda $03         10708  anda(3)                         #15
              2680 9401  adda $01,y       10709  adda(1,Y)                       #16
              2681 10fa  ld   $fa,x       10710  ld(0xFA,X)                      #17
              2682 003f  ld   $3f         10711  ld(63)                          #18
              2683 a118  suba [$18]       10712  suba([vAC])                     #19
              2684 8040  adda $40         10713  adda(64)                        #20
              2685 ce00  st   [y,x]       10714  st([Y,X])                       #21
              2686 1403  ld   $03,y       10715  ld(hi('NEXTY'),Y)               #22
              2687 e000  jmp  y,$00       10716  jmp(Y,'NEXTY')                  #23
              2688 00f3  ld   $f3         10717  ld(-26/2)                       #24
                                          10718
                                          10719  # MODA implementation
                                          10720  label('moda#13')
moda#13:      2689 0500  ld   [x]         10721  ld([X])                         #13
              268a a001  suba $01         10722  suba(1)                         #14
              268b 2003  anda $03         10723  anda(3)                         #15
              268c 9401  adda $01,y       10724  adda(1,Y)                       #16
              268d 10fb  ld   $fb,x       10725  ld(0xFB,X)                      #17
              268e 0118  ld   [$18]       10726  ld([vAC])                       #18
              268f ce00  st   [y,x]       10727  st([Y,X])                       #19
              2690 1403  ld   $03,y       10728  ld(hi('NEXTY'),Y)               #20
              2691 e000  jmp  y,$00       10729  jmp(Y,'NEXTY')                  #21
              2692 00f4  ld   $f4         10730  ld(-24/2)                       #22
                                          10731
                                          10732  # MODZ implementation
                                          10733  label('modz#13')
modz#13:      2693 2003  anda $03         10734  anda(3)                         #13
              2694 9401  adda $01,y       10735  adda(1,Y)                       #14
              2695 10fa  ld   $fa,x       10736  ld(0xFA,X)                      #15
              2696 0000  ld   $00         10737  ld(0)                           #16
              2697 de00  st   [y,x++]     10738  st([Y,Xpp])                     #17
              2698 0002  ld   $02         10739  ld(2)                           #18
              2699 ce00  st   [y,x]       10740  st([Y,X])                       #19
              269a 1403  ld   $03,y       10741  ld(hi('NEXTY'),Y)               #20
              269b e000  jmp  y,$00       10742  jmp(Y,'NEXTY')                  #21
              269c 00f4  ld   $f4         10743  ld(-24/2)                       #22
                                          10744
                                          10745
                                          10746  # SMPCPY implementation
                                          10747  label('smpcpy#13')
smpcpy#13:    269d 1400  ld   $00,y       10748  ld(0,Y)                         #13
              269e 00f1  ld   $f1         10749  ld(min(0,maxTicks-60/2))        #14
              269f 8115  adda [$15]       10750  adda([vTicks])                  #15
              26a0 e8d3  blt  .smpcpy#18  10751  blt('.smpcpy#18')               #16 not enough time left, so retry
              26a1 0500  ld   [x]         10752  ld([X])                         #17 dst address = [dst var]
              26a2 de00  st   [y,x++]     10753  st([Y,Xpp])                     #18
              26a3 c2b0  st   [$b0]       10754  st([0xB0])                      #19
              26a4 0500  ld   [x]         10755  ld([X])                         #20
              26a5 c2b1  st   [$b1]       10756  st([0xB1])                      #21
              26a6 1118  ld   [$18],x     10757  ld([vAC],X)                     #22 low byte of src address
              26a7 1519  ld   [$19],y     10758  ld([vAC+1],Y)                   #23 high byte of arc address
              26a8 0d00  ld   [y,x]       10759  ld([Y,X])                       #24
              26a9 c21d  st   [$1d]       10760  st([vTmp])                      #25 packed sample, 4:4
              26aa 1407  ld   $07,y       10761  ld(soundTable>>8,Y)             #26
              26ab 20f0  anda $f0         10762  anda(0xF0)                      #27 high nibble
              26ac 5003  ora  $03,x       10763  ora(0x03,X)                     #28
              26ad 0d00  ld   [y,x]       10764  ld([Y,X])                       #29 high nibble >>2
              26ae 11b0  ld   [$b0],x     10765  ld([0xB0],X)                    #30 low byte dst address
              26af 15b1  ld   [$b1],y     10766  ld([0xB1],Y)                    #31 high byte dst address
              26b0 ce00  st   [y,x]       10767  st([Y,X])                       #32 [0x0702 + i] = 6bit sample
              26b1 01b0  ld   [$b0]       10768  ld([0xB0])                      #33
              26b2 9004  adda $04,x       10769  adda(4,X)                       #34
              26b3 8008  adda $08         10770  adda(8)                         #35
              26b4 c2b0  st   [$b0]       10771  st([0xB0])                      #36
              26b5 011d  ld   [$1d]       10772  ld([vTmp])                      #37 packed sample, 4:4
              26b6 200f  anda $0f         10773  anda(0x0F)                      #38 low nibble
              26b7 8200  adda ac          10774  adda(AC)                        #39
              26b8 8200  adda ac          10775  adda(AC)                        #40 low nibble <<2
              26b9 ce00  st   [y,x]       10776  st([Y,X])                       #41 [0x0706 + i] = 6bit sample
              26ba 112b  ld   [$2b],x     10777  ld([sysArgs+7],X)               #42
              26bb 01b0  ld   [$b0]       10778  ld([0xB0])                      #43
              26bc c600  st   [x]         10779  st([X])                         #44
              26bd a002  suba $02         10780  suba(0x02)                      #45
              26be f0d0  beq  .smpcpy#48  10781  beq('.smpcpy#48')               #46 check for end sample
              26bf 0118  ld   [$18]       10782  ld([vAC])                       #47
              26c0 8001  adda $01         10783  adda(1)                         #48
              26c1 eccb  bne  .smpcpy#51  10784  bne('.smpcpy#51')               #49
              26c2 c218  st   [$18]       10785  st([vAC])                       #50
              26c3 0119  ld   [$19]       10786  ld([vAC+1])                     #51
              26c4 8001  adda $01         10787  adda(1)                         #52
              26c5 c219  st   [$19]       10788  st([vAC+1])                     #53
              26c6 0022  ld   $22         10789  ld(hi('PREFX2_PAGE'))           #54 ENTER is at $(n-1)ff, where n = instruction page
              26c7 c202  st   [$02]       10790  st([vCpuSelect])                #55 restore PREFX2 instruction page
              26c8 9401  adda $01,y       10791  adda(1,Y)                       #56 restart instruction
              26c9 e000  jmp  y,$00       10792  jmp(Y,'NEXTY')                  #57
              26ca 00e2  ld   $e2         10793  ld(-60/2)                       #58
                                          10794
                                          10795  label('.smpcpy#51')
.smpcpy#51:   26cb 0022  ld   $22         10796  ld(hi('PREFX2_PAGE'))           #51 ENTER is at $(n-1)ff, where n = instruction page
              26cc c202  st   [$02]       10797  st([vCpuSelect])                #52 restore PREFX2 instruction page
              26cd 9401  adda $01,y       10798  adda(1,Y)                       #53 restart instruction
              26ce e0cb  jmp  y,$cb       10799  jmp(Y,'REENTER')                #54
              26cf 00e3  ld   $e3         10800  ld(-58/2)                       #55
                                          10801
                                          10802  label('.smpcpy#48')
.smpcpy#48:   26d0 1403  ld   $03,y       10803  ld(hi('NEXTY'),Y)               #48
              26d1 e000  jmp  y,$00       10804  jmp(Y,'NEXTY')                  #49
              26d2 00e6  ld   $e6         10805  ld(-52/2)                       #50
                                          10806
                                          10807  label('.smpcpy#18')
.smpcpy#18:   26d3 0022  ld   $22         10808  ld(hi('PREFX2_PAGE'))           #18 ENTER is at $(n-1)ff, where n = instruction page
              26d4 c202  st   [$02]       10809  st([vCpuSelect])                #19 restore PREFX2 instruction page
              26d5 9401  adda $01,y       10810  adda(1,Y)                       #20 retry instruction
              26d6 e000  jmp  y,$00       10811  jmp(Y,'NEXTY')                  #21
              26d7 00f4  ld   $f4         10812  ld(-24/2)                       #22
                                          10813
                                          10814
                                          10815  # CMPWS implementation, vAC = vAC CMPWS var
                                          10816  #           LDW   var0
                                          10817  #           XORW  var1
                                          10818  #           BGE   CMPWS_GE
                                          10819  #           LDW   var0
                                          10820  #           BRA   CMPWS_RT
                                          10821  #CMPWS_GE   LDW   var0
                                          10822  #           SUBW  var1
                                          10823  #CMPWS_RT   RET
                                          10824  #label('cmpws#13')
                                          10825  #ld(min(0,maxTicks-38/2))        #13
                                          10826  #adda([vTicks])                  #14
                                          10827  #blt('.cmpws#17')                #15 not enough time left, so retry
                                          10828  #ld(0,Y)                         #16
                                          10829  #ld([X])                         #17
                                          10830  #st([Y,Xpp])                     #18
                                          10831  #st([0xB0])                      #19 cmp var.lo
                                          10832  #ld([X])                         #20
                                          10833  #st([0xB1])                      #21 cmp var.hi
                                          10834  #xora([vAC+1])                   #22
                                          10835  #blt('.cmpws#25')                #23 if < 0
                                          10836  #ld([vAC])                       #24 Low byte
                                          10837  #bmi('.cmpws#27')                #25
                                          10838  #suba([0xB0])                    #26
                                          10839  #st([vAC])                       #27 Store low result
                                          10840  #ora([0xB0])                     #28 Carry in bit 7
                                          10841  #anda(0x80,X)                    #29 Move carry to bit 0
                                          10842  #ld([vAC+1])                     #30
                                          10843  #suba([X])                       #31
                                          10844  #suba([0xB1])                    #32 sub var.hi with carry
                                          10845  #st([vAC+1])                     #33
                                          10846  #ld(hi('NEXTY'),Y)               #34
                                          10847  #jmp(Y,'NEXTY')                  #35
                                          10848  #ld(-38/2)                       #36
                                          10849  #
                                          10850  #label('.cmpws#25')
                                          10851  #ld(hi('REENTER'),Y)             #25
                                          10852  #jmp(Y,'REENTER')                #26
                                          10853  #ld(-30/2)                       #27
                                          10854  #
                                          10855  #label('.cmpws#27')
                                          10856  #st([vAC])                       #27 Store low result
                                          10857  #anda([0xB0])                    #28 Carry in bit 7
                                          10858  #anda(0x80,X)                    #29 Move carry to bit 0
                                          10859  #ld([vAC+1])                     #30
                                          10860  #suba([X])                       #31
                                          10861  #suba([0xB1])                    #32 sub var.hi with carry
                                          10862  #st([vAC+1])                     #33
                                          10863  #ld(hi('NEXTY'),Y)               #34
                                          10864  #jmp(Y,'NEXTY')                  #35
                                          10865  #ld(-38/2)                       #36
                                          10866  #
                                          10867  #label('.cmpws#17')
                                          10868  #ld(hi('PREFX2_PAGE'))           #17 ENTER is at $(n-1)ff, where n = instruction page
                                          10869  #st([vCpuSelect])                #18 restore PREFX2 instruction page
                                          10870  #adda(1,Y)                       #19 retry instruction
                                          10871  #jmp(Y,'REENTER')                #20
                                          10872  #ld(-24/2)                       #21
                                          10873
                                          10874
              26d8 0200  nop              10875  fillers(until=0xff)
              26d9 0200  nop
              26da 0200  nop
              * 39 times
              26ff 0200  nop              10876  align(0x100, size=0x100)
                                          10877
                                          10878  #-----------------------------------------------------------------------
                                          10879  #       PREFX1 implementation page, (0x2700)
                                          10880  #-----------------------------------------------------------------------
                                          10881  #
                                          10882  # NOTE implementation: vAC = ROM:[NotesTable + vAC.lo*2], 22 + 30 cycles
                                          10883  label('note#13')
note#13:      2700 c21d  st   [$1d]       10884  st([vTmp])                      #13 low byte of low note return address
              2701 00f8  ld   $f8         10885  ld(min(0,maxTicks-46/2))        #14
              2702 8115  adda [$15]       10886  adda([vTicks])                  #15
              2703 e814  blt  .note#18    10887  blt('.note#18')                 #16 not enough time left, so retry
              2704 1409  ld   $09,y       10888  ld(hi('noteTrampoline'),Y)      #17
              2705 0118  ld   [$18]       10889  ld([vAC])                       #18 vAC.lo = note index
              2706 8200  adda ac          10890  adda(AC)                        #19 vAC.lo*2, (low note byte)
              2707 e0c0  jmp  y,$c0       10891  jmp(Y,'noteTrampoline')         #20
              2708 c219  st   [$19]       10892  st([vAC+1])                     #21 vAC.hi = vAC.lo*2
                                          10893  label('.note#28')
.note#28:     2709 c218  st   [$18]       10894  st([vAC])                       #28 vAC.lo = note.lo
              270a 0010  ld   $10         10895  ld('.note#41')                  #29
              270b c21d  st   [$1d]       10896  st([vTmp])                      #30 low byte of high note return address
              270c 1409  ld   $09,y       10897  ld(hi('noteTrampoline'),Y)      #31
              270d 0119  ld   [$19]       10898  ld([vAC+1])                     #32
              270e e0c0  jmp  y,$c0       10899  jmp(Y,'noteTrampoline')         #33
              270f 8001  adda $01         10900  adda(1)                         #34 vAC.lo*2 + 1, (high note byte)
                                          10901  label('.note#41')
.note#41:     2710 c219  st   [$19]       10902  st([vAC+1])                     #41
              2711 1403  ld   $03,y       10903  ld(hi('NEXTY'),Y)               #42
              2712 e000  jmp  y,$00       10904  jmp(Y,'NEXTY')                  #43
              2713 00e9  ld   $e9         10905  ld(-46/2)                       #44
                                          10906  label('.note#18')
.note#18:     2714 0023  ld   $23         10907  ld(hi('PREFX1_PAGE'))           #18 ENTER is at $(n-1)ff, where n = instruction page
              2715 c202  st   [$02]       10908  st([vCpuSelect])                #19 restore PREFX1 instruction page
              2716 9401  adda $01,y       10909  adda(1,Y)                       #20 retry instruction
              2717 e000  jmp  y,$00       10910  jmp(Y,'NEXTY')                  #21
              2718 00f4  ld   $f4         10911  ld(-24/2)                       #22
                                          10912
                                          10913  # MIDI implementation: vAC = ROM:[NotesTable + (vAC.lo - 11)*2], 22 + 30 cycles
                                          10914  label('midi#13')
midi#13:      2719 c21d  st   [$1d]       10915  st([vTmp])                      #13 low byte of low midi return address
              271a 00f7  ld   $f7         10916  ld(min(0,maxTicks-48/2))        #14
              271b 8115  adda [$15]       10917  adda([vTicks])                  #15
              271c e82e  blt  .midi#18    10918  blt('.midi#18')                 #16 not enough time left, so retry
              271d 1409  ld   $09,y       10919  ld(hi('noteTrampoline'),Y)      #17
              271e 0118  ld   [$18]       10920  ld([vAC])                       #18 vAC.lo = midi index
              271f a00b  suba $0b         10921  suba(11)                        #19 vAC.lo -= 11
              2720 8200  adda ac          10922  adda(AC)                        #20 vAC.lo*2, (low midi byte)
              2721 e0c0  jmp  y,$c0       10923  jmp(Y,'noteTrampoline')         #21
              2722 c219  st   [$19]       10924  st([vAC+1])                     #22 vAC.hi = vAC.lo*2
                                          10925  label('.midi#29')
.midi#29:     2723 c218  st   [$18]       10926  st([vAC])                       #29 vAC.lo = midi.lo
              2724 002a  ld   $2a         10927  ld('.midi#42')                  #30
              2725 c21d  st   [$1d]       10928  st([vTmp])                      #31 low byte of high midi return address
              2726 1409  ld   $09,y       10929  ld(hi('noteTrampoline'),Y)      #32
              2727 0119  ld   [$19]       10930  ld([vAC+1])                     #33
              2728 e0c0  jmp  y,$c0       10931  jmp(Y,'noteTrampoline')         #34
              2729 8001  adda $01         10932  adda(1)                         #35 vAC.lo*2 + 1, (high midi byte)
                                          10933  label('.midi#42')
.midi#42:     272a c219  st   [$19]       10934  st([vAC+1])                     #42
              272b 1403  ld   $03,y       10935  ld(hi('REENTER'),Y)             #43
              272c e0cb  jmp  y,$cb       10936  jmp(Y,'REENTER')                #44
              272d 00e8  ld   $e8         10937  ld(-48/2)                       #45
                                          10938  label('.midi#18')
.midi#18:     272e 0023  ld   $23         10939  ld(hi('PREFX1_PAGE'))           #18 ENTER is at $(n-1)ff, where n = instruction page
              272f c202  st   [$02]       10940  st([vCpuSelect])                #19 restore PREFX1 instruction page
              2730 9401  adda $01,y       10941  adda(1,Y)                       #20 retry instruction
              2731 e000  jmp  y,$00       10942  jmp(Y,'NEXTY')                  #21
              2732 00f4  ld   $f4         10943  ld(-24/2)                       #22
                                          10944
                                          10945
              2733 0200  nop              10946  fillers(until=0xff)
              2734 0200  nop
              2735 0200  nop
              * 204 times
              27ff 0200  nop              10947  align(0x100, size=0x100)
                                          10948
                                          10949  #-----------------------------------------------------------------------
                                          10950  #       More vCPU instruction implementations, (0x2800)
                                          10951  #-----------------------------------------------------------------------
                                          10952  #
                                          10953  # ADDVI implementation
                                          10954  label('addvi#13')
addvi#13:     2800 1517  ld   [$17],y     10955  ld([vPC+1],Y)                   #13 vPC.hi
              2801 c22a  st   [$2a]       10956  st([sysArgs+6])                 #14 immediate 8bit
              2802 de00  st   [y,x++]     10957  st([Y,Xpp])                     #15 X++
              2803 00f6  ld   $f6         10958  ld(min(0,maxTicks-50/2))        #16
              2804 8115  adda [$15]       10959  adda([vTicks])                  #17
              2805 e833  blt  .addvi#20   10960  blt('.addvi#20')                #18 not enough time left, so retry
              2806 0d00  ld   [y,x]       10961  ld([Y,X])                       #19
              2807 d22b  st   [$2b],x     10962  st([sysArgs+7],X)               #20 dst var addr
              2808 1400  ld   $00,y       10963  ld(0,Y)                         #21
              2809 0500  ld   [x]         10964  ld([X])                         #22 dst low value
              280a c218  st   [$18]       10965  st([vAC])                       #23
              280b de00  st   [y,x++]     10966  st([Y,Xpp])                     #24 X++
              280c 0500  ld   [x]         10967  ld([X])                         #25 dst hi value
              280d c219  st   [$19]       10968  st([vAC+1])                     #26
              280e 012a  ld   [$2a]       10969  ld([sysArgs+6])                 #27
              280f 8118  adda [$18]       10970  adda([vAC])                     #28
              2810 c218  st   [$18]       10971  st([vAC])                       #29 Store low result
              2811 e823  blt  .addvi#32   10972  bmi('.addvi#32')                #30 Now figure out if there was a carry
              2812 a12a  suba [$2a]       10973  suba([sysArgs+6])               #31 Gets back the initial value of vAC
              2813 412a  ora  [$2a]       10974  ora([sysArgs+6])                #32 Carry in bit 7
              2814 3080  anda $80,x       10975  anda(0x80,X)                    #33 Move carry to bit 0
              2815 0500  ld   [x]         10976  ld([X])                         #34
              2816 8119  adda [$19]       10977  adda([vAC+1])                   #35 Add the high bytes with carry
              2817 c219  st   [$19]       10978  st([vAC+1])                     #36 Store high result
              2818 112b  ld   [$2b],x     10979  ld([sysArgs+7],X)               #37
              2819 0118  ld   [$18]       10980  ld([vAC])                       #38
              281a de00  st   [y,x++]     10981  st([Y,Xpp])                     #39
              281b 0119  ld   [$19]       10982  ld([vAC+1])                     #40
              281c c600  st   [x]         10983  st([X])                         #41
              281d 0116  ld   [$16]       10984  ld([vPC])                       #42
              281e 8001  adda $01         10985  adda(1)                         #43
              281f c216  st   [$16]       10986  st([vPC])                       #44
              2820 1403  ld   $03,y       10987  ld(hi('REENTER'),Y)             #45
              2821 e0cb  jmp  y,$cb       10988  jmp(Y,'REENTER')                #46
              2822 00e7  ld   $e7         10989  ld(-50/2)                       #47
                                          10990
                                          10991  label('.addvi#32')
.addvi#32:    2823 212a  anda [$2a]       10992  anda([sysArgs+6])               #32 Carry in bit 7
              2824 3080  anda $80,x       10993  anda(0x80,X)                    #33 Move carry to bit 0
              2825 0500  ld   [x]         10994  ld([X])                         #34
              2826 8119  adda [$19]       10995  adda([vAC+1])                   #35 Add the high bytes with carry
              2827 c219  st   [$19]       10996  st([vAC+1])                     #36 Store high result
              2828 112b  ld   [$2b],x     10997  ld([sysArgs+7],X)               #37
              2829 0118  ld   [$18]       10998  ld([vAC])                       #38
              282a de00  st   [y,x++]     10999  st([Y,Xpp])                     #39
              282b 0119  ld   [$19]       11000  ld([vAC+1])                     #40
              282c c600  st   [x]         11001  st([X])                         #41
              282d 0116  ld   [$16]       11002  ld([vPC])                       #42
              282e 8001  adda $01         11003  adda(1)                         #43
              282f c216  st   [$16]       11004  st([vPC])                       #44
              2830 1403  ld   $03,y       11005  ld(hi('REENTER'),Y)             #45
              2831 e0cb  jmp  y,$cb       11006  jmp(Y,'REENTER')                #46
              2832 00e7  ld   $e7         11007  ld(-50/2)                       #47
                                          11008
                                          11009  label('.addvi#20')
.addvi#20:    2833 0116  ld   [$16]       11010  ld([vPC])                       #20 retry instruction
              2834 a002  suba $02         11011  suba(2)                         #21
              2835 c216  st   [$16]       11012  st([vPC])                       #22
              2836 1403  ld   $03,y       11013  ld(hi('REENTER'),Y)             #23
              2837 e0cb  jmp  y,$cb       11014  jmp(Y,'REENTER')                #24
              2838 00f2  ld   $f2         11015  ld(-28/2)                       #25
                                          11016
                                          11017
                                          11018  # SUBVI implementation
                                          11019  label('subvi#13')
subvi#13:     2839 1517  ld   [$17],y     11020  ld([vPC+1],Y)                   #13 vPC.hi
              283a c22a  st   [$2a]       11021  st([sysArgs+6])                 #14 immediate 8bit
              283b de00  st   [y,x++]     11022  st([Y,Xpp])                     #15 X++
              283c 00f6  ld   $f6         11023  ld(min(0,maxTicks-50/2))        #16
              283d 8115  adda [$15]       11024  adda([vTicks])                  #17
              283e e86d  blt  .subvi#20   11025  blt('.subvi#20')                #18 not enough time left, so retry
              283f 0d00  ld   [y,x]       11026  ld([Y,X])                       #19
              2840 d22b  st   [$2b],x     11027  st([sysArgs+7],X)               #20 dst var addr
              2841 1400  ld   $00,y       11028  ld(0,Y)                         #21
              2842 0500  ld   [x]         11029  ld([X])                         #22 dst low value
              2843 c218  st   [$18]       11030  st([vAC])                       #23
              2844 de00  st   [y,x++]     11031  st([Y,Xpp])                     #24 X++
              2845 0500  ld   [x]         11032  ld([X])                         #25 dst hi value
              2846 c219  st   [$19]       11033  st([vAC+1])                     #26
              2847 112b  ld   [$2b],x     11034  ld([sysArgs+7],X)               #27 dst var addr
              2848 0500  ld   [x]         11035  ld([X])                         #28
              2849 e85c  blt  .subvi#31   11036  bmi('.subvi#31')                #29
              284a a12a  suba [$2a]       11037  suba([sysArgs+6])               #30
              284b c218  st   [$18]       11038  st([vAC])                       #31 store low result
              284c 412a  ora  [$2a]       11039  ora([sysArgs+6])                #32 carry in bit 7
              284d 3080  anda $80,x       11040  anda(0x80,X)                    #33 move carry to bit 0
              284e 0119  ld   [$19]       11041  ld([vAC+1])                     #34
              284f a500  suba [x]         11042  suba([X])                       #35
              2850 c219  st   [$19]       11043  st([vAC+1])                     #36 store high result
              2851 112b  ld   [$2b],x     11044  ld([sysArgs+7],X)               #37
              2852 0118  ld   [$18]       11045  ld([vAC])                       #38
              2853 de00  st   [y,x++]     11046  st([Y,Xpp])                     #39
              2854 0119  ld   [$19]       11047  ld([vAC+1])                     #40
              2855 c600  st   [x]         11048  st([X])                         #41
              2856 0116  ld   [$16]       11049  ld([vPC])                       #42
              2857 8001  adda $01         11050  adda(1)                         #43
              2858 c216  st   [$16]       11051  st([vPC])                       #44
              2859 1403  ld   $03,y       11052  ld(hi('REENTER'),Y)             #45
              285a e0cb  jmp  y,$cb       11053  jmp(Y,'REENTER')                #46
              285b 00e7  ld   $e7         11054  ld(-50/2)                       #47
                                          11055
                                          11056  label('.subvi#31')
.subvi#31:    285c c218  st   [$18]       11057  st([vAC])                       #31 store low result
              285d 212a  anda [$2a]       11058  anda([sysArgs+6])               #32 carry in bit 7
              285e 3080  anda $80,x       11059  anda(0x80,X)                    #33 move carry to bit 0
              285f 0119  ld   [$19]       11060  ld([vAC+1])                     #34
              2860 a500  suba [x]         11061  suba([X])                       #35
              2861 c219  st   [$19]       11062  st([vAC+1])                     #36 store high result
              2862 112b  ld   [$2b],x     11063  ld([sysArgs+7],X)               #37
              2863 0118  ld   [$18]       11064  ld([vAC])                       #38
              2864 de00  st   [y,x++]     11065  st([Y,Xpp])                     #39
              2865 0119  ld   [$19]       11066  ld([vAC+1])                     #40
              2866 c600  st   [x]         11067  st([X])                         #41
              2867 0116  ld   [$16]       11068  ld([vPC])                       #42
              2868 8001  adda $01         11069  adda(1)                         #43
              2869 c216  st   [$16]       11070  st([vPC])                       #44
              286a 1403  ld   $03,y       11071  ld(hi('REENTER'),Y)             #45
              286b e0cb  jmp  y,$cb       11072  jmp(Y,'REENTER')                #46
              286c 00e7  ld   $e7         11073  ld(-50/2)                       #47
                                          11074
                                          11075  label('.subvi#20')
.subvi#20:    286d 0116  ld   [$16]       11076  ld([vPC])                       #20 retry instruction
              286e a002  suba $02         11077  suba(2)                         #21
              286f c216  st   [$16]       11078  st([vPC])                       #22
              2870 1403  ld   $03,y       11079  ld(hi('REENTER'),Y)             #23
              2871 e0cb  jmp  y,$cb       11080  jmp(Y,'REENTER')                #24
              2872 00f2  ld   $f2         11081  ld(-28/2)                       #25
                                          11082
                                          11083
                                          11084  # OSCPX implementation
                                          11085  label('oscpx#13')
oscpx#13:     2873 d22a  st   [$2a],x     11086  st([sysArgs+6],X)               #13 sample address var
              2874 00fa  ld   $fa         11087  ld(min(0,maxTicks-42/2))        #14
              2875 8115  adda [$15]       11088  adda([vTicks])                  #15
              2876 e88f  blt  .oscpx#18   11089  blt('.oscpx#18')                #16 not enough time left, so retry
              2877 0500  ld   [x]         11090  ld([X])                         #17 sample address low byte
              2878 112b  ld   [$2b],x     11091  ld([sysArgs+7],X)               #18 index var
              2879 8500  adda [x]         11092  adda([X])                       #19 sample address low byte + index
              287a c21d  st   [$1d]       11093  st([vTmp])                      #20
              287b 012a  ld   [$2a]       11094  ld([sysArgs+6])                 #21
              287c 9001  adda $01,x       11095  adda(1,X)                       #22
              287d 0500  ld   [x]         11096  ld([X])                         #23
              287e 1600  ld   ac,y        11097  ld(AC,Y)                        #24 sample address high byte
              287f 111d  ld   [$1d],x     11098  ld([vTmp],X)                    #25
              2880 0d00  ld   [y,x]       11099  ld([Y,X])                       #26
              2881 20fc  anda $fc         11100  anda(0xFC)                      #27 6bit sample in upper 8bits
              2882 1407  ld   $07,y       11101  ld(soundTable>>8,Y)             #28
              2883 5003  ora  $03,x       11102  ora(0x03,X)                     #29
              2884 0d00  ld   [y,x]       11103  ld([Y,X])                       #30 6bit sample, (>>2)
              2885 9519  adda [$19],y     11104  adda([vAC+1],Y)                 #31 dest pixel address high byte
              2886 0118  ld   [$18]       11105  ld([vAC])                       #32 dest pixel address low byte
              2887 112b  ld   [$2b],x     11106  ld([sysArgs+7],X)               #33 index
              2888 8500  adda [x]         11107  adda([X])                       #34 sample address low byte + index
              2889 1200  ld   ac,x        11108  ld(AC,X)                        #35
              288a 01a3  ld   [$a3]       11109  ld([0xA3])                      #36 pixel colour
              288b ce00  st   [y,x]       11110  st([Y,X])                       #37
              288c 1403  ld   $03,y       11111  ld(hi('NEXTY'),Y)               #38
              288d e000  jmp  y,$00       11112  jmp(Y,'NEXTY')                  #39
              288e 00eb  ld   $eb         11113  ld(-42/2)                       #40
                                          11114
                                          11115  label('.oscpx#18')
.oscpx#18:    288f 0021  ld   $21         11116  ld(hi('PREFX3_PAGE'))           #18 ENTER is at $(n-1)ff, where n = instruction page
              2890 c202  st   [$02]       11117  st([vCpuSelect])                #19 restore PREFX3 instruction page
              2891 9401  adda $01,y       11118  adda(1,Y)                       #20 retry instruction
              2892 e000  jmp  y,$00       11119  jmp(Y,'NEXTY')                  #21
              2893 00f4  ld   $f4         11120  ld(-24/2)                       #22
                                          11121
                                          11122
                                          11123  # CMPWS implementation, vAC = vAC CMPWS var
                                          11124  #           LDW   var0
                                          11125  #           CMPHS var1.hi
                                          11126  #           SUBW  var1
                                          11127  label('cmpws#13')
cmpws#13:     2894 00e9  ld   $e9         11128  ld(-46/2)                       #13
              2895 c21d  st   [$1d]       11129  st([vTmp])                      #14
              2896 00f8  ld   $f8         11130  ld(min(0,maxTicks-46/2))        #15
              2897 8115  adda [$15]       11131  adda([vTicks])                  #16
              2898 e8c2  blt  .cmpws#19   11132  blt('.cmpws#19')                #17 not enough time left, so retry
              2899 1400  ld   $00,y       11133  ld(0,Y)                         #18
              289a 0500  ld   [x]         11134  ld([X])                         #19
              289b de00  st   [y,x++]     11135  st([Y,Xpp])                     #20
              289c c2b0  st   [$b0]       11136  st([0xB0])                      #21 cmp var.lo
              289d 0500  ld   [x]         11137  ld([X])                         #22
              289e c2b1  st   [$b1]       11138  st([0xB1])                      #23 cmp var.hi
              289f 6119  xora [$19]       11139  xora([vAC+1])                   #24
              28a0 f4b5  bge  .cmpws#27   11140  bpl('.cmpws#27')                #25 skip if same sign
              28a1 0119  ld   [$19]       11141  ld([vAC+1])                     #26
              28a2 e8a5  blt  $28a5       11142  bmi(pc()+3)                     #27
              28a3 fca6  bra  .cmpws#30   11143  bra(pc()+3)                     #28
                                          11144
                                          11145  label('.cmpws#29')
.cmpws#29:    28a4 0001  ld   $01         11146  ld(+1)                          #29    vAC < variable
              28a5 00ff  ld   $ff         11147  ld(-1)                          #29(!) vAC > variable
                                          11148
                                          11149  label('.cmpws#30')
.cmpws#30:    28a6 8500  adda [x]         11150  adda([X])                       #30
              28a7 c219  st   [$19]       11151  st([vAC+1])                     #31
                                          11152
                                          11153  label('.cmpws#32')
.cmpws#32:    28a8 0118  ld   [$18]       11154  ld([vAC])                       #32, #30 Low byte
              28a9 e8b8  blt  .cmpws#35   11155  bmi('.cmpws#35')                #33, #31
              28aa a1b0  suba [$b0]       11156  suba([0xB0])                    #34, #32
              28ab c218  st   [$18]       11157  st([vAC])                       #35, #33 Store low result
              28ac 41b0  ora  [$b0]       11158  ora([0xB0])                     #36, #34 Carry in bit 7
              28ad 3080  anda $80,x       11159  anda(0x80,X)                    #37, #35 Move carry to bit 0
              28ae 0119  ld   [$19]       11160  ld([vAC+1])                     #38, #36
              28af a500  suba [x]         11161  suba([X])                       #39, #37
              28b0 a1b1  suba [$b1]       11162  suba([0xB1])                    #40, #38 sub var.hi with carry
              28b1 c219  st   [$19]       11163  st([vAC+1])                     #41, #39
              28b2 1403  ld   $03,y       11164  ld(hi('NEXTY'),Y)               #42, #40
              28b3 e000  jmp  y,$00       11165  jmp(Y,'NEXTY')                  #43, #41
              28b4 011d  ld   [$1d]       11166  ld([vTmp])                      #44, #42
                                          11167
                                          11168  label('.cmpws#27')
.cmpws#27:    28b5 00ea  ld   $ea         11169  ld(-44/2)                       #27
              28b6 fca8  bra  .cmpws#32   11170  bra('.cmpws#32')                #28
              28b7 c21d  st   [$1d]       11171  st([vTmp])                      #29
                                          11172
                                          11173  label('.cmpws#35')
.cmpws#35:    28b8 c218  st   [$18]       11174  st([vAC])                       #35, #33 Store low result
              28b9 21b0  anda [$b0]       11175  anda([0xB0])                    #36, #34 Carry in bit 7
              28ba 3080  anda $80,x       11176  anda(0x80,X)                    #37, #35 Move carry to bit 0
              28bb 0119  ld   [$19]       11177  ld([vAC+1])                     #38, #36
              28bc a500  suba [x]         11178  suba([X])                       #39, #37
              28bd a1b1  suba [$b1]       11179  suba([0xB1])                    #40, #38 sub var.hi with carry
              28be c219  st   [$19]       11180  st([vAC+1])                     #41, #39
              28bf 1403  ld   $03,y       11181  ld(hi('NEXTY'),Y)               #42, #40
              28c0 e000  jmp  y,$00       11182  jmp(Y,'NEXTY')                  #43, #41
              28c1 011d  ld   [$1d]       11183  ld([vTmp])                      #44, #42
                                          11184
                                          11185  label('.cmpws#19')
.cmpws#19:    28c2 0022  ld   $22         11186  ld(hi('PREFX2_PAGE'))           #19 ENTER is at $(n-1)ff, where n = instruction page
              28c3 c202  st   [$02]       11187  st([vCpuSelect])                #20 restore PREFX2 instruction page
              28c4 9401  adda $01,y       11188  adda(1,Y)                       #21 retry instruction
              28c5 e0cb  jmp  y,$cb       11189  jmp(Y,'REENTER')                #22
              28c6 00f3  ld   $f3         11190  ld(-26/2)                       #23
                                          11191
                                          11192
                                          11193  # CMPWU implementation, vAC = vAC CMPWU var
                                          11194  #           LDW   var0
                                          11195  #           CMPHU var1.hi
                                          11196  #           SUBW  var1
                                          11197  label('cmpwu#13')
cmpwu#13:     28c7 00e9  ld   $e9         11198  ld(-46/2)                       #13
              28c8 c21d  st   [$1d]       11199  st([vTmp])                      #14
              28c9 00f8  ld   $f8         11200  ld(min(0,maxTicks-46/2))        #15
              28ca 8115  adda [$15]       11201  adda([vTicks])                  #16
              28cb e8c2  blt  .cmpws#19   11202  blt('.cmpws#19')                #17 not enough time left, so retry, (use .cmpws#19)
              28cc 1400  ld   $00,y       11203  ld(0,Y)                         #18
              28cd 0500  ld   [x]         11204  ld([X])                         #19
              28ce de00  st   [y,x++]     11205  st([Y,Xpp])                     #20
              28cf c2b0  st   [$b0]       11206  st([0xB0])                      #21 cmp var.lo
              28d0 0500  ld   [x]         11207  ld([X])                         #22
              28d1 c2b1  st   [$b1]       11208  st([0xB1])                      #23 cmp var.hi
              28d2 6119  xora [$19]       11209  xora([vAC+1])                   #24
              28d3 f4b5  bge  .cmpws#27   11210  bpl('.cmpws#27')                #25 skip if same sign, (use .cmpws#27)
              28d4 0119  ld   [$19]       11211  ld([vAC+1])                     #26
              28d5 e8a4  blt  .cmpws#29   11212  bmi('.cmpws#29')                #27 use .cmpws#29
              28d6 fca6  bra  .cmpws#30   11213  bra('.cmpws#30')                #28 use .cmpws#30
              28d7 00ff  ld   $ff         11214  ld(-1)                          #29 vAC > variable
                                          11215
                                          11216
              28d8 0200  nop              11217  fillers(until=0xff)
              28d9 0200  nop
              28da 0200  nop
              * 39 times
              28ff 0200  nop              11218  align(0x100, size=0x100)
                                          11219
                                          11220  #-----------------------------------------------------------------------
                                          11221  #       More vCPU instruction implementations, (0x2900)
                                          11222  #-----------------------------------------------------------------------
                                          11223  #
                                          11224  # LEEKA implementation
                                          11225  label('leeka#13')
leeka#13:     2900 c21d  st   [$1d]       11226  st([vTmp])                      #13
              2901 00f9  ld   $f9         11227  ld(min(0,maxTicks-44/2))        #14
              2902 8115  adda [$15]       11228  adda([vTicks])                  #15
              2903 e81e  blt  .leeka#18   11229  blt('.leeka#18')                #16 not enough time left, so retry
              2904 1519  ld   [$19],y     11230  ld([vAC+1],Y)                   #17
              2905 1118  ld   [$18],x     11231  ld([vAC],X)                     #18
              2906 0d00  ld   [y,x]       11232  ld([Y,X])                       #19 peek [vAC]
              2907 de00  st   [y,x++]     11233  st([Y,Xpp])                     #20
              2908 c2b0  st   [$b0]       11234  st([0xB0])                      #21
              2909 0d00  ld   [y,x]       11235  ld([Y,X])                       #22 peek [vAC+1]
              290a de00  st   [y,x++]     11236  st([Y,Xpp])                     #23
              290b c2b1  st   [$b1]       11237  st([0xB1])                      #24
              290c 0d00  ld   [y,x]       11238  ld([Y,X])                       #25 peek [vAC+2]
              290d de00  st   [y,x++]     11239  st([Y,Xpp])                     #26
              290e c2b2  st   [$b2]       11240  st([0xB2])                      #27
              290f 0d00  ld   [y,x]       11241  ld([Y,X])                       #28 peek [vAC+3]
              2910 c2b3  st   [$b3]       11242  st([0xB3])                      #29
              2911 1400  ld   $00,y       11243  ld(0,Y)                         #30
              2912 111d  ld   [$1d],x     11244  ld([vTmp],X)                    #31 dst var
              2913 01b0  ld   [$b0]       11245  ld([0xB0])                      #32
              2914 de00  st   [y,x++]     11246  st([Y,Xpp])                     #33 [var.0] = peek [vAC]
              2915 01b1  ld   [$b1]       11247  ld([0xB1])                      #34
              2916 de00  st   [y,x++]     11248  st([Y,Xpp])                     #35 [var.1] = peek [vAC+1]
              2917 01b2  ld   [$b2]       11249  ld([0xB2])                      #36
              2918 de00  st   [y,x++]     11250  st([Y,Xpp])                     #37 [var.2] = peek [vAC+2]
              2919 01b3  ld   [$b3]       11251  ld([0xB3])                      #38
              291a ce00  st   [y,x]       11252  st([Y,X])                       #39 [var.3] = peek [vAC+3]
              291b 1403  ld   $03,y       11253  ld(hi('NEXTY'),Y)               #40
              291c e000  jmp  y,$00       11254  jmp(Y,'NEXTY')                  #41
              291d 00ea  ld   $ea         11255  ld(-44/2)                       #42
                                          11256
                                          11257  label('.leeka#18')
.leeka#18:    291e 0022  ld   $22         11258  ld(hi('PREFX2_PAGE'))           #18 ENTER is at $(n-1)ff, where n = instruction page
              291f c202  st   [$02]       11259  st([vCpuSelect])                #19 restore PREFX2 instruction page
              2920 9401  adda $01,y       11260  adda(1,Y)                       #20 retry instruction
              2921 e000  jmp  y,$00       11261  jmp(Y,'NEXTY')                  #21
              2922 00f4  ld   $f4         11262  ld(-24/2)                       #22
                                          11263
                                          11264
                                          11265  # LOKEA implementation
                                          11266  label('lokea#13')
lokea#13:     2923 1200  ld   ac,x        11267  ld(AC,X)                        #13
              2924 00f9  ld   $f9         11268  ld(min(0,maxTicks-44/2))        #14
              2925 8115  adda [$15]       11269  adda([vTicks])                  #15
              2926 e840  blt  .lokea#18   11270  blt('.lokea#18')                #16 not enough time left, so retry
              2927 1400  ld   $00,y       11271  ld(0,Y)                         #17
              2928 0500  ld   [x]         11272  ld([X])                         #18 var.0
              2929 de00  st   [y,x++]     11273  st([Y,Xpp])                     #19
              292a c2b0  st   [$b0]       11274  st([0xB0])                      #20
              292b 0500  ld   [x]         11275  ld([X])                         #21 var.1
              292c de00  st   [y,x++]     11276  st([Y,Xpp])                     #22
              292d c2b1  st   [$b1]       11277  st([0xB1])                      #23
              292e 0500  ld   [x]         11278  ld([X])                         #24 var.2
              292f de00  st   [y,x++]     11279  st([Y,Xpp])                     #25
              2930 c2b2  st   [$b2]       11280  st([0xB2])                      #26
              2931 0500  ld   [x]         11281  ld([X])                         #27 var.3
              2932 c2b3  st   [$b3]       11282  st([0xB3])                      #28
              2933 1118  ld   [$18],x     11283  ld([vAC],X)                     #29
              2934 1519  ld   [$19],y     11284  ld([vAC+1],Y)                   #30
              2935 01b0  ld   [$b0]       11285  ld([0xB0])                      #31
              2936 de00  st   [y,x++]     11286  st([Y,Xpp])                     #32 poke [vAC], var.0
              2937 01b1  ld   [$b1]       11287  ld([0xB1])                      #33
              2938 de00  st   [y,x++]     11288  st([Y,Xpp])                     #34 poke [vAC], var.1
              2939 01b2  ld   [$b2]       11289  ld([0xB2])                      #35
              293a de00  st   [y,x++]     11290  st([Y,Xpp])                     #36 poke [vAC], var.2
              293b 01b3  ld   [$b3]       11291  ld([0xB3])                      #37
              293c ce00  st   [y,x]       11292  st([Y,X])                       #38 poke [vAC], var.3
              293d 1403  ld   $03,y       11293  ld(hi('REENTER'),Y)             #39
              293e e0cb  jmp  y,$cb       11294  jmp(Y,'REENTER')                #40
              293f 00ea  ld   $ea         11295  ld(-44/2)                       #41
                                          11296
                                          11297  label('.lokea#18')
.lokea#18:    2940 0022  ld   $22         11298  ld(hi('PREFX2_PAGE'))           #18 ENTER is at $(n-1)ff, where n = instruction page
              2941 c202  st   [$02]       11299  st([vCpuSelect])                #19 restore PREFX2 instruction page
              2942 9401  adda $01,y       11300  adda(1,Y)                       #20 retry instruction
              2943 e000  jmp  y,$00       11301  jmp(Y,'NEXTY')                  #21
              2944 00f4  ld   $f4         11302  ld(-24/2)                       #22
                                          11303
                                          11304
                                          11305  # FEEKA implementation
                                          11306  label('feeka#13')
feeka#13:     2945 1519  ld   [$19],y     11307  ld([vAC+1],Y)                   #13
              2946 00f7  ld   $f7         11308  ld(min(0,maxTicks-48/2))        #14
              2947 8115  adda [$15]       11309  adda([vTicks])                  #15
              2948 e867  blt  .feeka#18   11310  blt('.feeka#18')                #16 not enough time left, so retry
              2949 1118  ld   [$18],x     11311  ld([vAC],X)                     #17
              294a 0d00  ld   [y,x]       11312  ld([Y,X])                       #18 peek [vAC]
              294b de00  st   [y,x++]     11313  st([Y,Xpp])                     #19
              294c c2b0  st   [$b0]       11314  st([0xB0])                      #20
              294d 0d00  ld   [y,x]       11315  ld([Y,X])                       #21 peek [vAC+1]
              294e de00  st   [y,x++]     11316  st([Y,Xpp])                     #22
              294f c2b1  st   [$b1]       11317  st([0xB1])                      #23
              2950 0d00  ld   [y,x]       11318  ld([Y,X])                       #24 peek [vAC+2]
              2951 de00  st   [y,x++]     11319  st([Y,Xpp])                     #25
              2952 c2b2  st   [$b2]       11320  st([0xB2])                      #26
              2953 0d00  ld   [y,x]       11321  ld([Y,X])                       #27 peek [vAC+3]
              2954 de00  st   [y,x++]     11322  st([Y,Xpp])                     #28
              2955 c2b3  st   [$b3]       11323  st([0xB3])                      #29
              2956 0d00  ld   [y,x]       11324  ld([Y,X])                       #30 peek [vAC+4]
              2957 c2b4  st   [$b4]       11325  st([0xB4])                      #31
              2958 1400  ld   $00,y       11326  ld(0,Y)                         #32
              2959 111d  ld   [$1d],x     11327  ld([vTmp],X)                    #33 dst var
              295a 01b0  ld   [$b0]       11328  ld([0xB0])                      #34
              295b de00  st   [y,x++]     11329  st([Y,Xpp])                     #35 [var.0] = peek [vAC]
              295c 01b1  ld   [$b1]       11330  ld([0xB1])                      #36
              295d de00  st   [y,x++]     11331  st([Y,Xpp])                     #37 [var.1] = peek [vAC+1]
              295e 01b2  ld   [$b2]       11332  ld([0xB2])                      #38
              295f de00  st   [y,x++]     11333  st([Y,Xpp])                     #39 [var.2] = peek [vAC+2]
              2960 01b3  ld   [$b3]       11334  ld([0xB3])                      #40
              2961 ce00  st   [y,x]       11335  st([Y,X])                       #41 [var.3] = peek [vAC+3]
              2962 01b4  ld   [$b4]       11336  ld([0xB4])                      #42
              2963 ce00  st   [y,x]       11337  st([Y,X])                       #43 [var.4] = peek [vAC+4]
              2964 1403  ld   $03,y       11338  ld(hi('NEXTY'),Y)               #44
              2965 e000  jmp  y,$00       11339  jmp(Y,'NEXTY')                  #45
              2966 00e8  ld   $e8         11340  ld(-48/2)                       #46
                                          11341
                                          11342  label('.feeka#18')
.feeka#18:    2967 0022  ld   $22         11343  ld(hi('PREFX2_PAGE'))           #18 ENTER is at $(n-1)ff, where n = instruction page
              2968 c202  st   [$02]       11344  st([vCpuSelect])                #19 restore PREFX2 instruction page
              2969 9401  adda $01,y       11345  adda(1,Y)                       #20 retry instruction
              296a e000  jmp  y,$00       11346  jmp(Y,'NEXTY')                  #21
              296b 00f4  ld   $f4         11347  ld(-24/2)                       #22
                                          11348
                                          11349
                                          11350  # FOKEA implementation
                                          11351  label('fokea#13')
fokea#13:     296c 1200  ld   ac,x        11352  ld(AC,X)                        #13 var.0
              296d 00f7  ld   $f7         11353  ld(min(0,maxTicks-48/2))        #14
              296e 8115  adda [$15]       11354  adda([vTicks])                  #15
              296f e88e  blt  .fokea#18   11355  blt('.fokea#18')                #16 not enough time left, so retry
              2970 1400  ld   $00,y       11356  ld(0,Y)                         #17
              2971 0500  ld   [x]         11357  ld([X])                         #18 [var.0]
              2972 de00  st   [y,x++]     11358  st([Y,Xpp])                     #19
              2973 c2b0  st   [$b0]       11359  st([0xB0])                      #20
              2974 0500  ld   [x]         11360  ld([X])                         #21 [var.1]
              2975 de00  st   [y,x++]     11361  st([Y,Xpp])                     #22
              2976 c2b1  st   [$b1]       11362  st([0xB1])                      #23
              2977 0500  ld   [x]         11363  ld([X])                         #24 [var.2]
              2978 de00  st   [y,x++]     11364  st([Y,Xpp])                     #25
              2979 c2b2  st   [$b2]       11365  st([0xB2])                      #26
              297a 0500  ld   [x]         11366  ld([X])                         #27 [var.3]
              297b de00  st   [y,x++]     11367  st([Y,Xpp])                     #28
              297c c2b3  st   [$b3]       11368  st([0xB3])                      #29
              297d 0500  ld   [x]         11369  ld([X])                         #30 [var.4]
              297e c2b4  st   [$b4]       11370  st([0xB4])                      #31
              297f 1118  ld   [$18],x     11371  ld([vAC],X)                     #32
              2980 1519  ld   [$19],y     11372  ld([vAC+1],Y)                   #33
              2981 01b0  ld   [$b0]       11373  ld([0xB0])                      #34
              2982 de00  st   [y,x++]     11374  st([Y,Xpp])                     #35 poke [vAC], [var.0]
              2983 01b1  ld   [$b1]       11375  ld([0xB1])                      #36
              2984 de00  st   [y,x++]     11376  st([Y,Xpp])                     #37 poke [vAC], [var.1]
              2985 01b2  ld   [$b2]       11377  ld([0xB2])                      #38
              2986 de00  st   [y,x++]     11378  st([Y,Xpp])                     #39 poke [vAC], [var.2]
              2987 01b3  ld   [$b3]       11379  ld([0xB3])                      #40
              2988 ce00  st   [y,x]       11380  st([Y,X])                       #41 poke [vAC], [var.3]
              2989 01b4  ld   [$b4]       11381  ld([0xB4])                      #42
              298a ce00  st   [y,x]       11382  st([Y,X])                       #43 poke [vAC], [var.4]
              298b 1403  ld   $03,y       11383  ld(hi('NEXTY'),Y)               #44
              298c e000  jmp  y,$00       11384  jmp(Y,'NEXTY')                  #45
              298d 00e8  ld   $e8         11385  ld(-48/2)                       #46
                                          11386
                                          11387  label('.fokea#18')
.fokea#18:    298e 0022  ld   $22         11388  ld(hi('PREFX2_PAGE'))           #18 ENTER is at $(n-1)ff, where n = instruction page
              298f c202  st   [$02]       11389  st([vCpuSelect])                #19 restore PREFX2 instruction page
              2990 9401  adda $01,y       11390  adda(1,Y)                       #20 retry instruction
              2991 e000  jmp  y,$00       11391  jmp(Y,'NEXTY')                  #21
              2992 00f4  ld   $f4         11392  ld(-24/2)                       #22
                                          11393
                                          11394
                                          11395  # SWAPB implementation
                                          11396  label('swapb#13')
swapb#13:     2993 00f8  ld   $f8         11397  ld(min(0,maxTicks-46/2))        #13
              2994 8115  adda [$15]       11398  adda([vTicks])                  #14
              2995 e8b3  blt  .swapb#17   11399  blt('.swapb#17')                #15 not enough time left, so retry
              2996 1400  ld   $00,y       11400  ld(0,Y)                         #16
              2997 0500  ld   [x]         11401  ld([X])                         #17
              2998 de00  st   [y,x++]     11402  st([Y,Xpp])                     #18
              2999 c2b2  st   [$b2]       11403  st([0xB2])                      #19 var1.lo
              299a 0500  ld   [x]         11404  ld([X])                         #20
              299b c2b3  st   [$b3]       11405  st([0xB3])                      #21 var1.hi
              299c 112b  ld   [$2b],x     11406  ld([sysArgs+7],X)               #22 var0
              299d 0500  ld   [x]         11407  ld([X])                         #23
              299e de00  st   [y,x++]     11408  st([Y,Xpp])                     #24
              299f c2b4  st   [$b4]       11409  st([0xB4])                      #25 var0.lo
              29a0 0500  ld   [x]         11410  ld([X])                         #26
              29a1 c2b5  st   [$b5]       11411  st([0xB5])                      #27 var0.hi
              29a2 11b2  ld   [$b2],x     11412  ld([0xB2],X)                    #28
              29a3 15b3  ld   [$b3],y     11413  ld([0xB3],Y)                    #29
              29a4 0d00  ld   [y,x]       11414  ld([Y,X])                       #30
              29a5 c2b1  st   [$b1]       11415  st([0xB1])                      #31 tmp1 = [var1]
              29a6 11b4  ld   [$b4],x     11416  ld([0xB4],X)                    #32
              29a7 15b5  ld   [$b5],y     11417  ld([0xB5],Y)                    #33
              29a8 0d00  ld   [y,x]       11418  ld([Y,X])                       #34
              29a9 c2b0  st   [$b0]       11419  st([0xB0])                      #35 tmp0 = [var0]
              29aa 01b1  ld   [$b1]       11420  ld([0xB1])                      #36
              29ab ce00  st   [y,x]       11421  st([Y,X])                       #37 [var0] = tmp1
              29ac 11b2  ld   [$b2],x     11422  ld([0xB2],X)                    #38
              29ad 15b3  ld   [$b3],y     11423  ld([0xB3],Y)                    #39
              29ae 01b0  ld   [$b0]       11424  ld([0xB0])                      #40
              29af ce00  st   [y,x]       11425  st([Y,X])                       #41 [var1] = tmp0
              29b0 1403  ld   $03,y       11426  ld(hi('NEXTY'),Y)               #42
              29b1 e000  jmp  y,$00       11427  jmp(Y,'NEXTY')                  #43
              29b2 00e9  ld   $e9         11428  ld(-46/2)                       #44
                                          11429
                                          11430  label('.swapb#17')
.swapb#17:    29b3 0021  ld   $21         11431  ld(hi('PREFX3_PAGE'))           #17 ENTER is at $(n-1)ff, where n = instruction page
              29b4 c202  st   [$02]       11432  st([vCpuSelect])                #18 restore PREFX3 instruction page
              29b5 9401  adda $01,y       11433  adda(1,Y)                       #19 retry instruction
              29b6 e0cb  jmp  y,$cb       11434  jmp(Y,'REENTER')                #20
              29b7 00f4  ld   $f4         11435  ld(-24/2)                       #21
                                          11436
                                          11437
                                          11438  # SWAPW implementation
                                          11439  label('swapw#13')
swapw#13:     29b8 00f2  ld   $f2         11440  ld(min(0,maxTicks-58/2))        #13
              29b9 8115  adda [$15]       11441  adda([vTicks])                  #14
              29ba e8e4  blt  .swapw#17   11442  blt('.swapw#17')                #15 not enough time left, so retry
              29bb 1400  ld   $00,y       11443  ld(0,Y)                         #16
              29bc 0500  ld   [x]         11444  ld([X])                         #17
              29bd de00  st   [y,x++]     11445  st([Y,Xpp])                     #18
              29be c2b2  st   [$b2]       11446  st([0xB2])                      #19 var1.lo
              29bf 0500  ld   [x]         11447  ld([X])                         #20
              29c0 c2b3  st   [$b3]       11448  st([0xB3])                      #21 var1.hi
              29c1 112b  ld   [$2b],x     11449  ld([sysArgs+7],X)               #22 var0
              29c2 0500  ld   [x]         11450  ld([X])                         #23
              29c3 de00  st   [y,x++]     11451  st([Y,Xpp])                     #24
              29c4 c2b4  st   [$b4]       11452  st([0xB4])                      #25 var0.lo
              29c5 0500  ld   [x]         11453  ld([X])                         #26
              29c6 c2b5  st   [$b5]       11454  st([0xB5])                      #27 var0.hi
              29c7 11b2  ld   [$b2],x     11455  ld([0xB2],X)                    #28
              29c8 15b3  ld   [$b3],y     11456  ld([0xB3],Y)                    #29
              29c9 0d00  ld   [y,x]       11457  ld([Y,X])                       #30
              29ca de00  st   [y,x++]     11458  st([Y,Xpp])                     #31
              29cb c2b0  st   [$b0]       11459  st([0xB0])                      #32 temp.lo = var1.lo
              29cc 0d00  ld   [y,x]       11460  ld([Y,X])                       #33
              29cd c2b1  st   [$b1]       11461  st([0xB1])                      #34 temp.hi = var1.hi
              29ce 11b4  ld   [$b4],x     11462  ld([0xB4],X)                    #35
              29cf 15b5  ld   [$b5],y     11463  ld([0xB5],Y)                    #36
              29d0 0d00  ld   [y,x]       11464  ld([Y,X])                       #37
              29d1 de00  st   [y,x++]     11465  st([Y,Xpp])                     #38
              29d2 c218  st   [$18]       11466  st([vAC])                       #39
              29d3 0d00  ld   [y,x]       11467  ld([Y,X])                       #40
              29d4 c219  st   [$19]       11468  st([vAC+1])                     #41
              29d5 11b2  ld   [$b2],x     11469  ld([0xB2],X)                    #42
              29d6 15b3  ld   [$b3],y     11470  ld([0xB3],Y)                    #43
              29d7 0118  ld   [$18]       11471  ld([vAC])                       #44
              29d8 de00  st   [y,x++]     11472  st([Y,Xpp])                     #45 var1.lo = var0.lo
              29d9 0119  ld   [$19]       11473  ld([vAC+1])                     #46
              29da ce00  st   [y,x]       11474  st([Y,X])                       #47 var1.lo = var0.lo
              29db 11b4  ld   [$b4],x     11475  ld([0xB4],X)                    #48
              29dc 15b5  ld   [$b5],y     11476  ld([0xB5],Y)                    #49
              29dd 01b0  ld   [$b0]       11477  ld([0xB0])                      #50
              29de de00  st   [y,x++]     11478  st([Y,Xpp])                     #51 var0.lo = temp.lo
              29df 01b1  ld   [$b1]       11479  ld([0xB1])                      #52
              29e0 ce00  st   [y,x]       11480  st([Y,X])                       #53 var0.hi = temp.hi
              29e1 1403  ld   $03,y       11481  ld(hi('NEXTY'),Y)               #54
              29e2 e000  jmp  y,$00       11482  jmp(Y,'NEXTY')                  #55
              29e3 00e3  ld   $e3         11483  ld(-58/2)                       #56
                                          11484
                                          11485  label('.swapw#17')
.swapw#17:    29e4 0021  ld   $21         11486  ld(hi('PREFX3_PAGE'))           #17 ENTER is at $(n-1)ff, where n = instruction page
              29e5 c202  st   [$02]       11487  st([vCpuSelect])                #18 restore PREFX3 instruction page
              29e6 9401  adda $01,y       11488  adda(1,Y)                       #19 retry instruction
              29e7 e0cb  jmp  y,$cb       11489  jmp(Y,'REENTER')                #20
              29e8 00f4  ld   $f4         11490  ld(-24/2)                       #21
                                          11491
                                          11492
              29e9 0200  nop              11493  fillers(until=0xff)
              29ea 0200  nop
              29eb 0200  nop
              * 22 times
              29ff 0200  nop              11494  align(0x100, size=0x100)
                                          11495
                                          11496  #-----------------------------------------------------------------------
                                          11497  #       More vCPU instruction implementations, (0x2A00)
                                          11498  #-----------------------------------------------------------------------
                                          11499  #
                                          11500  # MEEKA implementation
                                          11501  label('meeka#13')
meeka#13:     2a00 c21d  st   [$1d]       11502  st([vTmp])                      #13
              2a01 00ef  ld   $ef         11503  ld(min(0,maxTicks-64/2))        #14
              2a02 8115  adda [$15]       11504  adda([vTicks])                  #15
              2a03 e832  blt  .meeka#18   11505  blt('.meeka#18')                #16 not enough time left, so retry
              2a04 1519  ld   [$19],y     11506  ld([vAC+1],Y)                   #17
              2a05 1118  ld   [$18],x     11507  ld([vAC],X)                     #18
              2a06 0d00  ld   [y,x]       11508  ld([Y,X])                       #19 peek [vAC]
              2a07 de00  st   [y,x++]     11509  st([Y,Xpp])                     #20
              2a08 c2b0  st   [$b0]       11510  st([0xB0])                      #21
              2a09 0d00  ld   [y,x]       11511  ld([Y,X])                       #22 peek [vAC+1]
              2a0a de00  st   [y,x++]     11512  st([Y,Xpp])                     #23
              2a0b c2b1  st   [$b1]       11513  st([0xB1])                      #24
              2a0c 0d00  ld   [y,x]       11514  ld([Y,X])                       #25 peek [vAC+2]
              2a0d de00  st   [y,x++]     11515  st([Y,Xpp])                     #26
              2a0e c2b2  st   [$b2]       11516  st([0xB2])                      #27
              2a0f 0d00  ld   [y,x]       11517  ld([Y,X])                       #28 peek [vAC+3]
              2a10 de00  st   [y,x++]     11518  st([Y,Xpp])                     #29
              2a11 c2b3  st   [$b3]       11519  st([0xB3])                      #30
              2a12 0d00  ld   [y,x]       11520  ld([Y,X])                       #31 peek [vAC+4]
              2a13 de00  st   [y,x++]     11521  st([Y,Xpp])                     #32
              2a14 c2b4  st   [$b4]       11522  st([0xB4])                      #33
              2a15 0d00  ld   [y,x]       11523  ld([Y,X])                       #34 peek [vAC+5]
              2a16 de00  st   [y,x++]     11524  st([Y,Xpp])                     #35
              2a17 c2b5  st   [$b5]       11525  st([0xB5])                      #36
              2a18 0d00  ld   [y,x]       11526  ld([Y,X])                       #37 peek [vAC+6]
              2a19 de00  st   [y,x++]     11527  st([Y,Xpp])                     #38
              2a1a c2b6  st   [$b6]       11528  st([0xB6])                      #39
              2a1b 0d00  ld   [y,x]       11529  ld([Y,X])                       #40 peek [vAC+7]
              2a1c c2b7  st   [$b7]       11530  st([0xB7])                      #41
              2a1d 1400  ld   $00,y       11531  ld(0,Y)                         #42
              2a1e 111d  ld   [$1d],x     11532  ld([vTmp],X)                    #43 dst var
              2a1f 01b0  ld   [$b0]       11533  ld([0xB0])                      #44
              2a20 de00  st   [y,x++]     11534  st([Y,Xpp])                     #45 [var.0] = peek [vAC]
              2a21 01b1  ld   [$b1]       11535  ld([0xB1])                      #46
              2a22 de00  st   [y,x++]     11536  st([Y,Xpp])                     #47 [var.1] = peek [vAC+1]
              2a23 01b2  ld   [$b2]       11537  ld([0xB2])                      #48
              2a24 de00  st   [y,x++]     11538  st([Y,Xpp])                     #49 [var.2] = peek [vAC+2]
              2a25 01b3  ld   [$b3]       11539  ld([0xB3])                      #50
              2a26 de00  st   [y,x++]     11540  st([Y,Xpp])                     #51 [var.3] = peek [vAC+3]
              2a27 01b4  ld   [$b4]       11541  ld([0xB4])                      #52
              2a28 de00  st   [y,x++]     11542  st([Y,Xpp])                     #53 [var.0] = peek [vAC+4]
              2a29 01b5  ld   [$b5]       11543  ld([0xB5])                      #54
              2a2a de00  st   [y,x++]     11544  st([Y,Xpp])                     #55 [var.1] = peek [vAC+5]
              2a2b 01b6  ld   [$b6]       11545  ld([0xB6])                      #56
              2a2c de00  st   [y,x++]     11546  st([Y,Xpp])                     #57 [var.2] = peek [vAC+6]
              2a2d 01b7  ld   [$b7]       11547  ld([0xB7])                      #58
              2a2e ce00  st   [y,x]       11548  st([Y,X])                       #59 [var.3] = peek [vAC+7]
              2a2f 1403  ld   $03,y       11549  ld(hi('NEXTY'),Y)               #60
              2a30 e000  jmp  y,$00       11550  jmp(Y,'NEXTY')                  #61
              2a31 00e0  ld   $e0         11551  ld(-64/2)                       #62
                                          11552
                                          11553  label('.meeka#18')
.meeka#18:    2a32 0022  ld   $22         11554  ld(hi('PREFX2_PAGE'))           #18 ENTER is at $(n-1)ff, where n = instruction page
              2a33 c202  st   [$02]       11555  st([vCpuSelect])                #19 restore PREFX2 instruction page
              2a34 9401  adda $01,y       11556  adda(1,Y)                       #20 retry instruction
              2a35 e000  jmp  y,$00       11557  jmp(Y,'NEXTY')                  #21
              2a36 00f4  ld   $f4         11558  ld(-24/2)                       #22
                                          11559
                                          11560
                                          11561  # MOKEA
                                          11562  label('mokea#13')
mokea#13:     2a37 1200  ld   ac,x        11563  ld(AC,X)                        #13 var
              2a38 00ef  ld   $ef         11564  ld(min(0,maxTicks-64/2))        #14
              2a39 8115  adda [$15]       11565  adda([vTicks])                  #15
              2a3a e869  blt  .mokea#18   11566  blt('.mokea#18')                #16 not enough time left, so retry
              2a3b 1400  ld   $00,y       11567  ld(0,Y)                         #17
              2a3c 0500  ld   [x]         11568  ld([X])                         #18 var.0
              2a3d de00  st   [y,x++]     11569  st([Y,Xpp])                     #19
              2a3e c2b0  st   [$b0]       11570  st([0xB0])                      #20
              2a3f 0500  ld   [x]         11571  ld([X])                         #21 var.1
              2a40 de00  st   [y,x++]     11572  st([Y,Xpp])                     #22
              2a41 c2b1  st   [$b1]       11573  st([0xB1])                      #23
              2a42 0500  ld   [x]         11574  ld([X])                         #24 var.2
              2a43 de00  st   [y,x++]     11575  st([Y,Xpp])                     #25
              2a44 c2b2  st   [$b2]       11576  st([0xB2])                      #26
              2a45 0500  ld   [x]         11577  ld([X])                         #27 var.3
              2a46 de00  st   [y,x++]     11578  st([Y,Xpp])                     #28
              2a47 c2b3  st   [$b3]       11579  st([0xB3])                      #29
              2a48 0500  ld   [x]         11580  ld([X])                         #30 var.4
              2a49 de00  st   [y,x++]     11581  st([Y,Xpp])                     #31
              2a4a c2b4  st   [$b4]       11582  st([0xB4])                      #32
              2a4b 0500  ld   [x]         11583  ld([X])                         #33 var.5
              2a4c de00  st   [y,x++]     11584  st([Y,Xpp])                     #34
              2a4d c2b5  st   [$b5]       11585  st([0xB5])                      #35
              2a4e 0500  ld   [x]         11586  ld([X])                         #36 var.6
              2a4f de00  st   [y,x++]     11587  st([Y,Xpp])                     #37
              2a50 c2b6  st   [$b6]       11588  st([0xB6])                      #38
              2a51 0500  ld   [x]         11589  ld([X])                         #39 var.7
              2a52 de00  st   [y,x++]     11590  st([Y,Xpp])                     #40
              2a53 c2b7  st   [$b7]       11591  st([0xB7])                      #41
              2a54 1118  ld   [$18],x     11592  ld([vAC],X)                     #42
              2a55 1519  ld   [$19],y     11593  ld([vAC+1],Y)                   #43
              2a56 01b0  ld   [$b0]       11594  ld([0xB0])                      #44
              2a57 de00  st   [y,x++]     11595  st([Y,Xpp])                     #45 poke [vAC], var.0
              2a58 01b1  ld   [$b1]       11596  ld([0xB1])                      #46
              2a59 de00  st   [y,x++]     11597  st([Y,Xpp])                     #47 poke [vAC], var.1
              2a5a 01b2  ld   [$b2]       11598  ld([0xB2])                      #48
              2a5b de00  st   [y,x++]     11599  st([Y,Xpp])                     #49 poke [vAC], var.2
              2a5c 01b3  ld   [$b3]       11600  ld([0xB3])                      #50
              2a5d de00  st   [y,x++]     11601  st([Y,Xpp])                     #51 poke [vAC], var.3
              2a5e 01b4  ld   [$b4]       11602  ld([0xB4])                      #52
              2a5f de00  st   [y,x++]     11603  st([Y,Xpp])                     #53 poke [vAC], var.4
              2a60 01b5  ld   [$b5]       11604  ld([0xB5])                      #54
              2a61 de00  st   [y,x++]     11605  st([Y,Xpp])                     #55 poke [vAC], var.5
              2a62 01b6  ld   [$b6]       11606  ld([0xB6])                      #56
              2a63 de00  st   [y,x++]     11607  st([Y,Xpp])                     #57 poke [vAC], var.6
              2a64 01b7  ld   [$b7]       11608  ld([0xB7])                      #58
              2a65 de00  st   [y,x++]     11609  st([Y,Xpp])                     #59 poke [vAC], var.7
              2a66 1403  ld   $03,y       11610  ld(hi('NEXTY'),Y)               #60
              2a67 e000  jmp  y,$00       11611  jmp(Y,'NEXTY')                  #61
              2a68 00e0  ld   $e0         11612  ld(-64/2)                       #62
                                          11613
                                          11614  label('.mokea#18')
.mokea#18:    2a69 0022  ld   $22         11615  ld(hi('PREFX2_PAGE'))           #18 ENTER is at $(n-1)ff, where n = instruction page
              2a6a c202  st   [$02]       11616  st([vCpuSelect])                #19 restore PREFX2 instruction page
              2a6b 9401  adda $01,y       11617  adda(1,Y)                       #20 retry instruction
              2a6c e000  jmp  y,$00       11618  jmp(Y,'NEXTY')                  #21
              2a6d 00f4  ld   $f4         11619  ld(-24/2)                       #22
                                          11620
                                          11621
                                          11622  # NEEKA implementation
                                          11623  label('neeka#13')
neeka#13:     2a6e 00fe  ld   $fe         11624  ld(min(0,maxTicks-34/2))        #13
              2a6f 8115  adda [$15]       11625  adda([vTicks])                  #14
              2a70 e885  blt  .neeka#17   11626  blt('.neeka#17')                #15 not enough time left, so retry
              2a71 012b  ld   [$2b]       11627  ld([sysArgs+7])                 #16 number of bytes to peek
              2a72 a001  suba $01         11628  suba(1)                         #17
              2a73 f478  bge  .neeka#20   11629  bge('.neeka#20')                #18
              2a74 c22b  st   [$2b]       11630  st([sysArgs+7])                 #19
              2a75 1403  ld   $03,y       11631  ld(hi('NEXTY'),Y)               #20 done
              2a76 e000  jmp  y,$00       11632  jmp(Y,'NEXTY')                  #21
              2a77 00f4  ld   $f4         11633  ld(-24/2)                       #22
                                          11634
                                          11635  label('.neeka#20')
.neeka#20:    2a78 1519  ld   [$19],y     11636  ld([vAC+1],Y)                   #20
              2a79 9118  adda [$18],x     11637  adda([vAC],X)                   #21
              2a7a 0d00  ld   [y,x]       11638  ld([Y,X])                       #22 peek [vAC + index]
              2a7b c21d  st   [$1d]       11639  st([vTmp])                      #23
              2a7c 012a  ld   [$2a]       11640  ld([sysArgs+6])                 #24
              2a7d 912b  adda [$2b],x     11641  adda([sysArgs+7],X)             #25 var + index
              2a7e 011d  ld   [$1d]       11642  ld([vTmp])                      #26
              2a7f c600  st   [x]         11643  st([X])                         #27 [var + index] = peek [vAC + index]
              2a80 0021  ld   $21         11644  ld(hi('PREFX3_PAGE'))           #28 ENTER is at $(n-1)ff, where n = instruction page
              2a81 c202  st   [$02]       11645  st([vCpuSelect])                #29 restore PREFX3 instruction page
              2a82 9401  adda $01,y       11646  adda(1,Y)                       #30 restart instruction
              2a83 e000  jmp  y,$00       11647  jmp(Y,'NEXTY')                  #31
              2a84 00ef  ld   $ef         11648  ld(-34/2)                       #32
                                          11649
                                          11650  label('.neeka#17')
.neeka#17:    2a85 0021  ld   $21         11651  ld(hi('PREFX3_PAGE'))           #17 ENTER is at $(n-1)ff, where n = instruction page
              2a86 c202  st   [$02]       11652  st([vCpuSelect])                #18 restore PREFX3 instruction page
              2a87 9401  adda $01,y       11653  adda(1,Y)                       #19 retry instruction
              2a88 e0cb  jmp  y,$cb       11654  jmp(Y,'REENTER')                #20
              2a89 00f4  ld   $f4         11655  ld(-24/2)                       #21
                                          11656
                                          11657
                                          11658  # NOKEA implementation
                                          11659  label('nokea#13')
nokea#13:     2a8a 00fe  ld   $fe         11660  ld(min(0,maxTicks-34/2))        #13
              2a8b 8115  adda [$15]       11661  adda([vTicks])                  #14
              2a8c e8a1  blt  .nokea#17   11662  blt('.nokea#17')                #15 not enough time left, so retry
              2a8d 012b  ld   [$2b]       11663  ld([sysArgs+7])                 #16 number of bytes to peek
              2a8e a001  suba $01         11664  suba(1)                         #17
              2a8f f494  bge  .nokea#20   11665  bge('.nokea#20')                #18
              2a90 c22b  st   [$2b]       11666  st([sysArgs+7])                 #19
              2a91 1403  ld   $03,y       11667  ld(hi('NEXTY'),Y)               #20 done
              2a92 e000  jmp  y,$00       11668  jmp(Y,'NEXTY')                  #21
              2a93 00f4  ld   $f4         11669  ld(-24/2)                       #22
                                          11670
                                          11671  label('.nokea#20')
.nokea#20:    2a94 912a  adda [$2a],x     11672  adda([sysArgs+6],X)             #20 var + index
              2a95 0500  ld   [x]         11673  ld([X])                         #21
              2a96 c21d  st   [$1d]       11674  st([vTmp])                      #22
              2a97 1519  ld   [$19],y     11675  ld([vAC+1],Y)                   #23
              2a98 012b  ld   [$2b]       11676  ld([sysArgs+7])                 #24
              2a99 9118  adda [$18],x     11677  adda([vAC],X)                   #25 vAC + index
              2a9a 011d  ld   [$1d]       11678  ld([vTmp])                      #26
              2a9b ce00  st   [y,x]       11679  st([Y,X])                       #27 [vAC + index] = peek [var + index]
              2a9c 0021  ld   $21         11680  ld(hi('PREFX3_PAGE'))           #28 ENTER is at $(n-1)ff, where n = instruction page
              2a9d c202  st   [$02]       11681  st([vCpuSelect])                #29 restore PREFX3 instruction page
              2a9e 9401  adda $01,y       11682  adda(1,Y)                       #30 restart instruction
              2a9f e000  jmp  y,$00       11683  jmp(Y,'NEXTY')                  #31
              2aa0 00ef  ld   $ef         11684  ld(-34/2)                       #32
                                          11685
                                          11686  label('.nokea#17')
.nokea#17:    2aa1 0021  ld   $21         11687  ld(hi('PREFX3_PAGE'))           #17 ENTER is at $(n-1)ff, where n = instruction page
              2aa2 c202  st   [$02]       11688  st([vCpuSelect])                #18 restore PREFX3 instruction page
              2aa3 9401  adda $01,y       11689  adda(1,Y)                       #19 retry instruction
              2aa4 e0cb  jmp  y,$cb       11690  jmp(Y,'REENTER')                #20
              2aa5 00f4  ld   $f4         11691  ld(-24/2)                       #21
                                          11692
                                          11693
                                          11694  # DJNE implementation
                                          11695  label('djne#13')
djne#13:      2aa6 de00  st   [y,x++]     11696  st([Y,Xpp])                     #13 X++
              2aa7 c21d  st   [$1d]       11697  st([vTmp])                      #14 var
              2aa8 00f8  ld   $f8         11698  ld(min(0,maxTicks-46/2))        #15
              2aa9 8115  adda [$15]       11699  adda([vTicks])                  #16
              2aaa e8d3  blt  .djne#19    11700  blt('.djne#19')                 #17 not enough time left, so retry
              2aab 0d00  ld   [y,x]       11701  ld([Y,X])                       #18
              2aac de00  st   [y,x++]     11702  st([Y,Xpp])                     #19 X++
              2aad c22a  st   [$2a]       11703  st([sysArgs+6])                 #20 jump addr.lo
              2aae 0d00  ld   [y,x]       11704  ld([Y,X])                       #21
              2aaf c22b  st   [$2b]       11705  st([sysArgs+7])                 #22 jump addr.hi
              2ab0 1400  ld   $00,y       11706  ld(0,Y)                         #23
              2ab1 111d  ld   [$1d],x     11707  ld([vTmp],X)                    #24
              2ab2 0500  ld   [x]         11708  ld([X])                         #25 count.lo
              2ab3 a001  suba $01         11709  suba(1)                         #26
              2ab4 de00  st   [y,x++]     11710  st([Y,Xpp])                     #27 count.lo-- X++
              2ab5 4500  ora  [x]         11711  ora([X])                        #28 count.lo | count.hi
              2ab6 f0c6  beq  .djne#31    11712  beq('.djne#31')                 #19 count = 0
              2ab7 111d  ld   [$1d],x     11713  ld([vTmp],X)                    #30
              2ab8 0500  ld   [x]         11714  ld([X])                         #31 count.lo
              2ab9 de00  st   [y,x++]     11715  st([Y,Xpp])                     #32 X++
              2aba 60ff  xora $ff         11716  xora(0xFF)                      #33 if low byte is 0xFF
              2abb eccc  bne  .djne#36    11717  bne('.djne#36')                 #34
              2abc 0500  ld   [x]         11718  ld([X])                         #35 count.hi
              2abd a001  suba $01         11719  suba(1)                         #36
              2abe c600  st   [x]         11720  st([X])                         #37
              2abf 012a  ld   [$2a]       11721  ld([sysArgs+6])                 #38 jump
              2ac0 c216  st   [$16]       11722  st([vPC])                       #39
              2ac1 012b  ld   [$2b]       11723  ld([sysArgs+7])                 #40
              2ac2 c217  st   [$17]       11724  st([vPC+1])                     #41
              2ac3 1403  ld   $03,y       11725  ld(hi('NEXTY'),Y)               #42
              2ac4 e000  jmp  y,$00       11726  jmp(Y,'NEXTY')                  #43
              2ac5 00e9  ld   $e9         11727  ld(-46/2)                       #44
                                          11728
                                          11729  label('.djne#31')
.djne#31:     2ac6 0116  ld   [$16]       11730  ld([vPC])                       #31 done
              2ac7 8002  adda $02         11731  adda(2)                         #32
              2ac8 c216  st   [$16]       11732  st([vPC])                       #33
              2ac9 1403  ld   $03,y       11733  ld(hi('NEXTY'),Y)               #34
              2aca e000  jmp  y,$00       11734  jmp(Y,'NEXTY')                  #35
              2acb 00ed  ld   $ed         11735  ld(-38/2)                       #36
                                          11736
                                          11737  label('.djne#36')
.djne#36:     2acc 012a  ld   [$2a]       11738  ld([sysArgs+6])                 #36 jump
              2acd c216  st   [$16]       11739  st([vPC])                       #37
              2ace 012b  ld   [$2b]       11740  ld([sysArgs+7])                 #38
              2acf c217  st   [$17]       11741  st([vPC+1])                     #39
              2ad0 1403  ld   $03,y       11742  ld(hi('NEXTY'),Y)               #40
              2ad1 e000  jmp  y,$00       11743  jmp(Y,'NEXTY')                  #41
              2ad2 00ea  ld   $ea         11744  ld(-44/2)                       #42
                                          11745
                                          11746  label('.djne#19')
.djne#19:     2ad3 0116  ld   [$16]       11747  ld([vPC])                       #19 retry
              2ad4 a002  suba $02         11748  suba(2)                         #20
              2ad5 c216  st   [$16]       11749  st([vPC])                       #21
              2ad6 1403  ld   $03,y       11750  ld(hi('NEXTY'),Y)               #22
              2ad7 e000  jmp  y,$00       11751  jmp(Y,'NEXTY')                  #23
              2ad8 00f3  ld   $f3         11752  ld(-26/2)                       #24
                                          11753
                                          11754
              2ad9 0200  nop              11755  fillers(until=0xff)
              2ada 0200  nop
              2adb 0200  nop
              * 38 times
              2aff 0200  nop              11756  align(0x100, size=0x100)
                                          11757
                                          11758  #-----------------------------------------------------------------------
                                          11759  #       More vCPU instruction implementations, (0x2B00)
                                          11760  #-----------------------------------------------------------------------
                                          11761  #
                                          11762  # DJGE implementation
                                          11763  label('djge#13')
djge#13:      2b00 de00  st   [y,x++]     11764  st([Y,Xpp])                     #13
              2b01 c21d  st   [$1d]       11765  st([vTmp])                      #14 var
              2b02 00fa  ld   $fa         11766  ld(min(0,maxTicks-42/2))        #15
              2b03 8115  adda [$15]       11767  adda([vTicks])                  #16
              2b04 e829  blt  .djge#19    11768  blt('.djge#19')                 #17 not enough time left, so retry
              2b05 0d00  ld   [y,x]       11769  ld([Y,X])                       #18
              2b06 de00  st   [y,x++]     11770  st([Y,Xpp])                     #19
              2b07 c22a  st   [$2a]       11771  st([sysArgs+6])                 #20 jump addr.lo
              2b08 0d00  ld   [y,x]       11772  ld([Y,X])                       #21
              2b09 c22b  st   [$2b]       11773  st([sysArgs+7])                 #22 jump addr.hi
              2b0a 1400  ld   $00,y       11774  ld(0,Y)                         #23
              2b0b 111d  ld   [$1d],x     11775  ld([vTmp],X)                    #24
              2b0c 0500  ld   [x]         11776  ld([X])                         #25 count.lo
              2b0d a001  suba $01         11777  suba(1)                         #26
              2b0e de00  st   [y,x++]     11778  st([Y,Xpp])                     #27 count.lo-- X++
              2b0f 60ff  xora $ff         11779  xora(0xFF)                      #28 if low byte is 0xFF
              2b10 ec1c  bne  .djge#31    11780  bne('.djge#31')                 #29
              2b11 0500  ld   [x]         11781  ld([X])                         #30 count.hi
              2b12 f023  beq  .djge#33    11782  beq('.djge#33')                 #31
              2b13 a001  suba $01         11783  suba(1)                         #32
              2b14 c600  st   [x]         11784  st([X])                         #33
              2b15 012a  ld   [$2a]       11785  ld([sysArgs+6])                 #34 jump
              2b16 c216  st   [$16]       11786  st([vPC])                       #35
              2b17 012b  ld   [$2b]       11787  ld([sysArgs+7])                 #36
              2b18 c217  st   [$17]       11788  st([vPC+1])                     #37
              2b19 1403  ld   $03,y       11789  ld(hi('NEXTY'),Y)               #38
              2b1a e000  jmp  y,$00       11790  jmp(Y,'NEXTY')                  #39
              2b1b 00eb  ld   $eb         11791  ld(-42/2)                       #40
                                          11792
                                          11793  label('.djge#31')
.djge#31:     2b1c 012a  ld   [$2a]       11794  ld([sysArgs+6])                 #31 jump
              2b1d c216  st   [$16]       11795  st([vPC])                       #32
              2b1e 012b  ld   [$2b]       11796  ld([sysArgs+7])                 #33
              2b1f c217  st   [$17]       11797  st([vPC+1])                     #34
              2b20 1403  ld   $03,y       11798  ld(hi('REENTER'),Y)             #35
              2b21 e0cb  jmp  y,$cb       11799  jmp(Y,'REENTER')                #36
              2b22 00ec  ld   $ec         11800  ld(-40/2)                       #37
                                          11801
                                          11802  label('.djge#33')
.djge#33:     2b23 0116  ld   [$16]       11803  ld([vPC])                       #33 done
              2b24 8002  adda $02         11804  adda(2)                         #34
              2b25 c216  st   [$16]       11805  st([vPC])                       #35
              2b26 1403  ld   $03,y       11806  ld(hi('NEXTY'),Y)               #36
              2b27 e000  jmp  y,$00       11807  jmp(Y,'NEXTY')                  #37
              2b28 00ec  ld   $ec         11808  ld(-40/2)                       #38
                                          11809
                                          11810  label('.djge#19')
.djge#19:     2b29 0116  ld   [$16]       11811  ld([vPC])                       #19 retry
              2b2a a002  suba $02         11812  suba(2)                         #20
              2b2b c216  st   [$16]       11813  st([vPC])                       #21
              2b2c 1403  ld   $03,y       11814  ld(hi('NEXTY'),Y)               #22
              2b2d e000  jmp  y,$00       11815  jmp(Y,'NEXTY')                  #23
              2b2e 00f3  ld   $f3         11816  ld(-26/2)                       #24
                                          11817
                                          11818
                                          11819  # ADDVL
                                          11820  label('addvl#13')
addvl#13:     2b2f 0500  ld   [x]         11821  ld([X])                         #13
              2b30 c21d  st   [$1d]       11822  st([vTmp])                      #14 save src.0
              2b31 112b  ld   [$2b],x     11823  ld([sysArgs+7],X)               #15 dst.0
              2b32 00e8  ld   $e8         11824  ld(min(0,maxTicks-78/2))        #16
              2b33 8115  adda [$15]       11825  adda([vTicks])                  #17
              2b34 e874  blt  .addvl#20   11826  blt('.addvl#20')                #18 not enough time left, so retry
              2b35 011d  ld   [$1d]       11827  ld([vTmp])                      #19 src.0
              2b36 8500  adda [x]         11828  adda([X])                       #20
              2b37 c600  st   [x]         11829  st([X])                         #21 dst.0 += src.0
              2b38 e83c  blt  .addvl#24   11830  bmi('.addvl#24')                #22 carry
              2b39 a11d  suba [$1d]       11831  suba([vTmp])                    #23 original dst.0
              2b3a fc3e  bra  .addvl#26   11832  bra('.addvl#26')                #24
              2b3b 411d  ora  [$1d]       11833  ora([vTmp])                     #25 carry in bit 7
                                          11834
                                          11835  label('.addvl#24')
.addvl#24:    2b3c 211d  anda [$1d]       11836  anda([vTmp])                    #24 carry in bit 7
              2b3d 0200  nop              11837  nop()                           #25
                                          11838
                                          11839  label('.addvl#26')
.addvl#26:    2b3e 3080  anda $80,x       11840  anda(0x80,X)                    #26 carry to bit 0
              2b3f 0500  ld   [x]         11841  ld([X])                         #27
              2b40 c21d  st   [$1d]       11842  st([vTmp])                      #28 store carry
              2b41 012a  ld   [$2a]       11843  ld([sysArgs+6])                 #29
              2b42 9001  adda $01,x       11844  adda(1,X)                       #30 src.1
              2b43 011d  ld   [$1d]       11845  ld([vTmp])                      #31
              2b44 8500  adda [x]         11846  adda([X])                       #32
              2b45 c21d  st   [$1d]       11847  st([vTmp])                      #33 src.1 += carry
              2b46 012b  ld   [$2b]       11848  ld([sysArgs+7])                 #34
              2b47 9001  adda $01,x       11849  adda(1,X)                       #35
              2b48 011d  ld   [$1d]       11850  ld([vTmp])                      #36
              2b49 8500  adda [x]         11851  adda([X])                       #37
              2b4a c600  st   [x]         11852  st([X])                         #38 dst.1 += src.1
              2b4b e84f  blt  .addvl#41   11853  bmi('.addvl#41')                #39 carry
              2b4c a11d  suba [$1d]       11854  suba([vTmp])                    #40 original dst.1
              2b4d fc51  bra  .addvl#43   11855  bra('.addvl#43')                #41
              2b4e 411d  ora  [$1d]       11856  ora([vTmp])                     #42 carry in bit 7
                                          11857
                                          11858  label('.addvl#41')
.addvl#41:    2b4f 211d  anda [$1d]       11859  anda([vTmp])                    #41 carry in bit 7
              2b50 0200  nop              11860  nop()                           #42
                                          11861
                                          11862  label('.addvl#43')
.addvl#43:    2b51 3080  anda $80,x       11863  anda(0x80,X)                    #43 carry to bit 0
              2b52 0500  ld   [x]         11864  ld([X])                         #44
              2b53 c21d  st   [$1d]       11865  st([vTmp])                      #45 store carry
              2b54 012a  ld   [$2a]       11866  ld([sysArgs+6])                 #46
              2b55 9002  adda $02,x       11867  adda(2,X)                       #47 src.2
              2b56 011d  ld   [$1d]       11868  ld([vTmp])                      #48
              2b57 8500  adda [x]         11869  adda([X])                       #49
              2b58 c21d  st   [$1d]       11870  st([vTmp])                      #50 src.2 += carry
              2b59 012b  ld   [$2b]       11871  ld([sysArgs+7])                 #51
              2b5a 9002  adda $02,x       11872  adda(2,X)                       #52
              2b5b 011d  ld   [$1d]       11873  ld([vTmp])                      #53
              2b5c 8500  adda [x]         11874  adda([X])                       #54
              2b5d c600  st   [x]         11875  st([X])                         #55 dst.2 += src.2
              2b5e e862  blt  .addvl#58   11876  bmi('.addvl#58')                #56 carry
              2b5f a11d  suba [$1d]       11877  suba([vTmp])                    #57 original dst.2
              2b60 fc64  bra  .addvl#60   11878  bra('.addvl#60')                #58
              2b61 411d  ora  [$1d]       11879  ora([vTmp])                     #59 carry in bit 7
                                          11880
                                          11881  label('.addvl#58')
.addvl#58:    2b62 211d  anda [$1d]       11882  anda([vTmp])                    #58 carry in bit 7
              2b63 0200  nop              11883  nop()                           #59
                                          11884
                                          11885  label('.addvl#60')
.addvl#60:    2b64 3080  anda $80,x       11886  anda(0x80,X)                    #60 carry to bit 0
              2b65 0500  ld   [x]         11887  ld([X])                         #61
              2b66 c21d  st   [$1d]       11888  st([vTmp])                      #62 store carry
              2b67 012a  ld   [$2a]       11889  ld([sysArgs+6])                 #63
              2b68 9003  adda $03,x       11890  adda(3,X)                       #64 src.3
              2b69 011d  ld   [$1d]       11891  ld([vTmp])                      #65
              2b6a 8500  adda [x]         11892  adda([X])                       #66
              2b6b c21d  st   [$1d]       11893  st([vTmp])                      #67 src.3 += carry
              2b6c 012b  ld   [$2b]       11894  ld([sysArgs+7])                 #68
              2b6d 9003  adda $03,x       11895  adda(3,X)                       #69
              2b6e 011d  ld   [$1d]       11896  ld([vTmp])                      #70
              2b6f 8500  adda [x]         11897  adda([X])                       #71
              2b70 c600  st   [x]         11898  st([X])                         #72 dst.3 += src.3
              2b71 1403  ld   $03,y       11899  ld(hi('REENTER'),Y)             #73
              2b72 e0cb  jmp  y,$cb       11900  jmp(Y,'REENTER')                #74
              2b73 00d9  ld   $d9         11901  ld(-78/2)                       #75
                                          11902
                                          11903  label('.addvl#20')
.addvl#20:    2b74 0021  ld   $21         11904  ld(hi('PREFX3_PAGE'))           #20 ENTER is at $(n-1)ff, where n = instruction page
              2b75 c202  st   [$02]       11905  st([vCpuSelect])                #21 restore PREFX3 instruction page
              2b76 9401  adda $01,y       11906  adda(1,Y)                       #22 retry instruction
              2b77 e000  jmp  y,$00       11907  jmp(Y,'NEXTY')                  #23
              2b78 00f3  ld   $f3         11908  ld(-26/2)                       #24
                                          11909
                                          11910
                                          11911  # SUBVL
                                          11912  label('subvl#13')
subvl#13:     2b79 0500  ld   [x]         11913  ld([X])                         #13
              2b7a c21d  st   [$1d]       11914  st([vTmp])                      #14 save src.0
              2b7b 112b  ld   [$2b],x     11915  ld([sysArgs+7],X)               #15 dst.0
              2b7c 00ea  ld   $ea         11916  ld(min(0,maxTicks-74/2))        #16
              2b7d 8115  adda [$15]       11917  adda([vTicks])                  #17
              2b7e e8c0  blt  .subvl#20   11918  blt('.subvl#20')                #18 not enough time left, so retry
              2b7f 0500  ld   [x]         11919  ld([X])                         #19 dst.0
              2b80 e885  blt  .subvl#22   11920  bmi('.subvl#22')                #20
              2b81 a11d  suba [$1d]       11921  suba([vTmp])                    #21
              2b82 c600  st   [x]         11922  st([X])                         #22 dst.0 -= src.0
              2b83 fc88  bra  .subvl#25   11923  bra('.subvl#25')                #23
              2b84 411d  ora  [$1d]       11924  ora([vTmp])                     #24 borrow in bit 7
                                          11925
                                          11926  label('.subvl#22')
.subvl#22:    2b85 c600  st   [x]         11927  st([X])                         #22 dst.0 -= src.0
              2b86 211d  anda [$1d]       11928  anda([vTmp])                    #23 borrow in bit 7
              2b87 0200  nop              11929  nop()                           #24
                                          11930
                                          11931  label('.subvl#25')
.subvl#25:    2b88 3080  anda $80,x       11932  anda(0x80,X)                    #25 borrow to bit 0
              2b89 0500  ld   [x]         11933  ld([X])                         #26
              2b8a c2b0  st   [$b0]       11934  st([0xB0])                      #27 store borrow
              2b8b 012a  ld   [$2a]       11935  ld([sysArgs+6])                 #28
              2b8c 9001  adda $01,x       11936  adda(1,X)                       #29
              2b8d 0500  ld   [x]         11937  ld([X])                         #30
              2b8e c21d  st   [$1d]       11938  st([vTmp])                      #31 src.1
              2b8f 012b  ld   [$2b]       11939  ld([sysArgs+7])                 #32
              2b90 9001  adda $01,x       11940  adda(1,X)                       #33
              2b91 0500  ld   [x]         11941  ld([X])                         #34 dst.1
              2b92 e898  blt  .subvl#37   11942  bmi('.subvl#37')                #35
              2b93 a11d  suba [$1d]       11943  suba([vTmp])                    #36
              2b94 a1b0  suba [$b0]       11944  suba([0xB0])                    #37
              2b95 c600  st   [x]         11945  st([X])                         #38 dst.1 = dst.1 - src.1 - borrow
              2b96 fc9c  bra  .subvl#41   11946  bra('.subvl#41')                #39
              2b97 411d  ora  [$1d]       11947  ora([vTmp])                     #40 borrow in bit 7
                                          11948
                                          11949  label('.subvl#37')
.subvl#37:    2b98 a1b0  suba [$b0]       11950  suba([0xB0])                    #37
              2b99 c600  st   [x]         11951  st([X])                         #38 dst.1 = dst.1 - src.1 - borrow
              2b9a 211d  anda [$1d]       11952  anda([vTmp])                    #39 borrow in bit 7
              2b9b 0200  nop              11953  nop()                           #40
                                          11954
                                          11955  label('.subvl#41')
.subvl#41:    2b9c 3080  anda $80,x       11956  anda(0x80,X)                    #41 borrow to bit 0
              2b9d 0500  ld   [x]         11957  ld([X])                         #42
              2b9e c2b0  st   [$b0]       11958  st([0xB0])                      #43 store borrow
              2b9f 012a  ld   [$2a]       11959  ld([sysArgs+6])                 #44
              2ba0 9002  adda $02,x       11960  adda(2,X)                       #45
              2ba1 0500  ld   [x]         11961  ld([X])                         #46
              2ba2 c21d  st   [$1d]       11962  st([vTmp])                      #47 src.2
              2ba3 012b  ld   [$2b]       11963  ld([sysArgs+7])                 #48
              2ba4 9002  adda $02,x       11964  adda(2,X)                       #49
              2ba5 0500  ld   [x]         11965  ld([X])                         #50 dst.2
              2ba6 e8ac  blt  .subvl#53   11966  bmi('.subvl#53')                #51
              2ba7 a11d  suba [$1d]       11967  suba([vTmp])                    #52
              2ba8 a1b0  suba [$b0]       11968  suba([0xB0])                    #53
              2ba9 c600  st   [x]         11969  st([X])                         #54 dst.2 = dst.2 - src.2 - borrow
              2baa fcb0  bra  .subvl#57   11970  bra('.subvl#57')                #55
              2bab 411d  ora  [$1d]       11971  ora([vTmp])                     #56 borrow in bit 7
                                          11972
                                          11973  label('.subvl#53')
.subvl#53:    2bac a1b0  suba [$b0]       11974  suba([0xB0])                    #53
              2bad c600  st   [x]         11975  st([X])                         #54 dst.2 = dst.2 - src.2 - borrow
              2bae 211d  anda [$1d]       11976  anda([vTmp])                    #55 borrow in bit 7
              2baf 0200  nop              11977  nop()                           #56
                                          11978
                                          11979  label('.subvl#57')
.subvl#57:    2bb0 3080  anda $80,x       11980  anda(0x80,X)                    #57 borrow to bit 0
              2bb1 0500  ld   [x]         11981  ld([X])                         #58
              2bb2 c2b0  st   [$b0]       11982  st([0xB0])                      #59 store borrow
              2bb3 012a  ld   [$2a]       11983  ld([sysArgs+6])                 #60
              2bb4 9003  adda $03,x       11984  adda(3,X)                       #61
              2bb5 0500  ld   [x]         11985  ld([X])                         #62
              2bb6 c21d  st   [$1d]       11986  st([vTmp])                      #63 src.3
              2bb7 012b  ld   [$2b]       11987  ld([sysArgs+7])                 #64
              2bb8 9003  adda $03,x       11988  adda(3,X)                       #65 dst.3
              2bb9 0500  ld   [x]         11989  ld([X])                         #66
              2bba a11d  suba [$1d]       11990  suba([vTmp])                    #67
              2bbb a1b0  suba [$b0]       11991  suba([0xB0])                    #68
              2bbc c600  st   [x]         11992  st([X])                         #69 dst.3 = dst.3 - src.3 - borrow
              2bbd 1403  ld   $03,y       11993  ld(hi('NEXTY'),Y)               #70
              2bbe e000  jmp  y,$00       11994  jmp(Y,'NEXTY')                  #71
              2bbf 00db  ld   $db         11995  ld(-74/2)                       #72
                                          11996
                                          11997  label('.subvl#20')
.subvl#20:    2bc0 0021  ld   $21         11998  ld(hi('PREFX3_PAGE'))           #20 ENTER is at $(n-1)ff, where n = instruction page
              2bc1 c202  st   [$02]       11999  st([vCpuSelect])                #21 restore PREFX3 instruction page
              2bc2 9401  adda $01,y       12000  adda(1,Y)                       #22 retry instruction
              2bc3 e000  jmp  y,$00       12001  jmp(Y,'NEXTY')                  #23
              2bc4 00f3  ld   $f3         12002  ld(-26/2)                       #24
                                          12003
                                          12004
                                          12005  # ANDVL
                                          12006  label('andvl#13')
andvl#13:     2bc5 1400  ld   $00,y       12007  ld(0,Y)                         #13
              2bc6 00f8  ld   $f8         12008  ld(min(0,maxTicks-46/2))        #14
              2bc7 8115  adda [$15]       12009  adda([vTicks])                  #15
              2bc8 e8e4  blt  .andvl#18   12010  blt('.andvl#18')                #16 not enough time left, so retry
              2bc9 0d00  ld   [y,x]       12011  ld([Y,X])                       #17 src.0
              2bca de00  st   [y,x++]     12012  st([Y,Xpp])                     #18
              2bcb c2b0  st   [$b0]       12013  st([0xB0])                      #19
              2bcc 0d00  ld   [y,x]       12014  ld([Y,X])                       #20 src.1
              2bcd de00  st   [y,x++]     12015  st([Y,Xpp])                     #21
              2bce c2b1  st   [$b1]       12016  st([0xB1])                      #22
              2bcf 0d00  ld   [y,x]       12017  ld([Y,X])                       #23 src.2
              2bd0 de00  st   [y,x++]     12018  st([Y,Xpp])                     #24
              2bd1 c2b2  st   [$b2]       12019  st([0xB2])                      #25
              2bd2 0500  ld   [x]         12020  ld([X])                         #26 src.3
              2bd3 c2b3  st   [$b3]       12021  st([0xB3])                      #27
              2bd4 112b  ld   [$2b],x     12022  ld([sysArgs+7],X)               #28
              2bd5 0500  ld   [x]         12023  ld([X])                         #29 dst.0
              2bd6 21b0  anda [$b0]       12024  anda([0xB0])                    #30
              2bd7 de00  st   [y,x++]     12025  st([Y,Xpp])                     #31 dst.0 &= src.0
              2bd8 0500  ld   [x]         12026  ld([X])                         #32 dst.1
              2bd9 21b1  anda [$b1]       12027  anda([0xB1])                    #33
              2bda de00  st   [y,x++]     12028  st([Y,Xpp])                     #34 dst.1 &= src.1
              2bdb 0500  ld   [x]         12029  ld([X])                         #35 dst.2
              2bdc 21b2  anda [$b2]       12030  anda([0xB2])                    #36
              2bdd de00  st   [y,x++]     12031  st([Y,Xpp])                     #37 dst.2 &= src.2
              2bde 0500  ld   [x]         12032  ld([X])                         #38 dst.3
              2bdf 21b3  anda [$b3]       12033  anda([0xB3])                    #39
              2be0 de00  st   [y,x++]     12034  st([Y,Xpp])                     #40 dst.3 &= src.3
              2be1 1403  ld   $03,y       12035  ld(hi('REENTER'),Y)             #41
              2be2 e0cb  jmp  y,$cb       12036  jmp(Y,'REENTER')                #42
              2be3 00e9  ld   $e9         12037  ld(-46/2)                       #43
                                          12038
                                          12039  label('.andvl#18')
.andvl#18:    2be4 0021  ld   $21         12040  ld(hi('PREFX3_PAGE'))           #18 ENTER is at $(n-1)ff, where n = instruction page
              2be5 c202  st   [$02]       12041  st([vCpuSelect])                #19 restore PREFX3 instruction page
              2be6 9401  adda $01,y       12042  adda(1,Y)                       #20 retry instruction
              2be7 e000  jmp  y,$00       12043  jmp(Y,'NEXTY')                  #21
              2be8 00f4  ld   $f4         12044  ld(-24/2)                       #22
                                          12045
                                          12046
              2be9 0200  nop              12047  fillers(until=0xff)
              2bea 0200  nop
              2beb 0200  nop
              * 22 times
              2bff 0200  nop              12048  align(0x100, size=0x100)
                                          12049
                                          12050  #-----------------------------------------------------------------------
                                          12051  #       More vCPU instruction implementations, (0x2C00)
                                          12052  #-----------------------------------------------------------------------
                                          12053  #
                                          12054  # ORVL
                                          12055  label('orvl#13')
orvl#13:      2c00 1400  ld   $00,y       12056  ld(0,Y)                         #13
              2c01 00f8  ld   $f8         12057  ld(min(0,maxTicks-46/2))        #14
              2c02 8115  adda [$15]       12058  adda([vTicks])                  #15
              2c03 e81f  blt  .orvl#18    12059  blt('.orvl#18')                 #16 not enough time left, so retry
              2c04 0d00  ld   [y,x]       12060  ld([Y,X])                       #17 src.0
              2c05 de00  st   [y,x++]     12061  st([Y,Xpp])                     #18
              2c06 c2b0  st   [$b0]       12062  st([0xB0])                      #19
              2c07 0d00  ld   [y,x]       12063  ld([Y,X])                       #20 src.1
              2c08 de00  st   [y,x++]     12064  st([Y,Xpp])                     #21
              2c09 c2b1  st   [$b1]       12065  st([0xB1])                      #22
              2c0a 0d00  ld   [y,x]       12066  ld([Y,X])                       #23 src.2
              2c0b de00  st   [y,x++]     12067  st([Y,Xpp])                     #24
              2c0c c2b2  st   [$b2]       12068  st([0xB2])                      #25
              2c0d 0500  ld   [x]         12069  ld([X])                         #26 src.3
              2c0e c2b3  st   [$b3]       12070  st([0xB3])                      #27
              2c0f 112b  ld   [$2b],x     12071  ld([sysArgs+7],X)               #28
              2c10 0500  ld   [x]         12072  ld([X])                         #29 dst.0
              2c11 41b0  ora  [$b0]       12073  ora([0xB0])                     #30
              2c12 de00  st   [y,x++]     12074  st([Y,Xpp])                     #31 dst.0 |= src.0
              2c13 0500  ld   [x]         12075  ld([X])                         #32 dst.1
              2c14 41b1  ora  [$b1]       12076  ora([0xB1])                     #33
              2c15 de00  st   [y,x++]     12077  st([Y,Xpp])                     #34 dst.1 |= src.1
              2c16 0500  ld   [x]         12078  ld([X])                         #35 dst.2
              2c17 41b2  ora  [$b2]       12079  ora([0xB2])                     #36
              2c18 de00  st   [y,x++]     12080  st([Y,Xpp])                     #37 dst.2 |= src.2
              2c19 0500  ld   [x]         12081  ld([X])                         #38 dst.3
              2c1a 41b3  ora  [$b3]       12082  ora([0xB3])                     #39
              2c1b de00  st   [y,x++]     12083  st([Y,Xpp])                     #40 dst.3 |= src.3
              2c1c 1403  ld   $03,y       12084  ld(hi('REENTER'),Y)             #41
              2c1d e0cb  jmp  y,$cb       12085  jmp(Y,'REENTER')                #42
              2c1e 00e9  ld   $e9         12086  ld(-46/2)                       #43
                                          12087
                                          12088  label('.orvl#18')
.orvl#18:     2c1f 0021  ld   $21         12089  ld(hi('PREFX3_PAGE'))           #18 ENTER is at $(n-1)ff, where n = instruction page
              2c20 c202  st   [$02]       12090  st([vCpuSelect])                #19 restore PREFX3 instruction page
              2c21 9401  adda $01,y       12091  adda(1,Y)                       #20 retry instruction
              2c22 e000  jmp  y,$00       12092  jmp(Y,'NEXTY')                  #21
              2c23 00f4  ld   $f4         12093  ld(-24/2)                       #22
                                          12094
                                          12095
                                          12096  # XORVL
                                          12097  label('xorvl#13')
xorvl#13:     2c24 1400  ld   $00,y       12098  ld(0,Y)                         #13
              2c25 00f8  ld   $f8         12099  ld(min(0,maxTicks-46/2))        #14
              2c26 8115  adda [$15]       12100  adda([vTicks])                  #15
              2c27 e843  blt  .xorvl#18   12101  blt('.xorvl#18')                #16 not enough time left, so retry
              2c28 0d00  ld   [y,x]       12102  ld([Y,X])                       #17 src.0
              2c29 de00  st   [y,x++]     12103  st([Y,Xpp])                     #18
              2c2a c2b0  st   [$b0]       12104  st([0xB0])                      #19
              2c2b 0d00  ld   [y,x]       12105  ld([Y,X])                       #20 src.1
              2c2c de00  st   [y,x++]     12106  st([Y,Xpp])                     #21
              2c2d c2b1  st   [$b1]       12107  st([0xB1])                      #22
              2c2e 0d00  ld   [y,x]       12108  ld([Y,X])                       #23 src.2
              2c2f de00  st   [y,x++]     12109  st([Y,Xpp])                     #24
              2c30 c2b2  st   [$b2]       12110  st([0xB2])                      #25
              2c31 0500  ld   [x]         12111  ld([X])                         #26 src.3
              2c32 c2b3  st   [$b3]       12112  st([0xB3])                      #27
              2c33 112b  ld   [$2b],x     12113  ld([sysArgs+7],X)               #28
              2c34 0500  ld   [x]         12114  ld([X])                         #29 dst.0
              2c35 61b0  xora [$b0]       12115  xora([0xB0])                    #30
              2c36 de00  st   [y,x++]     12116  st([Y,Xpp])                     #31 dst.0 ^= src.0
              2c37 0500  ld   [x]         12117  ld([X])                         #32 dst.1
              2c38 61b1  xora [$b1]       12118  xora([0xB1])                    #33
              2c39 de00  st   [y,x++]     12119  st([Y,Xpp])                     #34 dst.1 ^= src.1
              2c3a 0500  ld   [x]         12120  ld([X])                         #35 dst.2
              2c3b 61b2  xora [$b2]       12121  xora([0xB2])                    #36
              2c3c de00  st   [y,x++]     12122  st([Y,Xpp])                     #37 dst.2 ^= src.2
              2c3d 0500  ld   [x]         12123  ld([X])                         #38 dst.3
              2c3e 61b3  xora [$b3]       12124  xora([0xB3])                    #39
              2c3f de00  st   [y,x++]     12125  st([Y,Xpp])                     #40 dst.3 ^= src.3
              2c40 1403  ld   $03,y       12126  ld(hi('REENTER'),Y)             #41
              2c41 e0cb  jmp  y,$cb       12127  jmp(Y,'REENTER')                #42
              2c42 00e9  ld   $e9         12128  ld(-46/2)                       #43
                                          12129
                                          12130  label('.xorvl#18')
.xorvl#18:    2c43 0021  ld   $21         12131  ld(hi('PREFX3_PAGE'))           #18 ENTER is at $(n-1)ff, where n = instruction page
              2c44 c202  st   [$02]       12132  st([vCpuSelect])                #19 restore PREFX3 instruction page
              2c45 9401  adda $01,y       12133  adda(1,Y)                       #20 retry instruction
              2c46 e000  jmp  y,$00       12134  jmp(Y,'NEXTY')                  #21
              2c47 00f4  ld   $f4         12135  ld(-24/2)                       #22
                                          12136
                                          12137
                                          12138  # LSRV implementation
                                          12139  label('lsrv#13')
lsrv#13:      2c48 d22b  st   [$2b],x     12140  st([sysArgs+7],X)               #13 var
              2c49 00f3  ld   $f3         12141  ld(min(0,maxTicks-56/2))        #14
              2c4a 8115  adda [$15]       12142  adda([vTicks])                  #15
              2c4b e865  blt  .lsrv#18    12143  blt('.lsrv#18')                 #16 not enough time left, so retry
              2c4c 1405  ld   $05,y       12144  ld(hi('shiftTable'),Y)          #17 (ac >> 1) table
              2c4d 00cc  ld   $cc         12145  ld('.lsrv#27')                  #18 continuation address
              2c4e c21d  st   [$1d]       12146  st([vTmp])                      #19
              2c4f 0500  ld   [x]         12147  ld([X])                         #20 load byte from var
              2c50 20fe  anda $fe         12148  anda(0xfe)                      #21
              2c51 e200  jmp  y,ac        12149  jmp(Y,AC)                       #22
              2c52 fcff  bra  $ff         12150  bra(255)                        #23 bra shiftTable+255
                                          12151  # continues in page 0x0600 at label('.lsrv#27') fetching shifted byte from 0x0500
                                          12152
                                          12153  label('.lsrv#30')
.lsrv#30:     2c53 012b  ld   [$2b]       12154  ld([sysArgs+7])                 #30 low byte address
              2c54 8001  adda $01         12155  adda(1)                         #31
              2c55 d22a  st   [$2a],x     12156  st([sysArgs+6],X)               #32 high byte address
              2c56 0500  ld   [x]         12157  ld([X])                         #33 bit 0 of high byte
              2c57 2001  anda $01         12158  anda(1)                         #34
              2c58 807f  adda $7f         12159  adda(127)                       #35
              2c59 2080  anda $80         12160  anda(128)                       #36
              2c5a 112b  ld   [$2b],x     12161  ld([sysArgs+7],X)               #37
              2c5b 4500  ora  [x]         12162  ora([X])                        #38
              2c5c c600  st   [x]         12163  st([X])                         #39 transfer to bit 7 of low byte
              2c5d 1405  ld   $05,y       12164  ld(hi('shiftTable'),Y)          #40 (ac >> 1) table
              2c5e 00cf  ld   $cf         12165  ld('.lsrv#51')                  #41 continuation address
              2c5f c21d  st   [$1d]       12166  st([vTmp])                      #42
              2c60 112a  ld   [$2a],x     12167  ld([sysArgs+6],X)               #43
              2c61 0500  ld   [x]         12168  ld([X])                         #44
              2c62 20fe  anda $fe         12169  anda(0b11111110)                #45
              2c63 e200  jmp  y,ac        12170  jmp(Y,AC)                       #46
              2c64 fcff  bra  $ff         12171  bra(255)                        #47 bra shiftTable+255
                                          12172  # continues in page 0x0600 at label('.lsrv#51') fetching shifted byte from 0x0500
                                          12173
                                          12174  label('.lsrv#18')
.lsrv#18:     2c65 0116  ld   [$16]       12175  ld([vPC])                       #18 retry instruction
              2c66 a002  suba $02         12176  suba(2)                         #19
              2c67 c216  st   [$16]       12177  st([vPC])                       #20
              2c68 1403  ld   $03,y       12178  ld(hi('REENTER'),Y)             #21
              2c69 e0cb  jmp  y,$cb       12179  jmp(Y,'REENTER')                #22
              2c6a 00f3  ld   $f3         12180  ld(-26/2)                       #23
                                          12181
                                          12182
                                          12183  # LSRVL implementation
                                          12184  label('lsrvl#13')
lsrvl#13:     2c6b 1405  ld   $05,y       12185  ld(hi('shiftTable'),Y)          #13 (ac >> 1) table
              2c6c 00db  ld   $db         12186  ld(min(0,maxTicks-104/2))       #14
              2c6d 8115  adda [$15]       12187  adda([vTicks])                  #15
              2c6e e8ab  blt  .lsrvl#18   12188  blt('.lsrvl#18')                #16 not enough time left, so retry
              2c6f 00d3  ld   $d3         12189  ld('.lsrvl#26')                 #17 continuation address
              2c70 c21d  st   [$1d]       12190  st([vTmp])                      #18
              2c71 0500  ld   [x]         12191  ld([X])                         #19 load byte 0 from var
              2c72 20fe  anda $fe         12192  anda(0xfe)                      #20
              2c73 e200  jmp  y,ac        12193  jmp(Y,AC)                       #21
              2c74 fcff  bra  $ff         12194  bra(255)                        #22 bra shiftTable+255
                                          12195  # continues in page 0x0600 at label('.lsrvl#26') fetching shifted byte from 0x0500
                                          12196
                                          12197  label('.lsrvl#29')
.lsrvl#29:    2c75 012b  ld   [$2b]       12198  ld([sysArgs+7])                 #29 byte 0 address
              2c76 8001  adda $01         12199  adda(1)                         #30
              2c77 d2b0  st   [$b0],x     12200  st([0xB0],X)                    #31 byte 1 address
              2c78 8001  adda $01         12201  adda(1)                         #32
              2c79 c2b1  st   [$b1]       12202  st([0xB1])                      #33 byte 2 address
              2c7a 8001  adda $01         12203  adda(1)                         #34
              2c7b c2b2  st   [$b2]       12204  st([0xB2])                      #35 byte 3 address
              2c7c 0500  ld   [x]         12205  ld([X])                         #36 bit 0 of byte 1
              2c7d 2001  anda $01         12206  anda(1)                         #37
              2c7e 807f  adda $7f         12207  adda(127)                       #38
              2c7f 2080  anda $80         12208  anda(128)                       #39
              2c80 112b  ld   [$2b],x     12209  ld([sysArgs+7],X)               #40 byte 0 address
              2c81 4500  ora  [x]         12210  ora([X])                        #41
              2c82 c600  st   [x]         12211  st([X])                         #42 transfer to bit 7 of byte 0
              2c83 1405  ld   $05,y       12212  ld(hi('shiftTable'),Y)          #43 (ac >> 1) table
              2c84 00d6  ld   $d6         12213  ld('.lsrvl#54')                 #44 continuation address
              2c85 c21d  st   [$1d]       12214  st([vTmp])                      #45
              2c86 11b0  ld   [$b0],x     12215  ld([0xB0],X)                    #46 byte 1 address
              2c87 0500  ld   [x]         12216  ld([X])                         #47
              2c88 20fe  anda $fe         12217  anda(0b11111110)                #48
              2c89 e200  jmp  y,ac        12218  jmp(Y,AC)                       #49
              2c8a fcff  bra  $ff         12219  bra(255)                        #50 bra shiftTable+255
                                          12220  # continues in page 0x0600 at label('.lsrvl#54') fetching shifted byte from 0x0500
                                          12221
                                          12222  label('.lsrvl#57')
.lsrvl#57:    2c8b 11b1  ld   [$b1],x     12223  ld([0xB1],X)                    #57 byte 2 address
              2c8c 0500  ld   [x]         12224  ld([X])                         #58 bit 0 of byte 2
              2c8d 2001  anda $01         12225  anda(1)                         #59
              2c8e 807f  adda $7f         12226  adda(127)                       #60
              2c8f 2080  anda $80         12227  anda(128)                       #61
              2c90 11b0  ld   [$b0],x     12228  ld([0xB0],X)                    #62 byte 1 address
              2c91 4500  ora  [x]         12229  ora([X])                        #63
              2c92 c600  st   [x]         12230  st([X])                         #64 transfer to bit 7 of byte 1
              2c93 1405  ld   $05,y       12231  ld(hi('shiftTable'),Y)          #65 (ac >> 1) table
              2c94 00d9  ld   $d9         12232  ld('.lsrvl#76')                 #66 continuation address
              2c95 c21d  st   [$1d]       12233  st([vTmp])                      #67
              2c96 11b1  ld   [$b1],x     12234  ld([0xB1],X)                    #68 byte 2 address
              2c97 0500  ld   [x]         12235  ld([X])                         #69
              2c98 20fe  anda $fe         12236  anda(0b11111110)                #70
              2c99 e200  jmp  y,ac        12237  jmp(Y,AC)                       #71
              2c9a fcff  bra  $ff         12238  bra(255)                        #72 bra shiftTable+255
                                          12239  # continues in page 0x0600 at label('.lsrvl#76') fetching shifted byte from 0x0500
                                          12240
                                          12241  label('.lsrvl#79')
.lsrvl#79:    2c9b 11b2  ld   [$b2],x     12242  ld([0xB2],X)                    #79 byte 3 address
              2c9c 0500  ld   [x]         12243  ld([X])                         #80 bit 0 of byte 3
              2c9d 2001  anda $01         12244  anda(1)                         #81
              2c9e 807f  adda $7f         12245  adda(127)                       #82
              2c9f 2080  anda $80         12246  anda(128)                       #83
              2ca0 11b1  ld   [$b1],x     12247  ld([0xB1],X)                    #84 byte 2 address
              2ca1 4500  ora  [x]         12248  ora([X])                        #85
              2ca2 c600  st   [x]         12249  st([X])                         #86 transfer to bit 7 of byte 2
              2ca3 1405  ld   $05,y       12250  ld(hi('shiftTable'),Y)          #87 (ac >> 1) table
              2ca4 00dc  ld   $dc         12251  ld('.lsrvl#98')                 #88 continuation address
              2ca5 c21d  st   [$1d]       12252  st([vTmp])                      #89
              2ca6 11b2  ld   [$b2],x     12253  ld([0xB2],X)                    #90 byte 3 address
              2ca7 0500  ld   [x]         12254  ld([X])                         #91
              2ca8 20fe  anda $fe         12255  anda(0b11111110)                #92
              2ca9 e200  jmp  y,ac        12256  jmp(Y,AC)                       #93
              2caa fcff  bra  $ff         12257  bra(255)                        #94 bra shiftTable+255
                                          12258  # continues in page 0x0600 at label('.lsrvl#98') fetching shifted byte from 0x0500
                                          12259
                                          12260  label('.lsrvl#18')
.lsrvl#18:    2cab 0022  ld   $22         12261  ld(hi('PREFX2_PAGE'))           #18 ENTER is at $(n-1)ff, where n = instruction page
              2cac c202  st   [$02]       12262  st([vCpuSelect])                #19 restore PREFX2 instruction page
              2cad 9401  adda $01,y       12263  adda(1,Y)                       #20 retry instruction
              2cae e000  jmp  y,$00       12264  jmp(Y,'NEXTY')                  #21
              2caf 00f4  ld   $f4         12265  ld(-24/2)                       #22
                                          12266
                                          12267
                                          12268  # LSLVL implementation
                                          12269  label('lslvl#13')
lslvl#13:     2cb0 1400  ld   $00,y       12270  ld(0,Y)                         #13
              2cb1 00f3  ld   $f3         12271  ld(min(0,maxTicks-56/2))        #14
              2cb2 8115  adda [$15]       12272  adda([vTicks])                  #15
              2cb3 e8de  blt  .lslvl#18   12273  blt('.lslvl#18')                #16 not enough time left, so retry
              2cb4 0500  ld   [x]         12274  ld([X])                         #17
              2cb5 f4b8  bge  $2cb8       12275  bge(pc()+3)                     #18
              2cb6 fcb9  bra  $2cb9       12276  bra(pc()+3)                     #19
              2cb7 0001  ld   $01         12277  ld(1)                           #20
              2cb8 0000  ld   $00         12278  ld(0)                           #20
              2cb9 c2b0  st   [$b0]       12279  st([0xB0])                      #21 (var.0 & 0x80) >>7
              2cba 0500  ld   [x]         12280  ld([X])                         #22
              2cbb 8500  adda [x]         12281  adda([X])                       #23
              2cbc de00  st   [y,x++]     12282  st([Y,Xpp])                     #24 var.0 <<1
              2cbd 0500  ld   [x]         12283  ld([X])                         #25
              2cbe f4c1  bge  $2cc1       12284  bge(pc()+3)                     #26
              2cbf fcc2  bra  $2cc2       12285  bra(pc()+3)                     #27
              2cc0 0001  ld   $01         12286  ld(1)                           #28
              2cc1 0000  ld   $00         12287  ld(0)                           #28
              2cc2 c2b1  st   [$b1]       12288  st([0xB1])                      #29 (var.1 & 0x80) >>7
              2cc3 0500  ld   [x]         12289  ld([X])                         #30
              2cc4 8500  adda [x]         12290  adda([X])                       #31
              2cc5 41b0  ora  [$b0]       12291  ora([0xB0])                     #32
              2cc6 de00  st   [y,x++]     12292  st([Y,Xpp])                     #33 (var.1 <<1) | [0xB0]
              2cc7 0500  ld   [x]         12293  ld([X])                         #34
              2cc8 f4cb  bge  $2ccb       12294  bge(pc()+3)                     #35
              2cc9 fccc  bra  $2ccc       12295  bra(pc()+3)                     #36
              2cca 0001  ld   $01         12296  ld(1)                           #37
              2ccb 0000  ld   $00         12297  ld(0)                           #37
              2ccc c2b0  st   [$b0]       12298  st([0xB0])                      #38 (var.2 & 0x80) >>7
              2ccd 0500  ld   [x]         12299  ld([X])                         #39
              2cce 8500  adda [x]         12300  adda([X])                       #40
              2ccf 41b1  ora  [$b1]       12301  ora([0xB1])                     #41
              2cd0 de00  st   [y,x++]     12302  st([Y,Xpp])                     #42 (var.2 <<1) | [0xB1]
              2cd1 0500  ld   [x]         12303  ld([X])                         #43
              2cd2 f4d5  bge  $2cd5       12304  bge(pc()+3)                     #44
              2cd3 fcd6  bra  $2cd6       12305  bra(pc()+3)                     #45
              2cd4 0001  ld   $01         12306  ld(1)                           #46
              2cd5 0000  ld   $00         12307  ld(0)                           #46
              2cd6 c2b1  st   [$b1]       12308  st([0xB1])                      #47 (var.3 & 0x80) >>7
              2cd7 0500  ld   [x]         12309  ld([X])                         #48
              2cd8 8500  adda [x]         12310  adda([X])                       #49
              2cd9 41b0  ora  [$b0]       12311  ora([0xB0])                     #50
              2cda de00  st   [y,x++]     12312  st([Y,Xpp])                     #51 (var.3 <<1) | [0xB0]
              2cdb 1403  ld   $03,y       12313  ld(hi('NEXTY'),Y)               #52
              2cdc e000  jmp  y,$00       12314  jmp(Y,'NEXTY')                  #53
              2cdd 00e4  ld   $e4         12315  ld(-56/2)                       #54
                                          12316
                                          12317  label('.lslvl#18')
.lslvl#18:    2cde 0022  ld   $22         12318  ld(hi('PREFX2_PAGE'))           #18 ENTER is at $(n-1)ff, where n = instruction page
              2cdf c202  st   [$02]       12319  st([vCpuSelect])                #19 restore PREFX2 instruction page
              2ce0 9401  adda $01,y       12320  adda(1,Y)                       #20 retry instruction
              2ce1 e000  jmp  y,$00       12321  jmp(Y,'NEXTY')                  #21
              2ce2 00f4  ld   $f4         12322  ld(-24/2)                       #22
                                          12323
                                          12324
              2ce3 0200  nop              12325  fillers(until=0xff)
              2ce4 0200  nop
              2ce5 0200  nop
              * 28 times
              2cff 0200  nop              12326  align(0x100, size=0x100)
                                          12327
                                          12328  #-----------------------------------------------------------------------
                                          12329  #       More vCPU instruction implementations, (0x2D00)
                                          12330  #-----------------------------------------------------------------------
                                          12331  #
                                          12332  # JEQL implementation
                                          12333  label('jeql#13')
jeql#13:      2d00 1519  ld   [$19],y     12334  ld([vAC+1],Y)                   #13
              2d01 00fb  ld   $fb         12335  ld(min(0,maxTicks-40/2))        #14
              2d02 8115  adda [$15]       12336  adda([vTicks])                  #15
              2d03 e81d  blt  .jeql#18    12337  blt('.jeql#18')                 #16 not enough time left, so retry
              2d04 1118  ld   [$18],x     12338  ld([vAC],X)                     #17
              2d05 0d00  ld   [y,x]       12339  ld([Y,X])                       #18
              2d06 de00  st   [y,x++]     12340  st([Y,Xpp])                     #19
              2d07 c2b0  st   [$b0]       12341  st([0xB0])                      #20 [vAC].0
              2d08 0d00  ld   [y,x]       12342  ld([Y,X])                       #21
              2d09 de00  st   [y,x++]     12343  st([Y,Xpp])                     #22
              2d0a c2b1  st   [$b1]       12344  st([0xB1])                      #23 [vAC].1
              2d0b 0d00  ld   [y,x]       12345  ld([Y,X])                       #24
              2d0c de00  st   [y,x++]     12346  st([Y,Xpp])                     #25
              2d0d c2b2  st   [$b2]       12347  st([0xB2])                      #26 [vAC].2
              2d0e 0d00  ld   [y,x]       12348  ld([Y,X])                       #27 [vAC].3
              2d0f 41b2  ora  [$b2]       12349  ora([0xB2])                     #28
              2d10 41b1  ora  [$b1]       12350  ora([0xB1])                     #29
              2d11 41b0  ora  [$b0]       12351  ora([0xB0])                     #30
              2d12 ec1a  bne  .jeql#33    12352  bne('.jeql#33')                 #31 if (vAC.3 OR vAC.2 OR vAC.1 OR vAC.0) != 0
              2d13 012b  ld   [$2b]       12353  ld([sysArgs+7])                 #32 address of branch destination
              2d14 c216  st   [$16]       12354  st([vPC])                       #33
              2d15 012a  ld   [$2a]       12355  ld([sysArgs+6])                 #34
              2d16 c217  st   [$17]       12356  st([vPC+1])                     #35
              2d17 1403  ld   $03,y       12357  ld(hi('NEXTY'),Y)               #36
              2d18 e000  jmp  y,$00       12358  jmp(Y,'NEXTY')                  #37
              2d19 00ec  ld   $ec         12359  ld(-40/2)                       #38
                                          12360
                                          12361  label('.jeql#33')
.jeql#33:     2d1a 1403  ld   $03,y       12362  ld(hi('REENTER'),Y)             #33
              2d1b e0cb  jmp  y,$cb       12363  jmp(Y,'REENTER')                #34
              2d1c 00ed  ld   $ed         12364  ld(-38/2)                       #35
                                          12365
                                          12366  label('.jeql#18')
.jeql#18:     2d1d 0021  ld   $21         12367  ld(hi('PREFX3_PAGE'))           #18 ENTER is at $(n-1)ff, where n = instruction page
              2d1e c202  st   [$02]       12368  st([vCpuSelect])                #19 restore PREFX3 instruction page
              2d1f 9401  adda $01,y       12369  adda(1,Y)                       #20 retry instruction
              2d20 e000  jmp  y,$00       12370  jmp(Y,'NEXTY')                  #21
              2d21 00f4  ld   $f4         12371  ld(-24/2)                       #22
                                          12372
                                          12373
                                          12374  # JNEL implementation
                                          12375  label('jnel#13')
jnel#13:      2d22 1519  ld   [$19],y     12376  ld([vAC+1],Y)                   #13
              2d23 00fb  ld   $fb         12377  ld(min(0,maxTicks-40/2))        #14
              2d24 8115  adda [$15]       12378  adda([vTicks])                  #15
              2d25 e83f  blt  .jnel#18    12379  blt('.jnel#18')                 #16 not enough time left, so retry
              2d26 1118  ld   [$18],x     12380  ld([vAC],X)                     #17
              2d27 0d00  ld   [y,x]       12381  ld([Y,X])                       #18
              2d28 de00  st   [y,x++]     12382  st([Y,Xpp])                     #19
              2d29 c2b0  st   [$b0]       12383  st([0xB0])                      #20 [vAC].0
              2d2a 0d00  ld   [y,x]       12384  ld([Y,X])                       #21
              2d2b de00  st   [y,x++]     12385  st([Y,Xpp])                     #22
              2d2c c2b1  st   [$b1]       12386  st([0xB1])                      #23 [vAC].1
              2d2d 0d00  ld   [y,x]       12387  ld([Y,X])                       #24
              2d2e de00  st   [y,x++]     12388  st([Y,Xpp])                     #25
              2d2f c2b2  st   [$b2]       12389  st([0xB2])                      #26 [vAC].2
              2d30 0d00  ld   [y,x]       12390  ld([Y,X])                       #27 [vAC].3
              2d31 41b2  ora  [$b2]       12391  ora([0xB2])                     #28
              2d32 41b1  ora  [$b1]       12392  ora([0xB1])                     #29
              2d33 41b0  ora  [$b0]       12393  ora([0xB0])                     #30
              2d34 f03c  beq  .jnel#33    12394  beq('.jnel#33')                 #31 if (vAC.3 OR vAC.2 OR vAC.1 OR vAC.0) == 0
              2d35 012b  ld   [$2b]       12395  ld([sysArgs+7])                 #32 address of branch destination
              2d36 c216  st   [$16]       12396  st([vPC])                       #33
              2d37 012a  ld   [$2a]       12397  ld([sysArgs+6])                 #34
              2d38 c217  st   [$17]       12398  st([vPC+1])                     #35
              2d39 1403  ld   $03,y       12399  ld(hi('NEXTY'),Y)               #36
              2d3a e000  jmp  y,$00       12400  jmp(Y,'NEXTY')                  #37
              2d3b 00ec  ld   $ec         12401  ld(-40/2)                       #38
                                          12402
                                          12403  label('.jnel#33')
.jnel#33:     2d3c 1403  ld   $03,y       12404  ld(hi('REENTER'),Y)             #33
              2d3d e0cb  jmp  y,$cb       12405  jmp(Y,'REENTER')                #34
              2d3e 00ed  ld   $ed         12406  ld(-38/2)                       #35
                                          12407
                                          12408  label('.jnel#18')
.jnel#18:     2d3f 0021  ld   $21         12409  ld(hi('PREFX3_PAGE'))           #18 ENTER is at $(n-1)ff, where n = instruction page
              2d40 c202  st   [$02]       12410  st([vCpuSelect])                #19 restore PREFX3 instruction page
              2d41 9401  adda $01,y       12411  adda(1,Y)                       #20 retry instruction
              2d42 e000  jmp  y,$00       12412  jmp(Y,'NEXTY')                  #21
              2d43 00f4  ld   $f4         12413  ld(-24/2)                       #22
                                          12414
                                          12415
                                          12416  # JLTL implementation
                                          12417  label('jltl#13')
jltl#13:      2d44 1519  ld   [$19],y     12418  ld([vAC+1],Y)                   #13
              2d45 0118  ld   [$18]       12419  ld([vAC])                       #14
              2d46 9003  adda $03,x       12420  adda(3,X)                       #15
              2d47 0d00  ld   [y,x]       12421  ld([Y,X])                       #16
              2d48 e84d  blt  .jltl#19    12422  blt('.jltl#19')                 #17 if [vAC.3] < 0
              2d49 012b  ld   [$2b]       12423  ld([sysArgs+7])                 #18 address of branch destination
              2d4a 1403  ld   $03,y       12424  ld(hi('REENTER'),Y)             #19
              2d4b e0cb  jmp  y,$cb       12425  jmp(Y,'REENTER')                #20
              2d4c 00f4  ld   $f4         12426  ld(-24/2)                       #21
                                          12427
                                          12428  label('.jltl#19')
.jltl#19:     2d4d c216  st   [$16]       12429  st([vPC])                       #19
              2d4e 012a  ld   [$2a]       12430  ld([sysArgs+6])                 #20
              2d4f c217  st   [$17]       12431  st([vPC+1])                     #21
              2d50 1403  ld   $03,y       12432  ld(hi('NEXTY'),Y)               #22
              2d51 e000  jmp  y,$00       12433  jmp(Y,'NEXTY')                  #23
              2d52 00f3  ld   $f3         12434  ld(-26/2)                       #24
                                          12435
                                          12436
                                          12437  # JGTL implementation
                                          12438  label('jgtl#13')
jgtl#13:      2d53 1519  ld   [$19],y     12439  ld([vAC+1],Y)                   #13
              2d54 00fa  ld   $fa         12440  ld(min(0,maxTicks-42/2))        #14
              2d55 8115  adda [$15]       12441  adda([vTicks])                  #15
              2d56 e875  blt  .jgtl#18    12442  blt('.jgtl#18')                 #16 not enough time left, so retry
              2d57 1118  ld   [$18],x     12443  ld([vAC],X)                     #17
              2d58 0d00  ld   [y,x]       12444  ld([Y,X])                       #18
              2d59 de00  st   [y,x++]     12445  st([Y,Xpp])                     #19
              2d5a c2b0  st   [$b0]       12446  st([0xB0])                      #20 [vAC].0
              2d5b 0d00  ld   [y,x]       12447  ld([Y,X])                       #21
              2d5c de00  st   [y,x++]     12448  st([Y,Xpp])                     #22
              2d5d c2b1  st   [$b1]       12449  st([0xB1])                      #23 [vAC].1
              2d5e 0d00  ld   [y,x]       12450  ld([Y,X])                       #24
              2d5f de00  st   [y,x++]     12451  st([Y,Xpp])                     #25
              2d60 c2b2  st   [$b2]       12452  st([0xB2])                      #26 [vAC].2
              2d61 0d00  ld   [y,x]       12453  ld([Y,X])                       #27
              2d62 c2b3  st   [$b3]       12454  st([0xB3])                      #28 [vAC].3
              2d63 e86c  blt  .jgtl#31    12455  blt('.jgtl#31')                 #29 if [vAC.3] < 0
              2d64 41b2  ora  [$b2]       12456  ora([0xB2])                     #30
              2d65 41b1  ora  [$b1]       12457  ora([0xB1])                     #31
              2d66 41b0  ora  [$b0]       12458  ora([0xB0])                     #32
              2d67 ec6f  bne  .jgtl#35    12459  bne('.jgtl#35')                 #33 if (vAC.3 OR vAC.2 OR vAC.1 OR vAC.0) != 0
              2d68 012b  ld   [$2b]       12460  ld([sysArgs+7])                 #34 address of branch destination
              2d69 1403  ld   $03,y       12461  ld(hi('REENTER'),Y)             #35
              2d6a e0cb  jmp  y,$cb       12462  jmp(Y,'REENTER')                #36
              2d6b 00ec  ld   $ec         12463  ld(-40/2)                       #37
                                          12464
                                          12465  label('.jgtl#31')
.jgtl#31:     2d6c 1403  ld   $03,y       12466  ld(hi('REENTER'),Y)             #31
              2d6d e0cb  jmp  y,$cb       12467  jmp(Y,'REENTER')                #32
              2d6e 00ee  ld   $ee         12468  ld(-36/2)                       #33
                                          12469
                                          12470  label('.jgtl#35')
.jgtl#35:     2d6f c216  st   [$16]       12471  st([vPC])                       #35
              2d70 012a  ld   [$2a]       12472  ld([sysArgs+6])                 #36
              2d71 c217  st   [$17]       12473  st([vPC+1])                     #37
              2d72 1403  ld   $03,y       12474  ld(hi('NEXTY'),Y)               #38
              2d73 e000  jmp  y,$00       12475  jmp(Y,'NEXTY')                  #39
              2d74 00eb  ld   $eb         12476  ld(-42/2)                       #40
                                          12477
                                          12478  label('.jgtl#18')
.jgtl#18:     2d75 0021  ld   $21         12479  ld(hi('PREFX3_PAGE'))           #18 ENTER is at $(n-1)ff, where n = instruction page
              2d76 c202  st   [$02]       12480  st([vCpuSelect])                #19 restore PREFX3 instruction page
              2d77 9401  adda $01,y       12481  adda(1,Y)                       #20 retry instruction
              2d78 e000  jmp  y,$00       12482  jmp(Y,'NEXTY')                  #21
              2d79 00f4  ld   $f4         12483  ld(-24/2)                       #22
                                          12484
                                          12485
                                          12486  # JLEL implementation
                                          12487  label('jlel#13')
jlel#13:      2d7a 1519  ld   [$19],y     12488  ld([vAC+1],Y)                   #13
              2d7b 00fa  ld   $fa         12489  ld(min(0,maxTicks-42/2))        #14
              2d7c 8115  adda [$15]       12490  adda([vTicks])                  #15
              2d7d e8a0  blt  .jlel#18    12491  blt('.jlel#18')                 #16 not enough time left, so retry
              2d7e 1118  ld   [$18],x     12492  ld([vAC],X)                     #17
              2d7f 0d00  ld   [y,x]       12493  ld([Y,X])                       #18
              2d80 de00  st   [y,x++]     12494  st([Y,Xpp])                     #19
              2d81 c2b0  st   [$b0]       12495  st([0xB0])                      #20 [vAC].0
              2d82 0d00  ld   [y,x]       12496  ld([Y,X])                       #21
              2d83 de00  st   [y,x++]     12497  st([Y,Xpp])                     #22
              2d84 c2b1  st   [$b1]       12498  st([0xB1])                      #23 [vAC].1
              2d85 0d00  ld   [y,x]       12499  ld([Y,X])                       #24
              2d86 de00  st   [y,x++]     12500  st([Y,Xpp])                     #25
              2d87 c2b2  st   [$b2]       12501  st([0xB2])                      #26 [vAC].2
              2d88 0d00  ld   [y,x]       12502  ld([Y,X])                       #27
              2d89 c2b3  st   [$b3]       12503  st([0xB3])                      #28 [vAC].3
              2d8a e893  blt  .jlel#31    12504  blt('.jlel#31')                 #29 if [vAC.3] < 0
              2d8b 41b2  ora  [$b2]       12505  ora([0xB2])                     #30
              2d8c 41b1  ora  [$b1]       12506  ora([0xB1])                     #31
              2d8d 41b0  ora  [$b0]       12507  ora([0xB0])                     #32
              2d8e f09a  beq  .jlel#35    12508  beq('.jlel#35')                 #33 if (vAC.3 OR vAC.2 OR vAC.1 OR vAC.0) == 0
              2d8f 012b  ld   [$2b]       12509  ld([sysArgs+7])                 #34 address of branch destination
              2d90 1403  ld   $03,y       12510  ld(hi('REENTER'),Y)             #35
              2d91 e0cb  jmp  y,$cb       12511  jmp(Y,'REENTER')                #36
              2d92 00ec  ld   $ec         12512  ld(-40/2)                       #37
                                          12513
                                          12514  label('.jlel#31')
.jlel#31:     2d93 012b  ld   [$2b]       12515  ld([sysArgs+7])                 #31 address of branch destination
              2d94 c216  st   [$16]       12516  st([vPC])                       #32
              2d95 012a  ld   [$2a]       12517  ld([sysArgs+6])                 #33
              2d96 c217  st   [$17]       12518  st([vPC+1])                     #34
              2d97 1403  ld   $03,y       12519  ld(hi('REENTER'),Y)             #35
              2d98 e0cb  jmp  y,$cb       12520  jmp(Y,'REENTER')                #36
              2d99 00ec  ld   $ec         12521  ld(-40/2)                       #37
                                          12522
                                          12523  label('.jlel#35')
.jlel#35:     2d9a c216  st   [$16]       12524  st([vPC])                       #35
              2d9b 012a  ld   [$2a]       12525  ld([sysArgs+6])                 #36
              2d9c c217  st   [$17]       12526  st([vPC+1])                     #37
              2d9d 1403  ld   $03,y       12527  ld(hi('NEXTY'),Y)               #38
              2d9e e000  jmp  y,$00       12528  jmp(Y,'NEXTY')                  #39
              2d9f 00eb  ld   $eb         12529  ld(-42/2)                       #40
                                          12530
                                          12531  label('.jlel#18')
.jlel#18:     2da0 0021  ld   $21         12532  ld(hi('PREFX3_PAGE'))           #18 ENTER is at $(n-1)ff, where n = instruction page
              2da1 c202  st   [$02]       12533  st([vCpuSelect])                #19 restore PREFX3 instruction page
              2da2 9401  adda $01,y       12534  adda(1,Y)                       #20 retry instruction
              2da3 e000  jmp  y,$00       12535  jmp(Y,'NEXTY')                  #21
              2da4 00f4  ld   $f4         12536  ld(-24/2)                       #22
                                          12537
                                          12538
                                          12539  # JGEL implementation
                                          12540  label('jgel#13')
jgel#13:      2da5 1519  ld   [$19],y     12541  ld([vAC+1],Y)                   #13
              2da6 0118  ld   [$18]       12542  ld([vAC])                       #14
              2da7 9003  adda $03,x       12543  adda(3,X)                       #15
              2da8 0d00  ld   [y,x]       12544  ld([Y,X])                       #16
              2da9 e8b1  blt  .jgel#19    12545  blt('.jgel#19')                 #17 if [vAC.3] < 0
              2daa 012b  ld   [$2b]       12546  ld([sysArgs+7])                 #18 address of branch destination
              2dab c216  st   [$16]       12547  st([vPC])                       #19
              2dac 012a  ld   [$2a]       12548  ld([sysArgs+6])                 #20
              2dad c217  st   [$17]       12549  st([vPC+1])                     #21
              2dae 1403  ld   $03,y       12550  ld(hi('NEXTY'),Y)               #22
              2daf e000  jmp  y,$00       12551  jmp(Y,'NEXTY')                  #23
              2db0 00f3  ld   $f3         12552  ld(-26/2)                       #24
                                          12553
                                          12554  label('.jgel#19')
.jgel#19:     2db1 1403  ld   $03,y       12555  ld(hi('REENTER'),Y)             #19
              2db2 e0cb  jmp  y,$cb       12556  jmp(Y,'REENTER')                #20
              2db3 00f4  ld   $f4         12557  ld(-24/2)                       #21
                                          12558
                                          12559
                                          12560  # LOKEQI implementation
                                          12561  label('lokeqi#13')
lokeqi#13:    2db4 1517  ld   [$17],y     12562  ld([vPC+1],Y)                   #13
              2db5 de00  st   [y,x++]     12563  st([Y,Xpp])                     #14 X++
              2db6 00fe  ld   $fe         12564  ld(min(0,maxTicks-34/2))        #15
              2db7 8115  adda [$15]       12565  adda([vTicks])                  #16
              2db8 e8c8  blt  .lokeqi#19  12566  blt('.lokeqi#19')               #17 not enough time left, so retry
              2db9 0d00  ld   [y,x]       12567  ld([Y,X])                       #18 imm.0
              2dba 1519  ld   [$19],y     12568  ld([vAC+1],Y)                   #19
              2dbb 1118  ld   [$18],x     12569  ld([vAC],X)                     #20
              2dbc de00  st   [y,x++]     12570  st([Y,Xpp])                     #21 [vAC.0] = imm.0, X++
              2dbd 011d  ld   [$1d]       12571  ld([vTmp])                      #22
              2dbe de00  st   [y,x++]     12572  st([Y,Xpp])                     #23 [vAC.1] = imm.1, X++
              2dbf 0000  ld   $00         12573  ld(0)                           #24
              2dc0 de00  st   [y,x++]     12574  st([Y,Xpp])                     #25 [vAC.2] = 0, X++
              2dc1 ce00  st   [y,x]       12575  st([Y,X])                       #26 [vAC.3] = 0
              2dc2 0116  ld   [$16]       12576  ld([vPC])                       #27 fix vPC for 3 byte instruction
              2dc3 8001  adda $01         12577  adda(1)                         #28
              2dc4 c216  st   [$16]       12578  st([vPC])                       #29
              2dc5 1403  ld   $03,y       12579  ld(hi('NEXTY'),Y)               #30
              2dc6 e000  jmp  y,$00       12580  jmp(Y,'NEXTY')                  #31
              2dc7 00ef  ld   $ef         12581  ld(-34/2)                       #32
                                          12582
                                          12583  label('.lokeqi#19')
.lokeqi#19:   2dc8 0116  ld   [$16]       12584  ld([vPC])                       #19 retry
              2dc9 a002  suba $02         12585  suba(2)                         #20
              2dca c216  st   [$16]       12586  st([vPC])                       #21
              2dcb 1403  ld   $03,y       12587  ld(hi('NEXTY'),Y)               #22
              2dcc e000  jmp  y,$00       12588  jmp(Y,'NEXTY')                  #23
              2dcd 00f3  ld   $f3         12589  ld(-26/2)                       #24
                                          12590
                                          12591
                                          12592  # LOKEI implementation
                                          12593  label('lokei#13')
lokei#13:     2dce 1517  ld   [$17],y     12594  ld([vPC+1],Y)                   #13
              2dcf c2b0  st   [$b0]       12595  st([0xB0])                      #14 imm.3
              2dd0 de00  st   [y,x++]     12596  st([Y,Xpp])                     #15 X++
              2dd1 00fa  ld   $fa         12597  ld(min(0,maxTicks-42/2))        #16
              2dd2 8115  adda [$15]       12598  adda([vTicks])                  #17
              2dd3 e8ea  blt  .lokei#20   12599  blt('.lokei#20')                #18 not enough time left, so retry
              2dd4 0d00  ld   [y,x]       12600  ld([Y,X])                       #19
              2dd5 de00  st   [y,x++]     12601  st([Y,Xpp])                     #20 X++
              2dd6 c2b1  st   [$b1]       12602  st([0xB1])                      #21 imm.2
              2dd7 0d00  ld   [y,x]       12603  ld([Y,X])                       #22
              2dd8 de00  st   [y,x++]     12604  st([Y,Xpp])                     #23 X++
              2dd9 c2b2  st   [$b2]       12605  st([0xB2])                      #24 imm.1
              2dda 0d00  ld   [y,x]       12606  ld([Y,X])                       #25 imm.0
              2ddb 1519  ld   [$19],y     12607  ld([vAC+1],Y)                   #26
              2ddc 1118  ld   [$18],x     12608  ld([vAC],X)                     #27
              2ddd de00  st   [y,x++]     12609  st([Y,Xpp])                     #28 [vAC.0] = imm.0, X++
              2dde 01b2  ld   [$b2]       12610  ld([0xB2])                      #29
              2ddf de00  st   [y,x++]     12611  st([Y,Xpp])                     #30 [vAC.1] = imm.1, X++
              2de0 01b1  ld   [$b1]       12612  ld([0xB1])                      #31
              2de1 de00  st   [y,x++]     12613  st([Y,Xpp])                     #32 [vAC.2] = imm.2, X++
              2de2 01b0  ld   [$b0]       12614  ld([0xB0])                      #33
              2de3 ce00  st   [y,x]       12615  st([Y,X])                       #34 [vAC.3] = imm.3
              2de4 0116  ld   [$16]       12616  ld([vPC])                       #35 fix vPC for 5 byte instruction
              2de5 8003  adda $03         12617  adda(3)                         #36
              2de6 c216  st   [$16]       12618  st([vPC])                       #37
              2de7 1403  ld   $03,y       12619  ld(hi('NEXTY'),Y)               #38
              2de8 e000  jmp  y,$00       12620  jmp(Y,'NEXTY')                  #39
              2de9 00eb  ld   $eb         12621  ld(-42/2)                       #40
                                          12622
                                          12623  label('.lokei#20')
.lokei#20:    2dea 0116  ld   [$16]       12624  ld([vPC])                       #20 retry
              2deb a002  suba $02         12625  suba(2)                         #21
              2dec c216  st   [$16]       12626  st([vPC])                       #22
              2ded 1403  ld   $03,y       12627  ld(hi('REENTER'),Y)             #23
              2dee e0cb  jmp  y,$cb       12628  jmp(Y,'REENTER')                #24
              2def 00f2  ld   $f2         12629  ld(-28/2)                       #25
                                          12630
                                          12631
              2df0 0200  nop              12632  fillers(until=0xff)
              2df1 0200  nop
              2df2 0200  nop
              * 15 times
              2dff 0200  nop              12633  align(0x100, size=0x100)
                                          12634
                                          12635  #-----------------------------------------------------------------------
                                          12636  #       More vCPU instruction implementations, (0x2E00)
                                          12637  #-----------------------------------------------------------------------
                                          12638  #
                                          12639  # ANDBI implementation
                                          12640  label('andbi#13')
andbi#13:     2e00 0500  ld   [x]         12641  ld([X])                         #13
              2e01 212b  anda [$2b]       12642  anda([sysArgs+7])               #14 immediate value
              2e02 c600  st   [x]         12643  st([X])                         #15
              2e03 1403  ld   $03,y       12644  ld(hi('NEXTY'),Y)               #16
              2e04 e000  jmp  y,$00       12645  jmp(Y,'NEXTY')                  #17
              2e05 00f6  ld   $f6         12646  ld(-20/2)                       #18
                                          12647
                                          12648  # ORBI implementation
                                          12649  label('orbi#13')
orbi#13:      2e06 0500  ld   [x]         12650  ld([X])                         #13
              2e07 412b  ora  [$2b]       12651  ora([sysArgs+7])                #14 immediate value
              2e08 c600  st   [x]         12652  st([X])                         #15
              2e09 1403  ld   $03,y       12653  ld(hi('NEXTY'),Y)               #16
              2e0a e000  jmp  y,$00       12654  jmp(Y,'NEXTY')                  #17
              2e0b 00f6  ld   $f6         12655  ld(-20/2)                       #18
                                          12656
                                          12657  # XORBI implementation
                                          12658  label('xorbi#13')
xorbi#13:     2e0c 0500  ld   [x]         12659  ld([X])                         #13
              2e0d 612b  xora [$2b]       12660  xora([sysArgs+7])               #14 immediate value
              2e0e c600  st   [x]         12661  st([X])                         #15
              2e0f 1403  ld   $03,y       12662  ld(hi('NEXTY'),Y)               #16
              2e10 e000  jmp  y,$00       12663  jmp(Y,'NEXTY')                  #17
              2e11 00f6  ld   $f6         12664  ld(-20/2)                       #18
                                          12665
                                          12666
                                          12667  # INCL implementation
                                          12668  label('incl#13')
incl#13:      2e12 00fd  ld   $fd         12669  ld(min(0,maxTicks-36/2))        #13
              2e13 8115  adda [$15]       12670  adda([vTicks])                  #14
              2e14 e831  blt  .incl#17    12671  blt('.incl#17')                 #15 not enough time left, so retry
              2e15 1400  ld   $00,y       12672  ld(0,Y)                         #16
              2e16 0500  ld   [x]         12673  ld([X])                         #17
              2e17 8001  adda $01         12674  adda(1)                         #18
              2e18 f01d  beq  .incl#21    12675  beq('.incl#21')                 #19 if 0 byte is 0x00
              2e19 de00  st   [y,x++]     12676  st([Y,Xpp])                     #20 inc 0 byte
              2e1a 1403  ld   $03,y       12677  ld(hi('REENTER'),Y)             #21
              2e1b e0cb  jmp  y,$cb       12678  jmp(Y,'REENTER')                #22
              2e1c 00f3  ld   $f3         12679  ld(-26/2)                       #23
                                          12680
                                          12681  label('.incl#21')
.incl#21:     2e1d 0500  ld   [x]         12682  ld([X])                         #21
              2e1e 8001  adda $01         12683  adda(1)                         #22
              2e1f f024  beq  .incl#25    12684  beq('.incl#25')                 #23 if 1 byte is 0x00
              2e20 de00  st   [y,x++]     12685  st([Y,Xpp])                     #24 inc 1 byte
              2e21 1403  ld   $03,y       12686  ld(hi('REENTER'),Y)             #25
              2e22 e0cb  jmp  y,$cb       12687  jmp(Y,'REENTER')                #26
              2e23 00f1  ld   $f1         12688  ld(-30/2)                       #27
                                          12689
                                          12690  label('.incl#25')
.incl#25:     2e24 0500  ld   [x]         12691  ld([X])                         #25
              2e25 8001  adda $01         12692  adda(1)                         #26
              2e26 f02b  beq  .incl#29    12693  beq('.incl#29')                 #27 if 2 byte is 0x00
              2e27 de00  st   [y,x++]     12694  st([Y,Xpp])                     #28 inc 2 byte
              2e28 1403  ld   $03,y       12695  ld(hi('REENTER'),Y)             #29
              2e29 e0cb  jmp  y,$cb       12696  jmp(Y,'REENTER')                #30
              2e2a 00ef  ld   $ef         12697  ld(-34/2)                       #31
                                          12698
                                          12699  label('.incl#29')
.incl#29:     2e2b 0500  ld   [x]         12700  ld([X])                         #29
              2e2c 8001  adda $01         12701  adda(1)                         #30
              2e2d c600  st   [x]         12702  st([X])                         #31 inc high byte
              2e2e 1403  ld   $03,y       12703  ld(hi('NEXTY'),Y)               #32
              2e2f e000  jmp  y,$00       12704  jmp(Y,'NEXTY')                  #33
              2e30 00ee  ld   $ee         12705  ld(-36/2)                       #34
                                          12706
                                          12707  label('.incl#17')
.incl#17:     2e31 0022  ld   $22         12708  ld(hi('PREFX2_PAGE'))           #17 ENTER is at $(n-1)ff, where n = instruction page
              2e32 c202  st   [$02]       12709  st([vCpuSelect])                #18 restore PREFX2 instruction page
              2e33 9401  adda $01,y       12710  adda(1,Y)                       #19 retry instruction
              2e34 e0cb  jmp  y,$cb       12711  jmp(Y,'REENTER')                #20
              2e35 00f4  ld   $f4         12712  ld(-24/2)                       #21
                                          12713
                                          12714
                                          12715  # DECL implementation
                                          12716  label('decl#13')
decl#13:      2e36 1200  ld   ac,x        12717  ld(AC,X)                        #13 var
              2e37 00fb  ld   $fb         12718  ld(min(0,maxTicks-40/2))        #14
              2e38 8115  adda [$15]       12719  adda([vTicks])                  #15
              2e39 e859  blt  .decl#18    12720  blt('.decl#18')                 #16 not enough time left, so retry
              2e3a 1400  ld   $00,y       12721  ld(0,Y)                         #17
              2e3b 0500  ld   [x]         12722  ld([X])                         #18
              2e3c a001  suba $01         12723  suba(1)                         #19
              2e3d de00  st   [y,x++]     12724  st([Y,Xpp])                     #20 dec 0 byte
              2e3e 60ff  xora $ff         12725  xora(0xff)                      #21 if 0 byte is 0xff
              2e3f f044  beq  .decl#24    12726  beq('.decl#24')                 #22
              2e40 0500  ld   [x]         12727  ld([X])                         #23
              2e41 1403  ld   $03,y       12728  ld(hi('NEXTY'),Y)               #24
              2e42 e000  jmp  y,$00       12729  jmp(Y,'NEXTY')                  #25
              2e43 00f2  ld   $f2         12730  ld(-28/2)                       #26
                                          12731
                                          12732  label('.decl#24')
.decl#24:     2e44 a001  suba $01         12733  suba(1)                         #24
              2e45 de00  st   [y,x++]     12734  st([Y,Xpp])                     #25 dec 1 byte
              2e46 60ff  xora $ff         12735  xora(0xff)                      #26 if 1 byte is 0xff
              2e47 f04c  beq  .decl#29    12736  beq('.decl#29')                 #27
              2e48 0500  ld   [x]         12737  ld([X])                         #28
              2e49 1403  ld   $03,y       12738  ld(hi('REENTER'),Y)             #29
              2e4a e0cb  jmp  y,$cb       12739  jmp(Y,'REENTER')                #30
              2e4b 00ef  ld   $ef         12740  ld(-34/2)                       #31
                                          12741
                                          12742  label('.decl#29')
.decl#29:     2e4c a001  suba $01         12743  suba(1)                         #29
              2e4d de00  st   [y,x++]     12744  st([Y,Xpp])                     #30 dec 2 byte
              2e4e 60ff  xora $ff         12745  xora(0xff)                      #31 if 2 byte is 0xff
              2e4f f054  beq  .decl#34    12746  beq('.decl#34')                 #32
              2e50 0500  ld   [x]         12747  ld([X])                         #33
              2e51 1403  ld   $03,y       12748  ld(hi('NEXTY'),Y)               #34
              2e52 e000  jmp  y,$00       12749  jmp(Y,'NEXTY')                  #35
              2e53 00ed  ld   $ed         12750  ld(-38/2)                       #36
                                          12751
                                          12752  label('.decl#34')
.decl#34:     2e54 a001  suba $01         12753  suba(1)                         #34
              2e55 c600  st   [x]         12754  st([X])                         #35 dec 3 byte
              2e56 1403  ld   $03,y       12755  ld(hi('NEXTY'),Y)               #36
              2e57 e000  jmp  y,$00       12756  jmp(Y,'NEXTY')                  #37
              2e58 00ec  ld   $ec         12757  ld(-40/2)                       #38
                                          12758
                                          12759  label('.decl#18')
.decl#18:     2e59 0022  ld   $22         12760  ld(hi('PREFX2_PAGE'))           #18 ENTER is at $(n-1)ff, where n = instruction page
              2e5a c202  st   [$02]       12761  st([vCpuSelect])                #19 restore PREFX2 instruction page
              2e5b 9401  adda $01,y       12762  adda(1,Y)                       #20 retry instruction
              2e5c e000  jmp  y,$00       12763  jmp(Y,'NEXTY')                  #21
              2e5d 00f4  ld   $f4         12764  ld(-24/2)                       #22
                                          12765
                                          12766
                                          12767
                                          12768  #-----------------------------------------------------------------------
                                          12769  #
                                          12770  #  CopyMemory[Ext]/ScanMemory[Ext]/OsCall
                                          12771  #
                                          12772  #-----------------------------------------------------------------------
                                          12773
              2e5e 0200  nop              12774  fillers(until=0xff)
              2e5f 0200  nop
              2e60 0200  nop
              * 161 times
              2eff 0200  nop              12775  align(0x100, size=0x100)
                                          12776
                                          12777  # SYS_CopyMemory_vX_80 implementation
                                          12778
                                          12779  label('sys_CopyMemory')
sys_CopyMemory:
              2f00 f83e  ble  .sysCm#20   12780  ble('.sysCm#20')                     #18   goto burst6
              2f01 a006  suba $06         12781  suba(6)                              #19
              2f02 f440  bge  .sysCm#22   12782  bge('.sysCm#22')                     #20   goto burst6
              2f03 1527  ld   [$27],y     12783  ld([sysArgs+3],Y)                    #21
              2f04 8003  adda $03         12784  adda(3)                              #22
              2f05 f41d  bge  .sysCm#25   12785  bge('.sysCm#25')                     #23   goto burst3
              2f06 1126  ld   [$26],x     12786  ld([sysArgs+2],X)                    #24
                                          12787
              2f07 8002  adda $02         12788  adda(2)                              #25   single
              2f08 c218  st   [$18]       12789  st([vAC])                            #26
              2f09 0d00  ld   [y,x]       12790  ld([Y,X])                            #27
              2f0a 1525  ld   [$25],y     12791  ld([sysArgs+1],Y)                    #28
              2f0b 1124  ld   [$24],x     12792  ld([sysArgs+0],X)                    #29
              2f0c ce00  st   [y,x]       12793  st([Y,X])                            #30
              2f0d 0124  ld   [$24]       12794  ld([sysArgs+0])                      #31
              2f0e 8001  adda $01         12795  adda(1)                              #32
              2f0f c224  st   [$24]       12796  st([sysArgs+0])                      #33
              2f10 0126  ld   [$26]       12797  ld([sysArgs+2])                      #34
              2f11 8001  adda $01         12798  adda(1)                              #35
              2f12 c226  st   [$26]       12799  st([sysArgs+2])                      #36
              2f13 0118  ld   [$18]       12800  ld([vAC])                            #37
              2f14 f017  beq  $2f17       12801  beq(pc()+3)                          #38
              2f15 fc18  bra  $2f18       12802  bra(pc()+3)                          #39
              2f16 00fe  ld   $fe         12803  ld(-2)                               #40
              2f17 0000  ld   $00         12804  ld(0)                                #40!
              2f18 8116  adda [$16]       12805  adda([vPC])                          #41
              2f19 c216  st   [$16]       12806  st([vPC])                            #42
              2f1a 1403  ld   $03,y       12807  ld(hi('REENTER'),Y)                  #43
              2f1b e0cb  jmp  y,$cb       12808  jmp(Y,'REENTER')                     #44
              2f1c 00e8  ld   $e8         12809  ld(-48/2)                            #45
                                          12810
                                          12811  label('.sysCm#25')
.sysCm#25:    2f1d c218  st   [$18]       12812  st([vAC])                            #25   burst3
                                          12813  for i in range(3):
              2f1e 0d00  ld   [y,x]       12814    ld([Y,X])                            #26+3*i
              2f1f c228  st   [$28]       12815    st([sysArgs+4+i])                    #27+3*i
              2f20 de00  st   [y,x++]     12816    st([Y,Xpp]) if i<2 else None         #28+3*i
              2f21 0d00  ld   [y,x]
              2f22 c229  st   [$29]
              2f23 de00  st   [y,x++]
              2f24 0d00  ld   [y,x]
              2f25 c22a  st   [$2a]
              2f26 1525  ld   [$25],y     12817  ld([sysArgs+1],Y)                    #34
              2f27 1124  ld   [$24],x     12818  ld([sysArgs+0],X)                    #35
                                          12819  for i in range(3):
              2f28 0128  ld   [$28]       12820    ld([sysArgs+4+i])                    #36+2*i
              2f29 de00  st   [y,x++]     12821    st([Y,Xpp])                          #37+2*i
              2f2a 0129  ld   [$29]
              2f2b de00  st   [y,x++]
              2f2c 012a  ld   [$2a]
              2f2d de00  st   [y,x++]
              2f2e 0124  ld   [$24]       12822  ld([sysArgs+0])                      #42
              2f2f 8003  adda $03         12823  adda(3)                              #43
              2f30 c224  st   [$24]       12824  st([sysArgs+0])                      #44
              2f31 0126  ld   [$26]       12825  ld([sysArgs+2])                      #45
              2f32 8003  adda $03         12826  adda(3)                              #46
              2f33 c226  st   [$26]       12827  st([sysArgs+2])                      #47
              2f34 0118  ld   [$18]       12828  ld([vAC])                            #48
              2f35 f038  beq  $2f38       12829  beq(pc()+3)                          #49
              2f36 fc39  bra  $2f39       12830  bra(pc()+3)                          #50
              2f37 00fe  ld   $fe         12831  ld(-2)                               #51
              2f38 0000  ld   $00         12832  ld(0)                                #51!
              2f39 8116  adda [$16]       12833  adda([vPC])                          #52
              2f3a c216  st   [$16]       12834  st([vPC])                            #53
              2f3b 1403  ld   $03,y       12835  ld(hi('NEXTY'),Y)                    #54
              2f3c e000  jmp  y,$00       12836  jmp(Y,'NEXTY')                       #55
              2f3d 00e3  ld   $e3         12837  ld(-58/2)                            #56
                                          12838
                                          12839  label('.sysCm#20')
.sysCm#20:    2f3e 0200  nop              12840  nop()                                #20   burst6
              2f3f 1527  ld   [$27],y     12841  ld([sysArgs+3],Y)                    #21
                                          12842  label('.sysCm#22')
.sysCm#22:    2f40 c218  st   [$18]       12843  st([vAC])                            #22   burst6
              2f41 1126  ld   [$26],x     12844  ld([sysArgs+2],X)                    #23
                                          12845  for i in range(6):
              2f42 0d00  ld   [y,x]       12846    ld([Y,X])                            #24+i*3
              2f43 c21a  st   [$1a]       12847    st([vLR+i if i<2 else sysArgs+2+i])  #25+i*3
              2f44 de00  st   [y,x++]     12848    st([Y,Xpp]) if i<5 else None         #26+i*3 if i<5
              2f45 0d00  ld   [y,x]
              2f46 c21b  st   [$1b]
              2f47 de00  st   [y,x++]
              2f48 0d00  ld   [y,x]
              2f49 c228  st   [$28]
              2f4a de00  st   [y,x++]
              2f4b 0d00  ld   [y,x]
              2f4c c229  st   [$29]
              2f4d de00  st   [y,x++]
              2f4e 0d00  ld   [y,x]
              2f4f c22a  st   [$2a]
              2f50 de00  st   [y,x++]
              2f51 0d00  ld   [y,x]
              2f52 c22b  st   [$2b]
              2f53 1525  ld   [$25],y     12849  ld([sysArgs+1],Y)                    #41
              2f54 1124  ld   [$24],x     12850  ld([sysArgs+0],X)                    #42
                                          12851  for i in range(6):
              2f55 011a  ld   [$1a]       12852    ld([vLR+i if i<2 else sysArgs+2+i])  #43+i*2
              2f56 de00  st   [y,x++]     12853    st([Y,Xpp])                          #44+i*2
              2f57 011b  ld   [$1b]
              2f58 de00  st   [y,x++]
              2f59 0128  ld   [$28]
              2f5a de00  st   [y,x++]
              2f5b 0129  ld   [$29]
              2f5c de00  st   [y,x++]
              2f5d 012a  ld   [$2a]
              2f5e de00  st   [y,x++]
              2f5f 012b  ld   [$2b]
              2f60 de00  st   [y,x++]
              2f61 0124  ld   [$24]       12854  ld([sysArgs+0])                      #55
              2f62 8006  adda $06         12855  adda(6)                              #56
              2f63 c224  st   [$24]       12856  st([sysArgs+0])                      #57
              2f64 0126  ld   [$26]       12857  ld([sysArgs+2])                      #58
              2f65 8006  adda $06         12858  adda(6)                              #59
              2f66 c226  st   [$26]       12859  st([sysArgs+2])                      #60
                                          12860
              2f67 0118  ld   [$18]       12861  ld([vAC])                            #61
              2f68 ec6c  bne  .sysCm#64   12862  bne('.sysCm#64')                     #62
              2f69 1403  ld   $03,y       12863  ld(hi('REENTER'),Y)                  #63
              2f6a e0cb  jmp  y,$cb       12864  jmp(Y,'REENTER')                     #64
              2f6b 00de  ld   $de         12865  ld(-68/2)                            #65
                                          12866
                                          12867  label('.sysCm#64')
.sysCm#64:    2f6c 00e6  ld   $e6         12868  ld(-52/2)                            #64
              2f6d 8115  adda [$15]       12869  adda([vTicks])                       #13 = 65 - 52
              2f6e c215  st   [$15]       12870  st([vTicks])                         #14
              2f6f 80e8  adda $e8         12871  adda(min(0,maxTicks-(26+52)/2))      #15   could probably be min(0,maxTicks-(26+52)/2)
                                          12872  bge('sys_CopyMemory')                #16
              2f70 f400  bge  sys_CopyMemory
              2f71 0118  ld   [$18]       12873  ld([vAC])                            #17
              2f72 00fe  ld   $fe         12874  ld(-2)                               #18   notime
              2f73 8116  adda [$16]       12875  adda([vPC])                          #19
              2f74 c216  st   [$16]       12876  st([vPC])                            #20
              2f75 1403  ld   $03,y       12877  ld(hi('REENTER'),Y)                  #21
              2f76 e0cb  jmp  y,$cb       12878  jmp(Y,'REENTER')                     #22
              2f77 00f3  ld   $f3         12879  ld(-26/2)                            #23
                                          12880
                                          12881  # SYS_CopyMemoryExt_vX_100 implementation
                                          12882
                                          12883  label('sys_CopyMemoryExt')
                                          12884
sys_CopyMemoryExt:
              2f78 8200  adda ac          12885  adda(AC)                             #18
              2f79 8200  adda ac          12886  adda(AC)                             #19
              2f7a 403c  ora  $3c         12887  ora(0x3c)                            #20
              2f7b c21d  st   [$1d]       12888  st([vTmp])                           #21 [vTmp] = src ctrl value
              2f7c 0119  ld   [$19]       12889  ld([vAC+1])                          #22
              2f7d 20fc  anda $fc         12890  anda(0xfc)                           #23
              2f7e 403c  ora  $3c         12891  ora(0x3c)                            #24
              2f7f c21a  st   [$1a]       12892  st([vLR])                            #25 [vLR] = dest ctrl value
                                          12893
                                          12894  label('.sysCme#26')
.sysCme#26:   2f80 0118  ld   [$18]       12895  ld([vAC])                            #26
              2f81 f8a4  ble  .sysCme#29  12896  ble('.sysCme#29')                    #27   goto burst5
              2f82 a005  suba $05         12897  suba(5)                              #28
              2f83 f4a6  bge  .sysCme#31  12898  bge('.sysCme#31')                    #29   goto burst5
              2f84 1527  ld   [$27],y     12899  ld([sysArgs+3],Y)                    #30
              2f85 8004  adda $04         12900  adda(4)                              #31
                                          12901
              2f86 c218  st   [$18]       12902  st([vAC])                            #32   single
              2f87 111d  ld   [$1d],x     12903  ld([vTmp],X)                         #33
              2f88 c500  ctrl x           12904  ctrl(X)                              #34
              2f89 1126  ld   [$26],x     12905  ld([sysArgs+2],X)                    #35
              2f8a 0d00  ld   [y,x]       12906  ld([Y,X])                            #36
              2f8b 111a  ld   [$1a],x     12907  ld([vLR],X)                          #37
              2f8c c500  ctrl x           12908  ctrl(X)                              #38
              2f8d 1525  ld   [$25],y     12909  ld([sysArgs+1],Y)                    #39
              2f8e 1124  ld   [$24],x     12910  ld([sysArgs+0],X)                    #40
              2f8f ce00  st   [y,x]       12911  st([Y,X])                            #41
              2f90 1401  ld   $01,y       12912  ld(hi(ctrlBits), Y)                  #42
              2f91 09f8  ld   [y,$f8]     12913  ld([Y,ctrlBits])                     #43
              2f92 1200  ld   ac,x        12914  ld(AC,X)                             #44
              2f93 c500  ctrl x           12915  ctrl(X)                              #45
              2f94 0124  ld   [$24]       12916  ld([sysArgs+0])                      #46
              2f95 8001  adda $01         12917  adda(1)                              #47
              2f96 c224  st   [$24]       12918  st([sysArgs+0])                      #48
              2f97 0126  ld   [$26]       12919  ld([sysArgs+2])                      #49
              2f98 8001  adda $01         12920  adda(1)                              #50
              2f99 c226  st   [$26]       12921  st([sysArgs+2])                      #51
              2f9a 0118  ld   [$18]       12922  ld([vAC])                            #52  done?
              2f9b f09e  beq  $2f9e       12923  beq(pc()+3)                          #53
              2f9c fc9f  bra  $2f9f       12924  bra(pc()+3)                          #54
              2f9d 00fe  ld   $fe         12925  ld(-2)                               #55  restart
              2f9e 0000  ld   $00         12926  ld(0)                                #55! finished
              2f9f 8116  adda [$16]       12927  adda([vPC])                          #56
              2fa0 c216  st   [$16]       12928  st([vPC])                            #57
              2fa1 1403  ld   $03,y       12929  ld(hi('NEXTY'),Y)                    #58
              2fa2 e000  jmp  y,$00       12930  jmp(Y,'NEXTY')                       #59
              2fa3 00e1  ld   $e1         12931  ld(-62/2)                            #60
                                          12932
                                          12933  label('.sysCme#29')
.sysCme#29:   2fa4 0200  nop              12934  nop()                                #29   burst5
              2fa5 1527  ld   [$27],y     12935  ld([sysArgs+3],Y)                    #30
                                          12936  label('.sysCme#31')
.sysCme#31:   2fa6 c218  st   [$18]       12937  st([vAC])                            #31   burst5
              2fa7 111d  ld   [$1d],x     12938  ld([vTmp],X)                         #32
              2fa8 c500  ctrl x           12939  ctrl(X)                              #33
              2fa9 1126  ld   [$26],x     12940  ld([sysArgs+2],X)                    #34
                                          12941  for i in range(5):
              2faa 0d00  ld   [y,x]       12942    ld([Y,X])                            #35+i*3
              2fab c21b  st   [$1b]       12943    st([vLR+1 if i<1 else sysArgs+3+i])  #36+i*3
              2fac de00  st   [y,x++]     12944    st([Y,Xpp]) if i<4 else None         #37+i*3 if i<4
              2fad 0d00  ld   [y,x]
              2fae c228  st   [$28]
              2faf de00  st   [y,x++]
              2fb0 0d00  ld   [y,x]
              2fb1 c229  st   [$29]
              2fb2 de00  st   [y,x++]
              2fb3 0d00  ld   [y,x]
              2fb4 c22a  st   [$2a]
              2fb5 de00  st   [y,x++]
              2fb6 0d00  ld   [y,x]
              2fb7 c22b  st   [$2b]
              2fb8 111a  ld   [$1a],x     12945  ld([vLR],X)                          #49
              2fb9 c500  ctrl x           12946  ctrl(X)                              #50
              2fba 1525  ld   [$25],y     12947  ld([sysArgs+1],Y)                    #51
              2fbb 1124  ld   [$24],x     12948  ld([sysArgs+0],X)                    #52
                                          12949  for i in range(5):
              2fbc 011b  ld   [$1b]       12950    ld([vLR+1 if i<1 else sysArgs+3+i])  #53+i*2
              2fbd de00  st   [y,x++]     12951    st([Y,Xpp])                          #54+i*2
              2fbe 0128  ld   [$28]
              2fbf de00  st   [y,x++]
              2fc0 0129  ld   [$29]
              2fc1 de00  st   [y,x++]
              2fc2 012a  ld   [$2a]
              2fc3 de00  st   [y,x++]
              2fc4 012b  ld   [$2b]
              2fc5 de00  st   [y,x++]
              2fc6 0124  ld   [$24]       12952  ld([sysArgs+0])                      #63
              2fc7 8005  adda $05         12953  adda(5)                              #64
              2fc8 c224  st   [$24]       12954  st([sysArgs+0])                      #65
              2fc9 0126  ld   [$26]       12955  ld([sysArgs+2])                      #66
              2fca 8005  adda $05         12956  adda(5)                              #67
              2fcb c226  st   [$26]       12957  st([sysArgs+2])                      #68
                                          12958
              2fcc 0118  ld   [$18]       12959  ld([vAC])                            #69
              2fcd ecd6  bne  .sysCme#72  12960  bne('.sysCme#72')                    #70
              2fce 1401  ld   $01,y       12961  ld(hi(ctrlBits), Y)                  #71  we're done!
              2fcf 09f8  ld   [y,$f8]     12962  ld([Y,ctrlBits])                     #72
              2fd0 30fc  anda $fc,x       12963  anda(0xfc,X)                         #73
              2fd1 c500  ctrl x           12964  ctrl(X)                              #74
              2fd2 011d  ld   [$1d]       12965  ld([vTmp])                           #75  always read after ctrl
              2fd3 1403  ld   $03,y       12966  ld(hi('NEXTY'),Y)                    #76
              2fd4 e000  jmp  y,$00       12967  jmp(Y,'NEXTY')                       #77
              2fd5 00d8  ld   $d8         12968  ld(-80/2)                            #78
                                          12969
                                          12970  label('.sysCme#72')
.sysCme#72:   2fd6 00e6  ld   $e6         12971  ld(-52/2)                            #72
              2fd7 8115  adda [$15]       12972  adda([vTicks])                       #21 = 72 - 52
              2fd8 c215  st   [$15]       12973  st([vTicks])                         #22
              2fd9 80e1  adda $e1         12974  adda(min(0,maxTicks-(40+52)/2))      #23
              2fda f480  bge  .sysCme#26  12975  bge('.sysCme#26')                    #24  enough time for another loop
              2fdb 00fe  ld   $fe         12976  ld(-2)                               #25
              2fdc 8116  adda [$16]       12977  adda([vPC])                          #26  restart
              2fdd c216  st   [$16]       12978  st([vPC])                            #27
              2fde 1401  ld   $01,y       12979  ld(hi(ctrlBits), Y)                  #28
              2fdf 09f8  ld   [y,$f8]     12980  ld([Y,ctrlBits])                     #29
              2fe0 30fc  anda $fc,x       12981  anda(0xfc,X)                         #30
              2fe1 c500  ctrl x           12982  ctrl(X)                              #31
              2fe2 011d  ld   [$1d]       12983  ld([vTmp])                           #32 always read after ctrl
              2fe3 1403  ld   $03,y       12984  ld(hi('REENTER'),Y)                  #33
              2fe4 e0cb  jmp  y,$cb       12985  jmp(Y,'REENTER')                     #34
              2fe5 00ed  ld   $ed         12986  ld(-38/2)                            #35 max: 38 + 52 = 90 cycles
                                          12987
              2fe6 0200  nop              12988  align(0x100, size=0x100)
              2fe7 0200  nop
              2fe8 0200  nop
              * 26 times
                                          12989
                                          12990  # SYS_ScanMemory_vX_50 implementation
                                          12991
                                          12992  label('sys_ScanMemory')
sys_ScanMemory:
              3000 1124  ld   [$24],x     12993  ld([sysArgs+0],X)                    #18
              3001 0d00  ld   [y,x]       12994  ld([Y,X])                            #19
                                          12995  label('.sysSme#20')
.sysSme#20:   3002 6126  xora [$26]       12996  xora([sysArgs+2])                    #20
              3003 f01e  beq  .sysSme#23  12997  beq('.sysSme#23')                    #21
              3004 0d00  ld   [y,x]       12998  ld([Y,X])                            #22
              3005 6127  xora [$27]       12999  xora([sysArgs+3])                    #23
              3006 f021  beq  .sysSme#26  13000  beq('.sysSme#26')                    #24
              3007 0124  ld   [$24]       13001  ld([sysArgs+0])                      #25
              3008 8001  adda $01         13002  adda(1);                             #26
              3009 d224  st   [$24],x     13003  st([sysArgs+0],X)                    #27
              300a 0118  ld   [$18]       13004  ld([vAC])                            #28
              300b a001  suba $01         13005  suba(1)                              #29
              300c f01a  beq  .sysSme#32  13006  beq('.sysSme#32')                    #30 return zero
              300d c218  st   [$18]       13007  st([vAC])                            #31
              300e 00f7  ld   $f7         13008  ld(-18/2)                            #14 = 32 - 18
              300f 8115  adda [$15]       13009  adda([vTicks])                       #15
              3010 c215  st   [$15]       13010  st([vTicks])                         #16
              3011 80f8  adda $f8         13011  adda(min(0,maxTicks -(28+18)/2))     #17
              3012 f402  bge  .sysSme#20  13012  bge('.sysSme#20')                    #18
              3013 0d00  ld   [y,x]       13013  ld([Y,X])                            #19
              3014 00fe  ld   $fe         13014  ld(-2)                               #20 restart
              3015 8116  adda [$16]       13015  adda([vPC])                          #21
              3016 c216  st   [$16]       13016  st([vPC])                            #22
              3017 1403  ld   $03,y       13017  ld(hi('REENTER'),Y)                  #23
              3018 e0cb  jmp  y,$cb       13018  jmp(Y,'REENTER')                     #24
              3019 00f2  ld   $f2         13019  ld(-28/2)                            #25
                                          13020
                                          13021  label('.sysSme#32')
.sysSme#32:   301a c219  st   [$19]       13022  st([vAC+1])                          #32 return zero
              301b 1403  ld   $03,y       13023  ld(hi('REENTER'),Y)                  #33
              301c e0cb  jmp  y,$cb       13024  jmp(Y,'REENTER')                     #34
              301d 00ed  ld   $ed         13025  ld(-38/2)                            #35
                                          13026
                                          13027  label('.sysSme#23')
.sysSme#23:   301e 0200  nop              13028  nop()                                #23 success
              301f 0200  nop              13029  nop()                                #24
              3020 0124  ld   [$24]       13030  ld([sysArgs+0])                      #25
                                          13031  label('.sysSme#26')
.sysSme#26:   3021 c218  st   [$18]       13032  st([vAC])                            #26 success
              3022 0125  ld   [$25]       13033  ld([sysArgs+1])                      #27
              3023 c219  st   [$19]       13034  st([vAC+1])                          #28
              3024 1403  ld   $03,y       13035  ld(hi('REENTER'),Y)                  #29
              3025 e0cb  jmp  y,$cb       13036  jmp(Y,'REENTER')                     #30
              3026 00ef  ld   $ef         13037  ld(-34/2)                            #31
                                          13038
                                          13039
                                          13040  # SYS_ScanMemoryExt_vX_50 implementation
                                          13041
                                          13042  label('sys_ScanMemoryExt')
sys_ScanMemoryExt:
              3027 503c  ora  $3c,x       13043  ora(0x3c,X)                          #18
              3028 c500  ctrl x           13044  ctrl(X)                              #19
              3029 1525  ld   [$25],y     13045  ld([sysArgs+1],Y)                    #20
              302a 1124  ld   [$24],x     13046  ld([sysArgs+0],X)                    #21
              302b 0d00  ld   [y,x]       13047  ld([Y,X])                            #22
              302c 0200  nop              13048  nop()                                #23
                                          13049  label('.sysSmx#24')
.sysSmx#24:   302d 6126  xora [$26]       13050  xora([sysArgs+2])                    #24
              302e f04a  beq  .sysSmx#27  13051  beq('.sysSmx#27')                    #25
              302f 0d00  ld   [y,x]       13052  ld([Y,X])                            #26
              3030 6127  xora [$27]       13053  xora([sysArgs+3])                    #27
              3031 f04d  beq  .sysSmx#30  13054  beq('.sysSmx#30')                    #28
              3032 0124  ld   [$24]       13055  ld([sysArgs+0])                      #29
              3033 8001  adda $01         13056  adda(1);                             #30
              3034 d224  st   [$24],x     13057  st([sysArgs+0],X)                    #31
              3035 0118  ld   [$18]       13058  ld([vAC])                            #32
              3036 a001  suba $01         13059  suba(1)                              #33
              3037 f053  beq  .sysSmx#36  13060  beq('.sysSmx#36')                    #34 return zero
              3038 c218  st   [$18]       13061  st([vAC])                            #35
              3039 00f7  ld   $f7         13062  ld(-18/2)                            #18 = 36 - 18
              303a 8115  adda [$15]       13063  adda([vTicks])                       #19
              303b c215  st   [$15]       13064  st([vTicks])                         #20
              303c 80f7  adda $f7         13065  adda(min(0,maxTicks -(30+18)/2))     #21
              303d f42d  bge  .sysSmx#24  13066  bge('.sysSmx#24')                    #22
              303e 0d00  ld   [y,x]       13067  ld([Y,X])                            #23
              303f 0116  ld   [$16]       13068  ld([vPC])                            #24
              3040 a002  suba $02         13069  suba(2)                              #25 restart
              3041 c216  st   [$16]       13070  st([vPC])                            #26
              3042 1401  ld   $01,y       13071  ld(hi(ctrlBits),Y)                   #27 restore and return
              3043 09f8  ld   [y,$f8]     13072  ld([Y,ctrlBits])                     #28
              3044 30fc  anda $fc,x       13073  anda(0xfc,X)                         #29
              3045 c500  ctrl x           13074  ctrl(X)                              #30
              3046 011d  ld   [$1d]       13075  ld([vTmp])                           #31
              3047 1403  ld   $03,y       13076  ld(hi('NEXTY'),Y)                    #32
              3048 e000  jmp  y,$00       13077  jmp(Y,'NEXTY')                       #33
              3049 00ee  ld   $ee         13078  ld(-36/2)                            #34
                                          13079
                                          13080  label('.sysSmx#27')
.sysSmx#27:   304a 0200  nop              13081  nop()                                #27 success
              304b 0200  nop              13082  nop()                                #28
              304c 0124  ld   [$24]       13083  ld([sysArgs+0])                      #29
                                          13084  label('.sysSmx#30')
.sysSmx#30:   304d c218  st   [$18]       13085  st([vAC])                            #30 success
              304e 0125  ld   [$25]       13086  ld([sysArgs+1])                      #31
              304f 0200  nop              13087  nop()                                #32
              3050 0200  nop              13088  nop()                                #33
              3051 0200  nop              13089  nop()                                #34
              3052 0200  nop              13090  nop()                                #35
                                          13091  label('.sysSmx#36')
.sysSmx#36:   3053 c219  st   [$19]       13092  st([vAC+1])                          #36
              3054 1401  ld   $01,y       13093  ld(hi(ctrlBits),Y)                   #37 restore and return
              3055 09f8  ld   [y,$f8]     13094  ld([Y,ctrlBits])                     #38
              3056 30fc  anda $fc,x       13095  anda(0xfc,X)                         #39
              3057 c500  ctrl x           13096  ctrl(X)                              #40
              3058 011d  ld   [$1d]       13097  ld([vTmp])                           #41
              3059 1403  ld   $03,y       13098  ld(hi('NEXTY'),Y)                    #42
              305a e000  jmp  y,$00       13099  jmp(Y,'NEXTY')                       #43
              305b 00e9  ld   $e9         13100  ld(-46/2)                            #44
                                          13101
                                          13102
                                          13103  #-----------------------------------------------------------------------
                                          13104  #
                                          13105  #  Spare pages
                                          13106  #
                                          13107  #-----------------------------------------------------------------------
                                          13108
              305c 0200  nop              13109  fillers(until=0xff)
              305d 0200  nop
              305e 0200  nop
              * 163 times
              30ff 0200  nop              13110  align(0x100, size=0x100)
                                          13111
              3100 0200  nop              13112  fillers(until=0xff)
              3101 0200  nop
              3102 0200  nop
              * 255 times
              31ff 0200  nop              13113  align(0x100, size=0x100)
                                          13114
              3200 0200  nop              13115  fillers(until=0xff)
              3201 0200  nop
              3202 0200  nop
              * 255 times
              32ff 0200  nop              13116  align(0x100, size=0x100)
                                          13117
              3300 0200  nop              13118  fillers(until=0xff)
              3301 0200  nop
              3302 0200  nop
              * 255 times
              33ff 0200  nop              13119  align(0x100, size=0x100)
                                          13120
              3400 0200  nop              13121  fillers(until=0xff)
              3401 0200  nop
              3402 0200  nop
              * 255 times
              34ff 0200  nop              13122  align(0x100, size=0x100)
                                          13123
              3500 0200  nop              13124  fillers(until=0xff)
              3501 0200  nop
              3502 0200  nop
              * 255 times
              35ff 0200  nop              13125  align(0x100, size=0x100)
                                          13126
              3600 0200  nop              13127  fillers(until=0xff)
              3601 0200  nop
              3602 0200  nop
              * 255 times
              36ff 0200  nop              13128  align(0x100, size=0x100)
                                          13129
              3700 0200  nop              13130  fillers(until=0xff)
              3701 0200  nop
              3702 0200  nop
              * 255 times
              37ff 0200  nop              13131  align(0x100, size=0x100)
                                          13132
              3800 0200  nop              13133  fillers(until=0xff)
              3801 0200  nop
              3802 0200  nop
              * 255 times
              38ff 0200  nop              13134  align(0x100, size=0x100)
                                          13135
              3900 0200  nop              13136  fillers(until=0xff)
              3901 0200  nop
              3902 0200  nop
              * 255 times
              39ff 0200  nop              13137  align(0x100, size=0x100)
                                          13138
              3a00 0200  nop              13139  fillers(until=0xff)
              3a01 0200  nop
              3a02 0200  nop
              * 255 times
              3aff 0200  nop              13140  align(0x100, size=0x100)
                                          13141
              3b00 0200  nop              13142  fillers(until=0xff)
              3b01 0200  nop
              3b02 0200  nop
              * 255 times
              3bff 0200  nop              13143  align(0x100, size=0x100)
                                          13144
              3c00 0200  nop              13145  fillers(until=0xff)
              3c01 0200  nop
              3c02 0200  nop
              * 255 times
              3cff 0200  nop              13146  align(0x100, size=0x100)
                                          13147
              3d00 0200  nop              13148  fillers(until=0xff)
              3d01 0200  nop
              3d02 0200  nop
              * 255 times
              3dff 0200  nop              13149  align(0x100, size=0x100)
                                          13150
              3e00 0200  nop              13151  fillers(until=0xff)
              3e01 0200  nop
              3e02 0200  nop
              * 255 times
              3eff 0200  nop              13152  align(0x100, size=0x100)
                                          13153
              3f00 0200  nop              13154  fillers(until=0xff)
              3f01 0200  nop
              3f02 0200  nop
              * 255 times
              3fff 0200  nop              13155  align(0x100, size=0x100)
                                          13156
              4000 0200  nop              13157  fillers(until=0xff)
              4001 0200  nop
              4002 0200  nop
              * 255 times
              40ff 0200  nop              13158  align(0x100, size=0x100)
                                          13159
                                          13160  #-----------------------------------------------------------------------
                                          13161  #
                                          13162  #  End of core
                                          13163  #
                                          13164  #-----------------------------------------------------------------------
                                          13165  disableListing()
                                          ;+-----------------------------------+
                                          ;| SYS_Loader_vX.py                  |
                                          ;+-----------------------------------+
SYS_Loader_vX:
SYS_LoaderNextByteIn_32:
              4100 0109  ld   [$09]
              4101 6127  xora [$27]
              4102 ec0f  bne  .sysNbi#19
              4103 1124  ld   [$24],x
              4104 1525  ld   [$25],y
              4105 0300  ld   in
              4106 ce00  st   [y,x]
              4107 8126  adda [$26]
              4108 c226  st   [$26]
              4109 0124  ld   [$24]
              410a 8001  adda $01
              410b c224  st   [$24]
              410c 1403  ld   $03,y
              410d e0cb  jmp  y,$cb
              410e 00f0  ld   $f0
.sysNbi#19:   410f 0116  ld   [$16]
              4110 a002  suba $02
              4111 c216  st   [$16]
              4112 1403  ld   $03,y
              4113 e000  jmp  y,$00
              4114 00f3  ld   $f3
SYS_LoaderProcessInput_64:
              4115 1525  ld   [$25],y
              4116 0126  ld   [$26]
              4117 ec3c  bne  .sysPi#19
              4118 0124  ld   [$24]
              4119 b041  suba $41,x
              411a 0d00  ld   [y,x]
              411b de00  st   [y,x++]     ;Just X++
              411c 604c  xora $4c
              411d ec40  bne  .sysPi#25
              411e 0d00  ld   [y,x]       ;Valid command
              411f de00  st   [y,x++]     ;Just X++
              4120 203f  anda $3f
              4121 c228  st   [$28]
              4122 8d00  adda [y,x]
              4123 8001  adda $01
              4124 20fe  anda $fe
              4125 c21d  st   [$1d]
              4126 0d00  ld   [y,x]
              4127 de00  st   [y,x++]     ;Just X++
              4128 c229  st   [$29]
              4129 0d00  ld   [y,x]
              412a de00  st   [y,x++]     ;Just X++
              412b c22a  st   [$2a]
              412c a001  suba $01
              412d 20fc  anda $fc
              412e 411d  ora  [$1d]
              412f c21d  st   [$1d]
              4130 0128  ld   [$28]
              4131 ec45  bne  .sysPi#45
              4132 0129  ld   [$29]       ;Execute
              4133 c21a  st   [$1a]
              4134 a002  suba $02
              4135 c216  st   [$16]
              4136 012a  ld   [$2a]
              4137 c217  st   [$17]
              4138 c21b  st   [$1b]
              4139 1403  ld   $03,y
              413a e0cb  jmp  y,$cb
              413b 00e4  ld   $e4
.sysPi#19:    413c 0001  ld   $01         ;Wait 6 cycles
              413d ec3d  bne  $413d
              413e a001  suba $01
              413f 0200  nop              ;Invalid checksum
.sysPi#25:    4140 0067  ld   $67         ;Unknown command
              4141 c226  st   [$26]
              4142 1403  ld   $03,y
              4143 e0cb  jmp  y,$cb
              4144 00f0  ld   $f0
.sysPi#45:    4145 011d  ld   [$1d]       ;Loading data
              4146 ec49  bne  $4149
              4147 fc4a  bra  $414a
              4148 00fc  ld   $fc         ;Unsafe
              4149 00ff  ld   $ff         ;Safe
              414a 2121  anda [$21]
              414b c221  st   [$21]
              414c 0124  ld   [$24]
              414d b001  suba $01,x
              414e 0d00  ld   [y,x]
              414f c226  st   [$26]
              4150 1403  ld   $03,y
              4151 e0cb  jmp  y,$cb
              4152 00e2  ld   $e2
SYS_LoaderPayloadCopy_34:
              4153 0128  ld   [$28]
              4154 f061  beq  .sysCc#18
              4155 a001  suba $01
              4156 c228  st   [$28]
              4157 1124  ld   [$24],x
              4158 1525  ld   [$25],y
              4159 0d00  ld   [y,x]
              415a 1129  ld   [$29],x
              415b 152a  ld   [$2a],y
              415c ce00  st   [y,x]
              415d 0129  ld   [$29]
              415e 8001  adda $01
              415f c229  st   [$29]
              4160 fc65  bra  .sysCc#30
.sysCc#18:    4161 1403  ld   $03,y
              4162 0004  ld   $04         ;Wait 11 cycles
              4163 ec63  bne  $4163
              4164 a001  suba $01
.sysCc#30:    4165 e0cb  jmp  y,$cb
              4166 00ef  ld   $ef         ;End of SYS_Loader_vX.py, size 103
                                          ;+-----------------------------------+
                                          ;| SYS_Racer_v1.py                   |
                                          ;+-----------------------------------+
SYS_Racer_v1:
SYS_RacerUpdateVideoX_40:
              4167 1126  ld   [$26],x
              4168 1527  ld   [$27],y
              4169 0d00  ld   [y,x]
              416a c21d  st   [$1d]
              416b a128  suba [$28]
              416c 1124  ld   [$24],x
              416d 1525  ld   [$25],y
              416e ce00  st   [y,x]
              416f 0124  ld   [$24]
              4170 a004  suba $04
              4171 c224  st   [$24]
              4172 011d  ld   [$1d]
              4173 c228  st   [$28]
              4174 0126  ld   [$26]
              4175 8001  adda $01
              4176 c226  st   [$26]
              4177 ec7b  bne  .sysRacer0
              4178 0116  ld   [$16]
              4179 fc7d  bra  .sysRacer1
              417a 0200  nop
.sysRacer0:   417b a002  suba $02
              417c c216  st   [$16]
.sysRacer1:   417d 1403  ld   $03,y
              417e e0cb  jmp  y,$cb
              417f 00ec  ld   $ec
SYS_RacerUpdateVideoY_40:
              4180 0127  ld   [$27]
              4181 2008  anda $08
              4182 ec85  bne  $4185
              4183 fc86  bra  $4186
              4184 0000  ld   $00
              4185 0001  ld   $01
              4186 c21d  st   [$1d]
              4187 1525  ld   [$25],y
              4188 0124  ld   [$24]
              4189 8002  adda $02
              418a d224  st   [$24],x
              418b 60ee  xora $ee
              418c c218  st   [$18]
              418d c219  st   [$19]
              418e 0126  ld   [$26]
              418f 20fe  anda $fe
              4190 811d  adda [$1d]
              4191 ce00  st   [y,x]
              4192 0126  ld   [$26]
              4193 8001  adda $01
              4194 c226  st   [$26]
              4195 1403  ld   $03,y
              4196 e0cb  jmp  y,$cb
              4197 00ec  ld   $ec         ;End of SYS_Racer_v1.py, size 49
                                          ;+-----------------------------------+
                                          ;| Apps/Racer/Horizon-256x16.rgb     |
                                          ;+-----------------------------------+
              4198 dc00  st   $00,[y,x++] ;'\x00'
              4199 dc00  st   $00,[y,x++] ;'\x00'
              419a dc00  st   $00,[y,x++] ;'\x00'
              419b dc00  st   $00,[y,x++] ;'\x00'
              419c dc00  st   $00,[y,x++] ;'\x00'
              419d dc00  st   $00,[y,x++] ;'\x00'
              419e dc00  st   $00,[y,x++] ;'\x00'
              419f dc00  st   $00,[y,x++] ;'\x00'
              41a0 0000  ld   $00
              41a1 c218  st   [$18]
              41a2 0000  ld   $00
              41a3 14e1  ld   $e1,y
              41a4 e071  jmp  y,$71
              41a5 c219  st   [$19]
zippedRacerHorizon:
              41a6 0041  ld   $41
              41a7 0000  ld   $00
              41a8 00c3  ld   $c3
              41a9 0030  ld   $30
              41aa 000c  ld   $0c
              41ab 00c3  ld   $c3
              41ac 0030  ld   $30
              41ad 000c  ld   $0c
              41ae 00c3  ld   $c3
              41af 0030  ld   $30
              41b0 000c  ld   $0c
              41b1 00c3  ld   $c3
              41b2 0030  ld   $30
              41b3 000c  ld   $0c
              41b4 00c3  ld   $c3
              41b5 0030  ld   $30
              41b6 000c  ld   $0c
              41b7 00c3  ld   $c3
              41b8 0030  ld   $30
              41b9 000c  ld   $0c
              41ba 00c3  ld   $c3
              41bb 0030  ld   $30
              41bc 000c  ld   $0c
              41bd 00c3  ld   $c3
              41be 0000  ld   $00
              41bf 000c  ld   $0c
              41c0 00c3  ld   $c3
              41c1 0030  ld   $30
              41c2 000c  ld   $0c
              41c3 00c3  ld   $c3
              41c4 0030  ld   $30
              41c5 00fc  ld   $fc
              41c6 0002  ld   $02
              41c7 0030  ld   $30
              41c8 000c  ld   $0c
              41c9 00c3  ld   $c3
              41ca 0030  ld   $30
              41cb 000c  ld   $0c
              41cc 00c3  ld   $c3
              41cd 0030  ld   $30
              41ce 000c  ld   $0c
              41cf 00c3  ld   $c3
              41d0 0030  ld   $30
              41d1 000c  ld   $0c
              41d2 00c3  ld   $c3
              41d3 0030  ld   $30
              41d4 000c  ld   $0c
              41d5 00c3  ld   $c3
              41d6 0030  ld   $30
              41d7 000c  ld   $0c
              41d8 00c3  ld   $c3
              41d9 0030  ld   $30
              41da 000c  ld   $0c
              41db 00c3  ld   $c3
              41dc 0030  ld   $30
              41dd 000c  ld   $0c
              41de 00c3  ld   $c3
              41df 0030  ld   $30
              41e0 000c  ld   $0c
              41e1 00c3  ld   $c3
              41e2 0030  ld   $30
              41e3 000c  ld   $0c
              41e4 00c3  ld   $c3
              41e5 0030  ld   $30
              41e6 000c  ld   $0c
              41e7 00c3  ld   $c3
              41e8 0030  ld   $30
              41e9 000c  ld   $0c
              41ea 00c3  ld   $c3
              41eb 0030  ld   $30
              41ec 000c  ld   $0c
              41ed 00c3  ld   $c3
              41ee 0030  ld   $30
              41ef 000c  ld   $0c
              41f0 00c3  ld   $c3
              41f1 0030  ld   $30
              41f2 000c  ld   $0c
              41f3 00c3  ld   $c3
              41f4 0030  ld   $30
              41f5 000c  ld   $0c
              41f6 00c3  ld   $c3
              41f7 0030  ld   $30
              41f8 000c  ld   $0c
              41f9 00c3  ld   $c3
              41fa 0013  ld   $13
              41fb fe00  bra  ac          ;+-----------------------------------+
              41fc fcfd  bra  $41fd       ;|                                   |
              41fd 1418  ld   $18,y       ;| Trampoline for page $4100 lookups |
              41fe e006  jmp  y,$06       ;|                                   |
              41ff c218  st   [$18]       ;+-----------------------------------+
              4200 000c  ld   $0c
              4201 00c3  ld   $c3
              4202 0030  ld   $30
              4203 000c  ld   $0c
              4204 00c3  ld   $c3
              4205 002a  ld   $2a
              4206 000c  ld   $0c
              4207 00c3  ld   $c3
              4208 0030  ld   $30
              4209 000c  ld   $0c
              420a 00c3  ld   $c3
              420b 0030  ld   $30
              420c 000c  ld   $0c
              420d 00c3  ld   $c3
              420e 0030  ld   $30
              420f 000c  ld   $0c
              4210 00c3  ld   $c3
              4211 0030  ld   $30
              4212 000c  ld   $0c
              4213 00c3  ld   $c3
              4214 0030  ld   $30
              4215 000c  ld   $0c
              4216 00c3  ld   $c3
              4217 0030  ld   $30
              4218 000c  ld   $0c
              4219 00c3  ld   $c3
              421a 0030  ld   $30
              421b 000c  ld   $0c
              421c 00c3  ld   $c3
              421d 0030  ld   $30
              421e 000c  ld   $0c
              421f 00c3  ld   $c3
              4220 0030  ld   $30
              4221 000c  ld   $0c
              4222 00c3  ld   $c3
              4223 0030  ld   $30
              4224 000c  ld   $0c
              4225 00c3  ld   $c3
              4226 0030  ld   $30
              4227 000c  ld   $0c
              4228 00c3  ld   $c3
              4229 0030  ld   $30
              422a 000c  ld   $0c
              422b 00ab  ld   $ab
              422c 002a  ld   $2a
              422d 000c  ld   $0c
              422e 00c3  ld   $c3
              422f 0030  ld   $30
              4230 000c  ld   $0c
              4231 00c3  ld   $c3
              4232 0030  ld   $30
              4233 000c  ld   $0c
              4234 00c3  ld   $c3
              4235 0030  ld   $30
              4236 000c  ld   $0c
              4237 00c3  ld   $c3
              4238 0030  ld   $30
              4239 000c  ld   $0c
              423a 00c3  ld   $c3
              423b 00f0  ld   $f0
              423c 000f  ld   $0f
              423d 00c3  ld   $c3
              423e 0030  ld   $30
              423f 000c  ld   $0c
              4240 00c3  ld   $c3
              4241 00f0  ld   $f0
              4242 000f  ld   $0f
              4243 00c3  ld   $c3
              4244 0030  ld   $30
              4245 000c  ld   $0c
              4246 00c3  ld   $c3
              4247 003f  ld   $3f
              4248 000c  ld   $0c
              4249 00c3  ld   $c3
              424a 0030  ld   $30
              424b 000c  ld   $0c
              424c 00c3  ld   $c3
              424d 0030  ld   $30
              424e 000c  ld   $0c
              424f 00c3  ld   $c3
              4250 0030  ld   $30
              4251 000c  ld   $0c
              4252 00c3  ld   $c3
              4253 0030  ld   $30
              4254 000c  ld   $0c
              4255 00c3  ld   $c3
              4256 0030  ld   $30
              4257 000c  ld   $0c
              4258 00c3  ld   $c3
              4259 0030  ld   $30
              425a 000c  ld   $0c
              425b 00c3  ld   $c3
              425c 0030  ld   $30
              425d 000c  ld   $0c
              425e 00c3  ld   $c3
              425f 0015  ld   $15
              4260 000c  ld   $0c
              4261 00c3  ld   $c3
              4262 0030  ld   $30
              4263 000c  ld   $0c
              4264 00c3  ld   $c3
              4265 0030  ld   $30
              4266 000c  ld   $0c
              4267 00c3  ld   $c3
              4268 0030  ld   $30
              4269 001c  ld   $1c
              426a 0004  ld   $04
              426b 006b  ld   $6b
              426c 0000  ld   $00
              426d 00c3  ld   $c3
              426e 0030  ld   $30
              426f 000c  ld   $0c
              4270 00c3  ld   $c3
              4271 0030  ld   $30
              4272 000c  ld   $0c
              4273 00c3  ld   $c3
              4274 0030  ld   $30
              4275 000c  ld   $0c
              4276 00c3  ld   $c3
              4277 0030  ld   $30
              4278 000c  ld   $0c
              4279 00c3  ld   $c3
              427a 0030  ld   $30
              427b 000c  ld   $0c
              427c 00c3  ld   $c3
              427d 0030  ld   $30
              427e 000c  ld   $0c
              427f 00c3  ld   $c3
              4280 0030  ld   $30
              4281 000c  ld   $0c
              4282 00c3  ld   $c3
              4283 003f  ld   $3f
              4284 0000  ld   $00
              4285 00c3  ld   $c3
              4286 0030  ld   $30
              4287 000c  ld   $0c
              4288 00c3  ld   $c3
              4289 00f0  ld   $f0
              428a 000f  ld   $0f
              428b 00c0  ld   $c0
              428c 0030  ld   $30
              428d 000c  ld   $0c
              428e 00c3  ld   $c3
              428f 0030  ld   $30
              4290 000c  ld   $0c
              4291 00c3  ld   $c3
              4292 0030  ld   $30
              4293 000c  ld   $0c
              4294 00c3  ld   $c3
              4295 0030  ld   $30
              4296 000c  ld   $0c
              4297 00c3  ld   $c3
              4298 0030  ld   $30
              4299 000c  ld   $0c
              429a 00c3  ld   $c3
              429b 0030  ld   $30
              429c 000c  ld   $0c
              429d 00c3  ld   $c3
              429e 0030  ld   $30
              429f 000c  ld   $0c
              42a0 00c3  ld   $c3
              42a1 0030  ld   $30
              42a2 000c  ld   $0c
              42a3 00c3  ld   $c3
              42a4 0030  ld   $30
              42a5 000c  ld   $0c
              42a6 00c3  ld   $c3
              42a7 0030  ld   $30
              42a8 000c  ld   $0c
              42a9 00c3  ld   $c3
              42aa 0030  ld   $30
              42ab 000c  ld   $0c
              42ac 00c3  ld   $c3
              42ad 0030  ld   $30
              42ae 000c  ld   $0c
              42af 00c3  ld   $c3
              42b0 0030  ld   $30
              42b1 000c  ld   $0c
              42b2 00c3  ld   $c3
              42b3 0030  ld   $30
              42b4 000c  ld   $0c
              42b5 00c3  ld   $c3
              42b6 0030  ld   $30
              42b7 000c  ld   $0c
              42b8 00c3  ld   $c3
              42b9 0030  ld   $30
              42ba 000c  ld   $0c
              42bb 00c3  ld   $c3
              42bc 0030  ld   $30
              42bd 000c  ld   $0c
              42be 00c3  ld   $c3
              42bf 002a  ld   $2a
              42c0 000c  ld   $0c
              42c1 00c3  ld   $c3
              42c2 0030  ld   $30
              42c3 000c  ld   $0c
              42c4 00ab  ld   $ab
              42c5 002a  ld   $2a
              42c6 000c  ld   $0c
              42c7 00c3  ld   $c3
              42c8 0030  ld   $30
              42c9 000c  ld   $0c
              42ca 00c3  ld   $c3
              42cb 0030  ld   $30
              42cc 000c  ld   $0c
              42cd 00c3  ld   $c3
              42ce 0030  ld   $30
              42cf 000c  ld   $0c
              42d0 00c3  ld   $c3
              42d1 0030  ld   $30
              42d2 000c  ld   $0c
              42d3 00c3  ld   $c3
              42d4 00ff  ld   $ff
              42d5 00fb  ld   $fb
              42d6 00bf  ld   $bf
              42d7 003f  ld   $3f
              42d8 000c  ld   $0c
              42d9 00c3  ld   $c3
              42da 0030  ld   $30
              42db 000c  ld   $0c
              42dc 00c3  ld   $c3
              42dd 0030  ld   $30
              42de 000c  ld   $0c
              42df 00c3  ld   $c3
              42e0 0030  ld   $30
              42e1 000c  ld   $0c
              42e2 00c3  ld   $c3
              42e3 0030  ld   $30
              42e4 000c  ld   $0c
              42e5 00c3  ld   $c3
              42e6 0030  ld   $30
              42e7 000c  ld   $0c
              42e8 00c3  ld   $c3
              42e9 0030  ld   $30
              42ea 00ac  ld   $ac
              42eb 0056  ld   $56
              42ec 0095  ld   $95
              42ed 000a  ld   $0a
              42ee 00c3  ld   $c3
              42ef 0030  ld   $30
              42f0 000c  ld   $0c
              42f1 00c3  ld   $c3
              42f2 0030  ld   $30
              42f3 000c  ld   $0c
              42f4 00c3  ld   $c3
              42f5 0030  ld   $30
              42f6 000c  ld   $0c
              42f7 00c3  ld   $c3
              42f8 0030  ld   $30
              42f9 000c  ld   $0c
              42fa 00c3  ld   $c3
              42fb fe00  bra  ac          ;+-----------------------------------+
              42fc fcfd  bra  $42fd       ;|                                   |
              42fd 1418  ld   $18,y       ;| Trampoline for page $4200 lookups |
              42fe e006  jmp  y,$06       ;|                                   |
              42ff c218  st   [$18]       ;+-----------------------------------+
              4300 00f0  ld   $f0
              4301 00ff  ld   $ff
              4302 00c3  ld   $c3
              4303 0030  ld   $30
              4304 000c  ld   $0c
              4305 00c3  ld   $c3
              4306 00f0  ld   $f0
              4307 00ff  ld   $ff
              4308 00c3  ld   $c3
              4309 0030  ld   $30
              430a 000c  ld   $0c
              430b 00c3  ld   $c3
              430c 00ff  ld   $ff
              430d 000f  ld   $0f
              430e 00c3  ld   $c3
              430f 0030  ld   $30
              4310 000c  ld   $0c
              4311 00c3  ld   $c3
              4312 0030  ld   $30
              4313 000c  ld   $0c
              4314 00c3  ld   $c3
              4315 0030  ld   $30
              4316 000c  ld   $0c
              4317 00c3  ld   $c3
              4318 0030  ld   $30
              4319 000c  ld   $0c
              431a 00c3  ld   $c3
              431b 0030  ld   $30
              431c 000c  ld   $0c
              431d 00c3  ld   $c3
              431e 0030  ld   $30
              431f 000c  ld   $0c
              4320 00c3  ld   $c3
              4321 0030  ld   $30
              4322 000c  ld   $0c
              4323 00c3  ld   $c3
              4324 0015  ld   $15
              4325 000c  ld   $0c
              4326 00c3  ld   $c3
              4327 0030  ld   $30
              4328 000c  ld   $0c
              4329 00c3  ld   $c3
              432a 0030  ld   $30
              432b 000c  ld   $0c
              432c 00c3  ld   $c3
              432d 0030  ld   $30
              432e 001c  ld   $1c
              432f 00ac  ld   $ac
              4330 0056  ld   $56
              4331 0060  ld   $60
              4332 0059  ld   $59
              4333 0030  ld   $30
              4334 000c  ld   $0c
              4335 00c3  ld   $c3
              4336 0070  ld   $70
              4337 0055  ld   $55
              4338 00fd  ld   $fd
              4339 0055  ld   $55
              433a 00f5  ld   $f5
              433b 0057  ld   $57
              433c 00d5  ld   $d5
              433d 005f  ld   $5f
              433e 0055  ld   $55
              433f 007f  ld   $7f
              4340 0055  ld   $55
              4341 00fd  ld   $fd
              4342 0055  ld   $55
              4343 0005  ld   $05
              4344 00c3  ld   $c3
              4345 0030  ld   $30
              4346 000c  ld   $0c
              4347 00c3  ld   $c3
              4348 00f0  ld   $f0
              4349 000b  ld   $0b
              434a 00c0  ld   $c0
              434b 0030  ld   $30
              434c 000c  ld   $0c
              434d 00c3  ld   $c3
              434e 002f  ld   $2f
              434f 0000  ld   $00
              4350 00c3  ld   $c3
              4351 0030  ld   $30
              4352 000c  ld   $0c
              4353 00c3  ld   $c3
              4354 0030  ld   $30
              4355 000c  ld   $0c
              4356 00c3  ld   $c3
              4357 0030  ld   $30
              4358 000c  ld   $0c
              4359 00c3  ld   $c3
              435a 0030  ld   $30
              435b 000c  ld   $0c
              435c 00c3  ld   $c3
              435d 0030  ld   $30
              435e 000c  ld   $0c
              435f 00c3  ld   $c3
              4360 0030  ld   $30
              4361 000c  ld   $0c
              4362 00c3  ld   $c3
              4363 0030  ld   $30
              4364 000c  ld   $0c
              4365 00c3  ld   $c3
              4366 0030  ld   $30
              4367 000c  ld   $0c
              4368 00c3  ld   $c3
              4369 0030  ld   $30
              436a 000c  ld   $0c
              436b 00c3  ld   $c3
              436c 0030  ld   $30
              436d 000c  ld   $0c
              436e 00c3  ld   $c3
              436f 0030  ld   $30
              4370 000c  ld   $0c
              4371 00c3  ld   $c3
              4372 0030  ld   $30
              4373 000c  ld   $0c
              4374 00c3  ld   $c3
              4375 0030  ld   $30
              4376 000c  ld   $0c
              4377 00c3  ld   $c3
              4378 0030  ld   $30
              4379 000c  ld   $0c
              437a 00c3  ld   $c3
              437b 0030  ld   $30
              437c 000c  ld   $0c
              437d 00c3  ld   $c3
              437e 0030  ld   $30
              437f 000c  ld   $0c
              4380 00c3  ld   $c3
              4381 0030  ld   $30
              4382 000c  ld   $0c
              4383 00c3  ld   $c3
              4384 002a  ld   $2a
              4385 000c  ld   $0c
              4386 00c3  ld   $c3
              4387 00b0  ld   $b0
              4388 00aa  ld   $aa
              4389 00aa  ld   $aa
              438a 002a  ld   $2a
              438b 000c  ld   $0c
              438c 00c3  ld   $c3
              438d 0030  ld   $30
              438e 000c  ld   $0c
              438f 00c3  ld   $c3
              4390 0030  ld   $30
              4391 000c  ld   $0c
              4392 00c3  ld   $c3
              4393 0030  ld   $30
              4394 000c  ld   $0c
              4395 00c3  ld   $c3
              4396 0030  ld   $30
              4397 000c  ld   $0c
              4398 00bf  ld   $bf
              4399 0091  ld   $91
              439a 00f4  ld   $f4
              439b 0046  ld   $46
              439c 00d2  ld   $d2
              439d 000b  ld   $0b
              439e 00c3  ld   $c3
              439f 0030  ld   $30
              43a0 000c  ld   $0c
              43a1 00c3  ld   $c3
              43a2 0030  ld   $30
              43a3 000c  ld   $0c
              43a4 00c3  ld   $c3
              43a5 0030  ld   $30
              43a6 000c  ld   $0c
              43a7 00c3  ld   $c3
              43a8 0030  ld   $30
              43a9 000c  ld   $0c
              43aa 00c3  ld   $c3
              43ab 0030  ld   $30
              43ac 00ac  ld   $ac
              43ad 00c2  ld   $c2
              43ae 00b0  ld   $b0
              43af 00aa  ld   $aa
              43b0 00aa  ld   $aa
              43b1 00aa  ld   $aa
              43b2 00aa  ld   $aa
              43b3 00c2  ld   $c2
              43b4 00b0  ld   $b0
              43b5 000a  ld   $0a
              43b6 00c3  ld   $c3
              43b7 0030  ld   $30
              43b8 000c  ld   $0c
              43b9 00c3  ld   $c3
              43ba 0030  ld   $30
              43bb 000c  ld   $0c
              43bc 00c3  ld   $c3
              43bd 0030  ld   $30
              43be 000c  ld   $0c
              43bf 00c3  ld   $c3
              43c0 0030  ld   $30
              43c1 00ac  ld   $ac
              43c2 00fe  ld   $fe
              43c3 00ff  ld   $ff
              43c4 003f  ld   $3f
              43c5 00c0  ld   $c0
              43c6 0030  ld   $30
              43c7 00ac  ld   $ac
              43c8 00fe  ld   $fe
              43c9 00ff  ld   $ff
              43ca 003f  ld   $3f
              43cb 00c0  ld   $c0
              43cc 00b0  ld   $b0
              43cd 00fa  ld   $fa
              43ce 00ff  ld   $ff
              43cf 00ff  ld   $ff
              43d0 0000  ld   $00
              43d1 00c3  ld   $c3
              43d2 0030  ld   $30
              43d3 000c  ld   $0c
              43d4 00c3  ld   $c3
              43d5 0030  ld   $30
              43d6 000c  ld   $0c
              43d7 00c3  ld   $c3
              43d8 0030  ld   $30
              43d9 000c  ld   $0c
              43da 00c3  ld   $c3
              43db 0030  ld   $30
              43dc 000c  ld   $0c
              43dd 00c3  ld   $c3
              43de 0030  ld   $30
              43df 000c  ld   $0c
              43e0 00c3  ld   $c3
              43e1 0030  ld   $30
              43e2 000c  ld   $0c
              43e3 0057  ld   $57
              43e4 0055  ld   $55
              43e5 0005  ld   $05
              43e6 00c3  ld   $c3
              43e7 0030  ld   $30
              43e8 000c  ld   $0c
              43e9 00c3  ld   $c3
              43ea 0030  ld   $30
              43eb 000c  ld   $0c
              43ec 00c3  ld   $c3
              43ed 0096  ld   $96
              43ee 0015  ld   $15
              43ef 0058  ld   $58
              43f0 006b  ld   $6b
              43f1 00b0  ld   $b0
              43f2 00ae  ld   $ae
              43f3 0030  ld   $30
              43f4 000c  ld   $0c
              43f5 00c3  ld   $c3
              43f6 00f0  ld   $f0
              43f7 00ff  ld   $ff
              43f8 00ff  ld   $ff
              43f9 00ff  ld   $ff
              43fa 00ff  ld   $ff
              43fb fe00  bra  ac          ;+-----------------------------------+
              43fc fcfd  bra  $43fd       ;|                                   |
              43fd 1418  ld   $18,y       ;| Trampoline for page $4300 lookups |
              43fe e006  jmp  y,$06       ;|                                   |
              43ff c218  st   [$18]       ;+-----------------------------------+
              4400 00ff  ld   $ff
              4401 00ff  ld   $ff
              4402 00ff  ld   $ff
              * 8 times
              4408 000f  ld   $0f
              4409 00c3  ld   $c3
              440a 0030  ld   $30
              440b 000c  ld   $0c
              440c 00c3  ld   $c3
              440d 0030  ld   $30
              440e 00fc  ld   $fc
              440f 0003  ld   $03
              4410 0030  ld   $30
              4411 000c  ld   $0c
              4412 00ff  ld   $ff
              4413 0000  ld   $00
              4414 000c  ld   $0c
              4415 00c3  ld   $c3
              4416 0030  ld   $30
              4417 000c  ld   $0c
              4418 00c3  ld   $c3
              4419 0030  ld   $30
              441a 00fc  ld   $fc
              441b 00bf  ld   $bf
              441c 0030  ld   $30
              441d 000c  ld   $0c
              441e 00c3  ld   $c3
              441f 0030  ld   $30
              4420 000c  ld   $0c
              4421 00c3  ld   $c3
              4422 0030  ld   $30
              4423 000c  ld   $0c
              4424 00c3  ld   $c3
              4425 0030  ld   $30
              4426 000c  ld   $0c
              4427 00c3  ld   $c3
              4428 0030  ld   $30
              4429 000c  ld   $0c
              442a 00c3  ld   $c3
              442b 0030  ld   $30
              442c 000c  ld   $0c
              442d 00c3  ld   $c3
              442e 0030  ld   $30
              442f 000c  ld   $0c
              4430 00c3  ld   $c3
              4431 0030  ld   $30
              4432 000c  ld   $0c
              4433 00c3  ld   $c3
              4434 0030  ld   $30
              4435 000c  ld   $0c
              4436 00c3  ld   $c3
              4437 0030  ld   $30
              4438 000c  ld   $0c
              4439 00c3  ld   $c3
              443a 0030  ld   $30
              443b 000c  ld   $0c
              443c 00c3  ld   $c3
              443d 0030  ld   $30
              443e 000c  ld   $0c
              443f 00c3  ld   $c3
              4440 0030  ld   $30
              4441 000c  ld   $0c
              4442 00c3  ld   $c3
              4443 0030  ld   $30
              4444 000c  ld   $0c
              4445 00c3  ld   $c3
              4446 00f0  ld   $f0
              4447 00ff  ld   $ff
              4448 00ab  ld   $ab
              4449 00ff  ld   $ff
              444a 000f  ld   $0f
              444b 00c3  ld   $c3
              444c 006a  ld   $6a
              444d 00a5  ld   $a5
              444e 0056  ld   $56
              444f 002a  ld   $2a
              4450 000c  ld   $0c
              4451 00c3  ld   $c3
              4452 0030  ld   $30
              4453 000c  ld   $0c
              4454 00c3  ld   $c3
              4455 0030  ld   $30
              4456 000c  ld   $0c
              4457 00c3  ld   $c3
              4458 0030  ld   $30
              4459 000c  ld   $0c
              445a 00c3  ld   $c3
              445b 0030  ld   $30
              445c 00fc  ld   $fc
              445d 004a  ld   $4a
              445e 0030  ld   $30
              445f 00fc  ld   $fc
              4460 00c2  ld   $c2
              4461 0070  ld   $70
              4462 00f4  ld   $f4
              4463 00c2  ld   $c2
              4464 0030  ld   $30
              4465 000c  ld   $0c
              4466 00c3  ld   $c3
              4467 0030  ld   $30
              4468 000c  ld   $0c
              4469 00c3  ld   $c3
              446a 0030  ld   $30
              446b 000c  ld   $0c
              446c 00c3  ld   $c3
              446d 0030  ld   $30
              446e 000c  ld   $0c
              446f 00c3  ld   $c3
              4470 00f0  ld   $f0
              4471 00af  ld   $af
              4472 00fe  ld   $fe
              4473 00aa  ld   $aa
              4474 00aa  ld   $aa
              4475 00aa  ld   $aa
              * 6 times
              4479 00bf  ld   $bf
              447a 00fa  ld   $fa
              447b 00c3  ld   $c3
              447c 0030  ld   $30
              447d 000c  ld   $0c
              447e 00c3  ld   $c3
              447f 0030  ld   $30
              4480 000c  ld   $0c
              4481 00c3  ld   $c3
              4482 0030  ld   $30
              4483 000c  ld   $0c
              4484 00c3  ld   $c3
              4485 00f0  ld   $f0
              4486 00ff  ld   $ff
              4487 00ff  ld   $ff
              4488 0030  ld   $30
              4489 000c  ld   $0c
              448a 00c3  ld   $c3
              448b 00f0  ld   $f0
              448c 00ff  ld   $ff
              448d 00ff  ld   $ff
              448e 0030  ld   $30
              448f 000c  ld   $0c
              4490 00c3  ld   $c3
              4491 00ff  ld   $ff
              4492 00ff  ld   $ff
              4493 00c3  ld   $c3
              4494 0030  ld   $30
              4495 000c  ld   $0c
              4496 00c3  ld   $c3
              4497 0030  ld   $30
              4498 000c  ld   $0c
              4499 00c3  ld   $c3
              449a 0030  ld   $30
              449b 000c  ld   $0c
              449c 00c3  ld   $c3
              449d 0030  ld   $30
              449e 000c  ld   $0c
              449f 00c3  ld   $c3
              44a0 0030  ld   $30
              44a1 000c  ld   $0c
              44a2 00c3  ld   $c3
              44a3 0030  ld   $30
              44a4 000c  ld   $0c
              44a5 00c3  ld   $c3
              44a6 0030  ld   $30
              44a7 000c  ld   $0c
              44a8 00c3  ld   $c3
              44a9 0015  ld   $15
              44aa 000c  ld   $0c
              44ab 00c3  ld   $c3
              44ac 0030  ld   $30
              44ad 000c  ld   $0c
              44ae 00c3  ld   $c3
              44af 0030  ld   $30
              44b0 000c  ld   $0c
              44b1 00c3  ld   $c3
              44b2 00eb  ld   $eb
              44b3 001a  ld   $1a
              44b4 00ac  ld   $ac
              44b5 0056  ld   $56
              44b6 00b0  ld   $b0
              44b7 00a6  ld   $a6
              44b8 0030  ld   $30
              44b9 000c  ld   $0c
              44ba 00c3  ld   $c3
              44bb 0070  ld   $70
              44bc 0055  ld   $55
              44bd 00fd  ld   $fd
              44be 0055  ld   $55
              44bf 00f5  ld   $f5
              44c0 0057  ld   $57
              44c1 00d5  ld   $d5
              44c2 005f  ld   $5f
              44c3 0055  ld   $55
              44c4 007f  ld   $7f
              44c5 0055  ld   $55
              44c6 00fd  ld   $fd
              44c7 0055  ld   $55
              44c8 0005  ld   $05
              44c9 00c3  ld   $c3
              44ca 0030  ld   $30
              44cb 000c  ld   $0c
              44cc 00c3  ld   $c3
              44cd 0030  ld   $30
              44ce 000c  ld   $0c
              44cf 00bf  ld   $bf
              44d0 0000  ld   $00
              44d1 00fc  ld   $fc
              44d2 0002  ld   $02
              44d3 0030  ld   $30
              44d4 000c  ld   $0c
              44d5 00c3  ld   $c3
              44d6 0030  ld   $30
              44d7 000c  ld   $0c
              44d8 00c3  ld   $c3
              44d9 0030  ld   $30
              44da 006c  ld   $6c
              44db 00fc  ld   $fc
              44dc 0030  ld   $30
              44dd 000c  ld   $0c
              44de 00c3  ld   $c3
              44df 0030  ld   $30
              44e0 000c  ld   $0c
              44e1 00c3  ld   $c3
              44e2 0030  ld   $30
              44e3 000c  ld   $0c
              44e4 00c3  ld   $c3
              44e5 0030  ld   $30
              44e6 000c  ld   $0c
              44e7 00c3  ld   $c3
              44e8 0030  ld   $30
              44e9 000c  ld   $0c
              44ea 00c3  ld   $c3
              44eb 0030  ld   $30
              44ec 000c  ld   $0c
              44ed 00c3  ld   $c3
              44ee 0030  ld   $30
              44ef 000c  ld   $0c
              44f0 00c3  ld   $c3
              44f1 0030  ld   $30
              44f2 000c  ld   $0c
              44f3 00c3  ld   $c3
              44f4 0030  ld   $30
              44f5 000c  ld   $0c
              44f6 00c3  ld   $c3
              44f7 0030  ld   $30
              44f8 000c  ld   $0c
              44f9 00c3  ld   $c3
              44fa 0030  ld   $30
              44fb fe00  bra  ac          ;+-----------------------------------+
              44fc fcfd  bra  $44fd       ;|                                   |
              44fd 1418  ld   $18,y       ;| Trampoline for page $4400 lookups |
              44fe e006  jmp  y,$06       ;|                                   |
              44ff c218  st   [$18]       ;+-----------------------------------+
              4500 000c  ld   $0c
              4501 00c3  ld   $c3
              4502 0030  ld   $30
              4503 000c  ld   $0c
              4504 00c3  ld   $c3
              4505 0030  ld   $30
              4506 000c  ld   $0c
              4507 00c3  ld   $c3
              4508 0030  ld   $30
              4509 000c  ld   $0c
              450a 00c3  ld   $c3
              450b 00f0  ld   $f0
              450c 00af  ld   $af
              450d 00fe  ld   $fe
              450e 00ea  ld   $ea
              450f 000f  ld   $0f
              4510 00ab  ld   $ab
              4511 00aa  ld   $aa
              4512 00aa  ld   $aa
              4513 00aa  ld   $aa
              4514 002a  ld   $2a
              4515 000c  ld   $0c
              4516 00c3  ld   $c3
              4517 0030  ld   $30
              4518 000c  ld   $0c
              4519 00c3  ld   $c3
              451a 0030  ld   $30
              451b 000c  ld   $0c
              451c 00c3  ld   $c3
              451d 0030  ld   $30
              451e 000c  ld   $0c
              451f 00c3  ld   $c3
              4520 00f0  ld   $f0
              4521 001b  ld   $1b
              4522 00bd  ld   $bd
              4523 0030  ld   $30
              4524 00fc  ld   $fc
              4525 00c2  ld   $c2
              4526 00f0  ld   $f0
              4527 002b  ld   $2b
              4528 00bd  ld   $bd
              4529 0030  ld   $30
              452a 000c  ld   $0c
              452b 00c3  ld   $c3
              452c 0030  ld   $30
              452d 000c  ld   $0c
              452e 00c3  ld   $c3
              452f 0030  ld   $30
              4530 000c  ld   $0c
              4531 00c3  ld   $c3
              4532 0030  ld   $30
              4533 000c  ld   $0c
              4534 00c3  ld   $c3
              4535 00f0  ld   $f0
              4536 00af  ld   $af
              4537 00ab  ld   $ab
              4538 0095  ld   $95
              4539 005a  ld   $5a
              453a 0055  ld   $55
              453b 006a  ld   $6a
              453c 00a5  ld   $a5
              453d 0056  ld   $56
              453e 00aa  ld   $aa
              453f 00fe  ld   $fe
              4540 00c3  ld   $c3
              4541 0030  ld   $30
              4542 000c  ld   $0c
              4543 00c3  ld   $c3
              4544 0030  ld   $30
              4545 000c  ld   $0c
              4546 00c3  ld   $c3
              4547 0030  ld   $30
              4548 000c  ld   $0c
              4549 00c3  ld   $c3
              454a 00ff  ld   $ff
              454b 00af  ld   $af
              454c 00fe  ld   $fe
              454d 0030  ld   $30
              454e 000c  ld   $0c
              454f 00c3  ld   $c3
              4550 00ff  ld   $ff
              4551 00af  ld   $af
              4552 00fe  ld   $fe
              4553 0030  ld   $30
              4554 000c  ld   $0c
              4555 00ff  ld   $ff
              4556 00bf  ld   $bf
              4557 00fa  ld   $fa
              4558 00c3  ld   $c3
              4559 0030  ld   $30
              455a 000c  ld   $0c
              455b 00c3  ld   $c3
              455c 0030  ld   $30
              455d 000c  ld   $0c
              455e 00c3  ld   $c3
              455f 0030  ld   $30
              4560 000c  ld   $0c
              4561 00c3  ld   $c3
              4562 0030  ld   $30
              4563 000c  ld   $0c
              4564 00c3  ld   $c3
              4565 0030  ld   $30
              4566 000c  ld   $0c
              4567 00c3  ld   $c3
              4568 0030  ld   $30
              4569 000c  ld   $0c
              456a 00c3  ld   $c3
              456b 0030  ld   $30
              456c 000c  ld   $0c
              456d 00ab  ld   $ab
              456e 0095  ld   $95
              456f 000a  ld   $0a
              4570 00c3  ld   $c3
              4571 0030  ld   $30
              4572 000c  ld   $0c
              4573 00c3  ld   $c3
              4574 0030  ld   $30
              4575 000c  ld   $0c
              4576 00c3  ld   $c3
              4577 00e9  ld   $e9
              4578 001a  ld   $1a
              4579 0058  ld   $58
              457a 0041  ld   $41
              457b 00b0  ld   $b0
              457c 00ae  ld   $ae
              457d 0030  ld   $30
              457e 000c  ld   $0c
              457f 00c3  ld   $c3
              4580 00b0  ld   $b0
              4581 00ae  ld   $ae
              4582 00fe  ld   $fe
              4583 00aa  ld   $aa
              4584 00fe  ld   $fe
              4585 00ab  ld   $ab
              4586 00ea  ld   $ea
              4587 00af  ld   $af
              4588 00ab  ld   $ab
              4589 00bf  ld   $bf
              458a 00aa  ld   $aa
              458b 00ff  ld   $ff
              458c 00aa  ld   $aa
              458d 000e  ld   $0e
              458e 00c3  ld   $c3
              458f 0030  ld   $30
              4590 000c  ld   $0c
              4591 00c3  ld   $c3
              4592 0030  ld   $30
              4593 000c  ld   $0c
              4594 00c3  ld   $c3
              4595 007f  ld   $7f
              4596 0005  ld   $05
              4597 00c0  ld   $c0
              4598 0030  ld   $30
              4599 000c  ld   $0c
              459a 00c3  ld   $c3
              459b 0030  ld   $30
              459c 000c  ld   $0c
              459d 00c3  ld   $c3
              459e 0030  ld   $30
              459f 00bc  ld   $bc
              45a0 00bc  ld   $bc
              45a1 0030  ld   $30
              45a2 000c  ld   $0c
              45a3 00c3  ld   $c3
              45a4 0030  ld   $30
              45a5 000c  ld   $0c
              45a6 00c3  ld   $c3
              45a7 0030  ld   $30
              45a8 000c  ld   $0c
              45a9 00c3  ld   $c3
              45aa 0030  ld   $30
              45ab 000c  ld   $0c
              45ac 00c3  ld   $c3
              45ad 0030  ld   $30
              45ae 000c  ld   $0c
              45af 00c3  ld   $c3
              45b0 0030  ld   $30
              45b1 000c  ld   $0c
              45b2 00c3  ld   $c3
              45b3 0030  ld   $30
              45b4 000c  ld   $0c
              45b5 00c3  ld   $c3
              45b6 0030  ld   $30
              45b7 000c  ld   $0c
              45b8 00c3  ld   $c3
              45b9 0030  ld   $30
              45ba 000c  ld   $0c
              45bb 00c3  ld   $c3
              45bc 0030  ld   $30
              45bd 000c  ld   $0c
              45be 00c3  ld   $c3
              45bf 0030  ld   $30
              45c0 000c  ld   $0c
              45c1 00c3  ld   $c3
              45c2 0030  ld   $30
              45c3 000c  ld   $0c
              45c4 00c3  ld   $c3
              45c5 0030  ld   $30
              45c6 000c  ld   $0c
              45c7 00c3  ld   $c3
              45c8 0030  ld   $30
              45c9 000c  ld   $0c
              45ca 00c3  ld   $c3
              45cb 00b0  ld   $b0
              45cc 00fa  ld   $fa
              45cd 00ab  ld   $ab
              45ce 00bf  ld   $bf
              45cf 000a  ld   $0a
              45d0 00ab  ld   $ab
              45d1 0095  ld   $95
              45d2 005a  ld   $5a
              45d3 00a9  ld   $a9
              45d4 002a  ld   $2a
              45d5 000c  ld   $0c
              45d6 00c3  ld   $c3
              45d7 0012  ld   $12
              45d8 005c  ld   $5c
              45d9 00c2  ld   $c2
              45da 0030  ld   $30
              45db 000c  ld   $0c
              45dc 00c3  ld   $c3
              45dd 0030  ld   $30
              45de 000c  ld   $0c
              45df 00c3  ld   $c3
              45e0 00bf  ld   $bf
              45e1 0004  ld   $04
              45e2 00c3  ld   $c3
              45e3 002f  ld   $2f
              45e4 00fc  ld   $fc
              45e5 00c2  ld   $c2
              45e6 002f  ld   $2f
              45e7 000c  ld   $0c
              45e8 0047  ld   $47
              45e9 003f  ld   $3f
              45ea 000c  ld   $0c
              45eb 00c3  ld   $c3
              45ec 0030  ld   $30
              45ed 000c  ld   $0c
              45ee 00c3  ld   $c3
              45ef 0030  ld   $30
              45f0 000c  ld   $0c
              45f1 00c3  ld   $c3
              45f2 0030  ld   $30
              45f3 000c  ld   $0c
              45f4 00c3  ld   $c3
              45f5 00b0  ld   $b0
              45f6 00aa  ld   $aa
              45f7 00aa  ld   $aa
              45f8 0095  ld   $95
              45f9 005a  ld   $5a
              45fa 00a9  ld   $a9
              45fb fe00  bra  ac          ;+-----------------------------------+
              45fc fcfd  bra  $45fd       ;|                                   |
              45fd 1418  ld   $18,y       ;| Trampoline for page $4500 lookups |
              45fe e006  jmp  y,$06       ;|                                   |
              45ff c218  st   [$18]       ;+-----------------------------------+
              4600 006a  ld   $6a
              4601 00a5  ld   $a5
              4602 0056  ld   $56
              4603 00aa  ld   $aa
              4604 00aa  ld   $aa
              4605 00c2  ld   $c2
              4606 0030  ld   $30
              4607 000c  ld   $0c
              4608 00c3  ld   $c3
              4609 0030  ld   $30
              460a 000c  ld   $0c
              460b 00c3  ld   $c3
              460c 0030  ld   $30
              460d 000c  ld   $0c
              460e 000f  ld   $0f
              460f 003f  ld   $3f
              4610 00ac  ld   $ac
              4611 00fe  ld   $fe
              4612 0030  ld   $30
              4613 000c  ld   $0c
              4614 000f  ld   $0f
              4615 003f  ld   $3f
              4616 00ac  ld   $ac
              4617 00fe  ld   $fe
              4618 0030  ld   $30
              4619 003c  ld   $3c
              461a 00fc  ld   $fc
              461b 00b0  ld   $b0
              461c 00fa  ld   $fa
              461d 00c3  ld   $c3
              461e 0030  ld   $30
              461f 000c  ld   $0c
              4620 00c3  ld   $c3
              4621 0030  ld   $30
              4622 000c  ld   $0c
              4623 00c3  ld   $c3
              4624 0030  ld   $30
              4625 000c  ld   $0c
              4626 00c3  ld   $c3
              4627 0030  ld   $30
              4628 000c  ld   $0c
              4629 00c3  ld   $c3
              462a 0030  ld   $30
              462b 000c  ld   $0c
              462c 00c3  ld   $c3
              462d 0030  ld   $30
              462e 000c  ld   $0c
              462f 00c3  ld   $c3
              4630 0030  ld   $30
              4631 000c  ld   $0c
              4632 00c3  ld   $c3
              4633 0015  ld   $15
              4634 000c  ld   $0c
              4635 00c3  ld   $c3
              4636 0030  ld   $30
              4637 000c  ld   $0c
              4638 00c3  ld   $c3
              4639 0030  ld   $30
              463a 000c  ld   $0c
              463b 00c3  ld   $c3
              463c 00eb  ld   $eb
              463d 001a  ld   $1a
              463e 0004  ld   $04
              463f 0069  ld   $69
              4640 00b0  ld   $b0
              4641 00a6  ld   $a6
              4642 0030  ld   $30
              4643 000c  ld   $0c
              4644 00c3  ld   $c3
              4645 0070  ld   $70
              4646 0055  ld   $55
              4647 00fd  ld   $fd
              4648 0055  ld   $55
              4649 00f5  ld   $f5
              464a 0057  ld   $57
              464b 00d5  ld   $d5
              464c 005f  ld   $5f
              464d 0055  ld   $55
              464e 007f  ld   $7f
              464f 0055  ld   $55
              4650 00fd  ld   $fd
              4651 0055  ld   $55
              4652 0005  ld   $05
              4653 00c3  ld   $c3
              4654 0030  ld   $30
              4655 000c  ld   $0c
              4656 00c3  ld   $c3
              4657 0030  ld   $30
              4658 000c  ld   $0c
              4659 00c3  ld   $c3
              465a 0030  ld   $30
              465b 0050  ld   $50
              465c 00fd  ld   $fd
              465d 0030  ld   $30
              465e 000c  ld   $0c
              465f 00c3  ld   $c3
              4660 0030  ld   $30
              4661 000c  ld   $0c
              4662 00c3  ld   $c3
              4663 0030  ld   $30
              4664 006c  ld   $6c
              4665 00fc  ld   $fc
              4666 0030  ld   $30
              4667 000c  ld   $0c
              4668 00c3  ld   $c3
              4669 0030  ld   $30
              466a 000c  ld   $0c
              466b 00c3  ld   $c3
              466c 0030  ld   $30
              466d 000c  ld   $0c
              466e 00c3  ld   $c3
              466f 0030  ld   $30
              4670 000c  ld   $0c
              4671 00c3  ld   $c3
              4672 0030  ld   $30
              4673 000c  ld   $0c
              4674 00c3  ld   $c3
              4675 0030  ld   $30
              4676 000c  ld   $0c
              4677 00c3  ld   $c3
              4678 0030  ld   $30
              4679 000c  ld   $0c
              467a 00c3  ld   $c3
              467b 0030  ld   $30
              467c 000c  ld   $0c
              467d 00c3  ld   $c3
              467e 0030  ld   $30
              467f 000c  ld   $0c
              4680 00c3  ld   $c3
              4681 0030  ld   $30
              4682 000c  ld   $0c
              4683 00c3  ld   $c3
              4684 0030  ld   $30
              4685 000c  ld   $0c
              4686 00c3  ld   $c3
              4687 0030  ld   $30
              4688 000c  ld   $0c
              4689 00c3  ld   $c3
              468a 0030  ld   $30
              468b 000c  ld   $0c
              468c 00c3  ld   $c3
              468d 0030  ld   $30
              468e 000c  ld   $0c
              468f 00c3  ld   $c3
              4690 0070  ld   $70
              4691 00a5  ld   $a5
              4692 00fe  ld   $fe
              4693 00ea  ld   $ea
              4694 000f  ld   $0f
              4695 00ab  ld   $ab
              4696 006a  ld   $6a
              4697 00a5  ld   $a5
              4698 0056  ld   $56
              4699 002a  ld   $2a
              469a 000c  ld   $0c
              469b 004b  ld   $4b
              469c 0092  ld   $92
              469d 0054  ld   $54
              469e 0096  ld   $96
              469f 0030  ld   $30
              46a0 000c  ld   $0c
              46a1 00c3  ld   $c3
              46a2 0030  ld   $30
              46a3 000c  ld   $0c
              46a4 00c3  ld   $c3
              46a5 006f  ld   $6f
              46a6 0004  ld   $04
              46a7 00c3  ld   $c3
              46a8 00f0  ld   $f0
              46a9 000b  ld   $0b
              46aa 00bf  ld   $bf
              46ab 0030  ld   $30
              46ac 000c  ld   $0c
              46ad 004b  ld   $4b
              46ae 002f  ld   $2f
              46af 000c  ld   $0c
              46b0 00c3  ld   $c3
              46b1 0030  ld   $30
              46b2 000c  ld   $0c
              46b3 00c3  ld   $c3
              46b4 0030  ld   $30
              46b5 00fc  ld   $fc
              46b6 00ff  ld   $ff
              46b7 00ff  ld   $ff
              46b8 00ff  ld   $ff
              46b9 00ff  ld   $ff
              46ba 00aa  ld   $aa
              46bb 0065  ld   $65
              46bc 00a9  ld   $a9
              46bd 00aa  ld   $aa
              46be 00aa  ld   $aa
              46bf 00aa  ld   $aa
              * 7 times
              46c4 0065  ld   $65
              46c5 00a9  ld   $a9
              46c6 00ff  ld   $ff
              46c7 00ff  ld   $ff
              46c8 00ff  ld   $ff
              46c9 00ff  ld   $ff
              46ca 000f  ld   $0f
              46cb 00c3  ld   $c3
              46cc 0030  ld   $30
              46cd 000c  ld   $0c
              46ce 00c3  ld   $c3
              46cf 0030  ld   $30
              46d0 00ac  ld   $ac
              46d1 00fe  ld   $fe
              46d2 0030  ld   $30
              46d3 000c  ld   $0c
              46d4 00c3  ld   $c3
              46d5 0030  ld   $30
              46d6 00ac  ld   $ac
              46d7 00fe  ld   $fe
              46d8 0030  ld   $30
              46d9 000c  ld   $0c
              46da 00c3  ld   $c3
              46db 00b0  ld   $b0
              46dc 00fa  ld   $fa
              46dd 00c3  ld   $c3
              46de 0030  ld   $30
              46df 000c  ld   $0c
              46e0 00c3  ld   $c3
              46e1 0030  ld   $30
              46e2 000c  ld   $0c
              46e3 00c3  ld   $c3
              46e4 0030  ld   $30
              46e5 000c  ld   $0c
              46e6 00c3  ld   $c3
              46e7 0030  ld   $30
              46e8 000c  ld   $0c
              46e9 00c3  ld   $c3
              46ea 0030  ld   $30
              46eb 000c  ld   $0c
              46ec 00c3  ld   $c3
              46ed 0030  ld   $30
              46ee 000c  ld   $0c
              46ef 00c3  ld   $c3
              46f0 0030  ld   $30
              46f1 000c  ld   $0c
              46f2 00c3  ld   $c3
              46f3 0015  ld   $15
              46f4 000c  ld   $0c
              46f5 00c3  ld   $c3
              46f6 0030  ld   $30
              46f7 000c  ld   $0c
              46f8 00c3  ld   $c3
              46f9 0030  ld   $30
              46fa 000c  ld   $0c
              46fb fe00  bra  ac          ;+-----------------------------------+
              46fc fcfd  bra  $46fd       ;|                                   |
              46fd 1418  ld   $18,y       ;| Trampoline for page $4600 lookups |
              46fe e006  jmp  y,$06       ;|                                   |
              46ff c218  st   [$18]       ;+-----------------------------------+
              4700 00c3  ld   $c3
              4701 00e9  ld   $e9
              4702 001a  ld   $1a
              4703 00a4  ld   $a4
              4704 0041  ld   $41
              4705 00b0  ld   $b0
              4706 00ae  ld   $ae
              4707 0030  ld   $30
              4708 000c  ld   $0c
              4709 00c3  ld   $c3
              470a 00b0  ld   $b0
              470b 00aa  ld   $aa
              470c 00ff  ld   $ff
              470d 00ba  ld   $ba
              470e 00fa  ld   $fa
              470f 00ab  ld   $ab
              4710 00fa  ld   $fa
              4711 00af  ld   $af
              4712 00aa  ld   $aa
              4713 00bf  ld   $bf
              4714 00ae  ld   $ae
              4715 00fe  ld   $fe
              4716 00ba  ld   $ba
              4717 000a  ld   $0a
              4718 00c3  ld   $c3
              4719 0030  ld   $30
              471a 000c  ld   $0c
              471b 00c3  ld   $c3
              471c 0030  ld   $30
              471d 000c  ld   $0c
              471e 00c3  ld   $c3
              471f 00c0  ld   $c0
              4720 006b  ld   $6b
              4721 0001  ld   $01
              4722 002f  ld   $2f
              4723 000c  ld   $0c
              4724 00c3  ld   $c3
              4725 0030  ld   $30
              4726 000c  ld   $0c
              4727 00c3  ld   $c3
              4728 0030  ld   $30
              4729 00bc  ld   $bc
              472a 00bc  ld   $bc
              472b 0030  ld   $30
              472c 000c  ld   $0c
              472d 00c3  ld   $c3
              472e 0030  ld   $30
              472f 000c  ld   $0c
              4730 00c3  ld   $c3
              4731 0030  ld   $30
              4732 000c  ld   $0c
              4733 00c3  ld   $c3
              4734 0030  ld   $30
              4735 000c  ld   $0c
              4736 00c3  ld   $c3
              4737 0030  ld   $30
              4738 000c  ld   $0c
              4739 00c3  ld   $c3
              473a 0030  ld   $30
              473b 000c  ld   $0c
              473c 00c3  ld   $c3
              473d 0030  ld   $30
              473e 000c  ld   $0c
              473f 00c3  ld   $c3
              4740 0030  ld   $30
              4741 000c  ld   $0c
              4742 00c3  ld   $c3
              4743 0030  ld   $30
              4744 000c  ld   $0c
              4745 00c3  ld   $c3
              4746 0030  ld   $30
              4747 000c  ld   $0c
              4748 00c3  ld   $c3
              4749 0030  ld   $30
              474a 000c  ld   $0c
              474b 00c3  ld   $c3
              474c 0030  ld   $30
              474d 000c  ld   $0c
              474e 00c3  ld   $c3
              474f 0030  ld   $30
              4750 000c  ld   $0c
              4751 00c3  ld   $c3
              4752 0030  ld   $30
              4753 000c  ld   $0c
              4754 00c3  ld   $c3
              4755 00b0  ld   $b0
              4756 005a  ld   $5a
              4757 00a9  ld   $a9
              4758 00bf  ld   $bf
              4759 000a  ld   $0a
              475a 00ab  ld   $ab
              475b 0095  ld   $95
              475c 005a  ld   $5a
              475d 00a9  ld   $a9
              475e 002a  ld   $2a
              475f 000c  ld   $0c
              4760 004b  ld   $4b
              4761 00a3  ld   $a3
              4762 0094  ld   $94
              4763 0097  ld   $97
              4764 0030  ld   $30
              4765 000c  ld   $0c
              4766 00c3  ld   $c3
              4767 0030  ld   $30
              4768 000c  ld   $0c
              4769 00c3  ld   $c3
              476a 00ff  ld   $ff
              476b 00fb  ld   $fb
              476c 00be  ld   $be
              476d 002f  ld   $2f
              476e 00fc  ld   $fc
              476f 00c3  ld   $c3
              4770 00ef  ld   $ef
              4771 00fb  ld   $fb
              4772 00be  ld   $be
              4773 003f  ld   $3f
              4774 000c  ld   $0c
              4775 00c3  ld   $c3
              4776 0030  ld   $30
              4777 000c  ld   $0c
              4778 00c3  ld   $c3
              4779 0030  ld   $30
              477a 00ac  ld   $ac
              477b 0069  ld   $69
              477c 009a  ld   $9a
              477d 00a6  ld   $a6
              477e 0069  ld   $69
              477f 0096  ld   $96
              4780 00aa  ld   $aa
              4781 001a  ld   $1a
              4782 0096  ld   $96
              4783 0065  ld   $65
              4784 0059  ld   $59
              4785 0096  ld   $96
              4786 0065  ld   $65
              4787 0059  ld   $59
              4788 0086  ld   $86
              4789 00aa  ld   $aa
              478a 005a  ld   $5a
              478b 009a  ld   $9a
              478c 00a6  ld   $a6
              478d 0069  ld   $69
              478e 009a  ld   $9a
              478f 0006  ld   $06
              4790 00c3  ld   $c3
              4791 0030  ld   $30
              4792 000c  ld   $0c
              4793 00c3  ld   $c3
              4794 0030  ld   $30
              4795 00ac  ld   $ac
              4796 00fe  ld   $fe
              4797 0030  ld   $30
              4798 000c  ld   $0c
              4799 00c3  ld   $c3
              479a 0030  ld   $30
              479b 00ac  ld   $ac
              479c 00fe  ld   $fe
              479d 0030  ld   $30
              479e 000c  ld   $0c
              479f 00c3  ld   $c3
              47a0 00b0  ld   $b0
              47a1 00fa  ld   $fa
              47a2 00c3  ld   $c3
              47a3 0030  ld   $30
              47a4 000c  ld   $0c
              47a5 00c3  ld   $c3
              47a6 0030  ld   $30
              47a7 000c  ld   $0c
              47a8 00c3  ld   $c3
              47a9 0030  ld   $30
              47aa 000c  ld   $0c
              47ab 00c3  ld   $c3
              47ac 0030  ld   $30
              47ad 000c  ld   $0c
              47ae 00c3  ld   $c3
              47af 0030  ld   $30
              47b0 00ac  ld   $ac
              47b1 00aa  ld   $aa
              47b2 00ff  ld   $ff
              47b3 00ff  ld   $ff
              47b4 00ff  ld   $ff
              * 5 times
              47b7 00c3  ld   $c3
              47b8 0015  ld   $15
              47b9 000c  ld   $0c
              47ba 00c3  ld   $c3
              47bb 0030  ld   $30
              47bc 000c  ld   $0c
              47bd 00c3  ld   $c3
              47be 0030  ld   $30
              47bf 000c  ld   $0c
              47c0 00c3  ld   $c3
              47c1 00eb  ld   $eb
              47c2 001a  ld   $1a
              47c3 0004  ld   $04
              47c4 0069  ld   $69
              47c5 00b0  ld   $b0
              47c6 00a6  ld   $a6
              47c7 0030  ld   $30
              47c8 000c  ld   $0c
              47c9 00c3  ld   $c3
              47ca 0070  ld   $70
              47cb 0055  ld   $55
              47cc 00fd  ld   $fd
              47cd 0055  ld   $55
              47ce 00f5  ld   $f5
              47cf 0057  ld   $57
              47d0 00d5  ld   $d5
              47d1 005f  ld   $5f
              47d2 0055  ld   $55
              47d3 007f  ld   $7f
              47d4 0055  ld   $55
              47d5 00fd  ld   $fd
              47d6 0055  ld   $55
              47d7 0005  ld   $05
              47d8 00c3  ld   $c3
              47d9 0030  ld   $30
              47da 000c  ld   $0c
              47db 00c3  ld   $c3
              47dc 0030  ld   $30
              47dd 000c  ld   $0c
              47de 0003  ld   $03
              47df 007f  ld   $7f
              47e0 0010  ld   $10
              47e1 0004  ld   $04
              47e2 00c0  ld   $c0
              47e3 000f  ld   $0f
              47e4 00c3  ld   $c3
              47e5 0030  ld   $30
              47e6 000c  ld   $0c
              47e7 00c3  ld   $c3
              47e8 0030  ld   $30
              47e9 006c  ld   $6c
              47ea 00fc  ld   $fc
              47eb 0041  ld   $41
              47ec 0010  ld   $10
              47ed 0004  ld   $04
              47ee 0041  ld   $41
              47ef 0010  ld   $10
              47f0 0004  ld   $04
              47f1 0041  ld   $41
              47f2 0010  ld   $10
              47f3 0004  ld   $04
              47f4 0041  ld   $41
              47f5 0010  ld   $10
              47f6 0004  ld   $04
              47f7 0041  ld   $41
              47f8 0010  ld   $10
              47f9 0004  ld   $04
              47fa 0030  ld   $30
              47fb fe00  bra  ac          ;+-----------------------------------+
              47fc fcfd  bra  $47fd       ;|                                   |
              47fd 1418  ld   $18,y       ;| Trampoline for page $4700 lookups |
              47fe e006  jmp  y,$06       ;|                                   |
              47ff c218  st   [$18]       ;+-----------------------------------+
              4800 000c  ld   $0c
              4801 00c3  ld   $c3
              4802 0030  ld   $30
              4803 000c  ld   $0c
              4804 00c3  ld   $c3
              4805 0030  ld   $30
              4806 000c  ld   $0c
              4807 00c3  ld   $c3
              4808 0030  ld   $30
              4809 000c  ld   $0c
              480a 00c3  ld   $c3
              480b 0030  ld   $30
              480c 000c  ld   $0c
              480d 00c3  ld   $c3
              480e 0030  ld   $30
              480f 000c  ld   $0c
              4810 00c3  ld   $c3
              4811 0030  ld   $30
              4812 000c  ld   $0c
              4813 00c3  ld   $c3
              4814 0030  ld   $30
              4815 000c  ld   $0c
              4816 00c3  ld   $c3
              4817 0030  ld   $30
              4818 000c  ld   $0c
              4819 00c3  ld   $c3
              481a 0070  ld   $70
              481b 00a5  ld   $a5
              481c 00fe  ld   $fe
              481d 00ea  ld   $ea
              481e 000f  ld   $0f
              481f 00ab  ld   $ab
              4820 006a  ld   $6a
              4821 00a5  ld   $a5
              4822 0056  ld   $56
              4823 002a  ld   $2a
              4824 001c  ld   $1c
              4825 0058  ld   $58
              4826 0081  ld   $81
              4827 0015  ld   $15
              4828 0058  ld   $58
              4829 0011  ld   $11
              482a 000c  ld   $0c
              482b 00c3  ld   $c3
              482c 0030  ld   $30
              482d 000c  ld   $0c
              482e 00c3  ld   $c3
              482f 00af  ld   $af
              4830 0004  ld   $04
              4831 00c3  ld   $c3
              4832 00f0  ld   $f0
              4833 000f  ld   $0f
              4834 00ff  ld   $ff
              4835 0030  ld   $30
              4836 000c  ld   $0c
              4837 0047  ld   $47
              4838 002f  ld   $2f
              4839 000c  ld   $0c
              483a 00c3  ld   $c3
              483b 0030  ld   $30
              483c 000c  ld   $0c
              483d 00c3  ld   $c3
              483e 0030  ld   $30
              483f 005c  ld   $5c
              4840 0055  ld   $55
              4841 0055  ld   $55
              4842 0055  ld   $55
              4843 0055  ld   $55
              4844 00d6  ld   $d6
              4845 00fa  ld   $fa
              4846 005a  ld   $5a
              4847 0069  ld   $69
              4848 009a  ld   $9a
              4849 00a6  ld   $a6
              484a 0069  ld   $69
              484b 009a  ld   $9a
              484c 00a6  ld   $a6
              484d 00d6  ld   $d6
              484e 00bb  ld   $bb
              484f 005a  ld   $5a
              4850 0055  ld   $55
              4851 0055  ld   $55
              4852 0055  ld   $55
              4853 0055  ld   $55
              4854 0005  ld   $05
              4855 00c3  ld   $c3
              4856 0030  ld   $30
              4857 000c  ld   $0c
              4858 00c3  ld   $c3
              4859 0030  ld   $30
              485a 00ac  ld   $ac
              485b 00fe  ld   $fe
              485c 0030  ld   $30
              485d 000c  ld   $0c
              485e 00c3  ld   $c3
              485f 0030  ld   $30
              4860 00ac  ld   $ac
              4861 00fe  ld   $fe
              4862 0030  ld   $30
              4863 000c  ld   $0c
              4864 00c3  ld   $c3
              4865 00b0  ld   $b0
              4866 00fa  ld   $fa
              4867 00c3  ld   $c3
              4868 0030  ld   $30
              4869 000c  ld   $0c
              486a 00c3  ld   $c3
              486b 0030  ld   $30
              486c 000c  ld   $0c
              486d 00c3  ld   $c3
              486e 0030  ld   $30
              486f 000c  ld   $0c
              4870 00c3  ld   $c3
              4871 0030  ld   $30
              4872 000c  ld   $0c
              4873 00ab  ld   $ab
              4874 00aa  ld   $aa
              4875 00aa  ld   $aa
              4876 00aa  ld   $aa
              4877 00aa  ld   $aa
              4878 00fa  ld   $fa
              4879 00ff  ld   $ff
              487a 00ff  ld   $ff
              487b 00ff  ld   $ff
              * 5 times
              487e 000f  ld   $0f
              487f 00c3  ld   $c3
              4880 0030  ld   $30
              4881 000c  ld   $0c
              4882 00c3  ld   $c3
              4883 0030  ld   $30
              4884 000c  ld   $0c
              4885 00c3  ld   $c3
              4886 00e9  ld   $e9
              4887 001a  ld   $1a
              4888 00a4  ld   $a4
              4889 0041  ld   $41
              488a 00b0  ld   $b0
              488b 00ae  ld   $ae
              488c 0030  ld   $30
              488d 000c  ld   $0c
              488e 00c3  ld   $c3
              488f 00b0  ld   $b0
              4890 00aa  ld   $aa
              4891 00ff  ld   $ff
              4892 00aa  ld   $aa
              4893 00fe  ld   $fe
              4894 00ab  ld   $ab
              4895 00ea  ld   $ea
              4896 00af  ld   $af
              4897 00ea  ld   $ea
              4898 00bf  ld   $bf
              4899 00aa  ld   $aa
              489a 00ff  ld   $ff
              489b 00aa  ld   $aa
              489c 000e  ld   $0e
              489d 00c3  ld   $c3
              489e 0030  ld   $30
              489f 000c  ld   $0c
              48a0 00c3  ld   $c3
              48a1 0030  ld   $30
              48a2 000c  ld   $0c
              48a3 00bc  ld   $bc
              48a4 0081  ld   $81
              48a5 0065  ld   $65
              48a6 0005  ld   $05
              48a7 0020  ld   $20
              48a8 00f0  ld   $f0
              48a9 00c2  ld   $c2
              48aa 0030  ld   $30
              48ab 000c  ld   $0c
              48ac 00c3  ld   $c3
              48ad 0030  ld   $30
              48ae 00bc  ld   $bc
              48af 00bc  ld   $bc
              48b0 00ff  ld   $ff
              48b1 00fb  ld   $fb
              48b2 00bf  ld   $bf
              48b3 00ff  ld   $ff
              48b4 00fb  ld   $fb
              48b5 00bf  ld   $bf
              48b6 00ff  ld   $ff
              48b7 00fb  ld   $fb
              48b8 00bf  ld   $bf
              48b9 00ff  ld   $ff
              48ba 00fb  ld   $fb
              48bb 00bf  ld   $bf
              48bc 00ff  ld   $ff
              48bd 00fb  ld   $fb
              48be 0007  ld   $07
              48bf 0030  ld   $30
              48c0 000c  ld   $0c
              48c1 00c3  ld   $c3
              48c2 0030  ld   $30
              48c3 000c  ld   $0c
              48c4 00c3  ld   $c3
              48c5 0030  ld   $30
              48c6 000c  ld   $0c
              48c7 00c3  ld   $c3
              48c8 0030  ld   $30
              48c9 000c  ld   $0c
              48ca 00c3  ld   $c3
              48cb 0030  ld   $30
              48cc 000c  ld   $0c
              48cd 00c3  ld   $c3
              48ce 0030  ld   $30
              48cf 000c  ld   $0c
              48d0 00c3  ld   $c3
              48d1 0030  ld   $30
              48d2 000c  ld   $0c
              48d3 00c3  ld   $c3
              48d4 0030  ld   $30
              48d5 000c  ld   $0c
              48d6 00c3  ld   $c3
              48d7 0030  ld   $30
              48d8 000c  ld   $0c
              48d9 00c3  ld   $c3
              48da 00b0  ld   $b0
              48db 005a  ld   $5a
              48dc 00a9  ld   $a9
              48dd 00bf  ld   $bf
              48de 000a  ld   $0a
              48df 00ab  ld   $ab
              48e0 0095  ld   $95
              48e1 005a  ld   $5a
              48e2 00a9  ld   $a9
              48e3 002a  ld   $2a
              48e4 001c  ld   $1c
              48e5 0004  ld   $04
              48e6 0041  ld   $41
              48e7 0010  ld   $10
              48e8 0044  ld   $44
              48e9 0011  ld   $11
              48ea 000c  ld   $0c
              48eb 00c3  ld   $c3
              48ec 0030  ld   $30
              48ed 000c  ld   $0c
              48ee 00c3  ld   $c3
              48ef 007f  ld   $7f
              48f0 0004  ld   $04
              48f1 00c3  ld   $c3
              48f2 00ef  ld   $ef
              48f3 00ff  ld   $ff
              48f4 00fe  ld   $fe
              48f5 003f  ld   $3f
              48f6 000c  ld   $0c
              48f7 004b  ld   $4b
              48f8 003f  ld   $3f
              48f9 000c  ld   $0c
              48fa 00c3  ld   $c3
              48fb fe00  bra  ac          ;+-----------------------------------+
              48fc fcfd  bra  $48fd       ;|                                   |
              48fd 1418  ld   $18,y       ;| Trampoline for page $4800 lookups |
              48fe e006  jmp  y,$06       ;|                                   |
              48ff c218  st   [$18]       ;+-----------------------------------+
              4900 0030  ld   $30
              4901 000c  ld   $0c
              4902 00c3  ld   $c3
              4903 0030  ld   $30
              4904 00ac  ld   $ac
              4905 00aa  ld   $aa
              4906 0095  ld   $95
              4907 00aa  ld   $aa
              4908 0056  ld   $56
              4909 00d6  ld   $d6
              490a 00fa  ld   $fa
              490b 005a  ld   $5a
              490c 006a  ld   $6a
              490d 00a5  ld   $a5
              490e 00aa  ld   $aa
              490f 006a  ld   $6a
              4910 00a5  ld   $a5
              4911 00aa  ld   $aa
              4912 00d6  ld   $d6
              4913 00bb  ld   $bb
              4914 005a  ld   $5a
              4915 0095  ld   $95
              4916 00aa  ld   $aa
              4917 0056  ld   $56
              4918 00aa  ld   $aa
              4919 000a  ld   $0a
              491a 00c3  ld   $c3
              491b 0030  ld   $30
              491c 000c  ld   $0c
              491d 00c3  ld   $c3
              491e 0030  ld   $30
              491f 00ac  ld   $ac
              4920 00fe  ld   $fe
              4921 0030  ld   $30
              4922 000c  ld   $0c
              4923 00c3  ld   $c3
              4924 0030  ld   $30
              4925 00ac  ld   $ac
              4926 00fe  ld   $fe
              4927 0030  ld   $30
              4928 000c  ld   $0c
              4929 00c3  ld   $c3
              492a 00b0  ld   $b0
              492b 00fa  ld   $fa
              492c 00c3  ld   $c3
              492d 0030  ld   $30
              492e 000c  ld   $0c
              492f 00c3  ld   $c3
              4930 0030  ld   $30
              4931 000c  ld   $0c
              4932 00c3  ld   $c3
              4933 0030  ld   $30
              4934 000c  ld   $0c
              4935 00c3  ld   $c3
              4936 0055  ld   $55
              4937 0055  ld   $55
              4938 0055  ld   $55
              * 6 times
              493c 00aa  ld   $aa
              493d 00aa  ld   $aa
              493e 00aa  ld   $aa
              493f 00ea  ld   $ea
              4940 00ff  ld   $ff
              4941 00ff  ld   $ff
              4942 00ff  ld   $ff
              * 5 times
              4945 003f  ld   $3f
              4946 000c  ld   $0c
              4947 00c3  ld   $c3
              4948 0030  ld   $30
              4949 000c  ld   $0c
              494a 00c3  ld   $c3
              494b 00eb  ld   $eb
              494c 001a  ld   $1a
              494d 0004  ld   $04
              494e 0069  ld   $69
              494f 00b0  ld   $b0
              4950 00a6  ld   $a6
              4951 0030  ld   $30
              4952 000c  ld   $0c
              4953 00c3  ld   $c3
              4954 0070  ld   $70
              4955 0055  ld   $55
              4956 00fd  ld   $fd
              4957 0055  ld   $55
              4958 00f5  ld   $f5
              4959 0057  ld   $57
              495a 00d5  ld   $d5
              495b 005f  ld   $5f
              495c 0055  ld   $55
              495d 007f  ld   $7f
              495e 0055  ld   $55
              495f 00fd  ld   $fd
              4960 0055  ld   $55
              4961 0005  ld   $05
              4962 00c3  ld   $c3
              4963 0030  ld   $30
              4964 000c  ld   $0c
              4965 00c3  ld   $c3
              4966 0030  ld   $30
              4967 00f0  ld   $f0
              4968 0083  ld   $83
              4969 0081  ld   $81
              496a 0065  ld   $65
              496b 0005  ld   $05
              496c 0020  ld   $20
              496d 0008  ld   $08
              496e 00fc  ld   $fc
              496f 0030  ld   $30
              4970 000c  ld   $0c
              4971 00c3  ld   $c3
              4972 0030  ld   $30
              4973 006c  ld   $6c
              4974 00fc  ld   $fc
              4975 006f  ld   $6f
              4976 0060  ld   $60
              4977 0004  ld   $04
              4978 0046  ld   $46
              4979 0060  ld   $60
              497a 0004  ld   $04
              497b 0046  ld   $46
              497c 0060  ld   $60
              497d 0004  ld   $04
              497e 00c6  ld   $c6
              497f 006f  ld   $6f
              4980 002c  ld   $2c
              4981 0056  ld   $56
              4982 00f0  ld   $f0
              4983 0006  ld   $06
              4984 0030  ld   $30
              4985 000c  ld   $0c
              4986 00c3  ld   $c3
              4987 0030  ld   $30
              4988 000c  ld   $0c
              4989 00c3  ld   $c3
              498a 0030  ld   $30
              498b 000c  ld   $0c
              498c 00c3  ld   $c3
              498d 0030  ld   $30
              498e 000c  ld   $0c
              498f 00c3  ld   $c3
              4990 0030  ld   $30
              4991 000c  ld   $0c
              4992 00c3  ld   $c3
              4993 0030  ld   $30
              4994 000c  ld   $0c
              4995 00c3  ld   $c3
              4996 0030  ld   $30
              4997 000c  ld   $0c
              4998 00c3  ld   $c3
              4999 0030  ld   $30
              499a 000c  ld   $0c
              499b 00c3  ld   $c3
              499c 0030  ld   $30
              499d 000c  ld   $0c
              499e 00c3  ld   $c3
              499f 0070  ld   $70
              49a0 00a5  ld   $a5
              49a1 00fe  ld   $fe
              49a2 00ea  ld   $ea
              49a3 000f  ld   $0f
              49a4 00ab  ld   $ab
              49a5 006a  ld   $6a
              49a6 00a5  ld   $a5
              49a7 0056  ld   $56
              49a8 002a  ld   $2a
              49a9 001c  ld   $1c
              49aa 0058  ld   $58
              49ab 0081  ld   $81
              49ac 0015  ld   $15
              49ad 0058  ld   $58
              49ae 0011  ld   $11
              49af 000c  ld   $0c
              49b0 00c3  ld   $c3
              49b1 0030  ld   $30
              49b2 000c  ld   $0c
              49b3 00c3  ld   $c3
              49b4 00f0  ld   $f0
              49b5 000b  ld   $0b
              49b6 00bf  ld   $bf
              49b7 003f  ld   $3f
              49b8 00fc  ld   $fc
              49b9 00c2  ld   $c2
              49ba 00ff  ld   $ff
              49bb 000f  ld   $0f
              49bc 00bf  ld   $bf
              49bd 0030  ld   $30
              49be 000c  ld   $0c
              49bf 00c3  ld   $c3
              49c0 0030  ld   $30
              49c1 000c  ld   $0c
              49c2 00c3  ld   $c3
              49c3 0030  ld   $30
              49c4 00ac  ld   $ac
              49c5 0069  ld   $69
              49c6 0055  ld   $55
              49c7 0055  ld   $55
              49c8 0055  ld   $55
              49c9 0096  ld   $96
              49ca 00aa  ld   $aa
              49cb 005a  ld   $5a
              49cc 00aa  ld   $aa
              49cd 006a  ld   $6a
              49ce 00a9  ld   $a9
              49cf 0096  ld   $96
              49d0 00aa  ld   $aa
              49d1 00aa  ld   $aa
              49d2 0096  ld   $96
              49d3 00aa  ld   $aa
              49d4 005a  ld   $5a
              49d5 0055  ld   $55
              49d6 0055  ld   $55
              49d7 0055  ld   $55
              49d8 009a  ld   $9a
              49d9 0006  ld   $06
              49da 00c3  ld   $c3
              49db 0030  ld   $30
              49dc 000c  ld   $0c
              49dd 00c3  ld   $c3
              49de 0030  ld   $30
              49df 00ac  ld   $ac
              49e0 00fe  ld   $fe
              49e1 0030  ld   $30
              49e2 000c  ld   $0c
              49e3 00c3  ld   $c3
              49e4 0030  ld   $30
              49e5 00ac  ld   $ac
              49e6 00fe  ld   $fe
              49e7 0030  ld   $30
              49e8 000c  ld   $0c
              49e9 00c3  ld   $c3
              49ea 00b0  ld   $b0
              49eb 00fa  ld   $fa
              49ec 00c3  ld   $c3
              49ed 0030  ld   $30
              49ee 000c  ld   $0c
              49ef 00c3  ld   $c3
              49f0 0030  ld   $30
              49f1 000c  ld   $0c
              49f2 00c3  ld   $c3
              49f3 0030  ld   $30
              49f4 0000  ld   $00
              49f5 0000  ld   $00
              49f6 0000  ld   $00
              * 5 times
              49f9 0055  ld   $55
              49fa 0055  ld   $55
              49fb fe00  bra  ac          ;+-----------------------------------+
              49fc fcfd  bra  $49fd       ;|                                   |
              49fd 1418  ld   $18,y       ;| Trampoline for page $4900 lookups |
              49fe e006  jmp  y,$06       ;|                                   |
              49ff c218  st   [$18]       ;+-----------------------------------+
              4a00 0055  ld   $55
              4a01 0055  ld   $55
              4a02 00a5  ld   $a5
              4a03 00aa  ld   $aa
              4a04 00aa  ld   $aa
              4a05 00aa  ld   $aa
              4a06 00fe  ld   $fe
              4a07 00ff  ld   $ff
              4a08 00ff  ld   $ff
              4a09 00ff  ld   $ff
              * 6 times
              4a0d 0030  ld   $30
              4a0e 000c  ld   $0c
              4a0f 00c3  ld   $c3
              4a10 00e9  ld   $e9
              4a11 001a  ld   $1a
              4a12 00a4  ld   $a4
              4a13 0041  ld   $41
              4a14 00b0  ld   $b0
              4a15 00ae  ld   $ae
              4a16 0030  ld   $30
              4a17 000c  ld   $0c
              4a18 00c3  ld   $c3
              4a19 00b0  ld   $b0
              4a1a 00ae  ld   $ae
              4a1b 00fe  ld   $fe
              4a1c 00ba  ld   $ba
              4a1d 00fa  ld   $fa
              4a1e 00ab  ld   $ab
              4a1f 00fa  ld   $fa
              4a20 00af  ld   $af
              4a21 00aa  ld   $aa
              4a22 00bf  ld   $bf
              4a23 00ae  ld   $ae
              4a24 00fe  ld   $fe
              4a25 00aa  ld   $aa
              4a26 000e  ld   $0e
              4a27 00c3  ld   $c3
              4a28 0030  ld   $30
              4a29 000c  ld   $0c
              4a2a 00c3  ld   $c3
              4a2b 00c0  ld   $c0
              4a2c 001b  ld   $1b
              4a2d 0004  ld   $04
              4a2e 0041  ld   $41
              4a2f 0010  ld   $10
              4a30 0004  ld   $04
              4a31 0041  ld   $41
              4a32 0000  ld   $00
              4a33 0003  ld   $03
              4a34 0030  ld   $30
              4a35 000c  ld   $0c
              4a36 00c3  ld   $c3
              4a37 0030  ld   $30
              4a38 00bc  ld   $bc
              4a39 00bc  ld   $bc
              4a3a 00bf  ld   $bf
              4a3b 00f1  ld   $f1
              4a3c 001a  ld   $1a
              4a3d 008b  ld   $8b
              4a3e 00b1  ld   $b1
              4a3f 0018  ld   $18
              4a40 008b  ld   $8b
              4a41 00b1  ld   $b1
              4a42 0018  ld   $18
              4a43 00c1  ld   $c1
              4a44 00bb  ld   $bb
              4a45 0058  ld   $58
              4a46 0046  ld   $46
              4a47 00f0  ld   $f0
              4a48 0007  ld   $07
              4a49 0030  ld   $30
              4a4a 000c  ld   $0c
              4a4b 00c3  ld   $c3
              4a4c 0030  ld   $30
              4a4d 000c  ld   $0c
              4a4e 00c3  ld   $c3
              4a4f 0030  ld   $30
              4a50 000c  ld   $0c
              4a51 00c3  ld   $c3
              4a52 0030  ld   $30
              4a53 000c  ld   $0c
              4a54 00c3  ld   $c3
              4a55 0030  ld   $30
              4a56 000c  ld   $0c
              4a57 00c3  ld   $c3
              4a58 0030  ld   $30
              4a59 000c  ld   $0c
              4a5a 00c3  ld   $c3
              4a5b 0030  ld   $30
              4a5c 000c  ld   $0c
              4a5d 00c3  ld   $c3
              4a5e 0030  ld   $30
              4a5f 000c  ld   $0c
              4a60 00c3  ld   $c3
              4a61 0030  ld   $30
              4a62 000c  ld   $0c
              4a63 00c3  ld   $c3
              4a64 00b0  ld   $b0
              4a65 005a  ld   $5a
              4a66 00a9  ld   $a9
              4a67 00bf  ld   $bf
              4a68 000a  ld   $0a
              4a69 00ab  ld   $ab
              4a6a 0095  ld   $95
              4a6b 005a  ld   $5a
              4a6c 00a9  ld   $a9
              4a6d 002a  ld   $2a
              4a6e 001c  ld   $1c
              4a6f 0004  ld   $04
              4a70 0041  ld   $41
              4a71 0010  ld   $10
              4a72 0044  ld   $44
              4a73 0011  ld   $11
              4a74 000c  ld   $0c
              4a75 00c3  ld   $c3
              4a76 0030  ld   $30
              4a77 000c  ld   $0c
              4a78 00c3  ld   $c3
              4a79 0070  ld   $70
              4a7a 00f4  ld   $f4
              4a7b 00fe  ld   $fe
              4a7c 0030  ld   $30
              4a7d 00fc  ld   $fc
              4a7e 00c2  ld   $c2
              4a7f 00f0  ld   $f0
              4a80 00ff  ld   $ff
              4a81 004b  ld   $4b
              4a82 0030  ld   $30
              4a83 000c  ld   $0c
              4a84 00c3  ld   $c3
              4a85 0030  ld   $30
              4a86 000c  ld   $0c
              4a87 00c3  ld   $c3
              4a88 0030  ld   $30
              4a89 00ac  ld   $ac
              4a8a 0069  ld   $69
              4a8b 009a  ld   $9a
              4a8c 00aa  ld   $aa
              4a8d 006a  ld   $6a
              4a8e 0016  ld   $16
              4a8f 00a5  ld   $a5
              4a90 005a  ld   $5a
              4a91 00aa  ld   $aa
              4a92 0061  ld   $61
              4a93 00a9  ld   $a9
              4a94 0056  ld   $56
              4a95 0065  ld   $65
              4a96 00a8  ld   $a8
              4a97 0056  ld   $56
              4a98 0095  ld   $95
              4a99 005a  ld   $5a
              4a9a 009a  ld   $9a
              4a9b 00aa  ld   $aa
              4a9c 006a  ld   $6a
              4a9d 009a  ld   $9a
              4a9e 0006  ld   $06
              4a9f 00c3  ld   $c3
              4aa0 0030  ld   $30
              4aa1 000c  ld   $0c
              4aa2 00c3  ld   $c3
              4aa3 0030  ld   $30
              4aa4 00ac  ld   $ac
              4aa5 00fe  ld   $fe
              4aa6 0030  ld   $30
              4aa7 000c  ld   $0c
              4aa8 00c3  ld   $c3
              4aa9 0030  ld   $30
              4aaa 00ac  ld   $ac
              4aab 00fe  ld   $fe
              4aac 0030  ld   $30
              4aad 000c  ld   $0c
              4aae 00c3  ld   $c3
              4aaf 00b0  ld   $b0
              4ab0 00fa  ld   $fa
              4ab1 00c3  ld   $c3
              4ab2 0030  ld   $30
              4ab3 000c  ld   $0c
              4ab4 00c3  ld   $c3
              4ab5 0030  ld   $30
              4ab6 000c  ld   $0c
              4ab7 00c3  ld   $c3
              4ab8 0030  ld   $30
              4ab9 000c  ld   $0c
              4aba 0003  ld   $03
              4abb 0000  ld   $00
              4abc 0000  ld   $00
              4abd 0000  ld   $00
              * 5 times
              4ac0 0054  ld   $54
              4ac1 0055  ld   $55
              4ac2 0055  ld   $55
              4ac3 0055  ld   $55
              4ac4 0055  ld   $55
              4ac5 00a5  ld   $a5
              4ac6 00aa  ld   $aa
              4ac7 00aa  ld   $aa
              4ac8 00fa  ld   $fa
              4ac9 00ff  ld   $ff
              4aca 00ff  ld   $ff
              4acb 000f  ld   $0f
              4acc 00c3  ld   $c3
              4acd 0030  ld   $30
              4ace 000c  ld   $0c
              4acf 00c3  ld   $c3
              4ad0 00eb  ld   $eb
              4ad1 001a  ld   $1a
              4ad2 0004  ld   $04
              4ad3 0069  ld   $69
              4ad4 00b0  ld   $b0
              4ad5 00a6  ld   $a6
              4ad6 0030  ld   $30
              4ad7 000c  ld   $0c
              4ad8 00c3  ld   $c3
              4ad9 0070  ld   $70
              4ada 0055  ld   $55
              4adb 00fd  ld   $fd
              4adc 0055  ld   $55
              4add 00f5  ld   $f5
              4ade 0057  ld   $57
              4adf 00d5  ld   $d5
              4ae0 005f  ld   $5f
              4ae1 0055  ld   $55
              4ae2 007f  ld   $7f
              4ae3 0055  ld   $55
              4ae4 00fd  ld   $fd
              4ae5 0055  ld   $55
              4ae6 0005  ld   $05
              4ae7 00c3  ld   $c3
              4ae8 0030  ld   $30
              4ae9 000c  ld   $0c
              4aea 00c3  ld   $c3
              4aeb 0030  ld   $30
              4aec 000c  ld   $0c
              4aed 0007  ld   $07
              4aee 0096  ld   $96
              4aef 0065  ld   $65
              4af0 0059  ld   $59
              4af1 0001  ld   $01
              4af2 000c  ld   $0c
              4af3 00c3  ld   $c3
              4af4 0030  ld   $30
              4af5 000c  ld   $0c
              4af6 00c3  ld   $c3
              4af7 0030  ld   $30
              4af8 006c  ld   $6c
              4af9 00fc  ld   $fc
              4afa 006f  ld   $6f
              4afb fe00  bra  ac          ;+-----------------------------------+
              4afc fcfd  bra  $4afd       ;|                                   |
              4afd 1418  ld   $18,y       ;| Trampoline for page $4a00 lookups |
              4afe e006  jmp  y,$06       ;|                                   |
              4aff c218  st   [$18]       ;+-----------------------------------+
              4b00 0060  ld   $60
              4b01 002c  ld   $2c
              4b02 00c6  ld   $c6
              4b03 0062  ld   $62
              4b04 002c  ld   $2c
              4b05 00c6  ld   $c6
              4b06 0062  ld   $62
              4b07 002c  ld   $2c
              4b08 00c6  ld   $c6
              4b09 006f  ld   $6f
              4b0a 0019  ld   $19
              4b0b 0056  ld   $56
              4b0c 00f0  ld   $f0
              4b0d 0006  ld   $06
              4b0e 0030  ld   $30
              4b0f 000c  ld   $0c
              4b10 00c3  ld   $c3
              4b11 0030  ld   $30
              4b12 000c  ld   $0c
              4b13 00c3  ld   $c3
              4b14 0030  ld   $30
              4b15 000c  ld   $0c
              4b16 00c3  ld   $c3
              4b17 0030  ld   $30
              4b18 000c  ld   $0c
              4b19 00c3  ld   $c3
              4b1a 0030  ld   $30
              4b1b 000c  ld   $0c
              4b1c 00c3  ld   $c3
              4b1d 0030  ld   $30
              4b1e 000c  ld   $0c
              4b1f 00c3  ld   $c3
              4b20 0030  ld   $30
              4b21 000c  ld   $0c
              4b22 00c3  ld   $c3
              4b23 0030  ld   $30
              4b24 000c  ld   $0c
              4b25 00c3  ld   $c3
              4b26 0030  ld   $30
              4b27 000c  ld   $0c
              4b28 00c3  ld   $c3
              4b29 0070  ld   $70
              4b2a 00a5  ld   $a5
              4b2b 00fe  ld   $fe
              4b2c 00ea  ld   $ea
              4b2d 000f  ld   $0f
              4b2e 00ab  ld   $ab
              4b2f 006a  ld   $6a
              4b30 00a5  ld   $a5
              4b31 0056  ld   $56
              4b32 002a  ld   $2a
              4b33 001c  ld   $1c
              4b34 0058  ld   $58
              4b35 0081  ld   $81
              4b36 0015  ld   $15
              4b37 0058  ld   $58
              4b38 0011  ld   $11
              4b39 000c  ld   $0c
              4b3a 00c3  ld   $c3
              4b3b 0030  ld   $30
              4b3c 000c  ld   $0c
              4b3d 00c3  ld   $c3
              4b3e 0030  ld   $30
              4b3f 00fc  ld   $fc
              4b40 00bf  ld   $bf
              4b41 0030  ld   $30
              4b42 00fc  ld   $fc
              4b43 00c2  ld   $c2
              4b44 00f0  ld   $f0
              4b45 00fb  ld   $fb
              4b46 00c3  ld   $c3
              4b47 0030  ld   $30
              4b48 000c  ld   $0c
              4b49 00c3  ld   $c3
              4b4a 0030  ld   $30
              4b4b 000c  ld   $0c
              4b4c 00c3  ld   $c3
              4b4d 0030  ld   $30
              4b4e 005c  ld   $5c
              4b4f 00a9  ld   $a9
              4b50 0069  ld   $69
              4b51 0055  ld   $55
              4b52 0055  ld   $55
              4b53 0029  ld   $29
              4b54 0055  ld   $55
              4b55 0055  ld   $55
              4b56 0055  ld   $55
              4b57 0055  ld   $55
              4b58 0051  ld   $51
              4b59 0054  ld   $54
              4b5a 0055  ld   $55
              4b5b 0055  ld   $55
              4b5c 0014  ld   $14
              4b5d 0090  ld   $90
              4b5e 0052  ld   $52
              4b5f 0055  ld   $55
              4b60 0055  ld   $55
              4b61 0055  ld   $55
              4b62 006a  ld   $6a
              4b63 0005  ld   $05
              4b64 00c3  ld   $c3
              4b65 0030  ld   $30
              4b66 000c  ld   $0c
              4b67 00c3  ld   $c3
              4b68 0030  ld   $30
              4b69 00ac  ld   $ac
              4b6a 00fe  ld   $fe
              4b6b 0030  ld   $30
              4b6c 000c  ld   $0c
              4b6d 00c3  ld   $c3
              4b6e 0030  ld   $30
              4b6f 00ac  ld   $ac
              4b70 00fe  ld   $fe
              4b71 0030  ld   $30
              4b72 000c  ld   $0c
              4b73 00c3  ld   $c3
              4b74 00b0  ld   $b0
              4b75 00fa  ld   $fa
              4b76 00c3  ld   $c3
              4b77 0030  ld   $30
              4b78 000c  ld   $0c
              4b79 00c3  ld   $c3
              4b7a 0030  ld   $30
              4b7b 000c  ld   $0c
              4b7c 00c3  ld   $c3
              4b7d 0030  ld   $30
              4b7e 000c  ld   $0c
              4b7f 00c3  ld   $c3
              4b80 0030  ld   $30
              4b81 0000  ld   $00
              4b82 0000  ld   $00
              4b83 0000  ld   $00
              * 8 times
              4b89 0040  ld   $40
              4b8a 0055  ld   $55
              4b8b 0055  ld   $55
              4b8c 0055  ld   $55
              * 5 times
              4b8f 0030  ld   $30
              4b90 000c  ld   $0c
              4b91 00c3  ld   $c3
              4b92 0030  ld   $30
              4b93 000c  ld   $0c
              4b94 00c3  ld   $c3
              4b95 00e9  ld   $e9
              4b96 001a  ld   $1a
              4b97 00a4  ld   $a4
              4b98 0041  ld   $41
              4b99 00b0  ld   $b0
              4b9a 00ae  ld   $ae
              4b9b 0030  ld   $30
              4b9c 000c  ld   $0c
              4b9d 00c3  ld   $c3
              4b9e 00b0  ld   $b0
              4b9f 004a  ld   $4a
              4ba0 00d3  ld   $d3
              4ba1 0034  ld   $34
              4ba2 004d  ld   $4d
              4ba3 00d3  ld   $d3
              4ba4 0034  ld   $34
              4ba5 004d  ld   $4d
              4ba6 00d3  ld   $d3
              4ba7 0034  ld   $34
              4ba8 004d  ld   $4d
              4ba9 00d3  ld   $d3
              4baa 00b4  ld   $b4
              4bab 000a  ld   $0a
              4bac 00c3  ld   $c3
              4bad 0030  ld   $30
              4bae 000c  ld   $0c
              4baf 00c3  ld   $c3
              4bb0 0030  ld   $30
              4bb1 000c  ld   $0c
              4bb2 0007  ld   $07
              4bb3 0096  ld   $96
              4bb4 0045  ld   $45
              4bb5 0058  ld   $58
              4bb6 0001  ld   $01
              4bb7 000c  ld   $0c
              4bb8 00c3  ld   $c3
              4bb9 0030  ld   $30
              4bba 000c  ld   $0c
              4bbb 00c3  ld   $c3
              4bbc 0030  ld   $30
              4bbd 00bc  ld   $bc
              4bbe 00bc  ld   $bc
              4bbf 00bf  ld   $bf
              4bc0 0011  ld   $11
              4bc1 0018  ld   $18
              4bc2 0081  ld   $81
              4bc3 0011  ld   $11
              4bc4 0018  ld   $18
              4bc5 0081  ld   $81
              4bc6 0011  ld   $11
              4bc7 0018  ld   $18
              4bc8 00c1  ld   $c1
              4bc9 001b  ld   $1b
              4bca 0004  ld   $04
              4bcb 0041  ld   $41
              4bcc 00f0  ld   $f0
              4bcd 0007  ld   $07
              4bce 0030  ld   $30
              4bcf 000c  ld   $0c
              4bd0 00c3  ld   $c3
              4bd1 0030  ld   $30
              4bd2 000c  ld   $0c
              4bd3 00fc  ld   $fc
              4bd4 0030  ld   $30
              4bd5 000c  ld   $0c
              4bd6 00ff  ld   $ff
              4bd7 003f  ld   $3f
              4bd8 000c  ld   $0c
              4bd9 00c3  ld   $c3
              4bda 003f  ld   $3f
              4bdb 00f0  ld   $f0
              4bdc 00c3  ld   $c3
              4bdd 0030  ld   $30
              4bde 000c  ld   $0c
              4bdf 00ff  ld   $ff
              4be0 00c0  ld   $c0
              4be1 000f  ld   $0f
              4be2 00c3  ld   $c3
              4be3 00ff  ld   $ff
              4be4 000f  ld   $0f
              4be5 00c3  ld   $c3
              4be6 0030  ld   $30
              4be7 000c  ld   $0c
              4be8 00c3  ld   $c3
              4be9 00b0  ld   $b0
              4bea 005a  ld   $5a
              4beb 00a9  ld   $a9
              4bec 00bf  ld   $bf
              4bed 000a  ld   $0a
              4bee 00ab  ld   $ab
              4bef 0095  ld   $95
              4bf0 005a  ld   $5a
              4bf1 00a9  ld   $a9
              4bf2 002a  ld   $2a
              4bf3 001c  ld   $1c
              4bf4 0004  ld   $04
              4bf5 0041  ld   $41
              4bf6 0010  ld   $10
              4bf7 0044  ld   $44
              4bf8 0011  ld   $11
              4bf9 000c  ld   $0c
              4bfa 00c3  ld   $c3
              4bfb fe00  bra  ac          ;+-----------------------------------+
              4bfc fcfd  bra  $4bfd       ;|                                   |
              4bfd 1418  ld   $18,y       ;| Trampoline for page $4b00 lookups |
              4bfe e006  jmp  y,$06       ;|                                   |
              4bff c218  st   [$18]       ;+-----------------------------------+
              4c00 0030  ld   $30
              4c01 000c  ld   $0c
              4c02 00c3  ld   $c3
              4c03 00f0  ld   $f0
              4c04 00ff  ld   $ff
              4c05 004b  ld   $4b
              4c06 00ff  ld   $ff
              4c07 00fb  ld   $fb
              4c08 00bf  ld   $bf
              4c09 00bf  ld   $bf
              4c0a 00f4  ld   $f4
              4c0b 00ff  ld   $ff
              4c0c 0030  ld   $30
              4c0d 000c  ld   $0c
              4c0e 00c3  ld   $c3
              4c0f 0030  ld   $30
              4c10 000c  ld   $0c
              4c11 00c3  ld   $c3
              4c12 0030  ld   $30
              4c13 00ac  ld   $ac
              4c14 00aa  ld   $aa
              4c15 00aa  ld   $aa
              4c16 005a  ld   $5a
              4c17 00a9  ld   $a9
              4c18 00aa  ld   $aa
              4c19 00aa  ld   $aa
              4c1a 00aa  ld   $aa
              * 5 times
              4c1d 006a  ld   $6a
              4c1e 009a  ld   $9a
              4c1f 00aa  ld   $aa
              4c20 00aa  ld   $aa
              4c21 00aa  ld   $aa
              * 5 times
              4c24 006a  ld   $6a
              4c25 00a5  ld   $a5
              4c26 0069  ld   $69
              4c27 009a  ld   $9a
              4c28 0006  ld   $06
              4c29 00c3  ld   $c3
              4c2a 0030  ld   $30
              4c2b 000c  ld   $0c
              4c2c 00c3  ld   $c3
              4c2d 0030  ld   $30
              4c2e 00ac  ld   $ac
              4c2f 00fe  ld   $fe
              4c30 0030  ld   $30
              4c31 000c  ld   $0c
              4c32 00c3  ld   $c3
              4c33 0030  ld   $30
              4c34 00ac  ld   $ac
              4c35 00fe  ld   $fe
              4c36 0030  ld   $30
              4c37 000c  ld   $0c
              4c38 00c3  ld   $c3
              4c39 00b0  ld   $b0
              4c3a 00fa  ld   $fa
              4c3b 00c3  ld   $c3
              4c3c 0030  ld   $30
              4c3d 000c  ld   $0c
              4c3e 00c3  ld   $c3
              4c3f 0030  ld   $30
              4c40 000c  ld   $0c
              4c41 00c3  ld   $c3
              4c42 0030  ld   $30
              4c43 000c  ld   $0c
              4c44 00c3  ld   $c3
              4c45 0030  ld   $30
              4c46 000c  ld   $0c
              4c47 0003  ld   $03
              4c48 0000  ld   $00
              4c49 0000  ld   $00
              4c4a 0000  ld   $00
              * 11 times
              4c53 00c3  ld   $c3
              4c54 0030  ld   $30
              4c55 000c  ld   $0c
              4c56 00c3  ld   $c3
              4c57 0030  ld   $30
              4c58 000c  ld   $0c
              4c59 00c3  ld   $c3
              4c5a 00eb  ld   $eb
              4c5b 001a  ld   $1a
              4c5c 0004  ld   $04
              4c5d 0069  ld   $69
              4c5e 00b0  ld   $b0
              4c5f 00a6  ld   $a6
              4c60 0030  ld   $30
              4c61 000c  ld   $0c
              4c62 00c3  ld   $c3
              4c63 0070  ld   $70
              4c64 0005  ld   $05
              4c65 00c3  ld   $c3
              4c66 00fe  ld   $fe
              4c67 00ef  ld   $ef
              4c68 00ff  ld   $ff
              4c69 00fe  ld   $fe
              4c6a 00ef  ld   $ef
              4c6b 00ff  ld   $ff
              4c6c 00fe  ld   $fe
              4c6d 00ef  ld   $ef
              4c6e 00c3  ld   $c3
              4c6f 0070  ld   $70
              4c70 0005  ld   $05
              4c71 00c3  ld   $c3
              4c72 0030  ld   $30
              4c73 000c  ld   $0c
              4c74 00c3  ld   $c3
              4c75 0030  ld   $30
              4c76 000c  ld   $0c
              4c77 0007  ld   $07
              4c78 0084  ld   $84
              4c79 0065  ld   $65
              4c7a 0059  ld   $59
              4c7b 0001  ld   $01
              4c7c 000c  ld   $0c
              4c7d 00c3  ld   $c3
              4c7e 0030  ld   $30
              4c7f 000c  ld   $0c
              4c80 00c3  ld   $c3
              4c81 0030  ld   $30
              4c82 006c  ld   $6c
              4c83 00fc  ld   $fc
              4c84 00ef  ld   $ef
              4c85 00ff  ld   $ff
              4c86 00fe  ld   $fe
              4c87 00ef  ld   $ef
              4c88 00ff  ld   $ff
              4c89 00fe  ld   $fe
              4c8a 00ef  ld   $ef
              4c8b 00ff  ld   $ff
              4c8c 00fe  ld   $fe
              4c8d 00ef  ld   $ef
              4c8e 00ff  ld   $ff
              4c8f 00fe  ld   $fe
              4c90 00ef  ld   $ef
              4c91 00ff  ld   $ff
              4c92 0006  ld   $06
              4c93 0030  ld   $30
              4c94 000c  ld   $0c
              4c95 00c3  ld   $c3
              4c96 000c  ld   $0c
              4c97 00f3  ld   $f3
              4c98 0003  ld   $03
              4c99 000c  ld   $0c
              4c9a 00c3  ld   $c3
              4c9b 0030  ld   $30
              4c9c 000c  ld   $0c
              4c9d 00c3  ld   $c3
              4c9e 0030  ld   $30
              4c9f 00cc  ld   $cc
              4ca0 00ff  ld   $ff
              4ca1 0033  ld   $33
              4ca2 000c  ld   $0c
              4ca3 00c3  ld   $c3
              4ca4 0000  ld   $00
              4ca5 003f  ld   $3f
              4ca6 00c3  ld   $c3
              4ca7 0030  ld   $30
              4ca8 000c  ld   $0c
              4ca9 00c3  ld   $c3
              4caa 0030  ld   $30
              4cab 000c  ld   $0c
              4cac 000c  ld   $0c
              4cad 00c3  ld   $c3
              4cae 0070  ld   $70
              4caf 00a5  ld   $a5
              4cb0 00fe  ld   $fe
              4cb1 00ea  ld   $ea
              4cb2 000f  ld   $0f
              4cb3 00ab  ld   $ab
              4cb4 006a  ld   $6a
              4cb5 00a5  ld   $a5
              4cb6 0056  ld   $56
              4cb7 002a  ld   $2a
              4cb8 001c  ld   $1c
              4cb9 0058  ld   $58
              4cba 0081  ld   $81
              4cbb 0015  ld   $15
              4cbc 0058  ld   $58
              4cbd 0011  ld   $11
              4cbe 000c  ld   $0c
              4cbf 00c3  ld   $c3
              4cc0 0030  ld   $30
              4cc1 000c  ld   $0c
              4cc2 00c3  ld   $c3
              4cc3 00f0  ld   $f0
              4cc4 000f  ld   $0f
              4cc5 00c3  ld   $c3
              4cc6 0052  ld   $52
              4cc7 0024  ld   $24
              4cc8 0005  ld   $05
              4cc9 0012  ld   $12
              4cca 000c  ld   $0c
              4ccb 00ff  ld   $ff
              4ccc 0030  ld   $30
              4ccd 000c  ld   $0c
              4cce 00c3  ld   $c3
              4ccf 0030  ld   $30
              4cd0 000c  ld   $0c
              4cd1 00c3  ld   $c3
              4cd2 0030  ld   $30
              4cd3 005c  ld   $5c
              4cd4 0055  ld   $55
              4cd5 0055  ld   $55
              4cd6 0055  ld   $55
              4cd7 0055  ld   $55
              4cd8 0015  ld   $15
              4cd9 0055  ld   $55
              4cda 00a9  ld   $a9
              4cdb 0095  ld   $95
              4cdc 00aa  ld   $aa
              4cdd 00aa  ld   $aa
              4cde 00aa  ld   $aa
              4cdf 001a  ld   $1a
              4ce0 0054  ld   $54
              4ce1 0041  ld   $41
              4ce2 0055  ld   $55
              4ce3 0055  ld   $55
              4ce4 0055  ld   $55
              4ce5 0055  ld   $55
              4ce6 0005  ld   $05
              4ce7 0095  ld   $95
              4ce8 000a  ld   $0a
              4ce9 00c3  ld   $c3
              4cea 0030  ld   $30
              4ceb 00cc  ld   $cc
              4cec 0030  ld   $30
              4ced 008c  ld   $8c
              4cee 00fa  ld   $fa
              4cef 00ff  ld   $ff
              4cf0 003f  ld   $3f
              4cf1 00c3  ld   $c3
              4cf2 0030  ld   $30
              4cf3 008c  ld   $8c
              4cf4 00fa  ld   $fa
              4cf5 00ff  ld   $ff
              4cf6 003f  ld   $3f
              4cf7 00c3  ld   $c3
              4cf8 0030  ld   $30
              4cf9 00ea  ld   $ea
              4cfa 00ff  ld   $ff
              4cfb fe00  bra  ac          ;+-----------------------------------+
              4cfc fcfd  bra  $4cfd       ;|                                   |
              4cfd 1418  ld   $18,y       ;| Trampoline for page $4c00 lookups |
              4cfe e006  jmp  y,$06       ;|                                   |
              4cff c218  st   [$18]       ;+-----------------------------------+
              4d00 00ff  ld   $ff
              4d01 000c  ld   $0c
              4d02 00c3  ld   $c3
              4d03 00c0  ld   $c0
              4d04 0030  ld   $30
              4d05 000c  ld   $0c
              4d06 00c3  ld   $c3
              4d07 0030  ld   $30
              4d08 000c  ld   $0c
              4d09 00c3  ld   $c3
              4d0a 0030  ld   $30
              4d0b 000c  ld   $0c
              4d0c 00c3  ld   $c3
              4d0d 0030  ld   $30
              4d0e 0000  ld   $00
              4d0f 0000  ld   $00
              4d10 0000  ld   $00
              * 8 times
              4d16 0015  ld   $15
              4d17 000c  ld   $0c
              4d18 00c3  ld   $c3
              4d19 0030  ld   $30
              4d1a 000c  ld   $0c
              4d1b 00c3  ld   $c3
              4d1c 0030  ld   $30
              4d1d 000c  ld   $0c
              4d1e 00c3  ld   $c3
              4d1f 00e9  ld   $e9
              4d20 001a  ld   $1a
              4d21 00a4  ld   $a4
              4d22 0041  ld   $41
              4d23 00b0  ld   $b0
              4d24 00ae  ld   $ae
              4d25 0030  ld   $30
              4d26 000c  ld   $0c
              4d27 00c3  ld   $c3
              4d28 0070  ld   $70
              4d29 00f5  ld   $f5
              4d2a 00fb  ld   $fb
              4d2b 00bf  ld   $bf
              4d2c 00af  ld   $af
              4d2d 00aa  ld   $aa
              4d2e 00aa  ld   $aa
              4d2f 00aa  ld   $aa
              * 5 times
              4d32 00fa  ld   $fa
              4d33 00fb  ld   $fb
              4d34 007f  ld   $7f
              4d35 0005  ld   $05
              4d36 00c3  ld   $c3
              4d37 0030  ld   $30
              4d38 000c  ld   $0c
              4d39 00c3  ld   $c3
              4d3a 0030  ld   $30
              4d3b 000c  ld   $0c
              4d3c 0007  ld   $07
              4d3d 0084  ld   $84
              4d3e 0065  ld   $65
              4d3f 0059  ld   $59
              4d40 0001  ld   $01
              4d41 000c  ld   $0c
              4d42 00c3  ld   $c3
              4d43 0030  ld   $30
              4d44 000c  ld   $0c
              4d45 00c3  ld   $c3
              4d46 0030  ld   $30
              4d47 00bc  ld   $bc
              4d48 00bc  ld   $bc
              4d49 0000  ld   $00
              4d4a 0000  ld   $00
              4d4b 0000  ld   $00
              * 13 times
              4d56 00f0  ld   $f0
              4d57 0007  ld   $07
              4d58 0030  ld   $30
              4d59 000c  ld   $0c
              4d5a 0033  ld   $33
              4d5b 0008  ld   $08
              4d5c 0082  ld   $82
              4d5d 0020  ld   $20
              4d5e 0008  ld   $08
              4d5f 0082  ld   $82
              4d60 0020  ld   $20
              4d61 0008  ld   $08
              4d62 0082  ld   $82
              4d63 0020  ld   $20
              4d64 0008  ld   $08
              4d65 0082  ld   $82
              4d66 0020  ld   $20
              4d67 0008  ld   $08
              4d68 0082  ld   $82
              4d69 0020  ld   $20
              4d6a 0008  ld   $08
              4d6b 0082  ld   $82
              4d6c 0020  ld   $20
              4d6d 0008  ld   $08
              4d6e 0082  ld   $82
              4d6f 0020  ld   $20
              4d70 0008  ld   $08
              4d71 0003  ld   $03
              4d72 00c3  ld   $c3
              4d73 00b0  ld   $b0
              4d74 005a  ld   $5a
              4d75 00a9  ld   $a9
              4d76 00bf  ld   $bf
              4d77 000a  ld   $0a
              4d78 00ab  ld   $ab
              4d79 00aa  ld   $aa
              4d7a 00aa  ld   $aa
              4d7b 00aa  ld   $aa
              4d7c 002a  ld   $2a
              4d7d 001c  ld   $1c
              4d7e 0004  ld   $04
              4d7f 0041  ld   $41
              4d80 0010  ld   $10
              4d81 0044  ld   $44
              4d82 0011  ld   $11
              4d83 000c  ld   $0c
              4d84 00c3  ld   $c3
              4d85 0030  ld   $30
              4d86 000c  ld   $0c
              4d87 00ff  ld   $ff
              4d88 00ff  ld   $ff
              4d89 00ff  ld   $ff
              * 11 times
              4d92 000f  ld   $0f
              4d93 00c3  ld   $c3
              4d94 0030  ld   $30
              4d95 000c  ld   $0c
              4d96 00c3  ld   $c3
              4d97 0030  ld   $30
              4d98 005c  ld   $5c
              4d99 0014  ld   $14
              4d9a 0045  ld   $45
              4d9b 0051  ld   $51
              4d9c 0014  ld   $14
              4d9d 0045  ld   $45
              4d9e 0051  ld   $51
              4d9f 0014  ld   $14
              4da0 0045  ld   $45
              4da1 0051  ld   $51
              4da2 0014  ld   $14
              4da3 0045  ld   $45
              4da4 0051  ld   $51
              4da5 0014  ld   $14
              4da6 0045  ld   $45
              4da7 0051  ld   $51
              4da8 0014  ld   $14
              4da9 0045  ld   $45
              4daa 0051  ld   $51
              4dab 0014  ld   $14
              4dac 0045  ld   $45
              4dad 0001  ld   $01
              4dae 00c3  ld   $c3
              4daf 0030  ld   $30
              4db0 0083  ld   $83
              4db1 0020  ld   $20
              4db2 0008  ld   $08
              4db3 0082  ld   $82
              4db4 0020  ld   $20
              4db5 0008  ld   $08
              4db6 0082  ld   $82
              4db7 0020  ld   $20
              4db8 0008  ld   $08
              4db9 0082  ld   $82
              4dba 0020  ld   $20
              4dbb 0008  ld   $08
              4dbc 0082  ld   $82
              4dbd 0020  ld   $20
              4dbe 0008  ld   $08
              4dbf 0082  ld   $82
              4dc0 0020  ld   $20
              4dc1 0008  ld   $08
              4dc2 0082  ld   $82
              4dc3 0030  ld   $30
              4dc4 0030  ld   $30
              4dc5 000c  ld   $0c
              4dc6 00c3  ld   $c3
              4dc7 0030  ld   $30
              4dc8 000c  ld   $0c
              4dc9 00c3  ld   $c3
              4dca 0030  ld   $30
              4dcb 000c  ld   $0c
              4dcc 00c3  ld   $c3
              4dcd 0030  ld   $30
              4dce 000c  ld   $0c
              4dcf 0003  ld   $03
              4dd0 0000  ld   $00
              4dd1 0000  ld   $00
              4dd2 0000  ld   $00
              * 5 times
              4dd5 00c3  ld   $c3
              4dd6 0015  ld   $15
              4dd7 000c  ld   $0c
              4dd8 00c3  ld   $c3
              4dd9 0030  ld   $30
              4dda 000c  ld   $0c
              4ddb 00c3  ld   $c3
              4ddc 0030  ld   $30
              4ddd 000c  ld   $0c
              4dde 00c3  ld   $c3
              4ddf 00eb  ld   $eb
              4de0 001a  ld   $1a
              4de1 0004  ld   $04         ;End of Apps/Racer/Horizon-256x16.rgb, size 3132
                                          ;+-----------------------------------+
                                          ;| Apps/Racer/Racer_v2.gcl           |
                                          ;+-----------------------------------+
              4de2 dc7a  st   $7a,[y,x++] ;'z'
              4de3 dc69  st   $69,[y,x++] ;'i'
              4de4 dc70  st   $70,[y,x++] ;'p'
              4de5 dc70  st   $70,[y,x++] ;'p'
              4de6 dc65  st   $65,[y,x++] ;'e'
              4de7 dc64  st   $64,[y,x++] ;'d'
              4de8 dc52  st   $52,[y,x++] ;'R'
              4de9 dc61  st   $61,[y,x++] ;'a'
              4dea 00a6  ld   $a6
              4deb c218  st   [$18]
              4dec 0041  ld   $41
              4ded 14e1  ld   $e1,y
              4dee e071  jmp  y,$71
              4def c219  st   [$19]
Racer:        4df0 0002  ld   $02         ;| RAM segment address (high byte first)
              4df1 0000  ld   $00         ;|
              4df2 00f7  ld   $f7         ;| Length (1..256)
              4df3 001a  ld   $1a         ;0200 LD
              4df4 0021  ld   $21
              4df5 00e6  ld   $e6         ;0202 SUBI
              4df6 0020  ld   $20
              4df7 0035  ld   $35         ;0204 BCC
              4df8 0053  ld   $53         ;0205 GE
              4df9 000b  ld   $0b
              4dfa 0021  ld   $21         ;0207 LDW
              4dfb fe00  bra  ac          ;+-----------------------------------+
              4dfc fcfd  bra  $4dfd       ;|                                   |
              4dfd 1418  ld   $18,y       ;| Trampoline for page $4d00 lookups |
              4dfe e006  jmp  y,$06       ;|                                   |
              4dff c218  st   [$18]       ;+-----------------------------------+
              4e00 000e  ld   $0e         ;0207 '_frameCount'
              4e01 00f3  ld   $f3         ;0209 DOKE
              4e02 0017  ld   $17         ;0209 '_vPCH'
              4e03 0090  ld   $90         ;020b BRA
              4e04 0005  ld   $05
              4e05 00cd  ld   $cd         ;020d DEF
              4e06 0057  ld   $57
              4e07 00e6  ld   $e6         ;020f SUBI
              4e08 0052  ld   $52
              4e09 0035  ld   $35         ;0211 BCC
              4e0a 0053  ld   $53         ;0212 GE
              4e0b 001b  ld   $1b
              4e0c 00e3  ld   $e3         ;0214 ADDI
              4e0d 0032  ld   $32
              4e0e 002b  ld   $2b         ;0216 STW
              4e0f 0030  ld   $30         ;0216 'i'
              4e10 0011  ld   $11         ;0218 LDWI
              4e11 0000  ld   $00
              4e12 0007  ld   $07
              4e13 0090  ld   $90         ;021b BRA
              4e14 0020  ld   $20
              4e15 002b  ld   $2b         ;021d STW
              4e16 0030  ld   $30         ;021d 'i'
              4e17 0011  ld   $11         ;021f LDWI
              4e18 0000  ld   $00
              4e19 0008  ld   $08
              4e1a 002b  ld   $2b         ;0222 STW
              4e1b 0032  ld   $32         ;0222 'fontData'
              4e1c 0021  ld   $21         ;0224 LDW
              4e1d 0030  ld   $30         ;0224 'i'
              4e1e 00e9  ld   $e9         ;0226 LSLW
              4e1f 00e9  ld   $e9         ;0227 LSLW
              4e20 0099  ld   $99         ;0228 ADDW
              4e21 0030  ld   $30         ;0228 'i'
              4e22 0099  ld   $99         ;022a ADDW
              4e23 0032  ld   $32         ;022a 'fontData'
              4e24 002b  ld   $2b         ;022c STW
              4e25 0032  ld   $32         ;022c 'fontData'
              4e26 0021  ld   $21         ;022e LDW
              4e27 0034  ld   $34         ;022e 'BgColor'
              4e28 005e  ld   $5e         ;0230 ST
              4e29 0024  ld   $24
              4e2a 0021  ld   $21         ;0232 LDW
              4e2b 0036  ld   $36         ;0232 'Color'
              4e2c 005e  ld   $5e         ;0234 ST
              4e2d 0025  ld   $25
              4e2e 0021  ld   $21         ;0236 LDW
              4e2f 0038  ld   $38         ;0236 'Pos'
              4e30 002b  ld   $2b         ;0238 STW
              4e31 0028  ld   $28
              4e32 0011  ld   $11         ;023a LDWI
              4e33 00e1  ld   $e1
              4e34 0004  ld   $04
              4e35 002b  ld   $2b         ;023d STW
              4e36 0022  ld   $22
              4e37 0059  ld   $59         ;023f LDI
              4e38 00fb  ld   $fb
              4e39 002b  ld   $2b         ;0241 STW
              4e3a 0030  ld   $30         ;0241 'i'
              4e3b 0021  ld   $21         ;0243 LDW
              4e3c 0032  ld   $32         ;0243 'fontData'
              4e3d 007f  ld   $7f         ;0245 LUP
              4e3e 0000  ld   $00
              4e3f 0093  ld   $93         ;0247 INC
              4e40 0032  ld   $32         ;0247 'fontData'
              4e41 005e  ld   $5e         ;0249 ST
              4e42 0026  ld   $26
              4e43 00b4  ld   $b4         ;024b SYS
              4e44 00cc  ld   $cc
              4e45 0093  ld   $93         ;024d INC
              4e46 0028  ld   $28
              4e47 0093  ld   $93         ;024f INC
              4e48 0030  ld   $30         ;024f 'i'
              4e49 0021  ld   $21         ;0251 LDW
              4e4a 0030  ld   $30         ;0251 'i'
              4e4b 0035  ld   $35         ;0253 BCC
              4e4c 0072  ld   $72         ;0254 NE
              4e4d 0041  ld   $41
              4e4e 0021  ld   $21         ;0256 LDW
              4e4f 0038  ld   $38         ;0256 'Pos'
              4e50 00ff  ld   $ff         ;0258 RET
              4e51 002b  ld   $2b         ;0259 STW
              4e52 003a  ld   $3a         ;0259 'QPrintChar'
              4e53 00cd  ld   $cd         ;025b DEF
              4e54 00f0  ld   $f0
              4e55 001a  ld   $1a         ;025d LD
              4e56 000e  ld   $0e
              4e57 00b8  ld   $b8         ;025f SUBW
              4e58 003c  ld   $3c         ;025f 'LastFrame'
              4e59 0082  ld   $82         ;0261 ANDI
              4e5a 00ff  ld   $ff
              4e5b 005e  ld   $5e         ;0263 ST
              4e5c 002b  ld   $2b
              4e5d 0099  ld   $99         ;0265 ADDW
              4e5e 003e  ld   $3e         ;0265 'Time'
              4e5f 0035  ld   $35         ;0267 BCC
              4e60 0053  ld   $53         ;0268 GE
              4e61 006b  ld   $6b
              4e62 0011  ld   $11         ;026a LDWI
              4e63 00ff  ld   $ff
              4e64 007f  ld   $7f
              4e65 002b  ld   $2b         ;026d STW
              4e66 003e  ld   $3e         ;026d 'Time'
              4e67 001a  ld   $1a         ;026f LD
              4e68 000e  ld   $0e
              4e69 002b  ld   $2b         ;0271 STW
              4e6a 003c  ld   $3c         ;0271 'LastFrame'
              4e6b 001a  ld   $1a         ;0273 LD
              4e6c 0041  ld   $41         ;0273 'Speed'+1
              4e6d 0035  ld   $35         ;0275 BCC
              4e6e 0056  ld   $56         ;0276 LE
              4e6f 008a  ld   $8a
              4e70 002b  ld   $2b         ;0278 STW
              4e71 0030  ld   $30         ;0278 'i'
              4e72 0021  ld   $21         ;027a LDW
              4e73 0042  ld   $42         ;027a 'CarX'
              4e74 00b8  ld   $b8         ;027c SUBW
              4e75 0044  ld   $44         ;027c 'DriftX'
              4e76 002b  ld   $2b         ;027e STW
              4e77 0042  ld   $42         ;027e 'CarX'
              4e78 0021  ld   $21         ;0280 LDW
              4e79 0046  ld   $46         ;0280 'HorizonX'
              4e7a 0099  ld   $99         ;0282 ADDW
              4e7b 0048  ld   $48         ;0282 'HorizonDX'
              4e7c 002b  ld   $2b         ;0284 STW
              4e7d 0046  ld   $46         ;0284 'HorizonX'
              4e7e 0021  ld   $21         ;0286 LDW
              4e7f 0030  ld   $30         ;0286 'i'
              4e80 00e6  ld   $e6         ;0288 SUBI
              4e81 0001  ld   $01
              4e82 0090  ld   $90         ;028a BRA
              4e83 0073  ld   $73
              4e84 0059  ld   $59         ;028c LDI
              4e85 0000  ld   $00
              4e86 002b  ld   $2b         ;028e STW
              4e87 004a  ld   $4a         ;028e 'Steer'
              4e88 001a  ld   $1a         ;0290 LD
              4e89 0011  ld   $11
              4e8a 0082  ld   $82         ;0292 ANDI
              4e8b 0001  ld   $01
              4e8c 0035  ld   $35         ;0294 BCC
              4e8d 0072  ld   $72         ;0295 NE
              4e8e 00a0  ld   $a0
              4e8f 0011  ld   $11         ;0297 LDWI
              4e90 0000  ld   $00
              4e91 0002  ld   $02
              4e92 0099  ld   $99         ;029a ADDW
              4e93 0042  ld   $42         ;029a 'CarX'
              4e94 002b  ld   $2b         ;029c STW
              4e95 0042  ld   $42         ;029c 'CarX'
              4e96 0059  ld   $59         ;029e LDI
              4e97 0001  ld   $01
              4e98 002b  ld   $2b         ;02a0 STW
              4e99 004a  ld   $4a         ;02a0 'Steer'
              4e9a 001a  ld   $1a         ;02a2 LD
              4e9b 0011  ld   $11
              4e9c 0082  ld   $82         ;02a4 ANDI
              4e9d 0002  ld   $02
              4e9e 0035  ld   $35         ;02a6 BCC
              4e9f 0072  ld   $72         ;02a7 NE
              4ea0 00b3  ld   $b3
              4ea1 0011  ld   $11         ;02a9 LDWI
              4ea2 0000  ld   $00
              4ea3 00fe  ld   $fe
              4ea4 0099  ld   $99         ;02ac ADDW
              4ea5 0042  ld   $42         ;02ac 'CarX'
              4ea6 002b  ld   $2b         ;02ae STW
              4ea7 0042  ld   $42         ;02ae 'CarX'
              4ea8 0011  ld   $11         ;02b0 LDWI
              4ea9 00ff  ld   $ff
              4eaa 00ff  ld   $ff
              4eab 002b  ld   $2b         ;02b3 STW
              4eac 004a  ld   $4a         ;02b3 'Steer'
              4ead 001a  ld   $1a         ;02b5 LD
              4eae 0011  ld   $11
              4eaf 0082  ld   $82         ;02b7 ANDI
              4eb0 0080  ld   $80
              4eb1 0035  ld   $35         ;02b9 BCC
              4eb2 0072  ld   $72         ;02ba NE
              4eb3 00cf  ld   $cf
              4eb4 0021  ld   $21         ;02bc LDW
              4eb5 0040  ld   $40         ;02bc 'Speed'
              4eb6 00e3  ld   $e3         ;02be ADDI
              4eb7 0010  ld   $10
              4eb8 002b  ld   $2b         ;02c0 STW
              4eb9 0040  ld   $40         ;02c0 'Speed'
              4eba 0011  ld   $11         ;02c2 LDWI
              4ebb 00ff  ld   $ff
              4ebc 0005  ld   $05
              4ebd 00b8  ld   $b8         ;02c5 SUBW
              4ebe 0040  ld   $40         ;02c5 'Speed'
              4ebf 0035  ld   $35         ;02c7 BCC
              4ec0 0053  ld   $53         ;02c8 GE
              4ec1 00cd  ld   $cd
              4ec2 0011  ld   $11         ;02ca LDWI
              4ec3 00ff  ld   $ff
              4ec4 0005  ld   $05
              4ec5 002b  ld   $2b         ;02cd STW
              4ec6 0040  ld   $40         ;02cd 'Speed'
              4ec7 0090  ld   $90         ;02cf BRA
              4ec8 00dd  ld   $dd
              4ec9 0011  ld   $11         ;02d1 LDWI
              4eca 00f8  ld   $f8
              4ecb 00fe  ld   $fe
              4ecc 0099  ld   $99         ;02d4 ADDW
              4ecd 0040  ld   $40         ;02d4 'Speed'
              4ece 0035  ld   $35         ;02d6 BCC
              4ecf 0050  ld   $50         ;02d7 LT
              4ed0 00dd  ld   $dd
              4ed1 0021  ld   $21         ;02d9 LDW
              4ed2 0040  ld   $40         ;02d9 'Speed'
              4ed3 00e6  ld   $e6         ;02db SUBI
              4ed4 0008  ld   $08
              4ed5 002b  ld   $2b         ;02dd STW
              4ed6 0040  ld   $40         ;02dd 'Speed'
              4ed7 001a  ld   $1a         ;02df LD
              4ed8 0011  ld   $11
              4ed9 0082  ld   $82         ;02e1 ANDI
              4eda 0040  ld   $40
              4edb 0035  ld   $35         ;02e3 BCC
              4edc 0072  ld   $72         ;02e4 NE
              4edd 00ef  ld   $ef
              4ede 0021  ld   $21         ;02e6 LDW
              4edf 0040  ld   $40         ;02e6 'Speed'
              4ee0 00e6  ld   $e6         ;02e8 SUBI
              4ee1 0040  ld   $40
              4ee2 0035  ld   $35         ;02ea BCC
              4ee3 0053  ld   $53         ;02eb GE
              4ee4 00ed  ld   $ed
              4ee5 0059  ld   $59         ;02ed LDI
              4ee6 0000  ld   $00
              4ee7 002b  ld   $2b         ;02ef STW
              4ee8 0040  ld   $40         ;02ef 'Speed'
              4ee9 00ff  ld   $ff         ;02f1 RET
              4eea 002b  ld   $2b         ;02f2 STW
              4eeb 004c  ld   $4c         ;02f2 'ControlRaceCar'
              4eec 0093  ld   $93         ;02f4 INC
              4eed 001b  ld   $1b         ;02f4 '_vLR'+1
              4eee 00ff  ld   $ff         ;02f6 RET
              4eef 0003  ld   $03         ;| RAM segment address (high byte first)
              4ef0 0000  ld   $00         ;|
              4ef1 00e1  ld   $e1         ;| Length (1..256)
              4ef2 00cd  ld   $cd         ;0300 DEF
              4ef3 0009  ld   $09
              4ef4 0047  ld   $47         ;0302 'G'
              4ef5 0069  ld   $69         ;0303 'i'
              4ef6 0067  ld   $67         ;0304 'g'
              4ef7 0061  ld   $61         ;0305 'a'
              4ef8 0074  ld   $74         ;0306 't'
              4ef9 0072  ld   $72         ;0307 'r'
              4efa 006f  ld   $6f         ;0308 'o'
              4efb fe00  bra  ac          ;+-----------------------------------+
              4efc fcfd  bra  $4efd       ;|                                   |
              4efd 1418  ld   $18,y       ;| Trampoline for page $4e00 lookups |
              4efe e006  jmp  y,$06       ;|                                   |
              4eff c218  st   [$18]       ;+-----------------------------------+
              4f00 006e  ld   $6e         ;0309 'n'
              4f01 0000  ld   $00         ;030a 0
              4f02 002b  ld   $2b         ;030b STW
              4f03 004e  ld   $4e         ;030b 'GigatronText'
              4f04 00cd  ld   $cd         ;030d DEF
              4f05 001d  ld   $1d
              4f06 001a  ld   $1a         ;030f LD
              4f07 000e  ld   $0e
              4f08 0099  ld   $99         ;0311 ADDW
              4f09 0050  ld   $50         ;0311 'Delay'
              4f0a 0082  ld   $82         ;0313 ANDI
              4f0b 00ff  ld   $ff
              4f0c 002b  ld   $2b         ;0315 STW
              4f0d 0052  ld   $52         ;0315 'tmp'
              4f0e 001a  ld   $1a         ;0317 LD
              4f0f 000e  ld   $0e
              4f10 00b8  ld   $b8         ;0319 SUBW
              4f11 0052  ld   $52         ;0319 'tmp'
              4f12 0035  ld   $35         ;031b BCC
              4f13 0072  ld   $72         ;031c NE
              4f14 0015  ld   $15
              4f15 00ff  ld   $ff         ;031e RET
              4f16 002b  ld   $2b         ;031f STW
              4f17 0054  ld   $54         ;031f 'Wait'
              4f18 00cd  ld   $cd         ;0321 DEF
              4f19 00a1  ld   $a1
              4f1a 0021  ld   $21         ;0323 LDW
              4f1b 0056  ld   $56         ;0323 'Video'
              4f1c 00ad  ld   $ad         ;0325 PEEK
              4f1d 0082  ld   $82         ;0326 ANDI
              4f1e 00fe  ld   $fe
              4f1f 005e  ld   $5e         ;0328 ST
              4f20 0059  ld   $59         ;0328 'p'+1
              4f21 0088  ld   $88         ;032a ORI
              4f22 0001  ld   $01
              4f23 005e  ld   $5e         ;032c ST
              4f24 005b  ld   $5b         ;032c 'q'+1
              4f25 0093  ld   $93         ;032e INC
              4f26 0056  ld   $56         ;032e 'Video'
              4f27 0059  ld   $59         ;0330 LDI
              4f28 0000  ld   $00
              4f29 005e  ld   $5e         ;0332 ST
              4f2a 0058  ld   $58         ;0332 'p'
              4f2b 005e  ld   $5e         ;0334 ST
              4f2c 005a  ld   $5a         ;0334 'q'
              4f2d 0021  ld   $21         ;0336 LDW
              4f2e 0058  ld   $58         ;0336 'p'
              4f2f 00ad  ld   $ad         ;0338 PEEK
              4f30 002b  ld   $2b         ;0339 STW
              4f31 0030  ld   $30         ;0339 'i'
              4f32 0021  ld   $21         ;033b LDW
              4f33 005a  ld   $5a         ;033b 'q'
              4f34 00ad  ld   $ad         ;033d PEEK
              4f35 00b8  ld   $b8         ;033e SUBW
              4f36 0030  ld   $30         ;033e 'i'
              4f37 002b  ld   $2b         ;0340 STW
              4f38 0030  ld   $30         ;0340 'i'
              4f39 0021  ld   $21         ;0342 LDW
              4f3a 0058  ld   $58         ;0342 'p'
              4f3b 00ad  ld   $ad         ;0344 PEEK
              4f3c 005e  ld   $5e         ;0345 ST
              4f3d 0058  ld   $58         ;0345 'p'
              4f3e 005e  ld   $5e         ;0347 ST
              4f3f 005a  ld   $5a         ;0347 'q'
              4f40 0059  ld   $59         ;0349 LDI
              4f41 0015  ld   $15
              4f42 00f0  ld   $f0         ;034b POKE
              4f43 0058  ld   $58         ;034b 'p'
              4f44 00f0  ld   $f0         ;034d POKE
              4f45 005a  ld   $5a         ;034d 'q'
              4f46 0093  ld   $93         ;034f INC
              4f47 0058  ld   $58         ;034f 'p'
              4f48 0093  ld   $93         ;0351 INC
              4f49 005a  ld   $5a         ;0351 'q'
              4f4a 0021  ld   $21         ;0353 LDW
              4f4b 0030  ld   $30         ;0353 'i'
              4f4c 00e6  ld   $e6         ;0355 SUBI
              4f4d 0001  ld   $01
              4f4e 002b  ld   $2b         ;0357 STW
              4f4f 0030  ld   $30         ;0357 'i'
              4f50 0035  ld   $35         ;0359 BCC
              4f51 004d  ld   $4d         ;035a GT
              4f52 0047  ld   $47
              4f53 0021  ld   $21         ;035c LDW
              4f54 005c  ld   $5c         ;035c 'Sprite'
              4f55 002b  ld   $2b         ;035e STW
              4f56 005e  ld   $5e         ;035e 's'
              4f57 0059  ld   $59         ;0360 LDI
              4f58 0000  ld   $00
              4f59 005e  ld   $5e         ;0362 ST
              4f5a 0058  ld   $58         ;0362 'p'
              4f5b 0021  ld   $21         ;0364 LDW
              4f5c 0056  ld   $56         ;0364 'Video'
              4f5d 00ad  ld   $ad         ;0366 PEEK
              4f5e 0099  ld   $99         ;0367 ADDW
              4f5f 0060  ld   $60         ;0367 'X'
              4f60 002b  ld   $2b         ;0369 STW
              4f61 0060  ld   $60         ;0369 'X'
              4f62 0021  ld   $21         ;036b LDW
              4f63 005e  ld   $5e         ;036b 's'
              4f64 00ad  ld   $ad         ;036d PEEK
              4f65 0099  ld   $99         ;036e ADDW
              4f66 0060  ld   $60         ;036e 'X'
              4f67 00f0  ld   $f0         ;0370 POKE
              4f68 0058  ld   $58         ;0370 'p'
              4f69 005e  ld   $5e         ;0372 ST
              4f6a 0058  ld   $58         ;0372 'p'
              4f6b 005e  ld   $5e         ;0374 ST
              4f6c 005a  ld   $5a         ;0374 'q'
              4f6d 0093  ld   $93         ;0376 INC
              4f6e 005e  ld   $5e         ;0376 's'
              4f6f 0021  ld   $21         ;0378 LDW
              4f70 0058  ld   $58         ;0378 'p'
              4f71 00ad  ld   $ad         ;037a PEEK
              4f72 008c  ld   $8c         ;037b XORI
              4f73 0015  ld   $15
              4f74 0099  ld   $99         ;037d ADDW
              4f75 0062  ld   $62         ;037d 'Collision'
              4f76 002b  ld   $2b         ;037f STW
              4f77 0062  ld   $62         ;037f 'Collision'
              4f78 0021  ld   $21         ;0381 LDW
              4f79 005e  ld   $5e         ;0381 's'
              4f7a 00ad  ld   $ad         ;0383 PEEK
              4f7b 00f0  ld   $f0         ;0384 POKE
              4f7c 0058  ld   $58         ;0384 'p'
              4f7d 0093  ld   $93         ;0386 INC
              4f7e 0058  ld   $58         ;0386 'p'
              4f7f 00f0  ld   $f0         ;0388 POKE
              4f80 005a  ld   $5a         ;0388 'q'
              4f81 0093  ld   $93         ;038a INC
              4f82 005a  ld   $5a         ;038a 'q'
              4f83 0093  ld   $93         ;038c INC
              4f84 005e  ld   $5e         ;038c 's'
              4f85 0021  ld   $21         ;038e LDW
              4f86 005e  ld   $5e         ;038e 's'
              4f87 00ad  ld   $ad         ;0390 PEEK
              4f88 0035  ld   $35         ;0391 BCC
              4f89 0072  ld   $72         ;0392 NE
              4f8a 0076  ld   $76
              4f8b 0059  ld   $59         ;0394 LDI
              4f8c 0000  ld   $00
              4f8d 005e  ld   $5e         ;0396 ST
              4f8e 005a  ld   $5a         ;0396 'q'
              4f8f 001a  ld   $1a         ;0398 LD
              4f90 0058  ld   $58         ;0398 'p'
              4f91 00f0  ld   $f0         ;039a POKE
              4f92 005a  ld   $5a         ;039a 'q'
              4f93 0021  ld   $21         ;039c LDW
              4f94 0056  ld   $56         ;039c 'Video'
              4f95 00e3  ld   $e3         ;039e ADDI
              4f96 0003  ld   $03
              4f97 002b  ld   $2b         ;03a0 STW
              4f98 0056  ld   $56         ;03a0 'Video'
              4f99 00ff  ld   $ff         ;03a2 RET
              4f9a 002b  ld   $2b         ;03a3 STW
              4f9b 0064  ld   $64         ;03a3 'DrawPixels'
              4f9c 00cd  ld   $cd         ;03a5 DEF
              4f9d 00da  ld   $da
              4f9e 0011  ld   $11         ;03a7 LDWI
              4f9f 00fd  ld   $fd
              4fa0 0001  ld   $01
              4fa1 002b  ld   $2b         ;03aa STW
              4fa2 0058  ld   $58         ;03aa 'p'
              4fa3 0021  ld   $21         ;03ac LDW
              4fa4 0040  ld   $40         ;03ac 'Speed'
              4fa5 0099  ld   $99         ;03ae ADDW
              4fa6 0040  ld   $40         ;03ae 'Speed'
              4fa7 001a  ld   $1a         ;03b0 LD
              4fa8 0019  ld   $19
              4fa9 00f0  ld   $f0         ;03b2 POKE
              4faa 0058  ld   $58         ;03b2 'p'
              4fab 0093  ld   $93         ;03b4 INC
              4fac 0059  ld   $59         ;03b4 'p'+1
              4fad 00f0  ld   $f0         ;03b6 POKE
              4fae 0058  ld   $58         ;03b6 'p'
              4faf 0093  ld   $93         ;03b8 INC
              4fb0 0059  ld   $59         ;03b8 'p'+1
              4fb1 00f0  ld   $f0         ;03ba POKE
              4fb2 0058  ld   $58         ;03ba 'p'
              4fb3 0093  ld   $93         ;03bc INC
              4fb4 0059  ld   $59         ;03bc 'p'+1
              4fb5 00f0  ld   $f0         ;03be POKE
              4fb6 0058  ld   $58         ;03be 'p'
              4fb7 0011  ld   $11         ;03c0 LDWI
              4fb8 00fc  ld   $fc
              4fb9 0001  ld   $01
              4fba 002b  ld   $2b         ;03c3 STW
              4fbb 0058  ld   $58         ;03c3 'p'
              4fbc 0021  ld   $21         ;03c5 LDW
              4fbd 0040  ld   $40         ;03c5 'Speed'
              4fbe 0082  ld   $82         ;03c7 ANDI
              4fbf 007f  ld   $7f
              4fc0 00f0  ld   $f0         ;03c9 POKE
              4fc1 0058  ld   $58         ;03c9 'p'
              4fc2 0093  ld   $93         ;03cb INC
              4fc3 0059  ld   $59         ;03cb 'p'+1
              4fc4 00f0  ld   $f0         ;03cd POKE
              4fc5 0058  ld   $58         ;03cd 'p'
              4fc6 0093  ld   $93         ;03cf INC
              4fc7 0059  ld   $59         ;03cf 'p'+1
              4fc8 00f0  ld   $f0         ;03d1 POKE
              4fc9 0058  ld   $58         ;03d1 'p'
              4fca 0093  ld   $93         ;03d3 INC
              4fcb 0059  ld   $59         ;03d3 'p'+1
              4fcc 00f0  ld   $f0         ;03d5 POKE
              4fcd 0058  ld   $58         ;03d5 'p'
              4fce 0059  ld   $59         ;03d7 LDI
              4fcf 000a  ld   $0a
              4fd0 005e  ld   $5e         ;03d9 ST
              4fd1 002c  ld   $2c
              4fd2 00ff  ld   $ff         ;03db RET
              4fd3 002b  ld   $2b         ;03dc STW
              4fd4 0066  ld   $66         ;03dc 'PlayEngineSound'
              4fd5 0093  ld   $93         ;03de INC
              4fd6 001b  ld   $1b         ;03de '_vLR'+1
              4fd7 00ff  ld   $ff         ;03e0 RET
              4fd8 0004  ld   $04         ;| RAM segment address (high byte first)
              4fd9 0000  ld   $00         ;|
              4fda 00ef  ld   $ef         ;| Length (1..256)
              4fdb 00cd  ld   $cd         ;0400 DEF
              4fdc 003e  ld   $3e
              4fdd 0075  ld   $75         ;0402 PUSH
              4fde 0011  ld   $11         ;0403 LDWI
              4fdf 0080  ld   $80
              4fe0 0020  ld   $20
              4fe1 002b  ld   $2b         ;0406 STW
              4fe2 0038  ld   $38         ;0406 'Pos'
              4fe3 0011  ld   $11         ;0408 LDWI
              4fe4 0003  ld   $03
              4fe5 000b  ld   $0b
              4fe6 002b  ld   $2b         ;040b STW
              4fe7 0022  ld   $22
              4fe8 0059  ld   $59         ;040d LDI
              4fe9 0000  ld   $00
              4fea 002b  ld   $2b         ;040f STW
              4feb 0068  ld   $68         ;040f 'Width'
              4fec 0021  ld   $21         ;0411 LDW
              4fed 0068  ld   $68         ;0411 'Width'
              4fee 00e3  ld   $e3         ;0413 ADDI
              4fef 0001  ld   $01
              4ff0 002b  ld   $2b         ;0415 STW
              4ff1 0068  ld   $68         ;0415 'Width'
              4ff2 0059  ld   $59         ;0417 LDI
              4ff3 003f  ld   $3f
              4ff4 002b  ld   $2b         ;0419 STW
              4ff5 006a  ld   $6a         ;0419 'CurbColor'
              4ff6 0059  ld   $59         ;041b LDI
              4ff7 000c  ld   $0c
              4ff8 002b  ld   $2b         ;041d STW
              4ff9 006c  ld   $6c         ;041d 'GrassColor'
              4ffa 00cf  ld   $cf         ;041f CALL
              4ffb fe00  bra  ac          ;+-----------------------------------+
              4ffc fcfd  bra  $4ffd       ;|                                   |
              4ffd 1418  ld   $18,y       ;| Trampoline for page $4f00 lookups |
              4ffe e006  jmp  y,$06       ;|                                   |
              4fff c218  st   [$18]       ;+-----------------------------------+
              5000 006e  ld   $6e         ;041f 'SetupSegment'
              5001 0093  ld   $93         ;0421 INC
              5002 0039  ld   $39         ;0421 'Pos'+1
              5003 0059  ld   $59         ;0423 LDI
              5004 0003  ld   $03
              5005 002b  ld   $2b         ;0425 STW
              5006 006a  ld   $6a         ;0425 'CurbColor'
              5007 0059  ld   $59         ;0427 LDI
              5008 0008  ld   $08
              5009 002b  ld   $2b         ;0429 STW
              500a 006c  ld   $6c         ;0429 'GrassColor'
              500b 00cf  ld   $cf         ;042b CALL
              500c 006e  ld   $6e         ;042b 'SetupSegment'
              500d 0093  ld   $93         ;042d INC
              500e 0039  ld   $39         ;042d 'Pos'+1
              500f 0021  ld   $21         ;042f LDW
              5010 0038  ld   $38         ;042f 'Pos'
              5011 0035  ld   $35         ;0431 BCC
              5012 0053  ld   $53         ;0432 GE
              5013 000f  ld   $0f
              5014 0011  ld   $11         ;0434 LDWI
              5015 0000  ld   $00
              5016 0074  ld   $74
              5017 00f0  ld   $f0         ;0437 1008
              5018 0018  ld   $18         ;0438 24
              5019 0093  ld   $93         ;0439 INC
              501a 0019  ld   $19
              501b 0035  ld   $35         ;043b BCC
              501c 004d  ld   $4d         ;043c GT
              501d 0035  ld   $35
              501e 0063  ld   $63         ;043e POP
              501f 00ff  ld   $ff         ;043f RET
              5020 002b  ld   $2b         ;0440 STW
              5021 0070  ld   $70         ;0440 'SetupRoad'
              5022 00cd  ld   $cd         ;0442 DEF
              5023 0086  ld   $86
              5024 0021  ld   $21         ;0444 LDW
              5025 0068  ld   $68         ;0444 'Width'
              5026 00e9  ld   $e9         ;0446 LSLW
              5027 005e  ld   $5e         ;0447 ST
              5028 0024  ld   $24
              5029 0021  ld   $21         ;0449 LDW
              502a 0038  ld   $38         ;0449 'Pos'
              502b 00b8  ld   $b8         ;044b SUBW
              502c 0068  ld   $68         ;044b 'Width'
              502d 002b  ld   $2b         ;044d STW
              502e 0058  ld   $58         ;044d 'p'
              502f 002b  ld   $2b         ;044f STW
              5030 0026  ld   $26
              5031 0059  ld   $59         ;0451 LDI
              5032 0015  ld   $15
              5033 005e  ld   $5e         ;0453 ST
              5034 0025  ld   $25
              5035 00b4  ld   $b4         ;0455 SYS
              5036 00f4  ld   $f4
              5037 0059  ld   $59         ;0457 LDI
              5038 0080  ld   $80
              5039 00b8  ld   $b8         ;0459 SUBW
              503a 0068  ld   $68         ;0459 'Width'
              503b 00e9  ld   $e9         ;045b LSLW
              503c 005e  ld   $5e         ;045c ST
              503d 0024  ld   $24
              503e 0021  ld   $21         ;045e LDW
              503f 0038  ld   $38         ;045e 'Pos'
              5040 0099  ld   $99         ;0460 ADDW
              5041 0068  ld   $68         ;0460 'Width'
              5042 002b  ld   $2b         ;0462 STW
              5043 005a  ld   $5a         ;0462 'q'
              5044 002b  ld   $2b         ;0464 STW
              5045 0026  ld   $26
              5046 0021  ld   $21         ;0466 LDW
              5047 006c  ld   $6c         ;0466 'GrassColor'
              5048 005e  ld   $5e         ;0468 ST
              5049 0025  ld   $25
              504a 00b4  ld   $b4         ;046a SYS
              504b 00f4  ld   $f4
              504c 0021  ld   $21         ;046c LDW
              504d 0068  ld   $68         ;046c 'Width'
              504e 00e6  ld   $e6         ;046e SUBI
              504f 0008  ld   $08
              5050 0035  ld   $35         ;0470 BCC
              5051 0056  ld   $56         ;0471 LE
              5052 0085  ld   $85
              5053 002b  ld   $2b         ;0473 STW
              5054 0052  ld   $52         ;0473 'tmp'
              5055 0021  ld   $21         ;0475 LDW
              5056 005a  ld   $5a         ;0475 'q'
              5057 00e6  ld   $e6         ;0477 SUBI
              5058 0001  ld   $01
              5059 002b  ld   $2b         ;0479 STW
              505a 005a  ld   $5a         ;0479 'q'
              505b 0021  ld   $21         ;047b LDW
              505c 006a  ld   $6a         ;047b 'CurbColor'
              505d 00f0  ld   $f0         ;047d POKE
              505e 0058  ld   $58         ;047d 'p'
              505f 00f0  ld   $f0         ;047f POKE
              5060 005a  ld   $5a         ;047f 'q'
              5061 0093  ld   $93         ;0481 INC
              5062 0058  ld   $58         ;0481 'p'
              5063 0021  ld   $21         ;0483 LDW
              5064 0052  ld   $52         ;0483 'tmp'
              5065 0090  ld   $90         ;0485 BRA
              5066 006c  ld   $6c
              5067 00ff  ld   $ff         ;0487 RET
              5068 002b  ld   $2b         ;0488 STW
              5069 006e  ld   $6e         ;0488 'SetupSegment'
              506a 00cd  ld   $cd         ;048a DEF
              506b 00e8  ld   $e8
              506c 0075  ld   $75         ;048c PUSH
              506d 0011  ld   $11         ;048d LDWI
              506e 000f  ld   $0f
              506f 000e  ld   $0e
              5070 002b  ld   $2b         ;0490 STW
              5071 0072  ld   $72         ;0490 'Radix'
              5072 00cf  ld   $cf         ;0492 CALL
              5073 0074  ld   $74         ;0492 'ExtractDigit'
              5074 0021  ld   $21         ;0494 LDW
              5075 0076  ld   $76         ;0494 'Prev3'
              5076 00fc  ld   $fc         ;0496 XORW
              5077 0078  ld   $78         ;0496 'Char'
              5078 0035  ld   $35         ;0498 BCC
              5079 003f  ld   $3f         ;0499 EQ
              507a 00a1  ld   $a1
              507b 0021  ld   $21         ;049b LDW
              507c 0078  ld   $78         ;049b 'Char'
              507d 002b  ld   $2b         ;049d STW
              507e 0076  ld   $76         ;049d 'Prev3'
              507f 00cf  ld   $cf         ;049f CALL
              5080 003a  ld   $3a         ;049f 'QPrintChar'
              5081 0090  ld   $90         ;04a1 BRA
              5082 00a3  ld   $a3
              5083 0021  ld   $21         ;04a3 LDW
              5084 0038  ld   $38         ;04a3 'Pos'
              5085 00e3  ld   $e3         ;04a5 ADDI
              5086 000c  ld   $0c
              5087 002b  ld   $2b         ;04a7 STW
              5088 0038  ld   $38         ;04a7 'Pos'
              5089 0011  ld   $11         ;04a9 LDWI
              508a 0058  ld   $58
              508b 0002  ld   $02
              508c 002b  ld   $2b         ;04ac STW
              508d 0072  ld   $72         ;04ac 'Radix'
              508e 00cf  ld   $cf         ;04ae CALL
              508f 0074  ld   $74         ;04ae 'ExtractDigit'
              5090 0021  ld   $21         ;04b0 LDW
              5091 007a  ld   $7a         ;04b0 'Prev2'
              5092 00fc  ld   $fc         ;04b2 XORW
              5093 0078  ld   $78         ;04b2 'Char'
              5094 0035  ld   $35         ;04b4 BCC
              5095 003f  ld   $3f         ;04b5 EQ
              5096 00bd  ld   $bd
              5097 0021  ld   $21         ;04b7 LDW
              5098 0078  ld   $78         ;04b7 'Char'
              5099 002b  ld   $2b         ;04b9 STW
              509a 007a  ld   $7a         ;04b9 'Prev2'
              509b 00cf  ld   $cf         ;04bb CALL
              509c 003a  ld   $3a         ;04bb 'QPrintChar'
              509d 0090  ld   $90         ;04bd BRA
              509e 00bf  ld   $bf
              509f 0021  ld   $21         ;04bf LDW
              50a0 0038  ld   $38         ;04bf 'Pos'
              50a1 00e3  ld   $e3         ;04c1 ADDI
              50a2 0006  ld   $06
              50a3 002b  ld   $2b         ;04c3 STW
              50a4 0038  ld   $38         ;04c3 'Pos'
              50a5 0059  ld   $59         ;04c5 LDI
              50a6 003c  ld   $3c
              50a7 002b  ld   $2b         ;04c7 STW
              50a8 0072  ld   $72         ;04c7 'Radix'
              50a9 00cf  ld   $cf         ;04c9 CALL
              50aa 0074  ld   $74         ;04c9 'ExtractDigit'
              50ab 0021  ld   $21         ;04cb LDW
              50ac 007c  ld   $7c         ;04cb 'Prev1'
              50ad 00fc  ld   $fc         ;04cd XORW
              50ae 0078  ld   $78         ;04cd 'Char'
              50af 0035  ld   $35         ;04cf BCC
              50b0 003f  ld   $3f         ;04d0 EQ
              50b1 00d8  ld   $d8
              50b2 0021  ld   $21         ;04d2 LDW
              50b3 0078  ld   $78         ;04d2 'Char'
              50b4 002b  ld   $2b         ;04d4 STW
              50b5 007c  ld   $7c         ;04d4 'Prev1'
              50b6 00cf  ld   $cf         ;04d6 CALL
              50b7 003a  ld   $3a         ;04d6 'QPrintChar'
              50b8 0090  ld   $90         ;04d8 BRA
              50b9 00da  ld   $da
              50ba 0021  ld   $21         ;04da LDW
              50bb 0038  ld   $38         ;04da 'Pos'
              50bc 00e3  ld   $e3         ;04dc ADDI
              50bd 000c  ld   $0c
              50be 002b  ld   $2b         ;04de STW
              50bf 0038  ld   $38         ;04de 'Pos'
              50c0 0059  ld   $59         ;04e0 LDI
              50c1 0006  ld   $06
              50c2 002b  ld   $2b         ;04e2 STW
              50c3 0072  ld   $72         ;04e2 'Radix'
              50c4 00cf  ld   $cf         ;04e4 CALL
              50c5 0074  ld   $74         ;04e4 'ExtractDigit'
              50c6 00cf  ld   $cf         ;04e6 CALL
              50c7 003a  ld   $3a         ;04e6 'QPrintChar'
              50c8 0063  ld   $63         ;04e8 POP
              50c9 00ff  ld   $ff         ;04e9 RET
              50ca 002b  ld   $2b         ;04ea STW
              50cb 007e  ld   $7e         ;04ea 'PrintTime'
              50cc 0093  ld   $93         ;04ec INC
              50cd 001b  ld   $1b         ;04ec '_vLR'+1
              50ce 00ff  ld   $ff         ;04ee RET
              50cf 0005  ld   $05         ;| RAM segment address (high byte first)
              50d0 0000  ld   $00         ;|
              50d1 00e6  ld   $e6         ;| Length (1..256)
              50d2 00cd  ld   $cd         ;0500 DEF
              50d3 0017  ld   $17
              50d4 0059  ld   $59         ;0502 LDI
              50d5 0030  ld   $30
              50d6 002b  ld   $2b         ;0504 STW
              50d7 0078  ld   $78         ;0504 'Char'
              50d8 0021  ld   $21         ;0506 LDW
              50d9 0081  ld   $81         ;0506 'Value'
              50da 00b8  ld   $b8         ;0508 SUBW
              50db 0072  ld   $72         ;0508 'Radix'
              50dc 0035  ld   $35         ;050a BCC
              50dd 0050  ld   $50         ;050b LT
              50de 0014  ld   $14
              50df 002b  ld   $2b         ;050d STW
              50e0 0081  ld   $81         ;050d 'Value'
              50e1 0093  ld   $93         ;050f INC
              50e2 0078  ld   $78         ;050f 'Char'
              50e3 00b8  ld   $b8         ;0511 SUBW
              50e4 0072  ld   $72         ;0511 'Radix'
              50e5 0035  ld   $35         ;0513 BCC
              50e6 0053  ld   $53         ;0514 GE
              50e7 000b  ld   $0b
              50e8 0021  ld   $21         ;0516 LDW
              50e9 0078  ld   $78         ;0516 'Char'
              50ea 00ff  ld   $ff         ;0518 RET
              50eb 002b  ld   $2b         ;0519 STW
              50ec 0074  ld   $74         ;0519 'ExtractDigit'
              50ed 00cd  ld   $cd         ;051b DEF
              50ee 0032  ld   $32
              50ef 0075  ld   $75         ;051d PUSH
              50f0 002b  ld   $2b         ;051e STW
              50f1 0083  ld   $83         ;051e 'Text'
              50f2 0021  ld   $21         ;0520 LDW
              50f3 0083  ld   $83         ;0520 'Text'
              50f4 00ad  ld   $ad         ;0522 PEEK
              50f5 002b  ld   $2b         ;0523 STW
              50f6 0078  ld   $78         ;0523 'Char'
              50f7 0035  ld   $35         ;0525 BCC
              50f8 003f  ld   $3f         ;0526 EQ
              50f9 0030  ld   $30
              50fa 0093  ld   $93         ;0528 INC
              50fb fe00  bra  ac          ;+-----------------------------------+
              50fc fcfd  bra  $50fd       ;|                                   |
              50fd 1418  ld   $18,y       ;| Trampoline for page $5000 lookups |
              50fe e006  jmp  y,$06       ;|                                   |
              50ff c218  st   [$18]       ;+-----------------------------------+
              5100 0083  ld   $83         ;0528 'Text'
              5101 00cf  ld   $cf         ;052a CALL
              5102 003a  ld   $3a         ;052a 'QPrintChar'
              5103 00e3  ld   $e3         ;052c ADDI
              5104 0006  ld   $06
              5105 002b  ld   $2b         ;052e STW
              5106 0038  ld   $38         ;052e 'Pos'
              5107 0090  ld   $90         ;0530 BRA
              5108 001e  ld   $1e
              5109 0063  ld   $63         ;0532 POP
              510a 00ff  ld   $ff         ;0533 RET
              510b 002b  ld   $2b         ;0534 STW
              510c 0085  ld   $85         ;0534 'PrintText'
              510d 00cd  ld   $cd         ;0536 DEF
              510e 00df  ld   $df
              510f 0011  ld   $11         ;0538 LDWI
              5110 00d0  ld   $d0
              5111 0074  ld   $74
              5112 002b  ld   $2b         ;053b STW
              5113 0058  ld   $58         ;053b 'p'
              5114 0059  ld   $59         ;053d LDI
              5115 0000  ld   $00
              5116 002b  ld   $2b         ;053f STW
              5117 0060  ld   $60         ;053f 'X'
              5118 0021  ld   $21         ;0541 LDW
              5119 0087  ld   $87         ;0541 'DX0'
              511a 002b  ld   $2b         ;0543 STW
              511b 0089  ld   $89         ;0543 'DX'
              511c 0021  ld   $21         ;0545 LDW
              511d 008b  ld   $8b         ;0545 'NextTurn'
              511e 00b8  ld   $b8         ;0547 SUBW
              511f 008d  ld   $8d         ;0547 'Distance'
              5120 002b  ld   $2b         ;0549 STW
              5121 0052  ld   $52         ;0549 'tmp'
              5122 0099  ld   $99         ;054b ADDW
              5123 0052  ld   $52         ;054b 'tmp'
              5124 002b  ld   $2b         ;054d STW
              5125 0052  ld   $52         ;054d 'tmp'
              5126 0011  ld   $11         ;054f LDWI
              5127 0000  ld   $00
              5128 000a  ld   $0a
              5129 0099  ld   $99         ;0552 ADDW
              512a 0052  ld   $52         ;0552 'tmp'
              512b 007f  ld   $7f         ;0554 LUP
              512c 0035  ld   $35
              512d 002b  ld   $2b         ;0556 STW
              512e 0052  ld   $52         ;0556 'tmp'
              512f 0059  ld   $59         ;0558 LDI
              5130 00c5  ld   $c5
              5131 0099  ld   $99         ;055a ADDW
              5132 0052  ld   $52         ;055a 'tmp'
              5133 002b  ld   $2b         ;055c STW
              5134 0030  ld   $30         ;055c 'i'
              5135 001a  ld   $1a         ;055e LD
              5136 0061  ld   $61         ;055e 'X'+1
              5137 00f0  ld   $f0         ;0560 POKE
              5138 0058  ld   $58         ;0560 'p'
              5139 0093  ld   $93         ;0562 INC
              513a 0058  ld   $58         ;0562 'p'
              513b 0021  ld   $21         ;0564 LDW
              513c 0089  ld   $89         ;0564 'DX'
              513d 0099  ld   $99         ;0566 ADDW
              513e 008f  ld   $8f         ;0566 'DDX'
              513f 002b  ld   $2b         ;0568 STW
              5140 0089  ld   $89         ;0568 'DX'
              5141 0099  ld   $99         ;056a ADDW
              5142 0060  ld   $60         ;056a 'X'
              5143 002b  ld   $2b         ;056c STW
              5144 0060  ld   $60         ;056c 'X'
              5145 0093  ld   $93         ;056e INC
              5146 0030  ld   $30         ;056e 'i'
              5147 0021  ld   $21         ;0570 LDW
              5148 0030  ld   $30         ;0570 'i'
              5149 0035  ld   $35         ;0572 BCC
              514a 0072  ld   $72         ;0573 NE
              514b 005c  ld   $5c
              514c 001a  ld   $1a         ;0575 LD
              514d 0061  ld   $61         ;0575 'X'+1
              514e 00f0  ld   $f0         ;0577 POKE
              514f 0058  ld   $58         ;0577 'p'
              5150 0093  ld   $93         ;0579 INC
              5151 0058  ld   $58         ;0579 'p'
              5152 0021  ld   $21         ;057b LDW
              5153 0089  ld   $89         ;057b 'DX'
              5154 0099  ld   $99         ;057d ADDW
              5155 0091  ld   $91         ;057d 'NextDDX'
              5156 002b  ld   $2b         ;057f STW
              5157 0089  ld   $89         ;057f 'DX'
              5158 0099  ld   $99         ;0581 ADDW
              5159 0060  ld   $60         ;0581 'X'
              515a 002b  ld   $2b         ;0583 STW
              515b 0060  ld   $60         ;0583 'X'
              515c 001a  ld   $1a         ;0585 LD
              515d 0058  ld   $58         ;0585 'p'
              515e 0035  ld   $35         ;0587 BCC
              515f 0072  ld   $72         ;0588 NE
              5160 0073  ld   $73
              5161 0011  ld   $11         ;058a LDWI
              5162 00ed  ld   $ed
              5163 0001  ld   $01
              5164 002b  ld   $2b         ;058d STW
              5165 0024  ld   $24
              5166 0011  ld   $11         ;058f LDWI
              5167 00d1  ld   $d1
              5168 0074  ld   $74
              5169 002b  ld   $2b         ;0592 STW
              516a 0026  ld   $26
              516b 00e6  ld   $e6         ;0594 SUBI
              516c 0001  ld   $01
              516d 00ad  ld   $ad         ;0596 PEEK
              516e 002b  ld   $2b         ;0597 STW
              516f 0028  ld   $28
              5170 001a  ld   $1a         ;0599 LD
              5171 0047  ld   $47         ;0599 'HorizonX'+1
              5172 002b  ld   $2b         ;059b STW
              5173 0052  ld   $52         ;059b 'tmp'
              5174 0011  ld   $11         ;059d LDWI
              5175 00d5  ld   $d5
              5176 0074  ld   $74
              5177 00ad  ld   $ad         ;05a0 PEEK
              5178 00e3  ld   $e3         ;05a1 ADDI
              5179 0030  ld   $30
              517a 00b8  ld   $b8         ;05a3 SUBW
              517b 0052  ld   $52         ;05a3 'tmp'
              517c 002b  ld   $2b         ;05a5 STW
              517d 0052  ld   $52         ;05a5 'tmp'
              517e 0011  ld   $11         ;05a7 LDWI
              517f 00d4  ld   $d4
              5180 0074  ld   $74
              5181 00ad  ld   $ad         ;05aa PEEK
              5182 002b  ld   $2b         ;05ab STW
              5183 0087  ld   $87         ;05ab 'DX0'
              5184 0011  ld   $11         ;05ad LDWI
              5185 00ec  ld   $ec
              5186 0074  ld   $74
              5187 00ad  ld   $ad         ;05b0 PEEK
              5188 00b8  ld   $b8         ;05b1 SUBW
              5189 0087  ld   $87         ;05b1 'DX0'
              518a 0082  ld   $82         ;05b3 ANDI
              518b 00ff  ld   $ff
              518c 008c  ld   $8c         ;05b5 XORI
              518d 0080  ld   $80
              518e 00e6  ld   $e6         ;05b7 SUBI
              518f 0080  ld   $80
              5190 002b  ld   $2b         ;05b9 STW
              5191 0087  ld   $87         ;05b9 'DX0'
              5192 0011  ld   $11         ;05bb LDWI
              5193 0011  ld   $11
              5194 0001  ld   $01
              5195 002b  ld   $2b         ;05be STW
              5196 005e  ld   $5e         ;05be 's'
              5197 001a  ld   $1a         ;05c0 LD
              5198 0009  ld   $09
              5199 0082  ld   $82         ;05c2 ANDI
              519a 0001  ld   $01
              519b 0035  ld   $35         ;05c4 BCC
              519c 003f  ld   $3f         ;05c5 EQ
              519d 00be  ld   $be
              519e 001a  ld   $1a         ;05c7 LD
              519f 0047  ld   $47         ;05c7 'HorizonX'+1
              51a0 00f0  ld   $f0         ;05c9 POKE
              51a1 005e  ld   $5e         ;05c9 's'
              51a2 0011  ld   $11         ;05cb LDWI
              51a3 0067  ld   $67
              51a4 0041  ld   $41
              51a5 002b  ld   $2b         ;05ce STW
              51a6 0022  ld   $22
              51a7 00b4  ld   $b4         ;05d0 SYS
              51a8 00fb  ld   $fb
              51a9 0021  ld   $21         ;05d2 LDW
              51aa 0024  ld   $24
              51ab 002b  ld   $2b         ;05d4 STW
              51ac 005e  ld   $5e         ;05d4 's'
              51ad 0021  ld   $21         ;05d6 LDW
              51ae 0028  ld   $28
              51af 002b  ld   $2b         ;05d8 STW
              51b0 0060  ld   $60         ;05d8 'X'
              51b1 0021  ld   $21         ;05da LDW
              51b2 0052  ld   $52         ;05da 'tmp'
              51b3 00b8  ld   $b8         ;05dc SUBW
              51b4 0060  ld   $60         ;05dc 'X'
              51b5 00f0  ld   $f0         ;05de POKE
              51b6 005e  ld   $5e         ;05de 's'
              51b7 00ff  ld   $ff         ;05e0 RET
              51b8 002b  ld   $2b         ;05e1 STW
              51b9 0093  ld   $93         ;05e1 'DrawRoad'
              51ba 0093  ld   $93         ;05e3 INC
              51bb 001b  ld   $1b         ;05e3 '_vLR'+1
              51bc 00ff  ld   $ff         ;05e5 RET
              51bd 0006  ld   $06         ;| RAM segment address (high byte first)
              51be 0000  ld   $00         ;|
              51bf 00df  ld   $df         ;| Length (1..256)
              51c0 00cd  ld   $cd         ;0600 DEF
              51c1 00a7  ld   $a7
              51c2 0075  ld   $75         ;0602 PUSH
              51c3 0059  ld   $59         ;0603 LDI
              51c4 0000  ld   $00
              51c5 002b  ld   $2b         ;0605 STW
              51c6 0062  ld   $62         ;0605 'Collision'
              51c7 002b  ld   $2b         ;0607 STW
              51c8 0076  ld   $76         ;0607 'Prev3'
              51c9 002b  ld   $2b         ;0609 STW
              51ca 007a  ld   $7a         ;0609 'Prev2'
              51cb 002b  ld   $2b         ;060b STW
              51cc 007c  ld   $7c         ;060b 'Prev1'
              51cd 00cf  ld   $cf         ;060d CALL
              51ce 0095  ld   $95         ;060d 'AdvanceCar'
              51cf 0021  ld   $21         ;060f LDW
              51d0 008d  ld   $8d         ;060f 'Distance'
              51d1 0035  ld   $35         ;0611 BCC
              51d2 0053  ld   $53         ;0612 GE
              51d3 002e  ld   $2e
              51d4 0021  ld   $21         ;0614 LDW
              51d5 003e  ld   $3e         ;0614 'Time'
              51d6 00b8  ld   $b8         ;0616 SUBW
              51d7 0097  ld   $97         ;0616 'BestTime'
              51d8 0035  ld   $35         ;0618 BCC
              51d9 0053  ld   $53         ;0619 GE
              51da 001d  ld   $1d
              51db 0021  ld   $21         ;061b LDW
              51dc 003e  ld   $3e         ;061b 'Time'
              51dd 002b  ld   $2b         ;061d STW
              51de 0097  ld   $97         ;061d 'BestTime'
              51df 0059  ld   $59         ;061f LDI
              51e0 000f  ld   $0f
              51e1 00cf  ld   $cf         ;0621 CALL
              51e2 0099  ld   $99         ;0621 'PrintBestTime'
              51e3 0059  ld   $59         ;0623 LDI
              51e4 0000  ld   $00
              51e5 002b  ld   $2b         ;0625 STW
              51e6 003e  ld   $3e         ;0625 'Time'
              51e7 002b  ld   $2b         ;0627 STW
              51e8 009b  ld   $9b         ;0627 'Random'
              51e9 0011  ld   $11         ;0629 LDWI
              51ea 0000  ld   $00
              51eb 0074  ld   $74
              51ec 002b  ld   $2b         ;062c STW
              51ed 008d  ld   $8d         ;062c 'Distance'
              51ee 002b  ld   $2b         ;062e STW
              51ef 008b  ld   $8b         ;062e 'NextTurn'
              51f0 00b8  ld   $b8         ;0630 SUBW
              51f1 008b  ld   $8b         ;0630 'NextTurn'
              51f2 0035  ld   $35         ;0632 BCC
              51f3 0056  ld   $56         ;0633 LE
              51f4 0073  ld   $73
              51f5 0021  ld   $21         ;0635 LDW
              51f6 009b  ld   $9b         ;0635 'Random'
              51f7 0099  ld   $99         ;0637 ADDW
              51f8 008b  ld   $8b         ;0637 'NextTurn'
              51f9 008c  ld   $8c         ;0639 XORI
              51fa 006d  ld   $6d
              51fb fe00  bra  ac          ;+-----------------------------------+
              51fc fcfd  bra  $51fd       ;|                                   |
              51fd 1418  ld   $18,y       ;| Trampoline for page $5100 lookups |
              51fe e006  jmp  y,$06       ;|                                   |
              51ff c218  st   [$18]       ;+-----------------------------------+
              5200 002b  ld   $2b         ;063b STW
              5201 009b  ld   $9b         ;063b 'Random'
              5202 0082  ld   $82         ;063d ANDI
              5203 001f  ld   $1f
              5204 00e3  ld   $e3         ;063f ADDI
              5205 0028  ld   $28
              5206 0099  ld   $99         ;0641 ADDW
              5207 008b  ld   $8b         ;0641 'NextTurn'
              5208 002b  ld   $2b         ;0643 STW
              5209 008b  ld   $8b         ;0643 'NextTurn'
              520a 001a  ld   $1a         ;0645 LD
              520b 009c  ld   $9c         ;0645 'Random'+1
              520c 0082  ld   $82         ;0647 ANDI
              520d 0003  ld   $03
              520e 00e3  ld   $e3         ;0649 ADDI
              520f 0001  ld   $01
              5210 002b  ld   $2b         ;064b STW
              5211 0030  ld   $30         ;064b 'i'
              5212 0099  ld   $99         ;064d ADDW
              5213 0030  ld   $30         ;064d 'i'
              5214 0099  ld   $99         ;064f ADDW
              5215 0030  ld   $30         ;064f 'i'
              5216 00e9  ld   $e9         ;0651 LSLW
              5217 002b  ld   $2b         ;0652 STW
              5218 0030  ld   $30         ;0652 'i'
              5219 0021  ld   $21         ;0654 LDW
              521a 0091  ld   $91         ;0654 'NextDDX'
              521b 002b  ld   $2b         ;0656 STW
              521c 008f  ld   $8f         ;0656 'DDX'
              521d 0035  ld   $35         ;0658 BCC
              521e 0053  ld   $53         ;0659 GE
              521f 005d  ld   $5d
              5220 0099  ld   $99         ;065b ADDW
              5221 0030  ld   $30         ;065b 'i'
              5222 0090  ld   $90         ;065d BRA
              5223 0071  ld   $71
              5224 0035  ld   $35         ;065f BCC
              5225 0056  ld   $56         ;0660 LE
              5226 0064  ld   $64
              5227 00b8  ld   $b8         ;0662 SUBW
              5228 0030  ld   $30         ;0662 'i'
              5229 0090  ld   $90         ;0664 BRA
              522a 0071  ld   $71
              522b 0021  ld   $21         ;0666 LDW
              522c 009b  ld   $9b         ;0666 'Random'
              522d 0035  ld   $35         ;0668 BCC
              522e 0050  ld   $50         ;0669 LT
              522f 006d  ld   $6d
              5230 0021  ld   $21         ;066b LDW
              5231 0030  ld   $30         ;066b 'i'
              5232 0090  ld   $90         ;066d BRA
              5233 0071  ld   $71
              5234 0059  ld   $59         ;066f LDI
              5235 0000  ld   $00
              5236 00b8  ld   $b8         ;0671 SUBW
              5237 0030  ld   $30         ;0671 'i'
              5238 002b  ld   $2b         ;0673 STW
              5239 0091  ld   $91         ;0673 'NextDDX'
              523a 00cf  ld   $cf         ;0675 CALL
              523b 0093  ld   $93         ;0675 'DrawRoad'
              523c 0021  ld   $21         ;0677 LDW
              523d 008f  ld   $8f         ;0677 'DDX'
              523e 00e9  ld   $e9         ;0679 LSLW
              523f 00e9  ld   $e9         ;067a LSLW
              5240 00e9  ld   $e9         ;067b LSLW
              5241 002b  ld   $2b         ;067c STW
              5242 0048  ld   $48         ;067c 'HorizonDX'
              5243 00e9  ld   $e9         ;067e LSLW
              5244 002b  ld   $2b         ;067f STW
              5245 0044  ld   $44         ;067f 'DriftX'
              5246 00cf  ld   $cf         ;0681 CALL
              5247 004c  ld   $4c         ;0681 'ControlRaceCar'
              5248 00cf  ld   $cf         ;0683 CALL
              5249 0066  ld   $66         ;0683 'PlayEngineSound'
              524a 00cf  ld   $cf         ;0685 CALL
              524b 009d  ld   $9d         ;0685 'DrawRaceCar'
              524c 00cf  ld   $cf         ;0687 CALL
              524d 009f  ld   $9f         ;0687 'DrawGrass'
              524e 0011  ld   $11         ;0689 LDWI
              524f 00b5  ld   $b5
              5250 00b9  ld   $b9
              5251 0099  ld   $99         ;068c ADDW
              5252 003e  ld   $3e         ;068c 'Time'
              5253 0035  ld   $35         ;068e BCC
              5254 0056  ld   $56         ;068f LE
              5255 0091  ld   $91
              5256 002b  ld   $2b         ;0691 STW
              5257 0062  ld   $62         ;0691 'Collision'
              5258 0021  ld   $21         ;0693 LDW
              5259 003e  ld   $3e         ;0693 'Time'
              525a 002b  ld   $2b         ;0695 STW
              525b 0081  ld   $81         ;0695 'Value'
              525c 0011  ld   $11         ;0697 LDWI
              525d 0001  ld   $01
              525e 0008  ld   $08
              525f 002b  ld   $2b         ;069a STW
              5260 0038  ld   $38         ;069a 'Pos'
              5261 0059  ld   $59         ;069c LDI
              5262 003f  ld   $3f
              5263 002b  ld   $2b         ;069e STW
              5264 0036  ld   $36         ;069e 'Color'
              5265 00cf  ld   $cf         ;06a0 CALL
              5266 007e  ld   $7e         ;06a0 'PrintTime'
              5267 0021  ld   $21         ;06a2 LDW
              5268 0062  ld   $62         ;06a2 'Collision'
              5269 0035  ld   $35         ;06a4 BCC
              526a 003f  ld   $3f         ;06a5 EQ
              526b 000b  ld   $0b
              526c 0063  ld   $63         ;06a7 POP
              526d 00ff  ld   $ff         ;06a8 RET
              526e 002b  ld   $2b         ;06a9 STW
              526f 00a1  ld   $a1         ;06a9 'PlayGame'
              5270 00cd  ld   $cd         ;06ab DEF
              5271 00b7  ld   $b7
              5272 0002  ld   $02         ;06ad 2
              5273 0040  ld   $40         ;06ae 64
              5274 0040  ld   $40         ;06af 64
              5275 0040  ld   $40         ;06b0 64
              5276 0028  ld   $28         ;06b1 40
              5277 003c  ld   $3c         ;06b2 60
              5278 003c  ld   $3c         ;06b3 60
              5279 0028  ld   $28         ;06b4 40
              527a 0040  ld   $40         ;06b5 64
              527b 0040  ld   $40         ;06b6 64
              527c 0040  ld   $40         ;06b7 64
              527d 0000  ld   $00         ;06b8 0
              527e 002b  ld   $2b         ;06b9 STW
              527f 00a3  ld   $a3         ;06b9 'Car0'
              5280 00cd  ld   $cd         ;06bb DEF
              5281 00c5  ld   $c5
              5282 0003  ld   $03         ;06bd 3
              5283 0028  ld   $28         ;06be 40
              5284 0014  ld   $14         ;06bf 20
              5285 0014  ld   $14         ;06c0 20
              5286 003f  ld   $3f         ;06c1 63
              5287 003f  ld   $3f         ;06c2 63
              5288 0014  ld   $14         ;06c3 20
              5289 0014  ld   $14         ;06c4 20
              528a 0028  ld   $28         ;06c5 40
              528b 0000  ld   $00         ;06c6 0
              528c 002b  ld   $2b         ;06c7 STW
              528d 00a5  ld   $a5         ;06c7 'Car1'
              528e 00cd  ld   $cd         ;06c9 DEF
              528f 00d5  ld   $d5
              5290 0002  ld   $02         ;06cb 2
              5291 0028  ld   $28         ;06cc 40
              5292 0014  ld   $14         ;06cd 20
              5293 0014  ld   $14         ;06ce 20
              5294 0014  ld   $14         ;06cf 20
              5295 0028  ld   $28         ;06d0 40
              5296 0028  ld   $28         ;06d1 40
              5297 0014  ld   $14         ;06d2 20
              5298 0014  ld   $14         ;06d3 20
              5299 0014  ld   $14         ;06d4 20
              529a 0028  ld   $28         ;06d5 40
              529b 0000  ld   $00         ;06d6 0
              529c 002b  ld   $2b         ;06d7 STW
              529d 00a7  ld   $a7         ;06d7 'Car2'
              529e 0011  ld   $11         ;06d9 LDWI
              529f 00a0  ld   $a0
              52a0 0008  ld   $08
              52a1 002b  ld   $2b         ;06dc STW
              52a2 001a  ld   $1a
              52a3 00ff  ld   $ff         ;06de RET
              52a4 0008  ld   $08         ;| RAM segment address (high byte first)
              52a5 00a0  ld   $a0         ;|
              52a6 0052  ld   $52         ;| Length (1..256)
              52a7 00cd  ld   $cd         ;08a0 DEF
              52a8 00b0  ld   $b0
              52a9 0000  ld   $00         ;08a2 0
              52aa 0040  ld   $40         ;08a3 64
              52ab 0040  ld   $40         ;08a4 64
              52ac 0040  ld   $40         ;08a5 64
              52ad 0040  ld   $40         ;08a6 64
              52ae 0028  ld   $28         ;08a7 40
              52af 0014  ld   $14         ;08a8 20
              52b0 0014  ld   $14         ;08a9 20
              52b1 0014  ld   $14         ;08aa 20
              52b2 0014  ld   $14         ;08ab 20
              52b3 0028  ld   $28         ;08ac 40
              52b4 0040  ld   $40         ;08ad 64
              52b5 0040  ld   $40         ;08ae 64
              52b6 0040  ld   $40         ;08af 64
              52b7 0040  ld   $40         ;08b0 64
              52b8 0000  ld   $00         ;08b1 0
              52b9 002b  ld   $2b         ;08b2 STW
              52ba 00a9  ld   $a9         ;08b2 'Car3'
              52bb 00cd  ld   $cd         ;08b4 DEF
              52bc 00c4  ld   $c4
              52bd 0000  ld   $00         ;08b6 0
              52be 0040  ld   $40         ;08b7 64
              52bf 0040  ld   $40         ;08b8 64
              52c0 0040  ld   $40         ;08b9 64
              52c1 0040  ld   $40         ;08ba 64
              52c2 0015  ld   $15         ;08bb 21
              52c3 0015  ld   $15         ;08bc 21
              52c4 0015  ld   $15         ;08bd 21
              52c5 0015  ld   $15         ;08be 21
              52c6 0015  ld   $15         ;08bf 21
              52c7 0015  ld   $15         ;08c0 21
              52c8 0040  ld   $40         ;08c1 64
              52c9 0040  ld   $40         ;08c2 64
              52ca 0040  ld   $40         ;08c3 64
              52cb 0040  ld   $40         ;08c4 64
              52cc 0000  ld   $00         ;08c5 0
              52cd 002b  ld   $2b         ;08c6 STW
              52ce 00ab  ld   $ab         ;08c6 'Car4'
              52cf 00cd  ld   $cd         ;08c8 DEF
              52d0 00eb  ld   $eb
              52d1 0011  ld   $11         ;08ca LDWI
              52d2 002e  ld   $2e
              52d3 0001  ld   $01
              52d4 002b  ld   $2b         ;08cd STW
              52d5 0024  ld   $24
              52d6 0059  ld   $59         ;08cf LDI
              52d7 0020  ld   $20
              52d8 005e  ld   $5e         ;08d1 ST
              52d9 0026  ld   $26
              52da 0011  ld   $11         ;08d3 LDWI
              52db 0000  ld   $00
              52dc 000a  ld   $0a
              52dd 002b  ld   $2b         ;08d6 STW
              52de 005a  ld   $5a         ;08d6 'q'
              52df 0011  ld   $11         ;08d8 LDWI
              52e0 0080  ld   $80
              52e1 0041  ld   $41
              52e2 002b  ld   $2b         ;08db STW
              52e3 0022  ld   $22
              52e4 0021  ld   $21         ;08dd LDW
              52e5 005a  ld   $5a         ;08dd 'q'
              52e6 007f  ld   $7f         ;08df LUP
              52e7 0008  ld   $08
              52e8 0099  ld   $99         ;08e1 ADDW
              52e9 008d  ld   $8d         ;08e1 'Distance'
              52ea 005e  ld   $5e         ;08e3 ST
              52eb 0027  ld   $27
              52ec 00b4  ld   $b4         ;08e5 SYS
              52ed 00fb  ld   $fb
              52ee 0093  ld   $93         ;08e7 INC
              52ef 005a  ld   $5a         ;08e7 'q'
              52f0 0035  ld   $35         ;08e9 BCC
              52f1 0072  ld   $72         ;08ea NE
              52f2 00db  ld   $db
              52f3 00ff  ld   $ff         ;08ec RET
              52f4 002b  ld   $2b         ;08ed STW
              52f5 009f  ld   $9f         ;08ed 'DrawGrass'
              52f6 0093  ld   $93         ;08ef INC
              52f7 001b  ld   $1b         ;08ef '_vLR'+1
              52f8 00ff  ld   $ff         ;08f1 RET
              52f9 0009  ld   $09         ;| RAM segment address (high byte first)
              52fa 00a0  ld   $a0         ;|
              52fb fe00  bra  ac          ;+-----------------------------------+
              52fc fcfd  bra  $52fd       ;|                                   |
              52fd 1418  ld   $18,y       ;| Trampoline for page $5200 lookups |
              52fe e006  jmp  y,$06       ;|                                   |
              52ff c218  st   [$18]       ;+-----------------------------------+
              5300 0038  ld   $38         ;| Length (1..256)
              5301 00cd  ld   $cd         ;09a0 DEF
              5302 00b8  ld   $b8
              5303 0011  ld   $11         ;09a2 LDWI
              5304 00f7  ld   $f7
              5305 000b  ld   $0b
              5306 002b  ld   $2b         ;09a5 STW
              5307 00ad  ld   $ad         ;09a5 'Indicator'
              5308 0011  ld   $11         ;09a7 LDWI
              5309 006b  ld   $6b
              530a 000c  ld   $0c
              530b 002b  ld   $2b         ;09aa STW
              530c 00af  ld   $af         ;09aa 'Tracking'
              530d 0059  ld   $59         ;09ac LDI
              530e 0000  ld   $00
              530f 00f0  ld   $f0         ;09ae POKE
              5310 00af  ld   $af         ;09ae 'Tracking'
              5311 0093  ld   $93         ;09b0 INC
              5312 00af  ld   $af         ;09b0 'Tracking'
              5313 001a  ld   $1a         ;09b2 LD
              5314 00af  ld   $af         ;09b2 'Tracking'
              5315 008c  ld   $8c         ;09b4 XORI
              5316 0076  ld   $76
              5317 0035  ld   $35         ;09b6 BCC
              5318 0072  ld   $72         ;09b7 NE
              5319 00aa  ld   $aa
              531a 00ff  ld   $ff         ;09b9 RET
              531b 002b  ld   $2b         ;09ba STW
              531c 00b1  ld   $b1         ;09ba 'SetupIndicator'
              531d 00cd  ld   $cd         ;09bc DEF
              531e 00d1  ld   $d1
              531f 0059  ld   $59         ;09be LDI
              5320 0000  ld   $00
              5321 00f0  ld   $f0         ;09c0 POKE
              5322 00af  ld   $af         ;09c0 'Tracking'
              5323 001a  ld   $1a         ;09c2 LD
              5324 008e  ld   $8e         ;09c2 'Distance'+1
              5325 0099  ld   $99         ;09c4 ADDW
              5326 00ad  ld   $ad         ;09c4 'Indicator'
              5327 002b  ld   $2b         ;09c6 STW
              5328 00af  ld   $af         ;09c6 'Tracking'
              5329 0059  ld   $59         ;09c8 LDI
              532a 003c  ld   $3c
              532b 00f0  ld   $f0         ;09ca POKE
              532c 00af  ld   $af         ;09ca 'Tracking'
              532d 001a  ld   $1a         ;09cc LD
              532e 0041  ld   $41         ;09cc 'Speed'+1
              532f 0099  ld   $99         ;09ce ADDW
              5330 008d  ld   $8d         ;09ce 'Distance'
              5331 002b  ld   $2b         ;09d0 STW
              5332 008d  ld   $8d         ;09d0 'Distance'
              5333 00ff  ld   $ff         ;09d2 RET
              5334 002b  ld   $2b         ;09d3 STW
              5335 0095  ld   $95         ;09d3 'AdvanceCar'
              5336 0093  ld   $93         ;09d5 INC
              5337 001b  ld   $1b         ;09d5 '_vLR'+1
              5338 00ff  ld   $ff         ;09d7 RET
              5339 000a  ld   $0a         ;| RAM segment address (high byte first)
              533a 00a0  ld   $a0         ;|
              533b 0041  ld   $41         ;| Length (1..256)
              533c 00cd  ld   $cd         ;0aa0 DEF
              533d 00da  ld   $da
              533e 0075  ld   $75         ;0aa2 PUSH
              533f 0011  ld   $11         ;0aa3 LDWI
              5340 00d9  ld   $d9
              5341 0001  ld   $01
              5342 00ad  ld   $ad         ;0aa6 PEEK
              5343 008c  ld   $8c         ;0aa7 XORI
              5344 00ff  ld   $ff
              5345 002b  ld   $2b         ;0aa9 STW
              5346 0060  ld   $60         ;0aa9 'X'
              5347 001a  ld   $1a         ;0aab LD
              5348 0043  ld   $43         ;0aab 'CarX'+1
              5349 0099  ld   $99         ;0aad ADDW
              534a 0060  ld   $60         ;0aad 'X'
              534b 002b  ld   $2b         ;0aaf STW
              534c 0060  ld   $60         ;0aaf 'X'
              534d 0011  ld   $11         ;0ab1 LDWI
              534e 00d8  ld   $d8
              534f 0001  ld   $01
              5350 002b  ld   $2b         ;0ab4 STW
              5351 0056  ld   $56         ;0ab4 'Video'
              5352 0021  ld   $21         ;0ab6 LDW
              5353 00a3  ld   $a3         ;0ab6 'Car0'
              5354 002b  ld   $2b         ;0ab8 STW
              5355 005c  ld   $5c         ;0ab8 'Sprite'
              5356 00cf  ld   $cf         ;0aba CALL
              5357 0064  ld   $64         ;0aba 'DrawPixels'
              5358 0021  ld   $21         ;0abc LDW
              5359 00a5  ld   $a5         ;0abc 'Car1'
              535a 002b  ld   $2b         ;0abe STW
              535b 005c  ld   $5c         ;0abe 'Sprite'
              535c 00cf  ld   $cf         ;0ac0 CALL
              535d 0064  ld   $64         ;0ac0 'DrawPixels'
              535e 0021  ld   $21         ;0ac2 LDW
              535f 0060  ld   $60         ;0ac2 'X'
              5360 00b8  ld   $b8         ;0ac4 SUBW
              5361 004a  ld   $4a         ;0ac4 'Steer'
              5362 002b  ld   $2b         ;0ac6 STW
              5363 0060  ld   $60         ;0ac6 'X'
              5364 0021  ld   $21         ;0ac8 LDW
              5365 00a7  ld   $a7         ;0ac8 'Car2'
              5366 002b  ld   $2b         ;0aca STW
              5367 005c  ld   $5c         ;0aca 'Sprite'
              5368 00cf  ld   $cf         ;0acc CALL
              5369 0064  ld   $64         ;0acc 'DrawPixels'
              536a 0021  ld   $21         ;0ace LDW
              536b 00a9  ld   $a9         ;0ace 'Car3'
              536c 002b  ld   $2b         ;0ad0 STW
              536d 005c  ld   $5c         ;0ad0 'Sprite'
              536e 00cf  ld   $cf         ;0ad2 CALL
              536f 0064  ld   $64         ;0ad2 'DrawPixels'
              5370 0021  ld   $21         ;0ad4 LDW
              5371 00ab  ld   $ab         ;0ad4 'Car4'
              5372 002b  ld   $2b         ;0ad6 STW
              5373 005c  ld   $5c         ;0ad6 'Sprite'
              5374 00cf  ld   $cf         ;0ad8 CALL
              5375 0064  ld   $64         ;0ad8 'DrawPixels'
              5376 0063  ld   $63         ;0ada POP
              5377 00ff  ld   $ff         ;0adb RET
              5378 002b  ld   $2b         ;0adc STW
              5379 009d  ld   $9d         ;0adc 'DrawRaceCar'
              537a 0093  ld   $93         ;0ade INC
              537b 001b  ld   $1b         ;0ade '_vLR'+1
              537c 00ff  ld   $ff         ;0ae0 RET
              537d 000b  ld   $0b         ;| RAM segment address (high byte first)
              537e 00a0  ld   $a0         ;|
              537f 004c  ld   $4c         ;| Length (1..256)
              5380 00cd  ld   $cd         ;0ba0 DEF
              5381 00e5  ld   $e5
              5382 0075  ld   $75         ;0ba2 PUSH
              5383 0059  ld   $59         ;0ba3 LDI
              5384 0030  ld   $30
              5385 002b  ld   $2b         ;0ba5 STW
              5386 0034  ld   $34         ;0ba5 'BgColor'
              5387 0021  ld   $21         ;0ba7 LDW
              5388 0034  ld   $34         ;0ba7 'BgColor'
              5389 005e  ld   $5e         ;0ba9 ST
              538a 0024  ld   $24
              538b 005e  ld   $5e         ;0bab ST
              538c 0025  ld   $25
              538d 0011  ld   $11         ;0bad LDWI
              538e 0000  ld   $00
              538f 0008  ld   $08
              5390 002b  ld   $2b         ;0bb0 STW
              5391 0028  ld   $28
              5392 0011  ld   $11         ;0bb2 LDWI
              5393 00e1  ld   $e1
              5394 0004  ld   $04
              5395 002b  ld   $2b         ;0bb5 STW
              5396 0022  ld   $22
              5397 00b4  ld   $b4         ;0bb7 SYS
              5398 00cc  ld   $cc
              5399 0093  ld   $93         ;0bb9 INC
              539a 0028  ld   $28
              539b 001a  ld   $1a         ;0bbb LD
              539c 0028  ld   $28
              539d 008c  ld   $8c         ;0bbd XORI
              539e 00a0  ld   $a0
              539f 0035  ld   $35         ;0bbf BCC
              53a0 0072  ld   $72         ;0bc0 NE
              53a1 00b5  ld   $b5
              53a2 0059  ld   $59         ;0bc2 LDI
              53a3 003f  ld   $3f
              53a4 002b  ld   $2b         ;0bc4 STW
              53a5 0036  ld   $36         ;0bc4 'Color'
              53a6 0011  ld   $11         ;0bc6 LDWI
              53a7 0007  ld   $07
              53a8 0008  ld   $08
              53a9 002b  ld   $2b         ;0bc9 STW
              53aa 0038  ld   $38         ;0bc9 'Pos'
              53ab 0059  ld   $59         ;0bcb LDI
              53ac 003a  ld   $3a
              53ad 00cf  ld   $cf         ;0bcd CALL
              53ae 003a  ld   $3a         ;0bcd 'QPrintChar'
              53af 00e3  ld   $e3         ;0bcf ADDI
              53b0 0012  ld   $12
              53b1 002b  ld   $2b         ;0bd1 STW
              53b2 0038  ld   $38         ;0bd1 'Pos'
              53b3 0059  ld   $59         ;0bd3 LDI
              53b4 002e  ld   $2e
              53b5 00cf  ld   $cf         ;0bd5 CALL
              53b6 003a  ld   $3a         ;0bd5 'QPrintChar'
              53b7 00e3  ld   $e3         ;0bd7 ADDI
              53b8 001f  ld   $1f
              53b9 002b  ld   $2b         ;0bd9 STW
              53ba 0038  ld   $38         ;0bd9 'Pos'
              53bb 0021  ld   $21         ;0bdb LDW
              53bc 004e  ld   $4e         ;0bdb 'GigatronText'
              53bd 00cf  ld   $cf         ;0bdd CALL
              53be 0085  ld   $85         ;0bdd 'PrintText'
              53bf 0059  ld   $59         ;0bdf LDI
              53c0 003c  ld   $3c
              53c1 002b  ld   $2b         ;0be1 STW
              53c2 0050  ld   $50         ;0be1 'Delay'
              53c3 00cf  ld   $cf         ;0be3 CALL
              53c4 0054  ld   $54         ;0be3 'Wait'
              53c5 0063  ld   $63         ;0be5 POP
              53c6 00ff  ld   $ff         ;0be6 RET
              53c7 002b  ld   $2b         ;0be7 STW
              53c8 00b3  ld   $b3         ;0be7 'Intro'
              53c9 0093  ld   $93         ;0be9 INC
              53ca 001b  ld   $1b         ;0be9 '_vLR'+1
              53cb 00ff  ld   $ff         ;0beb RET
              53cc 000c  ld   $0c         ;| RAM segment address (high byte first)
              53cd 00a0  ld   $a0         ;|
              53ce 0059  ld   $59         ;| Length (1..256)
              53cf 00cd  ld   $cd         ;0ca0 DEF
              53d0 00f2  ld   $f2
              53d1 002b  ld   $2b         ;0ca2 STW
              53d2 0036  ld   $36         ;0ca2 'Color'
              53d3 0021  ld   $21         ;0ca4 LDW
              53d4 0097  ld   $97         ;0ca4 'BestTime'
              53d5 002b  ld   $2b         ;0ca6 STW
              53d6 0081  ld   $81         ;0ca6 'Value'
              53d7 00e3  ld   $e3         ;0ca8 ADDI
              53d8 0001  ld   $01
              53d9 0035  ld   $35         ;0caa BCC
              53da 0053  ld   $53         ;0cab GE
              53db 00ac  ld   $ac
              53dc 00ff  ld   $ff         ;0cad RET
              53dd 0075  ld   $75         ;0cae PUSH
              53de 0011  ld   $11         ;0caf LDWI
              53df 007c  ld   $7c
              53e0 0008  ld   $08
              53e1 002b  ld   $2b         ;0cb2 STW
              53e2 0038  ld   $38         ;0cb2 'Pos'
              53e3 0011  ld   $11         ;0cb4 LDWI
              53e4 000f  ld   $0f
              53e5 000e  ld   $0e
              53e6 002b  ld   $2b         ;0cb7 STW
              53e7 0072  ld   $72         ;0cb7 'Radix'
              53e8 00cf  ld   $cf         ;0cb9 CALL
              53e9 0074  ld   $74         ;0cb9 'ExtractDigit'
              53ea 00cf  ld   $cf         ;0cbb CALL
              53eb 003a  ld   $3a         ;0cbb 'QPrintChar'
              53ec 00e3  ld   $e3         ;0cbd ADDI
              53ed 0006  ld   $06
              53ee 002b  ld   $2b         ;0cbf STW
              53ef 0038  ld   $38         ;0cbf 'Pos'
              53f0 0059  ld   $59         ;0cc1 LDI
              53f1 003a  ld   $3a
              53f2 00cf  ld   $cf         ;0cc3 CALL
              53f3 003a  ld   $3a         ;0cc3 'QPrintChar'
              53f4 00e3  ld   $e3         ;0cc5 ADDI
              53f5 0006  ld   $06
              53f6 002b  ld   $2b         ;0cc7 STW
              53f7 0038  ld   $38         ;0cc7 'Pos'
              53f8 0011  ld   $11         ;0cc9 LDWI
              53f9 0058  ld   $58
              53fa 0002  ld   $02
              53fb fe00  bra  ac          ;+-----------------------------------+
              53fc fcfd  bra  $53fd       ;|                                   |
              53fd 1418  ld   $18,y       ;| Trampoline for page $5300 lookups |
              53fe e006  jmp  y,$06       ;|                                   |
              53ff c218  st   [$18]       ;+-----------------------------------+
              5400 002b  ld   $2b         ;0ccc STW
              5401 0072  ld   $72         ;0ccc 'Radix'
              5402 00cf  ld   $cf         ;0cce CALL
              5403 0074  ld   $74         ;0cce 'ExtractDigit'
              5404 00cf  ld   $cf         ;0cd0 CALL
              5405 003a  ld   $3a         ;0cd0 'QPrintChar'
              5406 00e3  ld   $e3         ;0cd2 ADDI
              5407 0006  ld   $06
              5408 002b  ld   $2b         ;0cd4 STW
              5409 0038  ld   $38         ;0cd4 'Pos'
              540a 0059  ld   $59         ;0cd6 LDI
              540b 003c  ld   $3c
              540c 002b  ld   $2b         ;0cd8 STW
              540d 0072  ld   $72         ;0cd8 'Radix'
              540e 00cf  ld   $cf         ;0cda CALL
              540f 0074  ld   $74         ;0cda 'ExtractDigit'
              5410 00cf  ld   $cf         ;0cdc CALL
              5411 003a  ld   $3a         ;0cdc 'QPrintChar'
              5412 00e3  ld   $e3         ;0cde ADDI
              5413 0006  ld   $06
              5414 002b  ld   $2b         ;0ce0 STW
              5415 0038  ld   $38         ;0ce0 'Pos'
              5416 0059  ld   $59         ;0ce2 LDI
              5417 002e  ld   $2e
              5418 00cf  ld   $cf         ;0ce4 CALL
              5419 003a  ld   $3a         ;0ce4 'QPrintChar'
              541a 00e3  ld   $e3         ;0ce6 ADDI
              541b 0006  ld   $06
              541c 002b  ld   $2b         ;0ce8 STW
              541d 0038  ld   $38         ;0ce8 'Pos'
              541e 0059  ld   $59         ;0cea LDI
              541f 0006  ld   $06
              5420 002b  ld   $2b         ;0cec STW
              5421 0072  ld   $72         ;0cec 'Radix'
              5422 00cf  ld   $cf         ;0cee CALL
              5423 0074  ld   $74         ;0cee 'ExtractDigit'
              5424 00cf  ld   $cf         ;0cf0 CALL
              5425 003a  ld   $3a         ;0cf0 'QPrintChar'
              5426 0063  ld   $63         ;0cf2 POP
              5427 00ff  ld   $ff         ;0cf3 RET
              5428 002b  ld   $2b         ;0cf4 STW
              5429 0099  ld   $99         ;0cf4 'PrintBestTime'
              542a 0093  ld   $93         ;0cf6 INC
              542b 001b  ld   $1b         ;0cf6 '_vLR'+1
              542c 00ff  ld   $ff         ;0cf8 RET
              542d 000d  ld   $0d         ;| RAM segment address (high byte first)
              542e 00a0  ld   $a0         ;|
              542f 0056  ld   $56         ;| Length (1..256)
              5430 00cd  ld   $cd         ;0da0 DEF
              5431 00ef  ld   $ef
              5432 0075  ld   $75         ;0da2 PUSH
              5433 0011  ld   $11         ;0da3 LDWI
              5434 0035  ld   $35
              5435 0014  ld   $14
              5436 002b  ld   $2b         ;0da6 STW
              5437 0038  ld   $38         ;0da6 'Pos'
              5438 00cd  ld   $cd         ;0da8 DEF
              5439 00b2  ld   $b2
              543a 0047  ld   $47         ;0daa 'G'
              543b 0041  ld   $41         ;0dab 'A'
              543c 004d  ld   $4d         ;0dac 'M'
              543d 0045  ld   $45         ;0dad 'E'
              543e 0020  ld   $20         ;0dae ' '
              543f 004f  ld   $4f         ;0daf 'O'
              5440 0056  ld   $56         ;0db0 'V'
              5441 0045  ld   $45         ;0db1 'E'
              5442 0052  ld   $52         ;0db2 'R'
              5443 0000  ld   $00         ;0db3 0
              5444 00cf  ld   $cf         ;0db4 CALL
              5445 0085  ld   $85         ;0db4 'PrintText'
              5446 0011  ld   $11         ;0db6 LDWI
              5447 0011  ld   $11
              5448 0001  ld   $01
              5449 002b  ld   $2b         ;0db9 STW
              544a 005e  ld   $5e         ;0db9 's'
              544b 00e3  ld   $e3         ;0dbb ADDI
              544c 0020  ld   $20
              544d 002b  ld   $2b         ;0dbd STW
              544e 00b5  ld   $b5         ;0dbd 't'
              544f 0059  ld   $59         ;0dbf LDI
              5450 0001  ld   $01
              5451 002b  ld   $2b         ;0dc1 STW
              5452 0050  ld   $50         ;0dc1 'Delay'
              5453 0021  ld   $21         ;0dc3 LDW
              5454 005e  ld   $5e         ;0dc3 's'
              5455 00ad  ld   $ad         ;0dc5 PEEK
              5456 0082  ld   $82         ;0dc6 ANDI
              5457 0080  ld   $80
              5458 0035  ld   $35         ;0dc8 BCC
              5459 0072  ld   $72         ;0dc9 NE
              545a 00cd  ld   $cd
              545b 0059  ld   $59         ;0dcb LDI
              545c 0001  ld   $01
              545d 0090  ld   $90         ;0dcd BRA
              545e 00d0  ld   $d0
              545f 0011  ld   $11         ;0dcf LDWI
              5460 00ff  ld   $ff
              5461 00ff  ld   $ff
              5462 002b  ld   $2b         ;0dd2 STW
              5463 0030  ld   $30         ;0dd2 'i'
              5464 00cf  ld   $cf         ;0dd4 CALL
              5465 0054  ld   $54         ;0dd4 'Wait'
              5466 0021  ld   $21         ;0dd6 LDW
              5467 00b5  ld   $b5         ;0dd6 't'
              5468 00ad  ld   $ad         ;0dd8 PEEK
              5469 00b8  ld   $b8         ;0dd9 SUBW
              546a 0030  ld   $30         ;0dd9 'i'
              546b 00f0  ld   $f0         ;0ddb POKE
              546c 00b5  ld   $b5         ;0ddb 't'
              546d 0021  ld   $21         ;0ddd LDW
              546e 005e  ld   $5e         ;0ddd 's'
              546f 00ad  ld   $ad         ;0ddf PEEK
              5470 0099  ld   $99         ;0de0 ADDW
              5471 0030  ld   $30         ;0de0 'i'
              5472 00f0  ld   $f0         ;0de2 POKE
              5473 005e  ld   $5e         ;0de2 's'
              5474 0082  ld   $82         ;0de4 ANDI
              5475 00ff  ld   $ff
              5476 0035  ld   $35         ;0de6 BCC
              5477 0072  ld   $72         ;0de7 NE
              5478 00d2  ld   $d2
              5479 0059  ld   $59         ;0de9 LDI
              547a 001e  ld   $1e
              547b 002b  ld   $2b         ;0deb STW
              547c 0050  ld   $50         ;0deb 'Delay'
              547d 00cf  ld   $cf         ;0ded CALL
              547e 0054  ld   $54         ;0ded 'Wait'
              547f 0063  ld   $63         ;0def POP
              5480 00ff  ld   $ff         ;0df0 RET
              5481 002b  ld   $2b         ;0df1 STW
              5482 00b7  ld   $b7         ;0df1 'GameOver'
              5483 0093  ld   $93         ;0df3 INC
              5484 001b  ld   $1b         ;0df3 '_vLR'+1
              5485 00ff  ld   $ff         ;0df5 RET
              5486 000e  ld   $0e         ;| RAM segment address (high byte first)
              5487 00a0  ld   $a0         ;|
              5488 005b  ld   $5b         ;| Length (1..256)
              5489 00cd  ld   $cd         ;0ea0 DEF
              548a 00f4  ld   $f4
              548b 0075  ld   $75         ;0ea2 PUSH
              548c 0011  ld   $11         ;0ea3 LDWI
              548d 00a6  ld   $a6
              548e 0041  ld   $41
              548f 002b  ld   $2b         ;0ea6 STW
              5490 0058  ld   $58         ;0ea6 'p'
              5491 0011  ld   $11         ;0ea8 LDWI
              5492 0000  ld   $00
              5493 0010  ld   $10
              5494 002b  ld   $2b         ;0eab STW
              5495 005a  ld   $5a         ;0eab 'q'
              5496 00cd  ld   $cd         ;0ead DEF
              5497 00bf  ld   $bf
              5498 001a  ld   $1a         ;0eaf LD
              5499 0058  ld   $58         ;0eaf 'p'
              549a 008c  ld   $8c         ;0eb1 XORI
              549b 00fa  ld   $fa
              549c 0035  ld   $35         ;0eb3 BCC
              549d 003f  ld   $3f         ;0eb4 EQ
              549e 00b8  ld   $b8
              549f 0059  ld   $59         ;0eb6 LDI
              54a0 0001  ld   $01
              54a1 0090  ld   $90         ;0eb8 BRA
              54a2 00ba  ld   $ba
              54a3 0059  ld   $59         ;0eba LDI
              54a4 0006  ld   $06
              54a5 0099  ld   $99         ;0ebc ADDW
              54a6 0058  ld   $58         ;0ebc 'p'
              54a7 002b  ld   $2b         ;0ebe STW
              54a8 0058  ld   $58         ;0ebe 'p'
              54a9 00ff  ld   $ff         ;0ec0 RET
              54aa 002b  ld   $2b         ;0ec1 STW
              54ab 0052  ld   $52         ;0ec1 'tmp'
              54ac 0021  ld   $21         ;0ec3 LDW
              54ad 0058  ld   $58         ;0ec3 'p'
              54ae 007f  ld   $7f         ;0ec5 LUP
              54af 0000  ld   $00
              54b0 005e  ld   $5e         ;0ec7 ST
              54b1 0024  ld   $24
              54b2 00cf  ld   $cf         ;0ec9 CALL
              54b3 0052  ld   $52         ;0ec9 'tmp'
              54b4 007f  ld   $7f         ;0ecb LUP
              54b5 0000  ld   $00
              54b6 005e  ld   $5e         ;0ecd ST
              54b7 0025  ld   $25
              54b8 00cf  ld   $cf         ;0ecf CALL
              54b9 0052  ld   $52         ;0ecf 'tmp'
              54ba 007f  ld   $7f         ;0ed1 LUP
              54bb 0000  ld   $00
              54bc 005e  ld   $5e         ;0ed3 ST
              54bd 0026  ld   $26
              54be 00cf  ld   $cf         ;0ed5 CALL
              54bf 0052  ld   $52         ;0ed5 'tmp'
              54c0 0011  ld   $11         ;0ed7 LDWI
              54c1 00d0  ld   $d0
              54c2 001a  ld   $1a
              54c3 002b  ld   $2b         ;0eda STW
              54c4 0022  ld   $22
              54c5 00b4  ld   $b4         ;0edc SYS
              54c6 00f3  ld   $f3
              54c7 0021  ld   $21         ;0ede LDW
              54c8 005a  ld   $5a         ;0ede 'q'
              54c9 002b  ld   $2b         ;0ee0 STW
              54ca 0028  ld   $28
              54cb 00e3  ld   $e3         ;0ee2 ADDI
              54cc 0004  ld   $04
              54cd 002b  ld   $2b         ;0ee4 STW
              54ce 005a  ld   $5a         ;0ee4 'q'
              54cf 0011  ld   $11         ;0ee6 LDWI
              54d0 00d4  ld   $d4
              54d1 0004  ld   $04
              54d2 002b  ld   $2b         ;0ee9 STW
              54d3 0022  ld   $22
              54d4 00b4  ld   $b4         ;0eeb SYS
              54d5 0000  ld   $00
              54d6 001a  ld   $1a         ;0eed LD
              54d7 005b  ld   $5b         ;0eed 'q'+1
              54d8 008c  ld   $8c         ;0eef XORI
              54d9 0020  ld   $20
              54da 0035  ld   $35         ;0ef1 BCC
              54db 0072  ld   $72         ;0ef2 NE
              54dc 00c1  ld   $c1
              54dd 0063  ld   $63         ;0ef4 POP
              54de 00ff  ld   $ff         ;0ef5 RET
              54df 002b  ld   $2b         ;0ef6 STW
              54e0 00b9  ld   $b9         ;0ef6 'SetupHorizon'
              54e1 0093  ld   $93         ;0ef8 INC
              54e2 001b  ld   $1b         ;0ef8 '_vLR'+1
              54e3 00ff  ld   $ff         ;0efa RET
              54e4 000f  ld   $0f         ;| RAM segment address (high byte first)
              54e5 00a0  ld   $a0         ;|
              54e6 0054  ld   $54         ;| Length (1..256)
              54e7 00cf  ld   $cf         ;0fa0 CALL
              54e8 00b3  ld   $b3         ;0fa0 'Intro'
              54e9 0011  ld   $11         ;0fa2 LDWI
              54ea 0000  ld   $00
              54eb 0074  ld   $74
              54ec 002b  ld   $2b         ;0fa5 STW
              54ed 008d  ld   $8d         ;0fa5 'Distance'
              54ee 002b  ld   $2b         ;0fa7 STW
              54ef 008b  ld   $8b         ;0fa7 'NextTurn'
              54f0 0011  ld   $11         ;0fa9 LDWI
              54f1 00ff  ld   $ff
              54f2 007f  ld   $7f
              54f3 002b  ld   $2b         ;0fac STW
              54f4 0097  ld   $97         ;0fac 'BestTime'
              54f5 0059  ld   $59         ;0fae LDI
              54f6 0000  ld   $00
              54f7 002b  ld   $2b         ;0fb0 STW
              54f8 003e  ld   $3e         ;0fb0 'Time'
              54f9 002b  ld   $2b         ;0fb2 STW
              54fa 0081  ld   $81         ;0fb2 'Value'
              54fb fe00  bra  ac          ;+-----------------------------------+
              54fc fcfd  bra  $54fd       ;|                                   |
              54fd 1418  ld   $18,y       ;| Trampoline for page $5400 lookups |
              54fe e006  jmp  y,$06       ;|                                   |
              54ff c218  st   [$18]       ;+-----------------------------------+
              5500 002b  ld   $2b         ;0fb4 STW
              5501 0046  ld   $46         ;0fb4 'HorizonX'
              5502 002b  ld   $2b         ;0fb6 STW
              5503 0044  ld   $44         ;0fb6 'DriftX'
              5504 002b  ld   $2b         ;0fb8 STW
              5505 0040  ld   $40         ;0fb8 'Speed'
              5506 002b  ld   $2b         ;0fba STW
              5507 009b  ld   $9b         ;0fba 'Random'
              5508 002b  ld   $2b         ;0fbc STW
              5509 0087  ld   $87         ;0fbc 'DX0'
              550a 002b  ld   $2b         ;0fbe STW
              550b 008f  ld   $8f         ;0fbe 'DDX'
              550c 002b  ld   $2b         ;0fc0 STW
              550d 0091  ld   $91         ;0fc0 'NextDDX'
              550e 00cf  ld   $cf         ;0fc2 CALL
              550f 0093  ld   $93         ;0fc2 'DrawRoad'
              5510 00cf  ld   $cf         ;0fc4 CALL
              5511 009f  ld   $9f         ;0fc4 'DrawGrass'
              5512 00cf  ld   $cf         ;0fc6 CALL
              5513 00b9  ld   $b9         ;0fc6 'SetupHorizon'
              5514 0011  ld   $11         ;0fc8 LDWI
              5515 0035  ld   $35
              5516 0014  ld   $14
              5517 002b  ld   $2b         ;0fcb STW
              5518 0038  ld   $38         ;0fcb 'Pos'
              5519 00cd  ld   $cd         ;0fcd DEF
              551a 00d7  ld   $d7
              551b 0047  ld   $47         ;0fcf 'G'
              551c 0045  ld   $45         ;0fd0 'E'
              551d 0054  ld   $54         ;0fd1 'T'
              551e 0020  ld   $20         ;0fd2 ' '
              551f 0052  ld   $52         ;0fd3 'R'
              5520 0045  ld   $45         ;0fd4 'E'
              5521 0041  ld   $41         ;0fd5 'A'
              5522 0044  ld   $44         ;0fd6 'D'
              5523 0059  ld   $59         ;0fd7 'Y'
              5524 0000  ld   $00         ;0fd8 0
              5525 00cf  ld   $cf         ;0fd9 CALL
              5526 0085  ld   $85         ;0fd9 'PrintText'
              5527 00cf  ld   $cf         ;0fdb CALL
              5528 0070  ld   $70         ;0fdb 'SetupRoad'
              5529 00cf  ld   $cf         ;0fdd CALL
              552a 00b9  ld   $b9         ;0fdd 'SetupHorizon'
              552b 00cf  ld   $cf         ;0fdf CALL
              552c 00b1  ld   $b1         ;0fdf 'SetupIndicator'
              552d 0011  ld   $11         ;0fe1 LDWI
              552e 0000  ld   $00
              552f 0079  ld   $79
              5530 002b  ld   $2b         ;0fe4 STW
              5531 0042  ld   $42         ;0fe4 'CarX'
              5532 001a  ld   $1a         ;0fe6 LD
              5533 000e  ld   $0e
              5534 002b  ld   $2b         ;0fe8 STW
              5535 003c  ld   $3c         ;0fe8 'LastFrame'
              5536 00cf  ld   $cf         ;0fea CALL
              5537 00a1  ld   $a1         ;0fea 'PlayGame'
              5538 00cf  ld   $cf         ;0fec CALL
              5539 00b7  ld   $b7         ;0fec 'GameOver'
              553a 0059  ld   $59         ;0fee LDI
              553b 003f  ld   $3f
              553c 00cf  ld   $cf         ;0ff0 CALL
              553d 0099  ld   $99         ;0ff0 'PrintBestTime'
              553e 0090  ld   $90         ;0ff2 BRA
              553f 00a0  ld   $a0
              5540 0000  ld   $00         ;End of Apps/Racer/Racer_v2.gcl, size 1873
                                          ;+-----------------------------------+
                                          ;| gbas/browser/Browser_SDCard_ROMv5a_v1.gt1 |
                                          ;+-----------------------------------+
              5541 dc52  st   $52,[y,x++] ;'R'
              5542 dc61  st   $61,[y,x++] ;'a'
              5543 dc63  st   $63,[y,x++] ;'c'
              5544 dc65  st   $65,[y,x++] ;'e'
              5545 dc72  st   $72,[y,x++] ;'r'
              5546 dc00  st   $00,[y,x++] ;'\x00'
              5547 dc00  st   $00,[y,x++] ;'\x00'
              5548 dc00  st   $00,[y,x++] ;'\x00'
              5549 00f0  ld   $f0
              554a c218  st   [$18]
              554b 004d  ld   $4d
              554c 14e1  ld   $e1,y
              554d e071  jmp  y,$71
              554e c219  st   [$19]
SDCard:       554f 0002  ld   $02
              5550 0000  ld   $00
              5551 00fa  ld   $fa
              5552 0059  ld   $59
              5553 0040  ld   $40
              5554 002b  ld   $2b
              5555 0082  ld   $82
              5556 0011  ld   $11
              5557 00e8  ld   $e8
              5558 0062  ld   $62
              5559 00cf  ld   $cf
              555a 0018  ld   $18
              555b 0011  ld   $11
              555c 0020  ld   $20
              555d 000f  ld   $0f
              555e 002b  ld   $2b
              555f 00a2  ld   $a2
              5560 0059  ld   $59
              5561 0001  ld   $01
              5562 002b  ld   $2b
              5563 00aa  ld   $aa
              5564 0059  ld   $59
              5565 0000  ld   $00
              5566 002b  ld   $2b
              5567 00a6  ld   $a6
              5568 0085  ld   $85
              5569 00a0  ld   $a0
              556a 0062  ld   $62
              556b 0011  ld   $11
              556c 00fe  ld   $fe
              556d 007c  ld   $7c
              556e 002b  ld   $2b
              556f 0084  ld   $84
              5570 0011  ld   $11
              5571 00a0  ld   $a0
              5572 007d  ld   $7d
              5573 0085  ld   $85
              5574 00d2  ld   $d2
              5575 0061  ld   $61
              5576 0011  ld   $11
              5577 00fe  ld   $fe
              5578 007c  ld   $7c
              5579 002b  ld   $2b
              557a 0084  ld   $84
              557b 0011  ld   $11
              557c 00a0  ld   $a0
              557d 007b  ld   $7b
              557e 0085  ld   $85
              557f 00d2  ld   $d2
              5580 0061  ld   $61
              5581 0011  ld   $11
              5582 00fe  ld   $fe
              5583 007c  ld   $7c
              5584 002b  ld   $2b
              5585 0084  ld   $84
              5586 0011  ld   $11
              5587 00a0  ld   $a0
              5588 007a  ld   $7a
              5589 0085  ld   $85
              558a 00d2  ld   $d2
              558b 0061  ld   $61
              558c 0085  ld   $85
              558d 0079  ld   $79
              558e 0002  ld   $02
              558f 0085  ld   $85
              5590 00b8  ld   $b8
              5591 000e  ld   $0e
              5592 0085  ld   $85
              5593 00c2  ld   $c2
              5594 000d  ld   $0d
              5595 0085  ld   $85
              5596 00a2  ld   $a2
              5597 000e  ld   $0e
              5598 0085  ld   $85
              5599 0014  ld   $14
              559a 0006  ld   $06
              559b 0085  ld   $85
              559c 00d8  ld   $d8
              559d 000d  ld   $0d
              559e 0085  ld   $85
              559f 003a  ld   $3a
              55a0 0003  ld   $03
              55a1 0085  ld   $85
              55a2 008c  ld   $8c
              55a3 0003  ld   $03
              55a4 0021  ld   $21
              55a5 0040  ld   $40
              55a6 0035  ld   $35
              55a7 003f  ld   $3f
              55a8 0047  ld   $47
              55a9 0085  ld   $85
              55aa 00eb  ld   $eb
              55ab 000d  ld   $0d
              55ac 0085  ld   $85
              55ad 00e0  ld   $e0
              55ae 0003  ld   $03
              55af 0059  ld   $59
              55b0 0000  ld   $00
              55b1 002b  ld   $2b
              55b2 004a  ld   $4a
              55b3 0059  ld   $59
              55b4 00ff  ld   $ff
              55b5 002b  ld   $2b
              55b6 004c  ld   $4c
              55b7 0085  ld   $85
              55b8 00b7  ld   $b7
              55b9 0061  ld   $61
              55ba 0085  ld   $85
              55bb 00f3  ld   $f3
              55bc 0009  ld   $09
              55bd 0021  ld   $21
              55be 0046  ld   $46
              55bf 0035  ld   $35
              55c0 003f  ld   $3f
              55c1 0070  ld   $70
              55c2 0090  ld   $90
              55c3 003b  ld   $3b
              55c4 0093  ld   $93
              55c5 004a  ld   $4a
              55c6 0085  ld   $85
              55c7 0065  ld   $65
              55c8 0002  ld   $02
              55c9 00b4  ld   $b4
              55ca 0080  ld   $80
              55cb 0075  ld   $75
              55cc 001a  ld   $1a
              55cd 0021  ld   $21
              55ce 0082  ld   $82
              55cf 00fc  ld   $fc
              55d0 002b  ld   $2b
              55d1 004e  ld   $4e
              55d2 0021  ld   $21
              55d3 004e  ld   $4e
              55d4 008c  ld   $8c
              55d5 0020  ld   $20
              55d6 0035  ld   $35
              55d7 0072  ld   $72
              55d8 008d  ld   $8d
              55d9 0011  ld   $11
              55da 003e  ld   $3e
              55db 00e2  ld   $e2
              55dc 002b  ld   $2b
              55dd 0030  ld   $30
              55de 0085  ld   $85
              55df 001d  ld   $1d
              55e0 0003  ld   $03
              55e1 0021  ld   $21
              55e2 004e  ld   $4e
              55e3 008c  ld   $8c
              55e4 0028  ld   $28
              55e5 0035  ld   $35
              55e6 0072  ld   $72
              55e7 009c  ld   $9c
              55e8 0011  ld   $11
              55e9 00a8  ld   $a8
              55ea 00b4  ld   $b4
              55eb 002b  ld   $2b
              55ec 0030  ld   $30
              55ed 0085  ld   $85
              55ee 001d  ld   $1d
              55ef 0003  ld   $03
              55f0 0021  ld   $21
              55f1 004e  ld   $4e
              55f2 008c  ld   $8c
              55f3 0038  ld   $38
              55f4 0035  ld   $35
              55f5 0072  ld   $72
              55f6 00ab  ld   $ab
              55f7 0011  ld   $11
              55f8 005a  ld   $5a
              55f9 00ad  ld   $ad
              55fa 002b  ld   $2b
              55fb fe00  bra  ac          ;+-----------------------------------+
              55fc fcfd  bra  $55fd       ;|                                   |
              55fd 1418  ld   $18,y       ;| Trampoline for page $5500 lookups |
              55fe e006  jmp  y,$06       ;|                                   |
              55ff c218  st   [$18]       ;+-----------------------------------+
              5600 0030  ld   $30
              5601 0085  ld   $85
              5602 001d  ld   $1d
              5603 0003  ld   $03
              5604 0021  ld   $21
              5605 004e  ld   $4e
              5606 00e6  ld   $e6
              5607 0040  ld   $40
              5608 0035  ld   $35
              5609 0053  ld   $53
              560a 00b5  ld   $b5
              560b 0085  ld   $85
              560c 001d  ld   $1d
              560d 0003  ld   $03
              560e 0021  ld   $21
              560f 0030  ld   $30
              5610 002b  ld   $2b
              5611 0082  ld   $82
              5612 0085  ld   $85
              5613 00bf  ld   $bf
              5614 0061  ld   $61
              5615 002b  ld   $2b
              5616 0030  ld   $30
              5617 0021  ld   $21
              5618 0030  ld   $30
              5619 0035  ld   $35
              561a 0072  ld   $72
              561b 00c6  ld   $c6
              561c 0085  ld   $85
              561d 000a  ld   $0a
              561e 0003  ld   $03
              561f 0011  ld   $11
              5620 00a0  ld   $a0
              5621 007b  ld   $7b
              5622 002b  ld   $2b
              5623 0082  ld   $82
              5624 0059  ld   $59
              5625 0006  ld   $06
              5626 00f0  ld   $f0
              5627 0082  ld   $82
              5628 0059  ld   $59
              5629 0024  ld   $24
              562a 002b  ld   $2b
              562b 0050  ld   $50
              562c 0011  ld   $11
              562d 00a0  ld   $a0
              562e 007b  ld   $7b
              562f 0099  ld   $99
              5630 0050  ld   $50
              5631 00e6  ld   $e6
              5632 0023  ld   $23
              5633 002b  ld   $2b
              5634 00e8  ld   $e8
              5635 0021  ld   $21
              5636 0050  ld   $50
              5637 00ad  ld   $ad
              5638 00f0  ld   $f0
              5639 00e8  ld   $e8
              563a 0093  ld   $93
              563b 0050  ld   $50
              563c 001a  ld   $1a
              563d 0050  ld   $50
              563e 00e6  ld   $e6
              563f 002b  ld   $2b
              5640 0035  ld   $35
              5641 0056  ld   $56
              5642 00d3  ld   $d3
              5643 0011  ld   $11
              5644 00a0  ld   $a0
              5645 007b  ld   $7b
              5646 002b  ld   $2b
              5647 0084  ld   $84
              5648 0011  ld   $11
              5649 00a6  ld   $a6
              564a 007c  ld   $7c
              564b 0085  ld   $85
              564c 00c3  ld   $c3
              564d 0066  ld   $66
              564e 0085  ld   $85
              564f 0000  ld   $00
              5650 0003  ld   $03
              5651 0003  ld   $03
              5652 0000  ld   $00
              5653 00fa  ld   $fa
              5654 0082  ld   $82
              5655 0001  ld   $01
              5656 0035  ld   $35
              5657 0072  ld   $72
              5658 0006  ld   $06
              5659 0085  ld   $85
              565a 000a  ld   $0a
              565b 0003  ld   $03
              565c 0063  ld   $63
              565d 00ff  ld   $ff
              565e 0021  ld   $21
              565f 0030  ld   $30
              5660 0035  ld   $35
              5661 003f  ld   $3f
              5662 0010  ld   $10
              5663 0085  ld   $85
              5664 00b7  ld   $b7
              5665 0002  ld   $02
              5666 0011  ld   $11
              5667 00b1  ld   $b1
              5668 0069  ld   $69
              5669 0085  ld   $85
              566a 00d1  ld   $d1
              566b 0062  ld   $62
              566c 0085  ld   $85
              566d 00aa  ld   $aa
              566e 0067  ld   $67
              566f 00b4  ld   $b4
              5670 0080  ld   $80
              5671 0063  ld   $63
              5672 00ff  ld   $ff
              5673 0075  ld   $75
              5674 0011  ld   $11
              5675 0006  ld   $06
              5676 000b  ld   $0b
              5677 002b  ld   $2b
              5678 0022  ld   $22
              5679 0021  ld   $21
              567a 0032  ld   $32
              567b 002b  ld   $2b
              567c 0024  ld   $24
              567d 0059  ld   $59
              567e 0001  ld   $01
              567f 002b  ld   $2b
              5680 0026  ld   $26
              5681 001a  ld   $1a
              5682 0034  ld   $34
              5683 00e9  ld   $e9
              5684 00e9  ld   $e9
              5685 00e9  ld   $e9
              5686 002b  ld   $2b
              5687 0027  ld   $27
              5688 00b4  ld   $b4
              5689 00e6  ld   $e6
              568a 002b  ld   $2b
              568b 0036  ld   $36
              568c 0063  ld   $63
              568d 00ff  ld   $ff
              568e 0075  ld   $75
              568f 0021  ld   $21
              5690 0072  ld   $72
              5691 002b  ld   $2b
              5692 0022  ld   $22
              5693 0011  ld   $11
              5694 00ae  ld   $ae
              5695 007c  ld   $7c
              5696 002b  ld   $2b
              5697 0024  ld   $24
              5698 0059  ld   $59
              5699 00cf  ld   $cf
              569a 005e  ld   $5e
              569b 0027  ld   $27
              569c 00b4  ld   $b4
              569d 00fe  ld   $fe
              569e 0011  ld   $11
              569f 00ae  ld   $ae
              56a0 007c  ld   $7c
              56a1 00ad  ld   $ad
              56a2 008c  ld   $8c
              56a3 00ff  ld   $ff
              56a4 0035  ld   $35
              56a5 003f  ld   $3f
              56a6 003d  ld   $3d
              56a7 0059  ld   $59
              56a8 00db  ld   $db
              56a9 005e  ld   $5e
              56aa 0027  ld   $27
              56ab 00b4  ld   $b4
              56ac 00fe  ld   $fe
              56ad 0059  ld   $59
              56ae 00eb  ld   $eb
              56af 005e  ld   $5e
              56b0 0027  ld   $27
              56b1 00b4  ld   $b4
              56b2 00fe  ld   $fe
              56b3 0059  ld   $59
              56b4 00fb  ld   $fb
              56b5 005e  ld   $5e
              56b6 0027  ld   $27
              56b7 00b4  ld   $b4
              56b8 00fe  ld   $fe
              56b9 0059  ld   $59
              56ba 0002  ld   $02
              56bb 005e  ld   $5e
              56bc 0027  ld   $27
              56bd 00b4  ld   $b4
              56be 00fe  ld   $fe
              56bf 001a  ld   $1a
              56c0 0027  ld   $27
              56c1 00e3  ld   $e3
              56c2 0004  ld   $04
              56c3 005e  ld   $5e
              56c4 0027  ld   $27
              56c5 008c  ld   $8c
              56c6 00f2  ld   $f2
              56c7 0035  ld   $35
              56c8 0072  ld   $72
              56c9 0067  ld   $67
              56ca 0059  ld   $59
              56cb 00b9  ld   $b9
              56cc 005e  ld   $5e
              56cd 0027  ld   $27
              56ce 00b4  ld   $b4
              56cf 00fe  ld   $fe
              56d0 0011  ld   $11
              56d1 00ae  ld   $ae
              56d2 007c  ld   $7c
              56d3 00ad  ld   $ad
              56d4 002b  ld   $2b
              56d5 0040  ld   $40
              56d6 0011  ld   $11
              56d7 00af  ld   $af
              56d8 007c  ld   $7c
              56d9 00ad  ld   $ad
              56da 0082  ld   $82
              56db 003f  ld   $3f
              56dc 002b  ld   $2b
              56dd 0042  ld   $42
              56de 0063  ld   $63
              56df 00ff  ld   $ff
              56e0 0075  ld   $75
              56e1 0059  ld   $59
              56e2 0002  ld   $02
              56e3 002b  ld   $2b
              56e4 0052  ld   $52
              56e5 0021  ld   $21
              56e6 0042  ld   $42
              56e7 0035  ld   $35
              56e8 0072  ld   $72
              56e9 0096  ld   $96
              56ea 0063  ld   $63
              56eb 00ff  ld   $ff
              56ec 0021  ld   $21
              56ed 0038  ld   $38
              56ee 008c  ld   $8c
              56ef 0064  ld   $64
              56f0 0035  ld   $35
              56f1 0072  ld   $72
              56f2 009f  ld   $9f
              56f3 0063  ld   $63
              56f4 00ff  ld   $ff
              56f5 0059  ld   $59
              56f6 0000  ld   $00
              56f7 002b  ld   $2b
              56f8 0054  ld   $54
              56f9 0011  ld   $11
              56fa 00ae  ld   $ae
              56fb fe00  bra  ac          ;+-----------------------------------+
              56fc fcfd  bra  $56fd       ;|                                   |
              56fd 1418  ld   $18,y       ;| Trampoline for page $5600 lookups |
              56fe e006  jmp  y,$06       ;|                                   |
              56ff c218  st   [$18]       ;+-----------------------------------+
              5700 007c  ld   $7c
              5701 0099  ld   $99
              5702 0052  ld   $52
              5703 00ad  ld   $ad
              5704 002b  ld   $2b
              5705 0056  ld   $56
              5706 0021  ld   $21
              5707 0038  ld   $38
              5708 002b  ld   $2b
              5709 0096  ld   $96
              570a 0021  ld   $21
              570b 0054  ld   $54
              570c 002b  ld   $2b
              570d 0098  ld   $98
              570e 0011  ld   $11
              570f 0038  ld   $38
              5710 0006  ld   $06
              5711 0085  ld   $85
              5712 00a1  ld   $a1
              5713 0068  ld   $68
              5714 002b  ld   $2b
              5715 00ea  ld   $ea
              5716 0021  ld   $21
              5717 0056  ld   $56
              5718 00f0  ld   $f0
              5719 00ea  ld   $ea
              571a 0093  ld   $93
              571b 0052  ld   $52
              571c 0093  ld   $93
              571d 0054  ld   $54
              571e 0021  ld   $21
              571f 0056  ld   $56
              5720 0035  ld   $35
              5721 0072  ld   $72
              5722 00a3  ld   $a3
              5723 0093  ld   $93
              5724 0038  ld   $38
              5725 0021  ld   $21
              5726 0038  ld   $38
              5727 008c  ld   $8c
              5728 0064  ld   $64
              5729 0035  ld   $35
              572a 0072  ld   $72
              572b 00d3  ld   $d3
              572c 0063  ld   $63
              572d 00ff  ld   $ff
              572e 0021  ld   $21
              572f 0052  ld   $52
              5730 00e6  ld   $e6
              5731 0002  ld   $02
              5732 00fc  ld   $fc
              5733 0042  ld   $42
              5734 0035  ld   $35
              5735 0072  ld   $72
              5736 009f  ld   $9f
              5737 0063  ld   $63
              5738 00ff  ld   $ff
              5739 0075  ld   $75
              573a 0021  ld   $21
              573b 0038  ld   $38
              573c 00e6  ld   $e6
              573d 000f  ld   $0f
              573e 002b  ld   $2b
              573f 00e8  ld   $e8
              5740 0021  ld   $21
              5741 003a  ld   $3a
              5742 002b  ld   $2b
              5743 0082  ld   $82
              5744 0021  ld   $21
              5745 00e8  ld   $e8
              5746 0085  ld   $85
              5747 00ac  ld   $ac
              5748 0062  ld   $62
              5749 002b  ld   $2b
              574a 0082  ld   $82
              574b 0059  ld   $59
              574c 0000  ld   $00
              574d 0085  ld   $85
              574e 00f0  ld   $f0
              574f 0061  ld   $61
              5750 0085  ld   $85
              5751 0000  ld   $00
              5752 0004  ld   $04
              5753 0004  ld   $04
              5754 0000  ld   $00
              5755 00fa  ld   $fa
              5756 002b  ld   $2b
              5757 0058  ld   $58
              5758 0021  ld   $21
              5759 003a  ld   $3a
              575a 00e3  ld   $e3
              575b 000e  ld   $0e
              575c 002b  ld   $2b
              575d 00e8  ld   $e8
              575e 0021  ld   $21
              575f 0038  ld   $38
              5760 00e6  ld   $e6
              5761 0001  ld   $01
              5762 002b  ld   $2b
              5763 00ea  ld   $ea
              5764 0021  ld   $21
              5765 00e8  ld   $e8
              5766 002b  ld   $2b
              5767 0082  ld   $82
              5768 0021  ld   $21
              5769 00ea  ld   $ea
              576a 0085  ld   $85
              576b 00ac  ld   $ac
              576c 0062  ld   $62
              576d 002b  ld   $2b
              576e 005a  ld   $5a
              576f 0021  ld   $21
              5770 0058  ld   $58
              5771 002b  ld   $2b
              5772 005c  ld   $5c
              5773 0021  ld   $21
              5774 005a  ld   $5a
              5775 002b  ld   $2b
              5776 00b0  ld   $b0
              5777 0059  ld   $59
              5778 0001  ld   $01
              5779 002b  ld   $2b
              577a 00b2  ld   $b2
              577b 0021  ld   $21
              577c 005c  ld   $5c
              577d 002b  ld   $2b
              577e 0096  ld   $96
              577f 0059  ld   $59
              5780 0000  ld   $00
              5781 002b  ld   $2b
              5782 0098  ld   $98
              5783 0011  ld   $11
              5784 0038  ld   $38
              5785 0006  ld   $06
              5786 0085  ld   $85
              5787 00a1  ld   $a1
              5788 0068  ld   $68
              5789 00e3  ld   $e3
              578a 0001  ld   $01
              578b 002b  ld   $2b
              578c 005e  ld   $5e
              578d 0021  ld   $21
              578e 005e  ld   $5e
              578f 00ad  ld   $ad
              5790 002b  ld   $2b
              5791 0060  ld   $60
              5792 0021  ld   $21
              5793 005e  ld   $5e
              5794 00e6  ld   $e6
              5795 0001  ld   $01
              5796 00ad  ld   $ad
              5797 002b  ld   $2b
              5798 0062  ld   $62
              5799 0021  ld   $21
              579a 005c  ld   $5c
              579b 00b8  ld   $b8
              579c 003a  ld   $3a
              579d 00fc  ld   $fc
              579e 003c  ld   $3c
              579f 0035  ld   $35
              57a0 0072  ld   $72
              57a1 0065  ld   $65
              57a2 0021  ld   $21
              57a3 0062  ld   $62
              57a4 008c  ld   $8c
              57a5 0001  ld   $01
              57a6 0035  ld   $35
              57a7 0072  ld   $72
              57a8 0059  ld   $59
              57a9 0011  ld   $11
              57aa 003f  ld   $3f
              57ab 0020  ld   $20
              57ac 002b  ld   $2b
              57ad 00a2  ld   $a2
              57ae 0085  ld   $85
              57af 0060  ld   $60
              57b0 0004  ld   $04
              57b1 0011  ld   $11
              57b2 002a  ld   $2a
              57b3 0020  ld   $20
              57b4 002b  ld   $2b
              57b5 00a2  ld   $a2
              57b6 0021  ld   $21
              57b7 005e  ld   $5e
              57b8 002b  ld   $2b
              57b9 0044  ld   $44
              57ba 0085  ld   $85
              57bb 007b  ld   $7b
              57bc 0004  ld   $04
              57bd 0021  ld   $21
              57be 0062  ld   $62
              57bf 008c  ld   $8c
              57c0 0001  ld   $01
              57c1 0035  ld   $35
              57c2 0072  ld   $72
              57c3 0074  ld   $74
              57c4 0011  ld   $11
              57c5 0020  ld   $20
              57c6 003f  ld   $3f
              57c7 002b  ld   $2b
              57c8 00a2  ld   $a2
              57c9 0085  ld   $85
              57ca 007b  ld   $7b
              57cb 0004  ld   $04
              57cc 0011  ld   $11
              57cd 0020  ld   $20
              57ce 002a  ld   $2a
              57cf 002b  ld   $2b
              57d0 00a2  ld   $a2
              57d1 0059  ld   $59
              57d2 0002  ld   $02
              57d3 005e  ld   $5e
              57d4 00a4  ld   $a4
              57d5 0021  ld   $21
              57d6 005c  ld   $5c
              57d7 00b8  ld   $b8
              57d8 003a  ld   $3a
              57d9 00e9  ld   $e9
              57da 00e9  ld   $e9
              57db 00e9  ld   $e9
              57dc 005e  ld   $5e
              57dd 00a5  ld   $a5
              57de 0085  ld   $85
              57df 00a8  ld   $a8
              57e0 0064  ld   $64
              57e1 0021  ld   $21
              57e2 005e  ld   $5e
              57e3 0085  ld   $85
              57e4 00d1  ld   $d1
              57e5 0062  ld   $62
              57e6 0059  ld   $59
              57e7 000c  ld   $0c
              57e8 00b8  ld   $b8
              57e9 0060  ld   $60
              57ea 0085  ld   $85
              57eb 00e4  ld   $e4
              57ec 0063  ld   $63
              57ed 0021  ld   $21
              57ee 005c  ld   $5c
              57ef 0099  ld   $99
              57f0 00b2  ld   $b2
              57f1 002b  ld   $2b
              57f2 005c  ld   $5c
              57f3 00b8  ld   $b8
              57f4 00b0  ld   $b0
              57f5 0035  ld   $35
              57f6 0056  ld   $56
              57f7 0023  ld   $23
              57f8 0063  ld   $63
              57f9 00ff  ld   $ff
              57fa 0075  ld   $75
              57fb fe00  bra  ac          ;+-----------------------------------+
              57fc fcfd  bra  $57fd       ;|                                   |
              57fd 1418  ld   $18,y       ;| Trampoline for page $5700 lookups |
              57fe e006  jmp  y,$06       ;|                                   |
              57ff c218  st   [$18]       ;+-----------------------------------+
              5800 0021  ld   $21
              5801 0038  ld   $38
              5802 00e6  ld   $e6
              5803 000f  ld   $0f
              5804 002b  ld   $2b
              5805 00e8  ld   $e8
              5806 0021  ld   $21
              5807 003a  ld   $3a
              5808 002b  ld   $2b
              5809 0082  ld   $82
              580a 0021  ld   $21
              580b 00e8  ld   $e8
              580c 0085  ld   $85
              580d 00ac  ld   $ac
              580e 0062  ld   $62
              580f 002b  ld   $2b
              5810 0082  ld   $82
              5811 0059  ld   $59
              5812 0000  ld   $00
              5813 0085  ld   $85
              5814 00f0  ld   $f0
              5815 0061  ld   $61
              5816 002b  ld   $2b
              5817 0058  ld   $58
              5818 0021  ld   $21
              5819 0058  ld   $58
              581a 0099  ld   $99
              581b 003e  ld   $3e
              581c 002b  ld   $2b
              581d 0064  ld   $64
              581e 0021  ld   $21
              581f 0064  ld   $64
              5820 002b  ld   $2b
              5821 0096  ld   $96
              5822 0059  ld   $59
              5823 0000  ld   $00
              5824 002b  ld   $2b
              5825 0098  ld   $98
              5826 0011  ld   $11
              5827 0038  ld   $38
              5828 0006  ld   $06
              5829 0085  ld   $85
              582a 00a1  ld   $a1
              582b 0068  ld   $68
              582c 00e3  ld   $e3
              582d 0001  ld   $01
              582e 002b  ld   $2b
              582f 0066  ld   $66
              5830 0021  ld   $21
              5831 0066  ld   $66
              5832 00ad  ld   $ad
              5833 002b  ld   $2b
              5834 0068  ld   $68
              5835 0021  ld   $21
              5836 0066  ld   $66
              5837 00e6  ld   $e6
              5838 0001  ld   $01
              5839 00ad  ld   $ad
              583a 002b  ld   $2b
              583b 0062  ld   $62
              583c 0021  ld   $21
              583d 0062  ld   $62
              583e 008c  ld   $8c
              583f 0001  ld   $01
              5840 0035  ld   $35
              5841 0072  ld   $72
              5842 00ee  ld   $ee
              5843 0011  ld   $11
              5844 0020  ld   $20
              5845 003f  ld   $3f
              5846 002b  ld   $2b
              5847 00a2  ld   $a2
              5848 0085  ld   $85
              5849 00f5  ld   $f5
              584a 0004  ld   $04
              584b 0011  ld   $11
              584c 0020  ld   $20
              584d 002a  ld   $2a
              584e 002b  ld   $2b
              584f 00a2  ld   $a2
              5850 0059  ld   $59
              5851 0002  ld   $02
              5852 0085  ld   $85
              5853 0000  ld   $00
              5854 0005  ld   $05
              5855 0005  ld   $05
              5856 0000  ld   $00
              5857 00fd  ld   $fd
              5858 005e  ld   $5e
              5859 00a4  ld   $a4
              585a 0021  ld   $21
              585b 0064  ld   $64
              585c 00b8  ld   $b8
              585d 0058  ld   $58
              585e 00e9  ld   $e9
              585f 00e9  ld   $e9
              5860 00e9  ld   $e9
              5861 005e  ld   $5e
              5862 00a5  ld   $a5
              5863 0085  ld   $85
              5864 00a8  ld   $a8
              5865 0064  ld   $64
              5866 0021  ld   $21
              5867 0066  ld   $66
              5868 0085  ld   $85
              5869 00d1  ld   $d1
              586a 0062  ld   $62
              586b 0059  ld   $59
              586c 000c  ld   $0c
              586d 00b8  ld   $b8
              586e 0068  ld   $68
              586f 0085  ld   $85
              5870 00e4  ld   $e4
              5871 0063  ld   $63
              5872 0021  ld   $21
              5873 003c  ld   $3c
              5874 002b  ld   $2b
              5875 003e  ld   $3e
              5876 0021  ld   $21
              5877 0058  ld   $58
              5878 0099  ld   $99
              5879 003c  ld   $3c
              587a 002b  ld   $2b
              587b 006a  ld   $6a
              587c 0021  ld   $21
              587d 006a  ld   $6a
              587e 002b  ld   $2b
              587f 0096  ld   $96
              5880 0059  ld   $59
              5881 0000  ld   $00
              5882 002b  ld   $2b
              5883 0098  ld   $98
              5884 0011  ld   $11
              5885 0038  ld   $38
              5886 0006  ld   $06
              5887 0085  ld   $85
              5888 00a1  ld   $a1
              5889 0068  ld   $68
              588a 00e3  ld   $e3
              588b 0001  ld   $01
              588c 002b  ld   $2b
              588d 006c  ld   $6c
              588e 0021  ld   $21
              588f 006c  ld   $6c
              5890 00ad  ld   $ad
              5891 002b  ld   $2b
              5892 006e  ld   $6e
              5893 0021  ld   $21
              5894 006c  ld   $6c
              5895 00e6  ld   $e6
              5896 0001  ld   $01
              5897 00ad  ld   $ad
              5898 002b  ld   $2b
              5899 0062  ld   $62
              589a 0021  ld   $21
              589b 0062  ld   $62
              589c 008c  ld   $8c
              589d 0001  ld   $01
              589e 0035  ld   $35
              589f 0072  ld   $72
              58a0 004f  ld   $4f
              58a1 0011  ld   $11
              58a2 003f  ld   $3f
              58a3 0020  ld   $20
              58a4 002b  ld   $2b
              58a5 00a2  ld   $a2
              58a6 0085  ld   $85
              58a7 0056  ld   $56
              58a8 0005  ld   $05
              58a9 0011  ld   $11
              58aa 002a  ld   $2a
              58ab 0020  ld   $20
              58ac 002b  ld   $2b
              58ad 00a2  ld   $a2
              58ae 0059  ld   $59
              58af 0002  ld   $02
              58b0 005e  ld   $5e
              58b1 00a4  ld   $a4
              58b2 0021  ld   $21
              58b3 006a  ld   $6a
              58b4 00b8  ld   $b8
              58b5 0058  ld   $58
              58b6 00e9  ld   $e9
              58b7 00e9  ld   $e9
              58b8 00e9  ld   $e9
              58b9 005e  ld   $5e
              58ba 00a5  ld   $a5
              58bb 0085  ld   $85
              58bc 00a8  ld   $a8
              58bd 0064  ld   $64
              58be 0021  ld   $21
              58bf 006c  ld   $6c
              58c0 0085  ld   $85
              58c1 00d1  ld   $d1
              58c2 0062  ld   $62
              58c3 0059  ld   $59
              58c4 000c  ld   $0c
              58c5 00b8  ld   $b8
              58c6 006e  ld   $6e
              58c7 0085  ld   $85
              58c8 00e4  ld   $e4
              58c9 0063  ld   $63
              58ca 0021  ld   $21
              58cb 006c  ld   $6c
              58cc 002b  ld   $2b
              58cd 0044  ld   $44
              58ce 0063  ld   $63
              58cf 00ff  ld   $ff
              58d0 0075  ld   $75
              58d1 001a  ld   $1a
              58d2 0021  ld   $21
              58d3 0082  ld   $82
              58d4 00fc  ld   $fc
              58d5 002b  ld   $2b
              58d6 004e  ld   $4e
              58d7 0021  ld   $21
              58d8 004e  ld   $4e
              58d9 00e6  ld   $e6
              58da 0040  ld   $40
              58db 0035  ld   $35
              58dc 0056  ld   $56
              58dd 0087  ld   $87
              58de 0085  ld   $85
              58df 00c1  ld   $c1
              58e0 0005  ld   $05
              58e1 0011  ld   $11
              58e2 00e9  ld   $e9
              58e3 0002  ld   $02
              58e4 002b  ld   $2b
              58e5 0070  ld   $70
              58e6 0021  ld   $21
              58e7 004e  ld   $4e
              58e8 008c  ld   $8c
              58e9 0020  ld   $20
              58ea 0035  ld   $35
              58eb 0072  ld   $72
              58ec 0098  ld   $98
              58ed 0011  ld   $11
              58ee 00b1  ld   $b1
              58ef 000b  ld   $0b
              58f0 002b  ld   $2b
              58f1 0072  ld   $72
              58f2 0021  ld   $21
              58f3 004e  ld   $4e
              58f4 008c  ld   $8c
              58f5 0028  ld   $28
              58f6 0035  ld   $35
              58f7 0072  ld   $72
              58f8 00a4  ld   $a4
              58f9 0011  ld   $11
              58fa 00df  ld   $df
              58fb fe00  bra  ac          ;+-----------------------------------+
              58fc fcfd  bra  $58fd       ;|                                   |
              58fd 1418  ld   $18,y       ;| Trampoline for page $5800 lookups |
              58fe e006  jmp  y,$06       ;|                                   |
              58ff c218  st   [$18]       ;+-----------------------------------+
              5900 000b  ld   $0b
              5901 002b  ld   $2b
              5902 0072  ld   $72
              5903 0021  ld   $21
              5904 004e  ld   $4e
              5905 008c  ld   $8c
              5906 0038  ld   $38
              5907 0035  ld   $35
              5908 0072  ld   $72
              5909 00b0  ld   $b0
              590a 0011  ld   $11
              590b 0031  ld   $31
              590c 008a  ld   $8a
              590d 002b  ld   $2b
              590e 0072  ld   $72
              590f 0021  ld   $21
              5910 004e  ld   $4e
              5911 008c  ld   $8c
              5912 0040  ld   $40
              5913 0035  ld   $35
              5914 0072  ld   $72
              5915 00bc  ld   $bc
              5916 0011  ld   $11
              5917 0007  ld   $07
              5918 0059  ld   $59
              5919 002b  ld   $2b
              591a 0072  ld   $72
              591b 0085  ld   $85
              591c 0012  ld   $12
              591d 0006  ld   $06
              591e 0011  ld   $11
              591f 0018  ld   $18
              5920 000b  ld   $0b
              5921 002b  ld   $2b
              5922 0072  ld   $72
              5923 0021  ld   $21
              5924 004e  ld   $4e
              5925 008c  ld   $8c
              5926 00f0  ld   $f0
              5927 0035  ld   $35
              5928 003f  ld   $3f
              5929 00ce  ld   $ce
              592a 0085  ld   $85
              592b 00d8  ld   $d8
              592c 0005  ld   $05
              592d 0011  ld   $11
              592e 0000  ld   $00
              592f 0013  ld   $13
              5930 002b  ld   $2b
              5931 0072  ld   $72
              5932 0085  ld   $85
              5933 0012  ld   $12
              5934 0006  ld   $06
              5935 0021  ld   $21
              5936 004e  ld   $4e
              5937 008c  ld   $8c
              5938 00f8  ld   $f8
              5939 0035  ld   $35
              593a 003f  ld   $3f
              593b 00e0  ld   $e0
              593c 0085  ld   $85
              593d 0012  ld   $12
              593e 0006  ld   $06
              593f 0011  ld   $11
              5940 0070  ld   $70
              5941 005a  ld   $5a
              5942 00fc  ld   $fc
              5943 0030  ld   $30
              5944 0035  ld   $35
              5945 0072  ld   $72
              5946 00ed  ld   $ed
              5947 0011  ld   $11
              5948 0007  ld   $07
              5949 0059  ld   $59
              594a 002b  ld   $2b
              594b 0072  ld   $72
              594c 0011  ld   $11
              594d 0072  ld   $72
              594e 005a  ld   $5a
              594f 00fc  ld   $fc
              5950 0030  ld   $30
              5951 0035  ld   $35
              5952 003f  ld   $3f
              5953 00f8  ld   $f8
              5954 0085  ld   $85
              5955 0005  ld   $05
              5956 0006  ld   $06
              5957 0085  ld   $85
              5958 0000  ld   $00
              5959 0006  ld   $06
              595a 0006  ld   $06
              595b 0000  ld   $00
              595c 0037  ld   $37
              595d 0011  ld   $11
              595e 0007  ld   $07
              595f 0059  ld   $59
              5960 002b  ld   $2b
              5961 0072  ld   $72
              5962 0011  ld   $11
              5963 0072  ld   $72
              5964 005c  ld   $5c
              5965 00fc  ld   $fc
              5966 0030  ld   $30
              5967 0035  ld   $35
              5968 0072  ld   $72
              5969 0010  ld   $10
              596a 0011  ld   $11
              596b 0007  ld   $07
              596c 005b  ld   $5b
              596d 002b  ld   $2b
              596e 0072  ld   $72
              596f 0063  ld   $63
              5970 00ff  ld   $ff
              5971 0075  ld   $75
              5972 0011  ld   $11
              5973 00ef  ld   $ef
              5974 007c  ld   $7c
              5975 002b  ld   $2b
              5976 0082  ld   $82
              5977 0059  ld   $59
              5978 0003  ld   $03
              5979 00f0  ld   $f0
              597a 0082  ld   $82
              597b 0011  ld   $11
              597c 00a0  ld   $a0
              597d 007a  ld   $7a
              597e 00ad  ld   $ad
              597f 002b  ld   $2b
              5980 0074  ld   $74
              5981 0021  ld   $21
              5982 0074  ld   $74
              5983 0035  ld   $35
              5984 004d  ld   $4d
              5985 002a  ld   $2a
              5986 0085  ld   $85
              5987 00c3  ld   $c3
              5988 0008  ld   $08
              5989 0059  ld   $59
              598a 0001  ld   $01
              598b 002b  ld   $2b
              598c 005c  ld   $5c
              598d 0021  ld   $21
              598e 0074  ld   $74
              598f 00e3  ld   $e3
              5990 0001  ld   $01
              5991 0085  ld   $85
              5992 00a0  ld   $a0
              5993 0008  ld   $08
              5994 0006  ld   $06
              5995 0038  ld   $38
              5996 00c8  ld   $c8
              5997 00f1  ld   $f1
              5998 0079  ld   $79
              5999 00e2  ld   $e2
              599a 0079  ld   $79
              599b 00d3  ld   $d3
              599c 0079  ld   $79
              599d 00c4  ld   $c4
              599e 0079  ld   $79
              599f 00b5  ld   $b5
              59a0 0079  ld   $79
              59a1 00a6  ld   $a6
              59a2 0079  ld   $79
              59a3 00f1  ld   $f1
              59a4 0078  ld   $78
              59a5 00e2  ld   $e2
              59a6 0078  ld   $78
              59a7 00d3  ld   $d3
              59a8 0078  ld   $78
              59a9 00c4  ld   $c4
              59aa 0078  ld   $78
              59ab 00b5  ld   $b5
              59ac 0078  ld   $78
              59ad 00a6  ld   $a6
              59ae 0078  ld   $78
              59af 00f1  ld   $f1
              59b0 0077  ld   $77
              59b1 00e2  ld   $e2
              59b2 0077  ld   $77
              59b3 00d3  ld   $d3
              59b4 0077  ld   $77
              59b5 00c4  ld   $c4
              59b6 0077  ld   $77
              59b7 00b5  ld   $b5
              59b8 0077  ld   $77
              59b9 00a6  ld   $a6
              59ba 0077  ld   $77
              59bb 00f1  ld   $f1
              59bc 0076  ld   $76
              59bd 00e2  ld   $e2
              59be 0076  ld   $76
              59bf 00d3  ld   $d3
              59c0 0076  ld   $76
              59c1 00c4  ld   $c4
              59c2 0076  ld   $76
              59c3 00b5  ld   $b5
              59c4 0076  ld   $76
              59c5 00a6  ld   $a6
              59c6 0076  ld   $76
              59c7 00f1  ld   $f1
              59c8 0075  ld   $75
              59c9 00e2  ld   $e2
              59ca 0075  ld   $75
              59cb 00d3  ld   $d3
              59cc 0075  ld   $75
              59cd 00c4  ld   $c4
              59ce 0075  ld   $75
              59cf 00b5  ld   $b5
              59d0 0075  ld   $75
              59d1 00a6  ld   $a6
              59d2 0075  ld   $75
              59d3 00f1  ld   $f1
              59d4 0074  ld   $74
              59d5 00e2  ld   $e2
              59d6 0074  ld   $74
              59d7 00d3  ld   $d3
              59d8 0074  ld   $74
              59d9 00c4  ld   $c4
              59da 0074  ld   $74
              59db 00b5  ld   $b5
              59dc 0074  ld   $74
              59dd 00a6  ld   $a6
              59de 0074  ld   $74
              59df 00f1  ld   $f1
              59e0 0073  ld   $73
              59e1 00e2  ld   $e2
              59e2 0073  ld   $73
              59e3 00d3  ld   $d3
              59e4 0073  ld   $73
              59e5 00c4  ld   $c4
              59e6 0073  ld   $73
              59e7 00b5  ld   $b5
              59e8 0073  ld   $73
              59e9 00a6  ld   $a6
              59ea 0073  ld   $73
              59eb 00f1  ld   $f1
              59ec 0072  ld   $72
              59ed 00e2  ld   $e2
              59ee 0072  ld   $72
              59ef 00d3  ld   $d3
              59f0 0072  ld   $72
              59f1 00c4  ld   $c4
              59f2 0072  ld   $72
              59f3 00b5  ld   $b5
              59f4 0072  ld   $72
              59f5 00a6  ld   $a6
              59f6 0072  ld   $72
              59f7 00f1  ld   $f1
              59f8 0071  ld   $71
              59f9 00e2  ld   $e2
              59fa 0071  ld   $71
              59fb fe00  bra  ac          ;+-----------------------------------+
              59fc fcfd  bra  $59fd       ;|                                   |
              59fd 1418  ld   $18,y       ;| Trampoline for page $5900 lookups |
              59fe e006  jmp  y,$06       ;|                                   |
              59ff c218  st   [$18]       ;+-----------------------------------+
              5a00 00d3  ld   $d3
              5a01 0071  ld   $71
              5a02 00c4  ld   $c4
              5a03 0071  ld   $71
              5a04 00b5  ld   $b5
              5a05 0071  ld   $71
              5a06 00a6  ld   $a6
              5a07 0071  ld   $71
              5a08 00f1  ld   $f1
              5a09 0070  ld   $70
              5a0a 00e2  ld   $e2
              5a0b 0070  ld   $70
              5a0c 00d3  ld   $d3
              5a0d 0070  ld   $70
              5a0e 00c4  ld   $c4
              5a0f 0070  ld   $70
              5a10 00b5  ld   $b5
              5a11 0070  ld   $70
              5a12 00a6  ld   $a6
              5a13 0070  ld   $70
              5a14 00f1  ld   $f1
              5a15 006f  ld   $6f
              5a16 00e2  ld   $e2
              5a17 006f  ld   $6f
              5a18 00d3  ld   $d3
              5a19 006f  ld   $6f
              5a1a 00c4  ld   $c4
              5a1b 006f  ld   $6f
              5a1c 00b5  ld   $b5
              5a1d 006f  ld   $6f
              5a1e 00a6  ld   $a6
              5a1f 006f  ld   $6f
              5a20 00f1  ld   $f1
              5a21 006e  ld   $6e
              5a22 00e2  ld   $e2
              5a23 006e  ld   $6e
              5a24 00d3  ld   $d3
              5a25 006e  ld   $6e
              5a26 00c4  ld   $c4
              5a27 006e  ld   $6e
              5a28 00b5  ld   $b5
              5a29 006e  ld   $6e
              5a2a 00a6  ld   $a6
              5a2b 006e  ld   $6e
              5a2c 00f1  ld   $f1
              5a2d 006d  ld   $6d
              5a2e 00e2  ld   $e2
              5a2f 006d  ld   $6d
              5a30 00d3  ld   $d3
              5a31 006d  ld   $6d
              5a32 00c4  ld   $c4
              5a33 006d  ld   $6d
              5a34 00b5  ld   $b5
              5a35 006d  ld   $6d
              5a36 00a6  ld   $a6
              5a37 006d  ld   $6d
              5a38 00f1  ld   $f1
              5a39 006c  ld   $6c
              5a3a 00e2  ld   $e2
              5a3b 006c  ld   $6c
              5a3c 00d3  ld   $d3
              5a3d 006c  ld   $6c
              5a3e 00c4  ld   $c4
              5a3f 006c  ld   $6c
              5a40 00b5  ld   $b5
              5a41 006c  ld   $6c
              5a42 00a6  ld   $a6
              5a43 006c  ld   $6c
              5a44 00f1  ld   $f1
              5a45 006b  ld   $6b
              5a46 00e2  ld   $e2
              5a47 006b  ld   $6b
              5a48 00d3  ld   $d3
              5a49 006b  ld   $6b
              5a4a 00c4  ld   $c4
              5a4b 006b  ld   $6b
              5a4c 00b5  ld   $b5
              5a4d 006b  ld   $6b
              5a4e 00a6  ld   $a6
              5a4f 006b  ld   $6b
              5a50 00f1  ld   $f1
              5a51 006a  ld   $6a
              5a52 00e2  ld   $e2
              5a53 006a  ld   $6a
              5a54 00d3  ld   $d3
              5a55 006a  ld   $6a
              5a56 00c4  ld   $c4
              5a57 006a  ld   $6a
              5a58 00b5  ld   $b5
              5a59 006a  ld   $6a
              5a5a 00a6  ld   $a6
              5a5b 006a  ld   $6a
              5a5c 00f1  ld   $f1
              5a5d 0069  ld   $69
              5a5e 00e2  ld   $e2
              5a5f 0069  ld   $69
              5a60 00d3  ld   $d3
              5a61 0069  ld   $69
              5a62 00c4  ld   $c4
              5a63 0069  ld   $69
              5a64 0008  ld   $08
              5a65 00a0  ld   $a0
              5a66 005e  ld   $5e
              5a67 002b  ld   $2b
              5a68 00b0  ld   $b0
              5a69 0059  ld   $59
              5a6a 0001  ld   $01
              5a6b 002b  ld   $2b
              5a6c 00b2  ld   $b2
              5a6d 0011  ld   $11
              5a6e 00ef  ld   $ef
              5a6f 007c  ld   $7c
              5a70 0099  ld   $99
              5a71 005c  ld   $5c
              5a72 002b  ld   $2b
              5a73 00e8  ld   $e8
              5a74 0011  ld   $11
              5a75 00a0  ld   $a0
              5a76 007a  ld   $7a
              5a77 0099  ld   $99
              5a78 005c  ld   $5c
              5a79 00ad  ld   $ad
              5a7a 00f0  ld   $f0
              5a7b 00e8  ld   $e8
              5a7c 0021  ld   $21
              5a7d 005c  ld   $5c
              5a7e 0099  ld   $99
              5a7f 00b2  ld   $b2
              5a80 002b  ld   $2b
              5a81 005c  ld   $5c
              5a82 00b8  ld   $b8
              5a83 00b0  ld   $b0
              5a84 0035  ld   $35
              5a85 0056  ld   $56
              5a86 00a4  ld   $a4
              5a87 0085  ld   $85
              5a88 00cc  ld   $cc
              5a89 0008  ld   $08
              5a8a 0011  ld   $11
              5a8b 00f0  ld   $f0
              5a8c 007c  ld   $7c
              5a8d 002b  ld   $2b
              5a8e 0082  ld   $82
              5a8f 0059  ld   $59
              5a90 0000  ld   $00
              5a91 00f0  ld   $f0
              5a92 0082  ld   $82
              5a93 0059  ld   $59
              5a94 0001  ld   $01
              5a95 0099  ld   $99
              5a96 0074  ld   $74
              5a97 00e3  ld   $e3
              5a98 0001  ld   $01
              5a99 002b  ld   $2b
              5a9a 0034  ld   $34
              5a9b 0085  ld   $85
              5a9c 001f  ld   $1f
              5a9d 0003  ld   $03
              5a9e 0085  ld   $85
              5a9f 00a5  ld   $a5
              5aa0 000d  ld   $0d
              5aa1 0011  ld   $11
              5aa2 00fe  ld   $fe
              5aa3 007c  ld   $7c
              5aa4 002b  ld   $2b
              5aa5 0084  ld   $84
              5aa6 0011  ld   $11
              5aa7 00a0  ld   $a0
              5aa8 007a  ld   $7a
              5aa9 0085  ld   $85
              5aaa 00d2  ld   $d2
              5aab 0061  ld   $61
              5aac 0063  ld   $63
              5aad 00ff  ld   $ff
              5aae 0075  ld   $75
              5aaf 0085  ld   $85
              5ab0 00c2  ld   $c2
              5ab1 000d  ld   $0d
              5ab2 0011  ld   $11
              5ab3 00ef  ld   $ef
              5ab4 007c  ld   $7c
              5ab5 002b  ld   $2b
              5ab6 0082  ld   $82
              5ab7 0059  ld   $59
              5ab8 0002  ld   $02
              5ab9 00f0  ld   $f0
              5aba 0082  ld   $82
              5abb 0021  ld   $21
              5abc 0044  ld   $44
              5abd 002b  ld   $2b
              5abe 0084  ld   $84
              5abf 0011  ld   $11
              5ac0 00a0  ld   $a0
              5ac1 007d  ld   $7d
              5ac2 0085  ld   $85
              5ac3 00a0  ld   $a0
              5ac4 0009  ld   $09
              5ac5 0009  ld   $09
              5ac6 00a0  ld   $a0
              5ac7 005f  ld   $5f
              5ac8 0085  ld   $85
              5ac9 00d2  ld   $d2
              5aca 0061  ld   $61
              5acb 0011  ld   $11
              5acc 00a0  ld   $a0
              5acd 007d  ld   $7d
              5ace 00ad  ld   $ad
              5acf 002b  ld   $2b
              5ad0 0074  ld   $74
              5ad1 0059  ld   $59
              5ad2 0001  ld   $01
              5ad3 002b  ld   $2b
              5ad4 005c  ld   $5c
              5ad5 0021  ld   $21
              5ad6 0074  ld   $74
              5ad7 00e3  ld   $e3
              5ad8 0001  ld   $01
              5ad9 002b  ld   $2b
              5ada 00b0  ld   $b0
              5adb 0059  ld   $59
              5adc 0001  ld   $01
              5add 002b  ld   $2b
              5ade 00b2  ld   $b2
              5adf 0011  ld   $11
              5ae0 00ef  ld   $ef
              5ae1 007c  ld   $7c
              5ae2 0099  ld   $99
              5ae3 005c  ld   $5c
              5ae4 002b  ld   $2b
              5ae5 00e8  ld   $e8
              5ae6 0011  ld   $11
              5ae7 00a0  ld   $a0
              5ae8 007d  ld   $7d
              5ae9 0099  ld   $99
              5aea 005c  ld   $5c
              5aeb 00ad  ld   $ad
              5aec 00f0  ld   $f0
              5aed 00e8  ld   $e8
              5aee 0021  ld   $21
              5aef 005c  ld   $5c
              5af0 0099  ld   $99
              5af1 00b2  ld   $b2
              5af2 002b  ld   $2b
              5af3 005c  ld   $5c
              5af4 00b8  ld   $b8
              5af5 00b0  ld   $b0
              5af6 0035  ld   $35
              5af7 0056  ld   $56
              5af8 00b5  ld   $b5
              5af9 0011  ld   $11
              5afa 0020  ld   $20
              5afb fe00  bra  ac          ;+-----------------------------------+
              5afc fcfd  bra  $5afd       ;|                                   |
              5afd 1418  ld   $18,y       ;| Trampoline for page $5a00 lookups |
              5afe e006  jmp  y,$06       ;|                                   |
              5aff c218  st   [$18]       ;+-----------------------------------+
              5b00 000f  ld   $0f
              5b01 002b  ld   $2b
              5b02 00a2  ld   $a2
              5b03 0085  ld   $85
              5b04 00a3  ld   $a3
              5b05 0066  ld   $66
              5b06 0085  ld   $85
              5b07 00cd  ld   $cd
              5b08 0064  ld   $64
              5b09 0059  ld   $59
              5b0a 0001  ld   $01
              5b0b 0099  ld   $99
              5b0c 0074  ld   $74
              5b0d 00e3  ld   $e3
              5b0e 0001  ld   $01
              5b0f 002b  ld   $2b
              5b10 0034  ld   $34
              5b11 0085  ld   $85
              5b12 001f  ld   $1f
              5b13 0003  ld   $03
              5b14 0021  ld   $21
              5b15 0030  ld   $30
              5b16 002b  ld   $2b
              5b17 0024  ld   $24
              5b18 0011  ld   $11
              5b19 0000  ld   $00
              5b1a 0002  ld   $02
              5b1b 0085  ld   $85
              5b1c 00a0  ld   $a0
              5b1d 0064  ld   $64
              5b1e 0063  ld   $63
              5b1f 00ff  ld   $ff
              5b20 0075  ld   $75
              5b21 001a  ld   $1a
              5b22 000f  ld   $0f
              5b23 002b  ld   $2b
              5b24 0076  ld   $76
              5b25 0021  ld   $21
              5b26 0076  ld   $76
              5b27 00fc  ld   $fc
              5b28 004c  ld   $4c
              5b29 0085  ld   $85
              5b2a 00a0  ld   $a0
              5b2b 000a  ld   $0a
              5b2c 000a  ld   $0a
              5b2d 00a0  ld   $a0
              5b2e 005e  ld   $5e
              5b2f 0035  ld   $35
              5b30 003f  ld   $3f
              5b31 00b4  ld   $b4
              5b32 0059  ld   $59
              5b33 0000  ld   $00
              5b34 002b  ld   $2b
              5b35 004a  ld   $4a
              5b36 0021  ld   $21
              5b37 0076  ld   $76
              5b38 002b  ld   $2b
              5b39 004c  ld   $4c
              5b3a 0021  ld   $21
              5b3b 0076  ld   $76
              5b3c 002b  ld   $2b
              5b3d 0082  ld   $82
              5b3e 0059  ld   $59
              5b3f 0000  ld   $00
              5b40 002b  ld   $2b
              5b41 0084  ld   $84
              5b42 0085  ld   $85
              5b43 00cd  ld   $cd
              5b44 0065  ld   $65
              5b45 0021  ld   $21
              5b46 004a  ld   $4a
              5b47 00e6  ld   $e6
              5b48 0014  ld   $14
              5b49 0035  ld   $35
              5b4a 004d  ld   $4d
              5b4b 00be  ld   $be
              5b4c 0085  ld   $85
              5b4d 00da  ld   $da
              5b4e 000a  ld   $0a
              5b4f 0021  ld   $21
              5b50 004a  ld   $4a
              5b51 002b  ld   $2b
              5b52 00a0  ld   $a0
              5b53 0085  ld   $85
              5b54 00a0  ld   $a0
              5b55 0067  ld   $67
              5b56 0082  ld   $82
              5b57 0001  ld   $01
              5b58 0035  ld   $35
              5b59 0072  ld   $72
              5b5a 00cd  ld   $cd
              5b5b 0085  ld   $85
              5b5c 00da  ld   $da
              5b5d 000a  ld   $0a
              5b5e 0021  ld   $21
              5b5f 0076  ld   $76
              5b60 002b  ld   $2b
              5b61 0082  ld   $82
              5b62 0059  ld   $59
              5b63 0000  ld   $00
              5b64 002b  ld   $2b
              5b65 0084  ld   $84
              5b66 0085  ld   $85
              5b67 00cd  ld   $cd
              5b68 0065  ld   $65
              5b69 0063  ld   $63
              5b6a 00ff  ld   $ff
              5b6b 0075  ld   $75
              5b6c 0085  ld   $85
              5b6d 00ae  ld   $ae
              5b6e 000c  ld   $0c
              5b6f 0063  ld   $63
              5b70 00ff  ld   $ff
              5b71 0075  ld   $75
              5b72 0085  ld   $85
              5b73 00ae  ld   $ae
              5b74 000c  ld   $0c
              5b75 0063  ld   $63
              5b76 00ff  ld   $ff
              5b77 0075  ld   $75
              5b78 0021  ld   $21
              5b79 003a  ld   $3a
              5b7a 00e3  ld   $e3
              5b7b 000f  ld   $0f
              5b7c 002b  ld   $2b
              5b7d 003a  ld   $3a
              5b7e 0021  ld   $21
              5b7f 0038  ld   $38
              5b80 00e6  ld   $e6
              5b81 000f  ld   $0f
              5b82 002b  ld   $2b
              5b83 00e8  ld   $e8
              5b84 0021  ld   $21
              5b85 003a  ld   $3a
              5b86 002b  ld   $2b
              5b87 0082  ld   $82
              5b88 0021  ld   $21
              5b89 00e8  ld   $e8
              5b8a 0085  ld   $85
              5b8b 00a0  ld   $a0
              5b8c 000b  ld   $0b
              5b8d 000b  ld   $0b
              5b8e 00a0  ld   $a0
              5b8f 005e  ld   $5e
              5b90 0085  ld   $85
              5b91 00ac  ld   $ac
              5b92 0062  ld   $62
              5b93 002b  ld   $2b
              5b94 0082  ld   $82
              5b95 0059  ld   $59
              5b96 0000  ld   $00
              5b97 0085  ld   $85
              5b98 00f0  ld   $f0
              5b99 0061  ld   $61
              5b9a 002b  ld   $2b
              5b9b 003a  ld   $3a
              5b9c 0085  ld   $85
              5b9d 00e0  ld   $e0
              5b9e 0003  ld   $03
              5b9f 0063  ld   $63
              5ba0 00ff  ld   $ff
              5ba1 0075  ld   $75
              5ba2 0021  ld   $21
              5ba3 003a  ld   $3a
              5ba4 00e6  ld   $e6
              5ba5 000f  ld   $0f
              5ba6 002b  ld   $2b
              5ba7 003a  ld   $3a
              5ba8 0021  ld   $21
              5ba9 003a  ld   $3a
              5baa 002b  ld   $2b
              5bab 0082  ld   $82
              5bac 0059  ld   $59
              5bad 0000  ld   $00
              5bae 0085  ld   $85
              5baf 00f0  ld   $f0
              5bb0 0061  ld   $61
              5bb1 002b  ld   $2b
              5bb2 003a  ld   $3a
              5bb3 0085  ld   $85
              5bb4 00e0  ld   $e0
              5bb5 0003  ld   $03
              5bb6 0063  ld   $63
              5bb7 00ff  ld   $ff
              5bb8 0075  ld   $75
              5bb9 0093  ld   $93
              5bba 003c  ld   $3c
              5bbb 0021  ld   $21
              5bbc 0038  ld   $38
              5bbd 00e6  ld   $e6
              5bbe 0001  ld   $01
              5bbf 002b  ld   $2b
              5bc0 0082  ld   $82
              5bc1 0059  ld   $59
              5bc2 000e  ld   $0e
              5bc3 0085  ld   $85
              5bc4 00ac  ld   $ac
              5bc5 0062  ld   $62
              5bc6 002b  ld   $2b
              5bc7 00ea  ld   $ea
              5bc8 0021  ld   $21
              5bc9 003c  ld   $3c
              5bca 00b8  ld   $b8
              5bcb 00ea  ld   $ea
              5bcc 0035  ld   $35
              5bcd 0056  ld   $56
              5bce 00e1  ld   $e1
              5bcf 0059  ld   $59
              5bd0 0000  ld   $00
              5bd1 002b  ld   $2b
              5bd2 003c  ld   $3c
              5bd3 0085  ld   $85
              5bd4 00a4  ld   $a4
              5bd5 0004  ld   $04
              5bd6 0063  ld   $63
              5bd7 00ff  ld   $ff
              5bd8 0075  ld   $75
              5bd9 0021  ld   $21
              5bda 003c  ld   $3c
              5bdb 00e6  ld   $e6
              5bdc 0001  ld   $01
              5bdd 002b  ld   $2b
              5bde 003c  ld   $3c
              5bdf 0021  ld   $21
              5be0 003c  ld   $3c
              5be1 0035  ld   $35
              5be2 0050  ld   $50
              5be3 00f5  ld   $f5
              5be4 0085  ld   $85
              5be5 00a9  ld   $a9
              5be6 000c  ld   $0c
              5be7 0021  ld   $21
              5be8 0038  ld   $38
              5be9 00e6  ld   $e6
              5bea 0001  ld   $01
              5beb 0085  ld   $85
              5bec 00a0  ld   $a0
              5bed 000c  ld   $0c
              5bee 000c  ld   $0c
              5bef 00a0  ld   $a0
              5bf0 005e  ld   $5e
              5bf1 002b  ld   $2b
              5bf2 0082  ld   $82
              5bf3 0059  ld   $59
              5bf4 000e  ld   $0e
              5bf5 0085  ld   $85
              5bf6 00ac  ld   $ac
              5bf7 0062  ld   $62
              5bf8 002b  ld   $2b
              5bf9 003c  ld   $3c
              5bfa 0085  ld   $85
              5bfb fe00  bra  ac          ;+-----------------------------------+
              5bfc fcfd  bra  $5bfd       ;|                                   |
              5bfd 1418  ld   $18,y       ;| Trampoline for page $5b00 lookups |
              5bfe e006  jmp  y,$06       ;|                                   |
              5bff c218  st   [$18]       ;+-----------------------------------+
              5c00 00a4  ld   $a4
              5c01 0004  ld   $04
              5c02 0063  ld   $63
              5c03 00ff  ld   $ff
              5c04 0075  ld   $75
              5c05 0021  ld   $21
              5c06 0044  ld   $44
              5c07 00e6  ld   $e6
              5c08 0001  ld   $01
              5c09 00ad  ld   $ad
              5c0a 002b  ld   $2b
              5c0b 0078  ld   $78
              5c0c 0021  ld   $21
              5c0d 0078  ld   $78
              5c0e 008c  ld   $8c
              5c0f 0001  ld   $01
              5c10 0035  ld   $35
              5c11 003f  ld   $3f
              5c12 00be  ld   $be
              5c13 0085  ld   $85
              5c14 00ca  ld   $ca
              5c15 000c  ld   $0c
              5c16 0059  ld   $59
              5c17 0000  ld   $00
              5c18 002b  ld   $2b
              5c19 0046  ld   $46
              5c1a 0085  ld   $85
              5c1b 00e7  ld   $e7
              5c1c 0008  ld   $08
              5c1d 0085  ld   $85
              5c1e 00a3  ld   $a3
              5c1f 000d  ld   $0d
              5c20 0021  ld   $21
              5c21 0078  ld   $78
              5c22 008c  ld   $8c
              5c23 0002  ld   $02
              5c24 0035  ld   $35
              5c25 003f  ld   $3f
              5c26 00d2  ld   $d2
              5c27 0085  ld   $85
              5c28 00e5  ld   $e5
              5c29 000c  ld   $0c
              5c2a 0059  ld   $59
              5c2b 0001  ld   $01
              5c2c 002b  ld   $2b
              5c2d 0046  ld   $46
              5c2e 0021  ld   $21
              5c2f 0044  ld   $44
              5c30 002b  ld   $2b
              5c31 0084  ld   $84
              5c32 0011  ld   $11
              5c33 00a0  ld   $a0
              5c34 007a  ld   $7a
              5c35 0085  ld   $85
              5c36 00d2  ld   $d2
              5c37 0061  ld   $61
              5c38 0085  ld   $85
              5c39 00a3  ld   $a3
              5c3a 000d  ld   $0d
              5c3b 0021  ld   $21
              5c3c 0078  ld   $78
              5c3d 008c  ld   $8c
              5c3e 0003  ld   $03
              5c3f 0035  ld   $35
              5c40 003f  ld   $3f
              5c41 00ed  ld   $ed
              5c42 0085  ld   $85
              5c43 00a3  ld   $a3
              5c44 000d  ld   $0d
              5c45 0059  ld   $59
              5c46 0002  ld   $02
              5c47 002b  ld   $2b
              5c48 0046  ld   $46
              5c49 0011  ld   $11
              5c4a 00fe  ld   $fe
              5c4b 007c  ld   $7c
              5c4c 002b  ld   $2b
              5c4d 0084  ld   $84
              5c4e 0011  ld   $11
              5c4f 00a0  ld   $a0
              5c50 007a  ld   $7a
              5c51 0085  ld   $85
              5c52 00a0  ld   $a0
              5c53 000d  ld   $0d
              5c54 000d  ld   $0d
              5c55 00a0  ld   $a0
              5c56 005f  ld   $5f
              5c57 0085  ld   $85
              5c58 00d2  ld   $d2
              5c59 0061  ld   $61
              5c5a 0063  ld   $63
              5c5b 00ff  ld   $ff
              5c5c 0075  ld   $75
              5c5d 0021  ld   $21
              5c5e 0072  ld   $72
              5c5f 002b  ld   $2b
              5c60 0022  ld   $22
              5c61 0059  ld   $59
              5c62 0048  ld   $48
              5c63 002b  ld   $2b
              5c64 0024  ld   $24
              5c65 0059  ld   $59
              5c66 00cf  ld   $cf
              5c67 005e  ld   $5e
              5c68 0027  ld   $27
              5c69 00b4  ld   $b4
              5c6a 00fe  ld   $fe
              5c6b 001a  ld   $1a
              5c6c 0048  ld   $48
              5c6d 0035  ld   $35
              5c6e 0072  ld   $72
              5c6f 00a8  ld   $a8
              5c70 0059  ld   $59
              5c71 0002  ld   $02
              5c72 002b  ld   $2b
              5c73 0082  ld   $82
              5c74 0085  ld   $85
              5c75 00cc  ld   $cc
              5c76 0063  ld   $63
              5c77 0063  ld   $63
              5c78 00ff  ld   $ff
              5c79 0075  ld   $75
              5c7a 0059  ld   $59
              5c7b 0001  ld   $01
              5c7c 002b  ld   $2b
              5c7d 0034  ld   $34
              5c7e 0011  ld   $11
              5c7f 00ef  ld   $ef
              5c80 007c  ld   $7c
              5c81 002b  ld   $2b
              5c82 0082  ld   $82
              5c83 0059  ld   $59
              5c84 0006  ld   $06
              5c85 00f0  ld   $f0
              5c86 0082  ld   $82
              5c87 0085  ld   $85
              5c88 001f  ld   $1f
              5c89 0003  ld   $03
              5c8a 0085  ld   $85
              5c8b 00b7  ld   $b7
              5c8c 0061  ld   $61
              5c8d 0063  ld   $63
              5c8e 00ff  ld   $ff
              5c8f 0075  ld   $75
              5c90 0059  ld   $59
              5c91 0001  ld   $01
              5c92 002b  ld   $2b
              5c93 0034  ld   $34
              5c94 0011  ld   $11
              5c95 00ef  ld   $ef
              5c96 007c  ld   $7c
              5c97 002b  ld   $2b
              5c98 0082  ld   $82
              5c99 0059  ld   $59
              5c9a 0001  ld   $01
              5c9b 00f0  ld   $f0
              5c9c 0082  ld   $82
              5c9d 0085  ld   $85
              5c9e 001f  ld   $1f
              5c9f 0003  ld   $03
              5ca0 0063  ld   $63
              5ca1 00ff  ld   $ff
              5ca2 0075  ld   $75
              5ca3 0059  ld   $59
              5ca4 0001  ld   $01
              5ca5 002b  ld   $2b
              5ca6 0034  ld   $34
              5ca7 0011  ld   $11
              5ca8 00ef  ld   $ef
              5ca9 007c  ld   $7c
              5caa 002b  ld   $2b
              5cab 0082  ld   $82
              5cac 0059  ld   $59
              5cad 0004  ld   $04
              5cae 00f0  ld   $f0
              5caf 0082  ld   $82
              5cb0 0085  ld   $85
              5cb1 001f  ld   $1f
              5cb2 0003  ld   $03
              5cb3 0085  ld   $85
              5cb4 00a0  ld   $a0
              5cb5 000e  ld   $0e
              5cb6 000e  ld   $0e
              5cb7 00a0  ld   $a0
              5cb8 003e  ld   $3e
              5cb9 0063  ld   $63
              5cba 00ff  ld   $ff
              5cbb 0075  ld   $75
              5cbc 0059  ld   $59
              5cbd 0001  ld   $01
              5cbe 002b  ld   $2b
              5cbf 0034  ld   $34
              5cc0 0011  ld   $11
              5cc1 00ef  ld   $ef
              5cc2 007c  ld   $7c
              5cc3 002b  ld   $2b
              5cc4 0082  ld   $82
              5cc5 0059  ld   $59
              5cc6 0005  ld   $05
              5cc7 00f0  ld   $f0
              5cc8 0082  ld   $82
              5cc9 0085  ld   $85
              5cca 001f  ld   $1f
              5ccb 0003  ld   $03
              5ccc 0085  ld   $85
              5ccd 00a5  ld   $a5
              5cce 000d  ld   $0d
              5ccf 0063  ld   $63
              5cd0 00ff  ld   $ff
              5cd1 0075  ld   $75
              5cd2 0059  ld   $59
              5cd3 0034  ld   $34
              5cd4 002b  ld   $2b
              5cd5 009c  ld   $9c
              5cd6 0085  ld   $85
              5cd7 00a4  ld   $a4
              5cd8 0063  ld   $63
              5cd9 0085  ld   $85
              5cda 0078  ld   $78
              5cdb 0005  ld   $05
              5cdc 0011  ld   $11
              5cdd 00ef  ld   $ef
              5cde 007c  ld   $7c
              5cdf 002b  ld   $2b
              5ce0 0032  ld   $32
              5ce1 0059  ld   $59
              5ce2 0002  ld   $02
              5ce3 002b  ld   $2b
              5ce4 0082  ld   $82
              5ce5 0085  ld   $85
              5ce6 00c8  ld   $c8
              5ce7 0061  ld   $61
              5ce8 0011  ld   $11
              5ce9 0020  ld   $20
              5cea 003f  ld   $3f
              5ceb 002b  ld   $2b
              5cec 00a2  ld   $a2
              5ced 0085  ld   $85
              5cee 00a3  ld   $a3
              5cef 0066  ld   $66
              5cf0 0085  ld   $85
              5cf1 00cd  ld   $cd
              5cf2 0064  ld   $64
              5cf3 0063  ld   $63
              5cf4 00ff  ld   $ff
              5cf5 00b4  ld   $b4
              5cf6 0080  ld   $80
              5cf7 0061  ld   $61
              5cf8 00b7  ld   $b7
              5cf9 0048  ld   $48
              5cfa 001a  ld   $1a
              5cfb fe00  bra  ac          ;+-----------------------------------+
              5cfc fcfd  bra  $5cfd       ;|                                   |
              5cfd 1418  ld   $18,y       ;| Trampoline for page $5c00 lookups |
              5cfe e006  jmp  y,$06       ;|                                   |
              5cff c218  st   [$18]       ;+-----------------------------------+
              5d00 0009  ld   $09
              5d01 008c  ld   $8c
              5d02 00ee  ld   $ee
              5d03 0035  ld   $35
              5d04 0072  ld   $72
              5d05 00b5  ld   $b5
              5d06 00ff  ld   $ff
              5d07 0059  ld   $59
              5d08 00ef  ld   $ef
              5d09 002b  ld   $2b
              5d0a 0022  ld   $22
              5d0b 0021  ld   $21
              5d0c 0082  ld   $82
              5d0d 00b4  ld   $b4
              5d0e 00e6  ld   $e6
              5d0f 00ff  ld   $ff
              5d10 0011  ld   $11
              5d11 0000  ld   $00
              5d12 000b  ld   $0b
              5d13 002b  ld   $2b
              5d14 0022  ld   $22
              5d15 0021  ld   $21
              5d16 0082  ld   $82
              5d17 00b4  ld   $b4
              5d18 00e6  ld   $e6
              5d19 00ff  ld   $ff
              5d1a 002b  ld   $2b
              5d1b 0086  ld   $86
              5d1c 0021  ld   $21
              5d1d 0084  ld   $84
              5d1e 00ad  ld   $ad
              5d1f 00f0  ld   $f0
              5d20 0086  ld   $86
              5d21 0093  ld   $93
              5d22 0084  ld   $84
              5d23 0093  ld   $93
              5d24 0086  ld   $86
              5d25 0035  ld   $35
              5d26 0072  ld   $72
              5d27 00d2  ld   $d2
              5d28 00ff  ld   $ff
              5d29 0075  ld   $75
              5d2a 0085  ld   $85
              5d2b 00a0  ld   $a0
              5d2c 0062  ld   $62
              5d2d 0011  ld   $11
              5d2e 0003  ld   $03
              5d2f 000b  ld   $0b
              5d30 002b  ld   $2b
              5d31 0022  ld   $22
              5d32 001a  ld   $1a
              5d33 00a2  ld   $a2
              5d34 005e  ld   $5e
              5d35 0025  ld   $25
              5d36 0063  ld   $63
              5d37 00ff  ld   $ff
              5d38 002b  ld   $2b
              5d39 0084  ld   $84
              5d3a 0021  ld   $21
              5d3b 0082  ld   $82
              5d3c 00b8  ld   $b8
              5d3d 0084  ld   $84
              5d3e 0035  ld   $35
              5d3f 0053  ld   $53
              5d40 00fa  ld   $fa
              5d41 0021  ld   $21
              5d42 0084  ld   $84
              5d43 00ff  ld   $ff
              5d44 0021  ld   $21
              5d45 0082  ld   $82
              5d46 00ff  ld   $ff
              5d47 0062  ld   $62
              5d48 00a0  ld   $a0
              5d49 005f  ld   $5f
              5d4a 0059  ld   $59
              5d4b 0002  ld   $02
              5d4c 002b  ld   $2b
              5d4d 00a4  ld   $a4
              5d4e 0011  ld   $11
              5d4f 00fd  ld   $fd
              5d50 00ff  ld   $ff
              5d51 00f8  ld   $f8
              5d52 00aa  ld   $aa
              5d53 002b  ld   $2b
              5d54 00aa  ld   $aa
              5d55 00ff  ld   $ff
              5d56 002b  ld   $2b
              5d57 0084  ld   $84
              5d58 0021  ld   $21
              5d59 0082  ld   $82
              5d5a 00b8  ld   $b8
              5d5b 0084  ld   $84
              5d5c 0035  ld   $35
              5d5d 0056  ld   $56
              5d5e 00b6  ld   $b6
              5d5f 0021  ld   $21
              5d60 0084  ld   $84
              5d61 00ff  ld   $ff
              5d62 0021  ld   $21
              5d63 0082  ld   $82
              5d64 00ff  ld   $ff
              5d65 0011  ld   $11
              5d66 00e1  ld   $e1
              5d67 0004  ld   $04
              5d68 002b  ld   $2b
              5d69 0022  ld   $22
              5d6a 0021  ld   $21
              5d6b 00a2  ld   $a2
              5d6c 002b  ld   $2b
              5d6d 0024  ld   $24
              5d6e 001a  ld   $1a
              5d6f 00a5  ld   $a5
              5d70 00e9  ld   $e9
              5d71 0093  ld   $93
              5d72 0019  ld   $19
              5d73 00ad  ld   $ad
              5d74 005e  ld   $5e
              5d75 0029  ld   $29
              5d76 001a  ld   $1a
              5d77 00a4  ld   $a4
              5d78 005e  ld   $5e
              5d79 0028  ld   $28
              5d7a 00ff  ld   $ff
              5d7b 0075  ld   $75
              5d7c 002b  ld   $2b
              5d7d 0082  ld   $82
              5d7e 0085  ld   $85
              5d7f 00bb  ld   $bb
              5d80 0062  ld   $62
              5d81 0093  ld   $93
              5d82 0082  ld   $82
              5d83 0021  ld   $21
              5d84 0082  ld   $82
              5d85 00ad  ld   $ad
              5d86 0035  ld   $35
              5d87 003f  ld   $3f
              5d88 00e4  ld   $e4
              5d89 005e  ld   $5e
              5d8a 0092  ld   $92
              5d8b 0085  ld   $85
              5d8c 00ab  ld   $ab
              5d8d 0068  ld   $68
              5d8e 0090  ld   $90
              5d8f 00d5  ld   $d5
              5d90 0063  ld   $63
              5d91 00ff  ld   $ff
              5d92 001a  ld   $1a
              5d93 0021  ld   $21
              5d94 0082  ld   $82
              5d95 00fc  ld   $fc
              5d96 00b8  ld   $b8
              5d97 0082  ld   $82
              5d98 0035  ld   $35
              5d99 0053  ld   $53
              5d9a 00fc  ld   $fc
              5d9b 0011  ld   $11
              5d9c 0050  ld   $50
              5d9d 0044  ld   $44
              5d9e 002b  ld   $2b
              5d9f 0084  ld   $84
              5da0 001a  ld   $1a
              5da1 0086  ld   $86
              5da2 00f0  ld   $f0
              5da3 0084  ld   $84
              5da4 0093  ld   $93
              5da5 0086  ld   $86
              5da6 0090  ld   $90
              5da7 00f4  ld   $f4
              5da8 00ff  ld   $ff
              5da9 0063  ld   $63
              5daa 00a4  ld   $a4
              5dab 005b  ld   $5b
              5dac 0059  ld   $59
              5dad 0000  ld   $00
              5dae 00f3  ld   $f3
              5daf 009c  ld   $9c
              5db0 0093  ld   $93
              5db1 009c  ld   $9c
              5db2 0093  ld   $93
              5db3 009c  ld   $9c
              5db4 001a  ld   $1a
              5db5 009c  ld   $9c
              5db6 008c  ld   $8c
              5db7 0080  ld   $80
              5db8 0035  ld   $35
              5db9 0072  ld   $72
              5dba 00a2  ld   $a2
              5dbb 00ff  ld   $ff
              5dbc 001a  ld   $1a
              5dbd 00a4  ld   $a4
              5dbe 00e3  ld   $e3
              5dbf 0006  ld   $06
              5dc0 005e  ld   $5e
              5dc1 00a4  ld   $a4
              5dc2 00e6  ld   $e6
              5dc3 009a  ld   $9a
              5dc4 0035  ld   $35
              5dc5 0056  ld   $56
              5dc6 00c9  ld   $c9
              5dc7 0059  ld   $59
              5dc8 0004  ld   $04
              5dc9 00f8  ld   $f8
              5dca 00aa  ld   $aa
              5dcb 0035  ld   $35
              5dcc 0072  ld   $72
              5dcd 00c9  ld   $c9
              5dce 0075  ld   $75
              5dcf 0085  ld   $85
              5dd0 00aa  ld   $aa
              5dd1 0067  ld   $67
              5dd2 0063  ld   $63
              5dd3 00ff  ld   $ff
              5dd4 0075  ld   $75
              5dd5 0021  ld   $21
              5dd6 0082  ld   $82
              5dd7 00e6  ld   $e6
              5dd8 0001  ld   $01
              5dd9 002b  ld   $2b
              5dda 0082  ld   $82
              5ddb 0035  ld   $35
              5ddc 0053  ld   $53
              5ddd 00d6  ld   $d6
              5dde 0063  ld   $63
              5ddf 00ff  ld   $ff
              5de0 0085  ld   $85
              5de1 00b7  ld   $b7
              5de2 0061  ld   $61
              5de3 001a  ld   $1a
              5de4 0009  ld   $09
              5de5 008c  ld   $8c
              5de6 00ee  ld   $ee
              5de7 0035  ld   $35
              5de8 003f  ld   $3f
              5de9 00d9  ld   $d9
              5dea 0090  ld   $90
              5deb 00cb  ld   $cb
              5dec 0075  ld   $75
              5ded 0035  ld   $35
              5dee 003f  ld   $3f
              5def 00fb  ld   $fb
              5df0 005e  ld   $5e
              5df1 0084  ld   $84
              5df2 0085  ld   $85
              5df3 00bb  ld   $bb
              5df4 0062  ld   $62
              5df5 0059  ld   $59
              5df6 0020  ld   $20
              5df7 002b  ld   $2b
              5df8 0092  ld   $92
              5df9 0085  ld   $85
              5dfa 00ab  ld   $ab
              5dfb fe00  bra  ac          ;+-----------------------------------+
              5dfc fcfd  bra  $5dfd       ;|                                   |
              5dfd 1418  ld   $18,y       ;| Trampoline for page $5d00 lookups |
              5dfe e006  jmp  y,$06       ;|                                   |
              5dff c218  st   [$18]       ;+-----------------------------------+
              5e00 0068  ld   $68
              5e01 001a  ld   $1a
              5e02 0084  ld   $84
              5e03 00e6  ld   $e6
              5e04 0001  ld   $01
              5e05 005e  ld   $5e
              5e06 0084  ld   $84
              5e07 0035  ld   $35
              5e08 0072  ld   $72
              5e09 00eb  ld   $eb
              5e0a 0063  ld   $63
              5e0b 00ff  ld   $ff
              5e0c 0064  ld   $64
              5e0d 00a0  ld   $a0
              5e0e 005f  ld   $5f
              5e0f 002b  ld   $2b
              5e10 001a  ld   $1a
              5e11 0059  ld   $59
              5e12 00ad  ld   $ad
              5e13 002b  ld   $2b
              5e14 0022  ld   $22
              5e15 00b4  ld   $b4
              5e16 00e2  ld   $e2
              5e17 001a  ld   $1a
              5e18 00a4  ld   $a4
              5e19 00e6  ld   $e6
              5e1a 009a  ld   $9a
              5e1b 0035  ld   $35
              5e1c 0056  ld   $56
              5e1d 00b1  ld   $b1
              5e1e 0059  ld   $59
              5e1f 0000  ld   $00
              5e20 005e  ld   $5e
              5e21 00a4  ld   $a4
              5e22 001a  ld   $1a
              5e23 00a5  ld   $a5
              5e24 00e6  ld   $e6
              5e25 0070  ld   $70
              5e26 0035  ld   $35
              5e27 0050  ld   $50
              5e28 00c3  ld   $c3
              5e29 0059  ld   $59
              5e2a 0070  ld   $70
              5e2b 005e  ld   $5e
              5e2c 00a5  ld   $a5
              5e2d 0059  ld   $59
              5e2e 0002  ld   $02
              5e2f 00fa  ld   $fa
              5e30 00aa  ld   $aa
              5e31 002b  ld   $2b
              5e32 00aa  ld   $aa
              5e33 00ff  ld   $ff
              5e34 0011  ld   $11
              5e35 00fd  ld   $fd
              5e36 00ff  ld   $ff
              5e37 00f8  ld   $f8
              5e38 00aa  ld   $aa
              5e39 002b  ld   $2b
              5e3a 00aa  ld   $aa
              5e3b 00ff  ld   $ff
              5e3c 0075  ld   $75
              5e3d 0085  ld   $85
              5e3e 00e1  ld   $e1
              5e3f 0061  ld   $61
              5e40 0059  ld   $59
              5e41 0008  ld   $08
              5e42 002b  ld   $2b
              5e43 0094  ld   $94
              5e44 0059  ld   $59
              5e45 00a0  ld   $a0
              5e46 005e  ld   $5e
              5e47 0024  ld   $24
              5e48 0059  ld   $59
              5e49 0000  ld   $00
              5e4a 005e  ld   $5e
              5e4b 0026  ld   $26
              5e4c 001a  ld   $1a
              5e4d 0094  ld   $94
              5e4e 005e  ld   $5e
              5e4f 0027  ld   $27
              5e50 00b4  ld   $b4
              5e51 00f3  ld   $f3
              5e52 0059  ld   $59
              5e53 00a0  ld   $a0
              5e54 005e  ld   $5e
              5e55 0024  ld   $24
              5e56 0059  ld   $59
              5e57 0000  ld   $00
              5e58 005e  ld   $5e
              5e59 0026  ld   $26
              5e5a 0011  ld   $11
              5e5b 0087  ld   $87
              5e5c 0000  ld   $00
              5e5d 00b8  ld   $b8
              5e5e 0094  ld   $94
              5e5f 005e  ld   $5e
              5e60 0027  ld   $27
              5e61 00b4  ld   $b4
              5e62 00f3  ld   $f3
              5e63 0093  ld   $93
              5e64 0094  ld   $94
              5e65 001a  ld   $1a
              5e66 0094  ld   $94
              5e67 00e6  ld   $e6
              5e68 0044  ld   $44
              5e69 0035  ld   $35
              5e6a 0050  ld   $50
              5e6b 00d3  ld   $d3
              5e6c 0063  ld   $63
              5e6d 00ff  ld   $ff
              5e6e 0065  ld   $65
              5e6f 00a1  ld   $a1
              5e70 005e  ld   $5e
              5e71 0075  ld   $75
              5e72 0011  ld   $11
              5e73 0003  ld   $03
              5e74 000b  ld   $0b
              5e75 002b  ld   $2b
              5e76 0022  ld   $22
              5e77 001a  ld   $1a
              5e78 00a2  ld   $a2
              5e79 005e  ld   $5e
              5e7a 0025  ld   $25
              5e7b 0011  ld   $11
              5e7c 0000  ld   $00
              5e7d 0001  ld   $01
              5e7e 00ad  ld   $ad
              5e7f 005e  ld   $5e
              5e80 0027  ld   $27
              5e81 0059  ld   $59
              5e82 0008  ld   $08
              5e83 005e  ld   $5e
              5e84 009e  ld   $9e
              5e85 0059  ld   $59
              5e86 00a0  ld   $a0
              5e87 005e  ld   $5e
              5e88 0024  ld   $24
              5e89 0059  ld   $59
              5e8a 0000  ld   $00
              5e8b 005e  ld   $5e
              5e8c 0026  ld   $26
              5e8d 00b4  ld   $b4
              5e8e 00f3  ld   $f3
              5e8f 0093  ld   $93
              5e90 0027  ld   $27
              5e91 001a  ld   $1a
              5e92 009e  ld   $9e
              5e93 00e6  ld   $e6
              5e94 0001  ld   $01
              5e95 0035  ld   $35
              5e96 0072  ld   $72
              5e97 00b1  ld   $b1
              5e98 0085  ld   $85
              5e99 00bb  ld   $bb
              5e9a 0062  ld   $62
              5e9b 0063  ld   $63
              5e9c 00ff  ld   $ff
              5e9d 0075  ld   $75
              5e9e 0011  ld   $11
              5e9f 00a3  ld   $a3
              5ea0 0069  ld   $69
              5ea1 002b  ld   $2b
              5ea2 0086  ld   $86
              5ea3 002b  ld   $2b
              5ea4 0092  ld   $92
              5ea5 0011  ld   $11
              5ea6 00f4  ld   $f4
              5ea7 0068  ld   $68
              5ea8 002b  ld   $2b
              5ea9 0088  ld   $88
              5eaa 0021  ld   $21
              5eab 0092  ld   $92
              5eac 00f6  ld   $f6
              5ead 0035  ld   $35
              5eae 0072  ld   $72
              5eaf 00e7  ld   $e7
              5eb0 0021  ld   $21
              5eb1 0084  ld   $84
              5eb2 0035  ld   $35
              5eb3 003f  ld   $3f
              5eb4 00e5  ld   $e5
              5eb5 00cf  ld   $cf
              5eb6 0084  ld   $84
              5eb7 0063  ld   $63
              5eb8 00ff  ld   $ff
              5eb9 00b8  ld   $b8
              5eba 0082  ld   $82
              5ebb 0035  ld   $35
              5ebc 003f  ld   $3f
              5ebd 00f2  ld   $f2
              5ebe 0093  ld   $93
              5ebf 0092  ld   $92
              5ec0 0093  ld   $93
              5ec1 0092  ld   $92
              5ec2 0090  ld   $90
              5ec3 00d8  ld   $d8
              5ec4 0021  ld   $21
              5ec5 0092  ld   $92
              5ec6 00b8  ld   $b8
              5ec7 0086  ld   $86
              5ec8 0099  ld   $99
              5ec9 0088  ld   $88
              5eca 00f6  ld   $f6
              5ecb 00cf  ld   $cf
              5ecc 0018  ld   $18
              5ecd 0063  ld   $63
              5ece 00ff  ld   $ff
              5ecf 0066  ld   $66
              5ed0 00a3  ld   $a3
              5ed1 005c  ld   $5c
              5ed2 0075  ld   $75
              5ed3 0059  ld   $59
              5ed4 0008  ld   $08
              5ed5 002b  ld   $2b
              5ed6 0098  ld   $98
              5ed7 0011  ld   $11
              5ed8 0000  ld   $00
              5ed9 0001  ld   $01
              5eda 002b  ld   $2b
              5edb 009a  ld   $9a
              5edc 0021  ld   $21
              5edd 0098  ld   $98
              5ede 00f3  ld   $f3
              5edf 009a  ld   $9a
              5ee0 0093  ld   $93
              5ee1 009a  ld   $9a
              5ee2 0093  ld   $93
              5ee3 009a  ld   $9a
              5ee4 0093  ld   $93
              5ee5 0098  ld   $98
              5ee6 001a  ld   $1a
              5ee7 0098  ld   $98
              5ee8 00e6  ld   $e6
              5ee9 0080  ld   $80
              5eea 0035  ld   $35
              5eeb 0050  ld   $50
              5eec 00ab  ld   $ab
              5eed 0085  ld   $85
              5eee 00a0  ld   $a0
              5eef 0062  ld   $62
              5ef0 0063  ld   $63
              5ef1 00ff  ld   $ff
              5ef2 002b  ld   $2b
              5ef3 0094  ld   $94
              5ef4 0021  ld   $21
              5ef5 0084  ld   $84
              5ef6 00ad  ld   $ad
              5ef7 002b  ld   $2b
              5ef8 0088  ld   $88
              5ef9 0021  ld   $21
              5efa 0094  ld   $94
              5efb fe00  bra  ac          ;+-----------------------------------+
              5efc fcfd  bra  $5efd       ;|                                   |
              5efd 1418  ld   $18,y       ;| Trampoline for page $5e00 lookups |
              5efe e006  jmp  y,$06       ;|                                   |
              5eff c218  st   [$18]       ;+-----------------------------------+
              5f00 00ad  ld   $ad
              5f01 002b  ld   $2b
              5f02 009c  ld   $9c
              5f03 0093  ld   $93
              5f04 0084  ld   $84
              5f05 0093  ld   $93
              5f06 0094  ld   $94
              5f07 0021  ld   $21
              5f08 0084  ld   $84
              5f09 00ad  ld   $ad
              5f0a 0035  ld   $35
              5f0b 003f  ld   $3f
              5f0c 00ed  ld   $ed
              5f0d 002b  ld   $2b
              5f0e 0082  ld   $82
              5f0f 0021  ld   $21
              5f10 0094  ld   $94
              5f11 00ad  ld   $ad
              5f12 00b8  ld   $b8
              5f13 0082  ld   $82
              5f14 0035  ld   $35
              5f15 0050  ld   $50
              5f16 00fa  ld   $fa
              5f17 0035  ld   $35
              5f18 004d  ld   $4d
              5f19 00ea  ld   $ea
              5f1a 0093  ld   $93
              5f1b 0084  ld   $84
              5f1c 0093  ld   $93
              5f1d 0094  ld   $94
              5f1e 0090  ld   $90
              5f1f 00d1  ld   $d1
              5f20 0059  ld   $59
              5f21 0000  ld   $00
              5f22 00ff  ld   $ff
              5f23 0021  ld   $21
              5f24 0088  ld   $88
              5f25 00b8  ld   $b8
              5f26 009c  ld   $9c
              5f27 0035  ld   $35
              5f28 0050  ld   $50
              5f29 00ea  ld   $ea
              5f2a 0035  ld   $35
              5f2b 004d  ld   $4d
              5f2c 00fa  ld   $fa
              5f2d 0059  ld   $59
              5f2e 0001  ld   $01
              5f2f 00ff  ld   $ff
              5f30 0059  ld   $59
              5f31 0002  ld   $02
              5f32 00ff  ld   $ff
              5f33 0067  ld   $67
              5f34 00a0  ld   $a0
              5f35 005f  ld   $5f
              5f36 0011  ld   $11
              5f37 0000  ld   $00
              5f38 0006  ld   $06
              5f39 002b  ld   $2b
              5f3a 0022  ld   $22
              5f3b 0021  ld   $21
              5f3c 00a0  ld   $a0
              5f3d 00b4  ld   $b4
              5f3e 00f6  ld   $f6
              5f3f 00ff  ld   $ff
              5f40 0059  ld   $59
              5f41 0002  ld   $02
              5f42 005e  ld   $5e
              5f43 00a4  ld   $a4
              5f44 005e  ld   $5e
              5f45 0028  ld   $28
              5f46 0059  ld   $59
              5f47 0001  ld   $01
              5f48 00f8  ld   $f8
              5f49 00aa  ld   $aa
              5f4a 0035  ld   $35
              5f4b 0072  ld   $72
              5f4c 00b6  ld   $b6
              5f4d 00ff  ld   $ff
              5f4e 0075  ld   $75
              5f4f 0059  ld   $59
              5f50 0002  ld   $02
              5f51 00f8  ld   $f8
              5f52 00aa  ld   $aa
              5f53 0035  ld   $35
              5f54 0072  ld   $72
              5f55 00cd  ld   $cd
              5f56 001a  ld   $1a
              5f57 00a5  ld   $a5
              5f58 00e3  ld   $e3
              5f59 0008  ld   $08
              5f5a 005e  ld   $5e
              5f5b 00a5  ld   $a5
              5f5c 00e6  ld   $e6
              5f5d 0078  ld   $78
              5f5e 0035  ld   $35
              5f5f 0050  ld   $50
              5f60 00f8  ld   $f8
              5f61 0059  ld   $59
              5f62 0070  ld   $70
              5f63 005e  ld   $5e
              5f64 00a5  ld   $a5
              5f65 0085  ld   $85
              5f66 00a1  ld   $a1
              5f67 0065  ld   $65
              5f68 0011  ld   $11
              5f69 0000  ld   $00
              5f6a 0001  ld   $01
              5f6b 002b  ld   $2b
              5f6c 0098  ld   $98
              5f6d 0021  ld   $21
              5f6e 0098  ld   $98
              5f6f 00ad  ld   $ad
              5f70 00e3  ld   $e3
              5f71 0008  ld   $08
              5f72 0082  ld   $82
              5f73 007f  ld   $7f
              5f74 00e6  ld   $e6
              5f75 0008  ld   $08
              5f76 0035  ld   $35
              5f77 0053  ld   $53
              5f78 00e3  ld   $e3
              5f79 00e3  ld   $e3
              5f7a 0008  ld   $08
              5f7b 00e3  ld   $e3
              5f7c 0008  ld   $08
              5f7d 00f0  ld   $f0
              5f7e 0098  ld   $98
              5f7f 0093  ld   $93
              5f80 0098  ld   $98
              5f81 0093  ld   $93
              5f82 0098  ld   $98
              5f83 001a  ld   $1a
              5f84 0098  ld   $98
              5f85 00e6  ld   $e6
              5f86 00f0  ld   $f0
              5f87 0035  ld   $35
              5f88 0050  ld   $50
              5f89 00d5  ld   $d5
              5f8a 0059  ld   $59
              5f8b 0002  ld   $02
              5f8c 00fa  ld   $fa
              5f8d 00aa  ld   $aa
              5f8e 002b  ld   $2b
              5f8f 00aa  ld   $aa
              5f90 0085  ld   $85
              5f91 00bb  ld   $bb
              5f92 0062  ld   $62
              5f93 0063  ld   $63
              5f94 00ff  ld   $ff
              5f95 0068  ld   $68
              5f96 00a1  ld   $a1
              5f97 005f  ld   $5f
              5f98 0099  ld   $99
              5f99 0096  ld   $96
              5f9a 0099  ld   $99
              5f9b 0096  ld   $96
              5f9c 00f6  ld   $f6
              5f9d 0099  ld   $99
              5f9e 0098  ld   $98
              5f9f 002b  ld   $2b
              5fa0 009e  ld   $9e
              5fa1 00ff  ld   $ff
              5fa2 001a  ld   $1a
              5fa3 0092  ld   $92
              5fa4 0082  ld   $82
              5fa5 007f  ld   $7f
              5fa6 00e6  ld   $e6
              5fa7 0052  ld   $52
              5fa8 0035  ld   $35
              5fa9 0053  ld   $53
              5faa 00be  ld   $be
              5fab 00e3  ld   $e3
              5fac 0032  ld   $32
              5fad 0035  ld   $35
              5fae 0050  ld   $50
              5faf 00f1  ld   $f1
              5fb0 002b  ld   $2b
              5fb1 0092  ld   $92
              5fb2 0011  ld   $11
              5fb3 0000  ld   $00
              5fb4 0007  ld   $07
              5fb5 0090  ld   $90
              5fb6 00c3  ld   $c3
              5fb7 002b  ld   $2b
              5fb8 0092  ld   $92
              5fb9 0011  ld   $11
              5fba 0000  ld   $00
              5fbb 0008  ld   $08
              5fbc 002b  ld   $2b
              5fbd 0094  ld   $94
              5fbe 001a  ld   $1a
              5fbf 0092  ld   $92
              5fc0 00e9  ld   $e9
              5fc1 00e9  ld   $e9
              5fc2 0099  ld   $99
              5fc3 0092  ld   $92
              5fc4 0099  ld   $99
              5fc5 0094  ld   $94
              5fc6 002b  ld   $2b
              5fc7 0094  ld   $94
              5fc8 0059  ld   $59
              5fc9 0005  ld   $05
              5fca 005e  ld   $5e
              5fcb 0096  ld   $96
              5fcc 0021  ld   $21
              5fcd 0094  ld   $94
              5fce 007f  ld   $7f
              5fcf 0000  ld   $00
              5fd0 005e  ld   $5e
              5fd1 0026  ld   $26
              5fd2 00b4  ld   $b4
              5fd3 00cb  ld   $cb
              5fd4 0093  ld   $93
              5fd5 0094  ld   $94
              5fd6 0093  ld   $93
              5fd7 0028  ld   $28
              5fd8 001a  ld   $1a
              5fd9 0096  ld   $96
              5fda 00e6  ld   $e6
              5fdb 0001  ld   $01
              5fdc 0035  ld   $35
              5fdd 0072  ld   $72
              5fde 00d1  ld   $d1
              5fdf 005e  ld   $5e
              5fe0 0026  ld   $26
              5fe1 00b4  ld   $b4
              5fe2 00cb  ld   $cb
              5fe3 0093  ld   $93
              5fe4 0028  ld   $28
              5fe5 0075  ld   $75
              5fe6 0085  ld   $85
              5fe7 00b4  ld   $b4
              5fe8 0063  ld   $63
              5fe9 0063  ld   $63
              5fea 00ff  ld   $ff
              5feb 00dc  ld   $dc
              5fec 000a  ld   $0a
              5fed 00e2  ld   $e2
              5fee 000a  ld   $0a
              5fef 00e8  ld   $e8
              5ff0 000a  ld   $0a
              5ff1 00b1  ld   $b1
              5ff2 000b  ld   $0b
              5ff3 00c8  ld   $c8
              5ff4 000b  ld   $0b
              5ff5 00e8  ld   $e8
              5ff6 000b  ld   $0b
              5ff7 0069  ld   $69
              5ff8 00a3  ld   $a3
              5ff9 0021  ld   $21
              5ffa 007f  ld   $7f
              5ffb fe00  bra  ac          ;+-----------------------------------+
              5ffc fcfd  bra  $5ffd       ;|                                   |
              5ffd 1418  ld   $18,y       ;| Trampoline for page $5f00 lookups |
              5ffe e006  jmp  y,$06       ;|                                   |
              5fff c218  st   [$18]       ;+-----------------------------------+
              6000 0000  ld   $00
              6001 000a  ld   $0a
              6002 0000  ld   $00
              6003 00fe  ld   $fe
              6004 0000  ld   $00
              6005 00fd  ld   $fd
              6006 0000  ld   $00
              6007 00fb  ld   $fb
              6008 0000  ld   $00
              6009 00f7  ld   $f7
              600a 0000  ld   $00
              600b 0000  ld   $00
              600c 0000  ld   $00
              600d 0011  ld   $11
              600e 004c  ld   $4c
              600f 006f  ld   $6f
              6010 0061  ld   $61
              6011 0064  ld   $64
              6012 0065  ld   $65
              6013 0072  ld   $72
              6014 0020  ld   $20
              6015 006e  ld   $6e
              6016 006f  ld   $6f
              6017 0074  ld   $74
              6018 0020  ld   $20
              6019 0066  ld   $66
              601a 006f  ld   $6f
              601b 0075  ld   $75
              601c 006e  ld   $6e
              601d 0064  ld   $64
              601e 0021  ld   $21
              601f 0000  ld   $00
              6020 007a  ld   $7a
              6021 00a0  ld   $a0
              6022 0002  ld   $02
              6023 0000  ld   $00
              6024 0000  ld   $00
              6025 007b  ld   $7b
              6026 00a0  ld   $a0
              6027 0002  ld   $02
              6028 0000  ld   $00
              6029 0000  ld   $00
              602a 007c  ld   $7c
              602b 00a6  ld   $a6
              602c 005a  ld   $5a
              602d 0006  ld   $06
              602e 004c  ld   $4c
              602f 006f  ld   $6f
              6030 0061  ld   $61
              6031 0064  ld   $64
              6032 0065  ld   $65
              6033 0072  ld   $72
              6034 0000  ld   $00
              6035 0000  ld   $00
              6036 0000  ld   $00
              * 83 times
              6087 007d  ld   $7d
              6088 00a0  ld   $a0
              6089 0002  ld   $02
              608a 0000  ld   $00
              608b 0000  ld   $00
              608c 0000  ld   $00
              608d 0000  ld   $00         ;End of gbas/browser/Browser_SDCard_ROMv5a_v1.gt1, size 2879
                                          ;+-----------------------------------+
                                          ;| Apps/Mandelbrot/Mandelbrot_v1.gcl |
                                          ;+-----------------------------------+
              608e dc53  st   $53,[y,x++] ;'S'
              608f dc44  st   $44,[y,x++] ;'D'
              6090 dc43  st   $43,[y,x++] ;'C'
              6091 dc61  st   $61,[y,x++] ;'a'
              6092 dc72  st   $72,[y,x++] ;'r'
              6093 dc64  st   $64,[y,x++] ;'d'
              6094 dc00  st   $00,[y,x++] ;'\x00'
              6095 dc00  st   $00,[y,x++] ;'\x00'
              6096 004f  ld   $4f
              6097 c218  st   [$18]
              6098 0055  ld   $55
              6099 14e1  ld   $e1,y
              609a e071  jmp  y,$71
              609b c219  st   [$19]
Mandelbrot:   609c 0002  ld   $02         ;| RAM segment address (high byte first)
              609d 0000  ld   $00         ;|
              609e 00ef  ld   $ef         ;| Length (1..256)
              609f 00cd  ld   $cd         ;0200 DEF
              60a0 00e8  ld   $e8
              60a1 0075  ld   $75         ;0202 PUSH
              60a2 0059  ld   $59         ;0203 LDI
              60a3 0000  ld   $00
              60a4 002b  ld   $2b         ;0205 STW
              60a5 0030  ld   $30         ;0205 'sign'
              60a6 002b  ld   $2b         ;0207 STW
              60a7 0032  ld   $32         ;0207 'C'
              60a8 00b8  ld   $b8         ;0209 SUBW
              60a9 0034  ld   $34         ;0209 'A'
              60aa 0035  ld   $35         ;020b BCC
              60ab 0056  ld   $56         ;020c LE
              60ac 0012  ld   $12
              60ad 002b  ld   $2b         ;020e STW
              60ae 0034  ld   $34         ;020e 'A'
              60af 0059  ld   $59         ;0210 LDI
              60b0 0001  ld   $01
              60b1 002b  ld   $2b         ;0212 STW
              60b2 0030  ld   $30         ;0212 'sign'
              60b3 0059  ld   $59         ;0214 LDI
              60b4 0000  ld   $00
              60b5 00b8  ld   $b8         ;0216 SUBW
              60b6 0036  ld   $36         ;0216 'B'
              60b7 0035  ld   $35         ;0218 BCC
              60b8 0056  ld   $56         ;0219 LE
              60b9 0021  ld   $21
              60ba 002b  ld   $2b         ;021b STW
              60bb 0036  ld   $36         ;021b 'B'
              60bc 0021  ld   $21         ;021d LDW
              60bd 0030  ld   $30         ;021d 'sign'
              60be 008c  ld   $8c         ;021f XORI
              60bf 0001  ld   $01
              60c0 002b  ld   $2b         ;0221 STW
              60c1 0030  ld   $30         ;0221 'sign'
              60c2 0059  ld   $59         ;0223 LDI
              60c3 0007  ld   $07
              60c4 002b  ld   $2b         ;0225 STW
              60c5 0038  ld   $38         ;0225 'shift'
              60c6 0011  ld   $11         ;0227 LDWI
              60c7 0000  ld   $00
              60c8 0006  ld   $06
              60c9 002b  ld   $2b         ;022a STW
              60ca 0022  ld   $22
              60cb 0011  ld   $11         ;022c LDWI
              60cc 0000  ld   $00
              60cd 0002  ld   $02
              60ce 002b  ld   $2b         ;022f STW
              60cf 003a  ld   $3a         ;022f 'bit'
              60d0 0011  ld   $11         ;0231 LDWI
              60d1 0000  ld   $00
              60d2 00c0  ld   $c0
              60d3 0099  ld   $99         ;0234 ADDW
              60d4 0032  ld   $32         ;0234 'C'
              60d5 0035  ld   $35         ;0236 BCC
              60d6 0053  ld   $53         ;0237 GE
              60d7 003e  ld   $3e
              60d8 0021  ld   $21         ;0239 LDW
              60d9 0032  ld   $32         ;0239 'C'
              60da 00e9  ld   $e9         ;023b LSLW
              60db 002b  ld   $2b         ;023c STW
              60dc 0032  ld   $32         ;023c 'C'
              60dd 0090  ld   $90         ;023e BRA
              60de 004a  ld   $4a
              60df 0021  ld   $21         ;0240 LDW
              60e0 0036  ld   $36         ;0240 'B'
              60e1 00b4  ld   $b4         ;0242 SYS
              60e2 00f7  ld   $f7
              60e3 002b  ld   $2b         ;0244 STW
              60e4 0036  ld   $36         ;0244 'B'
              60e5 0021  ld   $21         ;0246 LDW
              60e6 0038  ld   $38         ;0246 'shift'
              60e7 00e6  ld   $e6         ;0248 SUBI
              60e8 0001  ld   $01
              60e9 002b  ld   $2b         ;024a STW
              60ea 0038  ld   $38         ;024a 'shift'
              60eb 0021  ld   $21         ;024c LDW
              60ec 0034  ld   $34         ;024c 'A'
              60ed 00b8  ld   $b8         ;024e SUBW
              60ee 003a  ld   $3a         ;024e 'bit'
              60ef 0035  ld   $35         ;0250 BCC
              60f0 0050  ld   $50         ;0251 LT
              60f1 0059  ld   $59
              60f2 002b  ld   $2b         ;0253 STW
              60f3 0034  ld   $34         ;0253 'A'
              60f4 0021  ld   $21         ;0255 LDW
              60f5 0032  ld   $32         ;0255 'C'
              60f6 0099  ld   $99         ;0257 ADDW
              60f7 0036  ld   $36         ;0257 'B'
              60f8 002b  ld   $2b         ;0259 STW
              60f9 0032  ld   $32         ;0259 'C'
              60fa 0021  ld   $21         ;025b LDW
              60fb fe00  bra  ac          ;+-----------------------------------+
              60fc fcfd  bra  $60fd       ;|                                   |
              60fd 1418  ld   $18,y       ;| Trampoline for page $6000 lookups |
              60fe e006  jmp  y,$06       ;|                                   |
              60ff c218  st   [$18]       ;+-----------------------------------+
              6100 003a  ld   $3a         ;025b 'bit'
              6101 00b4  ld   $b4         ;025d SYS
              6102 00f7  ld   $f7
              6103 0035  ld   $35         ;025f BCC
              6104 0072  ld   $72         ;0260 NE
              6105 002d  ld   $2d
              6106 0021  ld   $21         ;0262 LDW
              6107 0038  ld   $38         ;0262 'shift'
              6108 008c  ld   $8c         ;0264 XORI
              6109 0007  ld   $07
              610a 0035  ld   $35         ;0266 BCC
              610b 0072  ld   $72         ;0267 NE
              610c 0072  ld   $72
              610d 0011  ld   $11         ;0269 LDWI
              610e 00b9  ld   $b9
              610f 0004  ld   $04
              6110 002b  ld   $2b         ;026c STW
              6111 0022  ld   $22
              6112 0021  ld   $21         ;026e LDW
              6113 0032  ld   $32         ;026e 'C'
              6114 00b4  ld   $b4         ;0270 SYS
              6115 0000  ld   $00
              6116 0090  ld   $90         ;0272 BRA
              6117 00d7  ld   $d7
              6118 0021  ld   $21         ;0274 LDW
              6119 0038  ld   $38         ;0274 'shift'
              611a 008c  ld   $8c         ;0276 XORI
              611b 0006  ld   $06
              611c 0035  ld   $35         ;0278 BCC
              611d 0072  ld   $72         ;0279 NE
              611e 0084  ld   $84
              611f 0011  ld   $11         ;027b LDWI
              6120 0087  ld   $87
              6121 0006  ld   $06
              6122 002b  ld   $2b         ;027e STW
              6123 0022  ld   $22
              6124 0021  ld   $21         ;0280 LDW
              6125 0032  ld   $32         ;0280 'C'
              6126 00b4  ld   $b4         ;0282 SYS
              6127 00f7  ld   $f7
              6128 0090  ld   $90         ;0284 BRA
              6129 00d7  ld   $d7
              612a 0021  ld   $21         ;0286 LDW
              612b 0038  ld   $38         ;0286 'shift'
              612c 008c  ld   $8c         ;0288 XORI
              612d 0005  ld   $05
              612e 0035  ld   $35         ;028a BCC
              612f 0072  ld   $72         ;028b NE
              6130 0096  ld   $96
              6131 0011  ld   $11         ;028d LDWI
              6132 006d  ld   $6d
              6133 0006  ld   $06
              6134 002b  ld   $2b         ;0290 STW
              6135 0022  ld   $22
              6136 0021  ld   $21         ;0292 LDW
              6137 0032  ld   $32         ;0292 'C'
              6138 00b4  ld   $b4         ;0294 SYS
              6139 00f6  ld   $f6
              613a 0090  ld   $90         ;0296 BRA
              613b 00d7  ld   $d7
              613c 0021  ld   $21         ;0298 LDW
              613d 0038  ld   $38         ;0298 'shift'
              613e 008c  ld   $8c         ;029a XORI
              613f 0004  ld   $04
              6140 0035  ld   $35         ;029c BCC
              6141 0072  ld   $72         ;029d NE
              6142 00a8  ld   $a8
              6143 0011  ld   $11         ;029f LDWI
              6144 0052  ld   $52
              6145 0006  ld   $06
              6146 002b  ld   $2b         ;02a2 STW
              6147 0022  ld   $22
              6148 0021  ld   $21         ;02a4 LDW
              6149 0032  ld   $32         ;02a4 'C'
              614a 00b4  ld   $b4         ;02a6 SYS
              614b 00f6  ld   $f6
              614c 0090  ld   $90         ;02a8 BRA
              614d 00d7  ld   $d7
              614e 0021  ld   $21         ;02aa LDW
              614f 0038  ld   $38         ;02aa 'shift'
              6150 008c  ld   $8c         ;02ac XORI
              6151 0003  ld   $03
              6152 0035  ld   $35         ;02ae BCC
              6153 0072  ld   $72         ;02af NE
              6154 00ba  ld   $ba
              6155 0011  ld   $11         ;02b1 LDWI
              6156 0036  ld   $36
              6157 0006  ld   $06
              6158 002b  ld   $2b         ;02b4 STW
              6159 0022  ld   $22
              615a 0021  ld   $21         ;02b6 LDW
              615b 0032  ld   $32         ;02b6 'C'
              615c 00b4  ld   $b4         ;02b8 SYS
              615d 00f5  ld   $f5
              615e 0090  ld   $90         ;02ba BRA
              615f 00d7  ld   $d7
              6160 0021  ld   $21         ;02bc LDW
              6161 0038  ld   $38         ;02bc 'shift'
              6162 008c  ld   $8c         ;02be XORI
              6163 0002  ld   $02
              6164 0035  ld   $35         ;02c0 BCC
              6165 0072  ld   $72         ;02c1 NE
              6166 00cc  ld   $cc
              6167 0011  ld   $11         ;02c3 LDWI
              6168 0019  ld   $19
              6169 0006  ld   $06
              616a 002b  ld   $2b         ;02c6 STW
              616b 0022  ld   $22
              616c 0021  ld   $21         ;02c8 LDW
              616d 0032  ld   $32         ;02c8 'C'
              616e 00b4  ld   $b4         ;02ca SYS
              616f 00f5  ld   $f5
              6170 0090  ld   $90         ;02cc BRA
              6171 00d7  ld   $d7
              6172 0021  ld   $21         ;02ce LDW
              6173 0038  ld   $38         ;02ce 'shift'
              6174 008c  ld   $8c         ;02d0 XORI
              6175 0001  ld   $01
              6176 0035  ld   $35         ;02d2 BCC
              6177 0072  ld   $72         ;02d3 NE
              6178 00d7  ld   $d7
              6179 0021  ld   $21         ;02d5 LDW
              617a 0032  ld   $32         ;02d5 'C'
              617b 00b4  ld   $b4         ;02d7 SYS
              617c 00f7  ld   $f7
              617d 002b  ld   $2b         ;02d9 STW
              617e 0032  ld   $32         ;02d9 'C'
              617f 0021  ld   $21         ;02db LDW
              6180 0030  ld   $30         ;02db 'sign'
              6181 0035  ld   $35         ;02dd BCC
              6182 003f  ld   $3f         ;02de EQ
              6183 00e4  ld   $e4
              6184 0059  ld   $59         ;02e0 LDI
              6185 0000  ld   $00
              6186 00b8  ld   $b8         ;02e2 SUBW
              6187 0032  ld   $32         ;02e2 'C'
              6188 0090  ld   $90         ;02e4 BRA
              6189 00e6  ld   $e6
              618a 0021  ld   $21         ;02e6 LDW
              618b 0032  ld   $32         ;02e6 'C'
              618c 0063  ld   $63         ;02e8 POP
              618d 00ff  ld   $ff         ;02e9 RET
              618e 002b  ld   $2b         ;02ea STW
              618f 003c  ld   $3c         ;02ea 'MulShift7'
              6190 0093  ld   $93         ;02ec INC
              6191 001b  ld   $1b
              6192 00ff  ld   $ff         ;02ee RET
              6193 0003  ld   $03         ;| RAM segment address (high byte first)
              6194 0000  ld   $00         ;|
              6195 00eb  ld   $eb         ;| Length (1..256)
              6196 00cd  ld   $cd         ;0300 DEF
              6197 00e4  ld   $e4
              6198 0075  ld   $75         ;0302 PUSH
              6199 0011  ld   $11         ;0303 LDWI
              619a 0000  ld   $00
              619b 0008  ld   $08
              619c 002b  ld   $2b         ;0306 STW
              619d 003e  ld   $3e         ;0306 'Pen'
              619e 0059  ld   $59         ;0308 LDI
              619f 0078  ld   $78
              61a0 002b  ld   $2b         ;030a STW
              61a1 0040  ld   $40         ;030a 'Height'
              61a2 0059  ld   $59         ;030c LDI
              61a3 00a0  ld   $a0
              61a4 002b  ld   $2b         ;030e STW
              61a5 0042  ld   $42         ;030e 'Width'
              61a6 002b  ld   $2b         ;0310 STW
              61a7 0044  ld   $44         ;0310 'len'
              61a8 002b  ld   $2b         ;0312 STW
              61a9 0046  ld   $46         ;0312 'LastPixel'
              61aa 0059  ld   $59         ;0314 LDI
              61ab 0000  ld   $00
              61ac 002b  ld   $2b         ;0316 STW
              61ad 0048  ld   $48         ;0316 'DY'
              61ae 0021  ld   $21         ;0318 LDW
              61af 004a  ld   $4a         ;0318 'Step'
              61b0 002b  ld   $2b         ;031a STW
              61b1 004c  ld   $4c         ;031a 'DX'
              61b2 0059  ld   $59         ;031c LDI
              61b3 003f  ld   $3f
              61b4 00f0  ld   $f0         ;031e POKE
              61b5 003e  ld   $3e         ;031e 'Pen'
              61b6 00cf  ld   $cf         ;0320 CALL
              61b7 004e  ld   $4e         ;0320 'UpdateClock'
              61b8 0021  ld   $21         ;0322 LDW
              61b9 0046  ld   $46         ;0322 'LastPixel'
              61ba 0035  ld   $35         ;0324 BCC
              61bb 0072  ld   $72         ;0325 NE
              61bc 0071  ld   $71
              61bd 0021  ld   $21         ;0327 LDW
              61be 0050  ld   $50         ;0327 'Y0'
              61bf 002b  ld   $2b         ;0329 STW
              61c0 0034  ld   $34         ;0329 'A'
              61c1 002b  ld   $2b         ;032b STW
              61c2 0036  ld   $36         ;032b 'B'
              61c3 00cf  ld   $cf         ;032d CALL
              61c4 003c  ld   $3c         ;032d 'MulShift7'
              61c5 002b  ld   $2b         ;032f STW
              61c6 0052  ld   $52         ;032f 'YY'
              61c7 0021  ld   $21         ;0331 LDW
              61c8 0054  ld   $54         ;0331 'X0'
              61c9 00e3  ld   $e3         ;0333 ADDI
              61ca 0080  ld   $80
              61cb 002b  ld   $2b         ;0335 STW
              61cc 0034  ld   $34         ;0335 'A'
              61cd 002b  ld   $2b         ;0337 STW
              61ce 0036  ld   $36         ;0337 'B'
              61cf 00cf  ld   $cf         ;0339 CALL
              61d0 003c  ld   $3c         ;0339 'MulShift7'
              61d1 0099  ld   $99         ;033b ADDW
              61d2 0052  ld   $52         ;033b 'YY'
              61d3 00e6  ld   $e6         ;033d SUBI
              61d4 0008  ld   $08
              61d5 0035  ld   $35         ;033f BCC
              61d6 0053  ld   $53         ;0340 GE
              61d7 0044  ld   $44
              61d8 0059  ld   $59         ;0342 LDI
              61d9 0000  ld   $00
              61da 0090  ld   $90         ;0344 BRA
              61db 006f  ld   $6f
              61dc 0021  ld   $21         ;0346 LDW
              61dd 0054  ld   $54         ;0346 'X0'
              61de 00e6  ld   $e6         ;0348 SUBI
              61df 0020  ld   $20
              61e0 002b  ld   $2b         ;034a STW
              61e1 0034  ld   $34         ;034a 'A'
              61e2 002b  ld   $2b         ;034c STW
              61e3 0036  ld   $36         ;034c 'B'
              61e4 00cf  ld   $cf         ;034e CALL
              61e5 003c  ld   $3c         ;034e 'MulShift7'
              61e6 0099  ld   $99         ;0350 ADDW
              61e7 0052  ld   $52         ;0350 'YY'
              61e8 002b  ld   $2b         ;0352 STW
              61e9 0034  ld   $34         ;0352 'A'
              61ea 0099  ld   $99         ;0354 ADDW
              61eb 0054  ld   $54         ;0354 'X0'
              61ec 00e6  ld   $e6         ;0356 SUBI
              61ed 0020  ld   $20
              61ee 002b  ld   $2b         ;0358 STW
              61ef 0036  ld   $36         ;0358 'B'
              61f0 00cf  ld   $cf         ;035a CALL
              61f1 003c  ld   $3c         ;035a 'MulShift7'
              61f2 002b  ld   $2b         ;035c STW
              61f3 0056  ld   $56         ;035c 'tmp'
              61f4 0099  ld   $99         ;035e ADDW
              61f5 0056  ld   $56         ;035e 'tmp'
              61f6 002b  ld   $2b         ;0360 STW
              61f7 0056  ld   $56         ;0360 'tmp'
              61f8 0099  ld   $99         ;0362 ADDW
              61f9 0056  ld   $56         ;0362 'tmp'
              61fa 002b  ld   $2b         ;0364 STW
              61fb fe00  bra  ac          ;+-----------------------------------+
              61fc fcfd  bra  $61fd       ;|                                   |
              61fd 1418  ld   $18,y       ;| Trampoline for page $6100 lookups |
              61fe e006  jmp  y,$06       ;|                                   |
              61ff c218  st   [$18]       ;+-----------------------------------+
              6200 0056  ld   $56         ;0364 'tmp'
              6201 00b8  ld   $b8         ;0366 SUBW
              6202 0052  ld   $52         ;0366 'YY'
              6203 0035  ld   $35         ;0368 BCC
              6204 0053  ld   $53         ;0369 GE
              6205 006d  ld   $6d
              6206 0059  ld   $59         ;036b LDI
              6207 0000  ld   $00
              6208 0090  ld   $90         ;036d BRA
              6209 006f  ld   $6f
              620a 00cf  ld   $cf         ;036f CALL
              620b 0058  ld   $58         ;036f 'CalcPixel'
              620c 0090  ld   $90         ;0371 BRA
              620d 0073  ld   $73
              620e 00cf  ld   $cf         ;0373 CALL
              620f 0058  ld   $58         ;0373 'CalcPixel'
              6210 002b  ld   $2b         ;0375 STW
              6211 0046  ld   $46         ;0375 'LastPixel'
              6212 00f0  ld   $f0         ;0377 POKE
              6213 003e  ld   $3e         ;0377 'Pen'
              6214 0021  ld   $21         ;0379 LDW
              6215 0044  ld   $44         ;0379 'len'
              6216 00e6  ld   $e6         ;037b SUBI
              6217 0001  ld   $01
              6218 0035  ld   $35         ;037d BCC
              6219 004d  ld   $4d         ;037e GT
              621a 009f  ld   $9f
              621b 0021  ld   $21         ;0380 LDW
              621c 0048  ld   $48         ;0380 'DY'
              621d 002b  ld   $2b         ;0382 STW
              621e 0056  ld   $56         ;0382 'tmp'
              621f 0021  ld   $21         ;0384 LDW
              6220 004c  ld   $4c         ;0384 'DX'
              6221 002b  ld   $2b         ;0386 STW
              6222 0048  ld   $48         ;0386 'DY'
              6223 0059  ld   $59         ;0388 LDI
              6224 0000  ld   $00
              6225 00b8  ld   $b8         ;038a SUBW
              6226 0056  ld   $56         ;038a 'tmp'
              6227 002b  ld   $2b         ;038c STW
              6228 004c  ld   $4c         ;038c 'DX'
              6229 0021  ld   $21         ;038e LDW
              622a 004c  ld   $4c         ;038e 'DX'
              622b 0035  ld   $35         ;0390 BCC
              622c 003f  ld   $3f         ;0391 EQ
              622d 0099  ld   $99
              622e 0021  ld   $21         ;0393 LDW
              622f 0042  ld   $42         ;0393 'Width'
              6230 00e6  ld   $e6         ;0395 SUBI
              6231 0001  ld   $01
              6232 002b  ld   $2b         ;0397 STW
              6233 0042  ld   $42         ;0397 'Width'
              6234 0090  ld   $90         ;0399 BRA
              6235 009f  ld   $9f
              6236 0021  ld   $21         ;039b LDW
              6237 0040  ld   $40         ;039b 'Height'
              6238 00e6  ld   $e6         ;039d SUBI
              6239 0001  ld   $01
              623a 002b  ld   $2b         ;039f STW
              623b 0040  ld   $40         ;039f 'Height'
              623c 002b  ld   $2b         ;03a1 STW
              623d 0044  ld   $44         ;03a1 'len'
              623e 0035  ld   $35         ;03a3 BCC
              623f 0056  ld   $56         ;03a4 LE
              6240 00e0  ld   $e0
              6241 0021  ld   $21         ;03a6 LDW
              6242 0054  ld   $54         ;03a6 'X0'
              6243 0099  ld   $99         ;03a8 ADDW
              6244 004c  ld   $4c         ;03a8 'DX'
              6245 002b  ld   $2b         ;03aa STW
              6246 0054  ld   $54         ;03aa 'X0'
              6247 0021  ld   $21         ;03ac LDW
              6248 0050  ld   $50         ;03ac 'Y0'
              6249 0099  ld   $99         ;03ae ADDW
              624a 0048  ld   $48         ;03ae 'DY'
              624b 002b  ld   $2b         ;03b0 STW
              624c 0050  ld   $50         ;03b0 'Y0'
              624d 0021  ld   $21         ;03b2 LDW
              624e 004c  ld   $4c         ;03b2 'DX'
              624f 0035  ld   $35         ;03b4 BCC
              6250 0053  ld   $53         ;03b5 GE
              6251 00bb  ld   $bb
              6252 0021  ld   $21         ;03b7 LDW
              6253 003e  ld   $3e         ;03b7 'Pen'
              6254 00e6  ld   $e6         ;03b9 SUBI
              6255 0001  ld   $01
              6256 002b  ld   $2b         ;03bb STW
              6257 003e  ld   $3e         ;03bb 'Pen'
              6258 0021  ld   $21         ;03bd LDW
              6259 004c  ld   $4c         ;03bd 'DX'
              625a 0035  ld   $35         ;03bf BCC
              625b 0056  ld   $56         ;03c0 LE
              625c 00c6  ld   $c6
              625d 0021  ld   $21         ;03c2 LDW
              625e 003e  ld   $3e         ;03c2 'Pen'
              625f 00e3  ld   $e3         ;03c4 ADDI
              6260 0001  ld   $01
              6261 002b  ld   $2b         ;03c6 STW
              6262 003e  ld   $3e         ;03c6 'Pen'
              6263 0021  ld   $21         ;03c8 LDW
              6264 0048  ld   $48         ;03c8 'DY'
              6265 0035  ld   $35         ;03ca BCC
              6266 0053  ld   $53         ;03cb GE
              6267 00d2  ld   $d2
              6268 0011  ld   $11         ;03cd LDWI
              6269 0000  ld   $00
              626a 00ff  ld   $ff
              626b 0099  ld   $99         ;03d0 ADDW
              626c 003e  ld   $3e         ;03d0 'Pen'
              626d 002b  ld   $2b         ;03d2 STW
              626e 003e  ld   $3e         ;03d2 'Pen'
              626f 0021  ld   $21         ;03d4 LDW
              6270 0048  ld   $48         ;03d4 'DY'
              6271 0035  ld   $35         ;03d6 BCC
              6272 0056  ld   $56         ;03d7 LE
              6273 00de  ld   $de
              6274 0011  ld   $11         ;03d9 LDWI
              6275 0000  ld   $00
              6276 0001  ld   $01
              6277 0099  ld   $99         ;03dc ADDW
              6278 003e  ld   $3e         ;03dc 'Pen'
              6279 002b  ld   $2b         ;03de STW
              627a 003e  ld   $3e         ;03de 'Pen'
              627b 0090  ld   $90         ;03e0 BRA
              627c 001a  ld   $1a
              627d 00cf  ld   $cf         ;03e2 CALL
              627e 005a  ld   $5a         ;03e2 'GrayOut'
              627f 0063  ld   $63         ;03e4 POP
              6280 00ff  ld   $ff         ;03e5 RET
              6281 002b  ld   $2b         ;03e6 STW
              6282 005c  ld   $5c         ;03e6 'CalcSet'
              6283 0093  ld   $93         ;03e8 INC
              6284 001b  ld   $1b
              6285 00ff  ld   $ff         ;03ea RET
              6286 0004  ld   $04         ;| RAM segment address (high byte first)
              6287 0000  ld   $00         ;|
              6288 00f0  ld   $f0         ;| Length (1..256)
              6289 00cd  ld   $cd         ;0400 DEF
              628a 00e4  ld   $e4
              628b 0075  ld   $75         ;0402 PUSH
              628c 0011  ld   $11         ;0403 LDWI
              628d 0000  ld   $00
              628e 0008  ld   $08
              628f 002b  ld   $2b         ;0406 STW
              6290 003e  ld   $3e         ;0406 'Pen'
              6291 0059  ld   $59         ;0408 LDI
              6292 0078  ld   $78
              6293 002b  ld   $2b         ;040a STW
              6294 0040  ld   $40         ;040a 'Height'
              6295 0059  ld   $59         ;040c LDI
              6296 00a0  ld   $a0
              6297 002b  ld   $2b         ;040e STW
              6298 0042  ld   $42         ;040e 'Width'
              6299 002b  ld   $2b         ;0410 STW
              629a 0044  ld   $44         ;0410 'len'
              629b 0059  ld   $59         ;0412 LDI
              629c 0001  ld   $01
              629d 002b  ld   $2b         ;0414 STW
              629e 004c  ld   $4c         ;0414 'DX'
              629f 0059  ld   $59         ;0416 LDI
              62a0 0000  ld   $00
              62a1 002b  ld   $2b         ;0418 STW
              62a2 0048  ld   $48         ;0418 'DY'
              62a3 0011  ld   $11         ;041a LDWI
              62a4 0000  ld   $00
              62a5 0006  ld   $06
              62a6 002b  ld   $2b         ;041d STW
              62a7 0022  ld   $22
              62a8 0059  ld   $59         ;041f LDI
              62a9 0000  ld   $00
              62aa 002b  ld   $2b         ;0421 STW
              62ab 005e  ld   $5e         ;0421 'Level'
              62ac 0059  ld   $59         ;0423 LDI
              62ad 0020  ld   $20
              62ae 002b  ld   $2b         ;0425 STW
              62af 0060  ld   $60         ;0425 'i'
              62b0 0021  ld   $21         ;0427 LDW
              62b1 003e  ld   $3e         ;0427 'Pen'
              62b2 00ad  ld   $ad         ;0429 PEEK
              62b3 0082  ld   $82         ;042a ANDI
              62b4 003f  ld   $3f
              62b5 00b8  ld   $b8         ;042c SUBW
              62b6 0060  ld   $60         ;042c 'i'
              62b7 0035  ld   $35         ;042e BCC
              62b8 0050  ld   $50         ;042f LT
              62b9 0042  ld   $42
              62ba 00f0  ld   $f0         ;0431 POKE
              62bb 003e  ld   $3e         ;0431 'Pen'
              62bc 0021  ld   $21         ;0433 LDW
              62bd 0060  ld   $60         ;0433 'i'
              62be 0082  ld   $82         ;0435 ANDI
              62bf 0015  ld   $15
              62c0 0035  ld   $35         ;0437 BCC
              62c1 003f  ld   $3f         ;0438 EQ
              62c2 003c  ld   $3c
              62c3 0059  ld   $59         ;043a LDI
              62c4 0001  ld   $01
              62c5 0090  ld   $90         ;043c BRA
              62c6 003e  ld   $3e
              62c7 0059  ld   $59         ;043e LDI
              62c8 0002  ld   $02
              62c9 0099  ld   $99         ;0440 ADDW
              62ca 005e  ld   $5e         ;0440 'Level'
              62cb 002b  ld   $2b         ;0442 STW
              62cc 005e  ld   $5e         ;0442 'Level'
              62cd 0021  ld   $21         ;0444 LDW
              62ce 0060  ld   $60         ;0444 'i'
              62cf 00b4  ld   $b4         ;0446 SYS
              62d0 00f7  ld   $f7
              62d1 0035  ld   $35         ;0448 BCC
              62d2 004d  ld   $4d         ;0449 GT
              62d3 0023  ld   $23
              62d4 00f0  ld   $f0         ;044b POKE
              62d5 003e  ld   $3e         ;044b 'Pen'
              62d6 0021  ld   $21         ;044d LDW
              62d7 005e  ld   $5e         ;044d 'Level'
              62d8 0035  ld   $35         ;044f BCC
              62d9 003f  ld   $3f         ;0450 EQ
              62da 0083  ld   $83
              62db 001a  ld   $1a         ;0452 LD
              62dc 003f  ld   $3f         ;0452 'Pen'+1
              62dd 0082  ld   $82         ;0454 ANDI
              62de 0001  ld   $01
              62df 002b  ld   $2b         ;0456 STW
              62e0 0060  ld   $60         ;0456 'i'
              62e1 0099  ld   $99         ;0458 ADDW
              62e2 0060  ld   $60         ;0458 'i'
              62e3 002b  ld   $2b         ;045a STW
              62e4 0060  ld   $60         ;045a 'i'
              62e5 0021  ld   $21         ;045c LDW
              62e6 003e  ld   $3e         ;045c 'Pen'
              62e7 0082  ld   $82         ;045e ANDI
              62e8 0001  ld   $01
              62e9 0099  ld   $99         ;0460 ADDW
              62ea 0060  ld   $60         ;0460 'i'
              62eb 002b  ld   $2b         ;0462 STW
              62ec 0060  ld   $60         ;0462 'i'
              62ed 00cd  ld   $cd         ;0464 DEF
              62ee 0068  ld   $68
              62ef 0000  ld   $00
              62f0 0002  ld   $02
              62f1 0003  ld   $03
              62f2 0001  ld   $01
              62f3 0099  ld   $99         ;046a ADDW
              62f4 0060  ld   $60         ;046a 'i'
              62f5 00ad  ld   $ad         ;046c PEEK
              62f6 0099  ld   $99         ;046d ADDW
              62f7 005e  ld   $5e         ;046d 'Level'
              62f8 00e6  ld   $e6         ;046f SUBI
              62f9 0001  ld   $01
              62fa 002b  ld   $2b         ;0471 STW
              62fb fe00  bra  ac          ;+-----------------------------------+
              62fc fcfd  bra  $62fd       ;|                                   |
              62fd 1418  ld   $18,y       ;| Trampoline for page $6200 lookups |
              62fe e006  jmp  y,$06       ;|                                   |
              62ff c218  st   [$18]       ;+-----------------------------------+
              6300 005e  ld   $5e         ;0471 'Level'
              6301 0021  ld   $21         ;0473 LDW
              6302 005e  ld   $5e         ;0473 'Level'
              6303 00e6  ld   $e6         ;0475 SUBI
              6304 0003  ld   $03
              6305 0035  ld   $35         ;0477 BCC
              6306 0050  ld   $50         ;0478 LT
              6307 0083  ld   $83
              6308 002b  ld   $2b         ;047a STW
              6309 005e  ld   $5e         ;047a 'Level'
              630a 0021  ld   $21         ;047c LDW
              630b 003e  ld   $3e         ;047c 'Pen'
              630c 00ad  ld   $ad         ;047e PEEK
              630d 00e3  ld   $e3         ;047f ADDI
              630e 0015  ld   $15
              630f 00f0  ld   $f0         ;0481 POKE
              6310 003e  ld   $3e         ;0481 'Pen'
              6311 0090  ld   $90         ;0483 BRA
              6312 0071  ld   $71
              6313 0021  ld   $21         ;0485 LDW
              6314 0044  ld   $44         ;0485 'len'
              6315 00e6  ld   $e6         ;0487 SUBI
              6316 0001  ld   $01
              6317 0035  ld   $35         ;0489 BCC
              6318 004d  ld   $4d         ;048a GT
              6319 00ab  ld   $ab
              631a 0021  ld   $21         ;048c LDW
              631b 0048  ld   $48         ;048c 'DY'
              631c 002b  ld   $2b         ;048e STW
              631d 0056  ld   $56         ;048e 'tmp'
              631e 0021  ld   $21         ;0490 LDW
              631f 004c  ld   $4c         ;0490 'DX'
              6320 002b  ld   $2b         ;0492 STW
              6321 0048  ld   $48         ;0492 'DY'
              6322 0059  ld   $59         ;0494 LDI
              6323 0000  ld   $00
              6324 00b8  ld   $b8         ;0496 SUBW
              6325 0056  ld   $56         ;0496 'tmp'
              6326 002b  ld   $2b         ;0498 STW
              6327 004c  ld   $4c         ;0498 'DX'
              6328 0021  ld   $21         ;049a LDW
              6329 004c  ld   $4c         ;049a 'DX'
              632a 0035  ld   $35         ;049c BCC
              632b 003f  ld   $3f         ;049d EQ
              632c 00a5  ld   $a5
              632d 0021  ld   $21         ;049f LDW
              632e 0042  ld   $42         ;049f 'Width'
              632f 00e6  ld   $e6         ;04a1 SUBI
              6330 0001  ld   $01
              6331 002b  ld   $2b         ;04a3 STW
              6332 0042  ld   $42         ;04a3 'Width'
              6333 0090  ld   $90         ;04a5 BRA
              6334 00ab  ld   $ab
              6335 0021  ld   $21         ;04a7 LDW
              6336 0040  ld   $40         ;04a7 'Height'
              6337 00e6  ld   $e6         ;04a9 SUBI
              6338 0001  ld   $01
              6339 002b  ld   $2b         ;04ab STW
              633a 0040  ld   $40         ;04ab 'Height'
              633b 002b  ld   $2b         ;04ad STW
              633c 0044  ld   $44         ;04ad 'len'
              633d 0035  ld   $35         ;04af BCC
              633e 0056  ld   $56         ;04b0 LE
              633f 00e2  ld   $e2
              6340 0021  ld   $21         ;04b2 LDW
              6341 004c  ld   $4c         ;04b2 'DX'
              6342 0035  ld   $35         ;04b4 BCC
              6343 0053  ld   $53         ;04b5 GE
              6344 00bb  ld   $bb
              6345 0021  ld   $21         ;04b7 LDW
              6346 003e  ld   $3e         ;04b7 'Pen'
              6347 00e6  ld   $e6         ;04b9 SUBI
              6348 0001  ld   $01
              6349 002b  ld   $2b         ;04bb STW
              634a 003e  ld   $3e         ;04bb 'Pen'
              634b 0021  ld   $21         ;04bd LDW
              634c 004c  ld   $4c         ;04bd 'DX'
              634d 0035  ld   $35         ;04bf BCC
              634e 0056  ld   $56         ;04c0 LE
              634f 00c6  ld   $c6
              6350 0021  ld   $21         ;04c2 LDW
              6351 003e  ld   $3e         ;04c2 'Pen'
              6352 00e3  ld   $e3         ;04c4 ADDI
              6353 0001  ld   $01
              6354 002b  ld   $2b         ;04c6 STW
              6355 003e  ld   $3e         ;04c6 'Pen'
              6356 0021  ld   $21         ;04c8 LDW
              6357 0048  ld   $48         ;04c8 'DY'
              6358 0035  ld   $35         ;04ca BCC
              6359 0053  ld   $53         ;04cb GE
              635a 00d2  ld   $d2
              635b 0011  ld   $11         ;04cd LDWI
              635c 0000  ld   $00
              635d 00ff  ld   $ff
              635e 0099  ld   $99         ;04d0 ADDW
              635f 003e  ld   $3e         ;04d0 'Pen'
              6360 002b  ld   $2b         ;04d2 STW
              6361 003e  ld   $3e         ;04d2 'Pen'
              6362 0021  ld   $21         ;04d4 LDW
              6363 0048  ld   $48         ;04d4 'DY'
              6364 0035  ld   $35         ;04d6 BCC
              6365 0056  ld   $56         ;04d7 LE
              6366 00de  ld   $de
              6367 0011  ld   $11         ;04d9 LDWI
              6368 0000  ld   $00
              6369 0001  ld   $01
              636a 0099  ld   $99         ;04dc ADDW
              636b 003e  ld   $3e         ;04dc 'Pen'
              636c 002b  ld   $2b         ;04de STW
              636d 003e  ld   $3e         ;04de 'Pen'
              636e 00cf  ld   $cf         ;04e0 CALL
              636f 004e  ld   $4e         ;04e0 'UpdateClock'
              6370 0090  ld   $90         ;04e2 BRA
              6371 0018  ld   $18
              6372 0063  ld   $63         ;04e4 POP
              6373 00ff  ld   $ff         ;04e5 RET
              6374 002b  ld   $2b         ;04e6 STW
              6375 005a  ld   $5a         ;04e6 'GrayOut'
              6376 0011  ld   $11         ;04e8 LDWI
              6377 001a  ld   $1a
              6378 0020  ld   $20
              6379 002b  ld   $2b         ;04eb STW
              637a 0062  ld   $62         ;04eb 'Separator'
              637b 0093  ld   $93         ;04ed INC
              637c 001b  ld   $1b
              637d 00ff  ld   $ff         ;04ef RET
              637e 0005  ld   $05         ;| RAM segment address (high byte first)
              637f 0000  ld   $00         ;|
              6380 00f6  ld   $f6         ;| Length (1..256)
              6381 00cd  ld   $cd         ;0500 DEF
              6382 00a4  ld   $a4
              6383 001a  ld   $1a         ;0502 LD
              6384 000e  ld   $0e
              6385 00b8  ld   $b8         ;0504 SUBW
              6386 0064  ld   $64         ;0504 'LastFrame'
              6387 0082  ld   $82         ;0506 ANDI
              6388 00ff  ld   $ff
              6389 002b  ld   $2b         ;0508 STW
              638a 0066  ld   $66         ;0508 'Elapsed'
              638b 00e6  ld   $e6         ;050a SUBI
              638c 003c  ld   $3c
              638d 0035  ld   $35         ;050c BCC
              638e 0053  ld   $53         ;050d GE
              638f 0019  ld   $19
              6390 001a  ld   $1a         ;050f LD
              6391 0011  ld   $11
              6392 0082  ld   $82         ;0511 ANDI
              6393 0080  ld   $80
              6394 0035  ld   $35         ;0513 BCC
              6395 003f  ld   $3f         ;0514 EQ
              6396 0015  ld   $15
              6397 00ff  ld   $ff         ;0516 RET
              6398 0059  ld   $59         ;0517 LDI
              6399 000f  ld   $0f
              639a 0090  ld   $90         ;0519 BRA
              639b 001b  ld   $1b
              639c 0059  ld   $59         ;051b LDI
              639d 003f  ld   $3f
              639e 002b  ld   $2b         ;051d STW
              639f 0068  ld   $68         ;051d 'Color'
              63a0 0075  ld   $75         ;051f PUSH
              63a1 0021  ld   $21         ;0520 LDW
              63a2 006a  ld   $6a         ;0520 'Clock0'
              63a3 0099  ld   $99         ;0522 ADDW
              63a4 0066  ld   $66         ;0522 'Elapsed'
              63a5 002b  ld   $2b         ;0524 STW
              63a6 006a  ld   $6a         ;0524 'Clock0'
              63a7 0021  ld   $21         ;0526 LDW
              63a8 0064  ld   $64         ;0526 'LastFrame'
              63a9 0099  ld   $99         ;0528 ADDW
              63aa 0066  ld   $66         ;0528 'Elapsed'
              63ab 002b  ld   $2b         ;052a STW
              63ac 0064  ld   $64         ;052a 'LastFrame'
              63ad 0011  ld   $11         ;052c LDWI
              63ae 00f1  ld   $f1
              63af 00f1  ld   $f1
              63b0 0099  ld   $99         ;052f ADDW
              63b1 006a  ld   $6a         ;052f 'Clock0'
              63b2 0035  ld   $35         ;0531 BCC
              63b3 0050  ld   $50         ;0532 LT
              63b4 0038  ld   $38
              63b5 002b  ld   $2b         ;0534 STW
              63b6 006a  ld   $6a         ;0534 'Clock0'
              63b7 0059  ld   $59         ;0536 LDI
              63b8 0001  ld   $01
              63b9 00cf  ld   $cf         ;0538 CALL
              63ba 006c  ld   $6c         ;0538 'AddMinutes'
              63bb 001a  ld   $1a         ;053a LD
              63bc 0063  ld   $63         ;053a 'Separator'+1
              63bd 00fc  ld   $fc         ;053c XORW
              63be 0062  ld   $62         ;053c 'Separator'
              63bf 005e  ld   $5e         ;053e ST
              63c0 0063  ld   $63         ;053e 'Separator'+1
              63c1 001a  ld   $1a         ;0540 LD
              63c2 0011  ld   $11
              63c3 008c  ld   $8c         ;0542 XORI
              63c4 0077  ld   $77
              63c5 0035  ld   $35         ;0544 BCC
              63c6 0072  ld   $72         ;0545 NE
              63c7 004b  ld   $4b
              63c8 002b  ld   $2b         ;0547 STW
              63c9 006a  ld   $6a         ;0547 'Clock0'
              63ca 0059  ld   $59         ;0549 LDI
              63cb 0001  ld   $01
              63cc 0090  ld   $90         ;054b BRA
              63cd 0070  ld   $70
              63ce 008c  ld   $8c         ;054d XORI
              63cf 000c  ld   $0c
              63d0 0035  ld   $35         ;054f BCC
              63d1 0072  ld   $72         ;0550 NE
              63d2 0057  ld   $57
              63d3 002b  ld   $2b         ;0552 STW
              63d4 006a  ld   $6a         ;0552 'Clock0'
              63d5 0011  ld   $11         ;0554 LDWI
              63d6 00ff  ld   $ff
              63d7 00ff  ld   $ff
              63d8 0090  ld   $90         ;0557 BRA
              63d9 0070  ld   $70
              63da 008c  ld   $8c         ;0559 XORI
              63db 0006  ld   $06
              63dc 0035  ld   $35         ;055b BCC
              63dd 0072  ld   $72         ;055c NE
              63de 0063  ld   $63
              63df 002b  ld   $2b         ;055e STW
              63e0 006a  ld   $6a         ;055e 'Clock0'
              63e1 0011  ld   $11         ;0560 LDWI
              63e2 00c4  ld   $c4
              63e3 00ff  ld   $ff
              63e4 0090  ld   $90         ;0563 BRA
              63e5 0070  ld   $70
              63e6 008c  ld   $8c         ;0565 XORI
              63e7 0003  ld   $03
              63e8 0035  ld   $35         ;0567 BCC
              63e9 0072  ld   $72         ;0568 NE
              63ea 006e  ld   $6e
              63eb 002b  ld   $2b         ;056a STW
              63ec 006a  ld   $6a         ;056a 'Clock0'
              63ed 0059  ld   $59         ;056c LDI
              63ee 003c  ld   $3c
              63ef 0090  ld   $90         ;056e BRA
              63f0 0070  ld   $70
              63f1 0059  ld   $59         ;0570 LDI
              63f2 0000  ld   $00
              63f3 0035  ld   $35         ;0572 BCC
              63f4 003f  ld   $3f         ;0573 EQ
              63f5 007e  ld   $7e
              63f6 00cf  ld   $cf         ;0575 CALL
              63f7 006c  ld   $6c         ;0575 'AddMinutes'
              63f8 0059  ld   $59         ;0577 LDI
              63f9 0000  ld   $00
              63fa 002b  ld   $2b         ;0579 STW
              63fb fe00  bra  ac          ;+-----------------------------------+
              63fc fcfd  bra  $63fd       ;|                                   |
              63fd 1418  ld   $18,y       ;| Trampoline for page $6300 lookups |
              63fe e006  jmp  y,$06       ;|                                   |
              63ff c218  st   [$18]       ;+-----------------------------------+
              6400 006a  ld   $6a         ;0579 'Clock0'
              6401 0011  ld   $11         ;057b LDWI
              6402 0000  ld   $00
              6403 003a  ld   $3a
              6404 002b  ld   $2b         ;057e STW
              6405 0062  ld   $62         ;057e 'Separator'
              6406 001a  ld   $1a         ;0580 LD
              6407 0011  ld   $11
              6408 0088  ld   $88         ;0582 ORI
              6409 000f  ld   $0f
              640a 005e  ld   $5e         ;0584 ST
              640b 0011  ld   $11
              640c 0011  ld   $11         ;0586 LDWI
              640d 005c  ld   $5c
              640e 0044  ld   $44
              640f 002b  ld   $2b         ;0589 STW
              6410 006e  ld   $6e         ;0589 'Pos'
              6411 0021  ld   $21         ;058b LDW
              6412 0070  ld   $70         ;058b 'Clock1'
              6413 002b  ld   $2b         ;058d STW
              6414 0072  ld   $72         ;058d 'Value'
              6415 0011  ld   $11         ;058f LDWI
              6416 0058  ld   $58
              6417 0002  ld   $02
              6418 00cf  ld   $cf         ;0592 CALL
              6419 0074  ld   $74         ;0592 'NextDigit'
              641a 0059  ld   $59         ;0594 LDI
              641b 003c  ld   $3c
              641c 00cf  ld   $cf         ;0596 CALL
              641d 0074  ld   $74         ;0596 'NextDigit'
              641e 001a  ld   $1a         ;0598 LD
              641f 0063  ld   $63         ;0598 'Separator'+1
              6420 00cf  ld   $cf         ;059a CALL
              6421 0076  ld   $76         ;059a 'PrintChar'
              6422 0059  ld   $59         ;059c LDI
              6423 000a  ld   $0a
              6424 00cf  ld   $cf         ;059e CALL
              6425 0074  ld   $74         ;059e 'NextDigit'
              6426 0059  ld   $59         ;05a0 LDI
              6427 0001  ld   $01
              6428 00cf  ld   $cf         ;05a2 CALL
              6429 0074  ld   $74         ;05a2 'NextDigit'
              642a 0063  ld   $63         ;05a4 POP
              642b 00ff  ld   $ff         ;05a5 RET
              642c 002b  ld   $2b         ;05a6 STW
              642d 004e  ld   $4e         ;05a6 'UpdateClock'
              642e 00cd  ld   $cd         ;05a8 DEF
              642f 00ef  ld   $ef
              6430 00e6  ld   $e6         ;05aa SUBI
              6431 0020  ld   $20
              6432 002b  ld   $2b         ;05ac STW
              6433 0060  ld   $60         ;05ac 'i'
              6434 0011  ld   $11         ;05ae LDWI
              6435 0000  ld   $00
              6436 0007  ld   $07
              6437 002b  ld   $2b         ;05b1 STW
              6438 0078  ld   $78         ;05b1 'fontData'
              6439 0021  ld   $21         ;05b3 LDW
              643a 0060  ld   $60         ;05b3 'i'
              643b 00e9  ld   $e9         ;05b5 LSLW
              643c 00e9  ld   $e9         ;05b6 LSLW
              643d 0099  ld   $99         ;05b7 ADDW
              643e 0060  ld   $60         ;05b7 'i'
              643f 0099  ld   $99         ;05b9 ADDW
              6440 0078  ld   $78         ;05b9 'fontData'
              6441 002b  ld   $2b         ;05bb STW
              6442 0078  ld   $78         ;05bb 'fontData'
              6443 0011  ld   $11         ;05bd LDWI
              6444 0000  ld   $00
              6445 0008  ld   $08
              6446 0099  ld   $99         ;05c0 ADDW
              6447 006e  ld   $6e         ;05c0 'Pos'
              6448 002b  ld   $2b         ;05c2 STW
              6449 007a  ld   $7a         ;05c2 'q'
              644a 0059  ld   $59         ;05c4 LDI
              644b 0000  ld   $00
              644c 005e  ld   $5e         ;05c6 ST
              644d 0024  ld   $24
              644e 0021  ld   $21         ;05c8 LDW
              644f 0068  ld   $68         ;05c8 'Color'
              6450 005e  ld   $5e         ;05ca ST
              6451 0025  ld   $25
              6452 0021  ld   $21         ;05cc LDW
              6453 006e  ld   $6e         ;05cc 'Pos'
              6454 002b  ld   $2b         ;05ce STW
              6455 0028  ld   $28
              6456 00e3  ld   $e3         ;05d0 ADDI
              6457 0006  ld   $06
              6458 002b  ld   $2b         ;05d2 STW
              6459 006e  ld   $6e         ;05d2 'Pos'
              645a 0011  ld   $11         ;05d4 LDWI
              645b 00e1  ld   $e1
              645c 0004  ld   $04
              645d 002b  ld   $2b         ;05d7 STW
              645e 0022  ld   $22
              645f 0059  ld   $59         ;05d9 LDI
              6460 00fb  ld   $fb
              6461 002b  ld   $2b         ;05db STW
              6462 0060  ld   $60         ;05db 'i'
              6463 0021  ld   $21         ;05dd LDW
              6464 0078  ld   $78         ;05dd 'fontData'
              6465 007f  ld   $7f         ;05df LUP
              6466 0000  ld   $00
              6467 0093  ld   $93         ;05e1 INC
              6468 0078  ld   $78         ;05e1 'fontData'
              6469 005e  ld   $5e         ;05e3 ST
              646a 0026  ld   $26
              646b 00b4  ld   $b4         ;05e5 SYS
              646c 00cc  ld   $cc
              646d 0093  ld   $93         ;05e7 INC
              646e 0028  ld   $28
              646f 0093  ld   $93         ;05e9 INC
              6470 0060  ld   $60         ;05e9 'i'
              6471 0021  ld   $21         ;05eb LDW
              6472 0060  ld   $60         ;05eb 'i'
              6473 0035  ld   $35         ;05ed BCC
              6474 0072  ld   $72         ;05ee NE
              6475 00db  ld   $db
              6476 00ff  ld   $ff         ;05f0 RET
              6477 002b  ld   $2b         ;05f1 STW
              6478 0076  ld   $76         ;05f1 'PrintChar'
              6479 0093  ld   $93         ;05f3 INC
              647a 001b  ld   $1b
              647b 00ff  ld   $ff         ;05f5 RET
              647c 0006  ld   $06         ;| RAM segment address (high byte first)
              647d 0000  ld   $00         ;|
              647e 00fe  ld   $fe         ;| Length (1..256)
              647f 00cd  ld   $cd         ;0600 DEF
              6480 001d  ld   $1d
              6481 0075  ld   $75         ;0602 PUSH
              6482 002b  ld   $2b         ;0603 STW
              6483 007c  ld   $7c         ;0603 'Radix'
              6484 0059  ld   $59         ;0605 LDI
              6485 0030  ld   $30
              6486 002b  ld   $2b         ;0607 STW
              6487 007e  ld   $7e         ;0607 'Digit'
              6488 0021  ld   $21         ;0609 LDW
              6489 0072  ld   $72         ;0609 'Value'
              648a 00b8  ld   $b8         ;060b SUBW
              648b 007c  ld   $7c         ;060b 'Radix'
              648c 0035  ld   $35         ;060d BCC
              648d 0050  ld   $50         ;060e LT
              648e 0017  ld   $17
              648f 002b  ld   $2b         ;0610 STW
              6490 0072  ld   $72         ;0610 'Value'
              6491 0093  ld   $93         ;0612 INC
              6492 007e  ld   $7e         ;0612 'Digit'
              6493 00b8  ld   $b8         ;0614 SUBW
              6494 007c  ld   $7c         ;0614 'Radix'
              6495 0035  ld   $35         ;0616 BCC
              6496 0053  ld   $53         ;0617 GE
              6497 000e  ld   $0e
              6498 0021  ld   $21         ;0619 LDW
              6499 007e  ld   $7e         ;0619 'Digit'
              649a 00cf  ld   $cf         ;061b CALL
              649b 0076  ld   $76         ;061b 'PrintChar'
              649c 0063  ld   $63         ;061d POP
              649d 00ff  ld   $ff         ;061e RET
              649e 002b  ld   $2b         ;061f STW
              649f 0074  ld   $74         ;061f 'NextDigit'
              64a0 00cd  ld   $cd         ;0621 DEF
              64a1 003a  ld   $3a
              64a2 0099  ld   $99         ;0623 ADDW
              64a3 0070  ld   $70         ;0623 'Clock1'
              64a4 002b  ld   $2b         ;0625 STW
              64a5 0070  ld   $70         ;0625 'Clock1'
              64a6 0035  ld   $35         ;0627 BCC
              64a7 0053  ld   $53         ;0628 GE
              64a8 002f  ld   $2f
              64a9 0011  ld   $11         ;062a LDWI
              64aa 00a0  ld   $a0
              64ab 0005  ld   $05
              64ac 0099  ld   $99         ;062d ADDW
              64ad 0070  ld   $70         ;062d 'Clock1'
              64ae 002b  ld   $2b         ;062f STW
              64af 0070  ld   $70         ;062f 'Clock1'
              64b0 0011  ld   $11         ;0631 LDWI
              64b1 0060  ld   $60
              64b2 00fa  ld   $fa
              64b3 0099  ld   $99         ;0634 ADDW
              64b4 0070  ld   $70         ;0634 'Clock1'
              64b5 0035  ld   $35         ;0636 BCC
              64b6 0050  ld   $50         ;0637 LT
              64b7 0039  ld   $39
              64b8 002b  ld   $2b         ;0639 STW
              64b9 0070  ld   $70         ;0639 'Clock1'
              64ba 00ff  ld   $ff         ;063b RET
              64bb 002b  ld   $2b         ;063c STW
              64bc 006c  ld   $6c         ;063c 'AddMinutes'
              64bd 00cd  ld   $cd         ;063e DEF
              64be 008e  ld   $8e
              64bf 0075  ld   $75         ;0640 PUSH
              64c0 0059  ld   $59         ;0641 LDI
              64c1 0000  ld   $00
              64c2 002b  ld   $2b         ;0643 STW
              64c3 0081  ld   $81         ;0643 'X'
              64c4 002b  ld   $2b         ;0645 STW
              64c5 0083  ld   $83         ;0645 'XX'
              64c6 002b  ld   $2b         ;0647 STW
              64c7 0085  ld   $85         ;0647 'Y'
              64c8 002b  ld   $2b         ;0649 STW
              64c9 0052  ld   $52         ;0649 'YY'
              64ca 002b  ld   $2b         ;064b STW
              64cb 0060  ld   $60         ;064b 'i'
              64cc 0021  ld   $21         ;064d LDW
              64cd 0060  ld   $60         ;064d 'i'
              64ce 00e3  ld   $e3         ;064f ADDI
              64cf 0001  ld   $01
              64d0 002b  ld   $2b         ;0651 STW
              64d1 0060  ld   $60         ;0651 'i'
              64d2 008c  ld   $8c         ;0653 XORI
              64d3 0040  ld   $40
              64d4 0035  ld   $35         ;0655 BCC
              64d5 003f  ld   $3f         ;0656 EQ
              64d6 008c  ld   $8c
              64d7 0021  ld   $21         ;0658 LDW
              64d8 0081  ld   $81         ;0658 'X'
              64d9 002b  ld   $2b         ;065a STW
              64da 0034  ld   $34         ;065a 'A'
              64db 0021  ld   $21         ;065c LDW
              64dc 0085  ld   $85         ;065c 'Y'
              64dd 0099  ld   $99         ;065e ADDW
              64de 0085  ld   $85         ;065e 'Y'
              64df 002b  ld   $2b         ;0660 STW
              64e0 0036  ld   $36         ;0660 'B'
              64e1 00cf  ld   $cf         ;0662 CALL
              64e2 003c  ld   $3c         ;0662 'MulShift7'
              64e3 0099  ld   $99         ;0664 ADDW
              64e4 0050  ld   $50         ;0664 'Y0'
              64e5 002b  ld   $2b         ;0666 STW
              64e6 0085  ld   $85         ;0666 'Y'
              64e7 0021  ld   $21         ;0668 LDW
              64e8 0083  ld   $83         ;0668 'XX'
              64e9 00b8  ld   $b8         ;066a SUBW
              64ea 0052  ld   $52         ;066a 'YY'
              64eb 0099  ld   $99         ;066c ADDW
              64ec 0054  ld   $54         ;066c 'X0'
              64ed 002b  ld   $2b         ;066e STW
              64ee 0081  ld   $81         ;066e 'X'
              64ef 002b  ld   $2b         ;0670 STW
              64f0 0034  ld   $34         ;0670 'A'
              64f1 002b  ld   $2b         ;0672 STW
              64f2 0036  ld   $36         ;0672 'B'
              64f3 00cf  ld   $cf         ;0674 CALL
              64f4 003c  ld   $3c         ;0674 'MulShift7'
              64f5 002b  ld   $2b         ;0676 STW
              64f6 0083  ld   $83         ;0676 'XX'
              64f7 0021  ld   $21         ;0678 LDW
              64f8 0085  ld   $85         ;0678 'Y'
              64f9 002b  ld   $2b         ;067a STW
              64fa 0034  ld   $34         ;067a 'A'
              64fb fe00  bra  ac          ;+-----------------------------------+
              64fc fcfd  bra  $64fd       ;|                                   |
              64fd 1418  ld   $18,y       ;| Trampoline for page $6400 lookups |
              64fe e006  jmp  y,$06       ;|                                   |
              64ff c218  st   [$18]       ;+-----------------------------------+
              6500 002b  ld   $2b         ;067c STW
              6501 0036  ld   $36         ;067c 'B'
              6502 00cf  ld   $cf         ;067e CALL
              6503 003c  ld   $3c         ;067e 'MulShift7'
              6504 002b  ld   $2b         ;0680 STW
              6505 0052  ld   $52         ;0680 'YY'
              6506 0011  ld   $11         ;0682 LDWI
              6507 0000  ld   $00
              6508 00fe  ld   $fe
              6509 0099  ld   $99         ;0685 ADDW
              650a 0083  ld   $83         ;0685 'XX'
              650b 0099  ld   $99         ;0687 ADDW
              650c 0052  ld   $52         ;0687 'YY'
              650d 0035  ld   $35         ;0689 BCC
              650e 0056  ld   $56         ;068a LE
              650f 004b  ld   $4b
              6510 0021  ld   $21         ;068c LDW
              6511 0060  ld   $60         ;068c 'i'
              6512 0063  ld   $63         ;068e POP
              6513 00ff  ld   $ff         ;068f RET
              6514 002b  ld   $2b         ;0690 STW
              6515 0058  ld   $58         ;0690 'CalcPixel'
              6516 0059  ld   $59         ;0692 LDI
              6517 0000  ld   $00
              6518 002b  ld   $2b         ;0694 STW
              6519 006a  ld   $6a         ;0694 'Clock0'
              651a 002b  ld   $2b         ;0696 STW
              651b 0070  ld   $70         ;0696 'Clock1'
              651c 002b  ld   $2b         ;0698 STW
              651d 007e  ld   $7e         ;0698 'Digit'
              651e 001a  ld   $1a         ;069a LD
              651f 000e  ld   $0e
              6520 002b  ld   $2b         ;069c STW
              6521 0064  ld   $64         ;069c 'LastFrame'
              6522 0011  ld   $11         ;069e LDWI
              6523 004c  ld   $4c
              6524 00ff  ld   $ff
              6525 002b  ld   $2b         ;06a1 STW
              6526 0050  ld   $50         ;06a1 'Y0'
              6527 0011  ld   $11         ;06a3 LDWI
              6528 00c0  ld   $c0
              6529 00fe  ld   $fe
              652a 002b  ld   $2b         ;06a6 STW
              652b 0054  ld   $54         ;06a6 'X0'
              652c 0059  ld   $59         ;06a8 LDI
              652d 0003  ld   $03
              652e 002b  ld   $2b         ;06aa STW
              652f 004a  ld   $4a         ;06aa 'Step'
              6530 00cf  ld   $cf         ;06ac CALL
              6531 005c  ld   $5c         ;06ac 'CalcSet'
              6532 0011  ld   $11         ;06ae LDWI
              6533 006c  ld   $6c
              6534 00ff  ld   $ff
              6535 002b  ld   $2b         ;06b1 STW
              6536 0050  ld   $50         ;06b1 'Y0'
              6537 0011  ld   $11         ;06b3 LDWI
              6538 009e  ld   $9e
              6539 00ff  ld   $ff
              653a 002b  ld   $2b         ;06b6 STW
              653b 0054  ld   $54         ;06b6 'X0'
              653c 0059  ld   $59         ;06b8 LDI
              653d 0001  ld   $01
              653e 002b  ld   $2b         ;06ba STW
              653f 004a  ld   $4a         ;06ba 'Step'
              6540 00cf  ld   $cf         ;06bc CALL
              6541 005c  ld   $5c         ;06bc 'CalcSet'
              6542 0011  ld   $11         ;06be LDWI
              6543 00c4  ld   $c4
              6544 00ff  ld   $ff
              6545 002b  ld   $2b         ;06c1 STW
              6546 0050  ld   $50         ;06c1 'Y0'
              6547 0011  ld   $11         ;06c3 LDWI
              6548 0000  ld   $00
              6549 00ff  ld   $ff
              654a 002b  ld   $2b         ;06c6 STW
              654b 0054  ld   $54         ;06c6 'X0'
              654c 0059  ld   $59         ;06c8 LDI
              654d 0001  ld   $01
              654e 002b  ld   $2b         ;06ca STW
              654f 004a  ld   $4a         ;06ca 'Step'
              6550 00cf  ld   $cf         ;06cc CALL
              6551 005c  ld   $5c         ;06cc 'CalcSet'
              6552 0011  ld   $11         ;06ce LDWI
              6553 00c0  ld   $c0
              6554 00fe  ld   $fe
              6555 002b  ld   $2b         ;06d1 STW
              6556 0050  ld   $50         ;06d1 'Y0'
              6557 0011  ld   $11         ;06d3 LDWI
              6558 0098  ld   $98
              6559 00fe  ld   $fe
              655a 002b  ld   $2b         ;06d6 STW
              655b 0054  ld   $54         ;06d6 'X0'
              655c 0059  ld   $59         ;06d8 LDI
              655d 0009  ld   $09
              655e 002b  ld   $2b         ;06da STW
              655f 004a  ld   $4a         ;06da 'Step'
              6560 00cf  ld   $cf         ;06dc CALL
              6561 005c  ld   $5c         ;06dc 'CalcSet'
              6562 0059  ld   $59         ;06de LDI
              6563 0000  ld   $00
              6564 002b  ld   $2b         ;06e0 STW
              6565 0050  ld   $50         ;06e0 'Y0'
              6566 0011  ld   $11         ;06e2 LDWI
              6567 009c  ld   $9c
              6568 00ff  ld   $ff
              6569 002b  ld   $2b         ;06e5 STW
              656a 0054  ld   $54         ;06e5 'X0'
              656b 0059  ld   $59         ;06e7 LDI
              656c 0001  ld   $01
              656d 002b  ld   $2b         ;06e9 STW
              656e 004a  ld   $4a         ;06e9 'Step'
              656f 00cf  ld   $cf         ;06eb CALL
              6570 005c  ld   $5c         ;06eb 'CalcSet'
              6571 0011  ld   $11         ;06ed LDWI
              6572 00c4  ld   $c4
              6573 00ff  ld   $ff
              6574 002b  ld   $2b         ;06f0 STW
              6575 0050  ld   $50         ;06f0 'Y0'
              6576 0059  ld   $59         ;06f2 LDI
              6577 0000  ld   $00
              6578 002b  ld   $2b         ;06f4 STW
              6579 0054  ld   $54         ;06f4 'X0'
              657a 0059  ld   $59         ;06f6 LDI
              657b 0001  ld   $01
              657c 002b  ld   $2b         ;06f8 STW
              657d 004a  ld   $4a         ;06f8 'Step'
              657e 00cf  ld   $cf         ;06fa CALL
              657f 005c  ld   $5c         ;06fa 'CalcSet'
              6580 0090  ld   $90         ;06fc BRA
              6581 009c  ld   $9c
              6582 0000  ld   $00         ;End of Apps/Mandelbrot/Mandelbrot_v1.gcl, size 1255
                                          ;+-----------------------------------+
                                          ;| Apps/Loader/Loader_v4.gcl         |
                                          ;+-----------------------------------+
              6583 dc4d  st   $4d,[y,x++] ;'M'
              6584 dc61  st   $61,[y,x++] ;'a'
              6585 dc6e  st   $6e,[y,x++] ;'n'
              6586 dc64  st   $64,[y,x++] ;'d'
              6587 dc65  st   $65,[y,x++] ;'e'
              6588 dc6c  st   $6c,[y,x++] ;'l'
              6589 dc62  st   $62,[y,x++] ;'b'
              658a dc72  st   $72,[y,x++] ;'r'
              658b 009c  ld   $9c
              658c c218  st   [$18]
              658d 0060  ld   $60
              658e 14e1  ld   $e1,y
              658f e071  jmp  y,$71
              6590 c219  st   [$19]
Loader:       6591 0002  ld   $02         ;| RAM segment address (high byte first)
              6592 0000  ld   $00         ;|
              6593 0095  ld   $95         ;| Length (1..256)
              6594 00cd  ld   $cd         ;0200 DEF
              6595 0043  ld   $43
              6596 00e6  ld   $e6         ;0202 SUBI
              6597 0052  ld   $52
              6598 0035  ld   $35         ;0204 BCC
              6599 0053  ld   $53         ;0205 GE
              659a 000e  ld   $0e
              659b 00e3  ld   $e3         ;0207 ADDI
              659c 0032  ld   $32
              659d 002b  ld   $2b         ;0209 STW
              659e 0030  ld   $30         ;0209 'i'
              659f 0011  ld   $11         ;020b LDWI
              65a0 0000  ld   $00
              65a1 0007  ld   $07
              65a2 0090  ld   $90         ;020e BRA
              65a3 0013  ld   $13
              65a4 002b  ld   $2b         ;0210 STW
              65a5 0030  ld   $30         ;0210 'i'
              65a6 0011  ld   $11         ;0212 LDWI
              65a7 0000  ld   $00
              65a8 0008  ld   $08
              65a9 002b  ld   $2b         ;0215 STW
              65aa 0032  ld   $32         ;0215 'j'
              65ab 0021  ld   $21         ;0217 LDW
              65ac 0030  ld   $30         ;0217 'i'
              65ad 00e9  ld   $e9         ;0219 LSLW
              65ae 00e9  ld   $e9         ;021a LSLW
              65af 0099  ld   $99         ;021b ADDW
              65b0 0030  ld   $30         ;021b 'i'
              65b1 0099  ld   $99         ;021d ADDW
              65b2 0032  ld   $32         ;021d 'j'
              65b3 002b  ld   $2b         ;021f STW
              65b4 0032  ld   $32         ;021f 'j'
              65b5 0021  ld   $21         ;0221 LDW
              65b6 0034  ld   $34         ;0221 'Pos'
              65b7 002b  ld   $2b         ;0223 STW
              65b8 0028  ld   $28
              65b9 00e3  ld   $e3         ;0225 ADDI
              65ba 0006  ld   $06
              65bb 002b  ld   $2b         ;0227 STW
              65bc 0034  ld   $34         ;0227 'Pos'
              65bd 0059  ld   $59         ;0229 LDI
              65be 0005  ld   $05
              65bf 002b  ld   $2b         ;022b STW
              65c0 0030  ld   $30         ;022b 'i'
              65c1 0021  ld   $21         ;022d LDW
              65c2 0032  ld   $32         ;022d 'j'
              65c3 007f  ld   $7f         ;022f LUP
              65c4 0000  ld   $00
              65c5 005e  ld   $5e         ;0231 ST
              65c6 0026  ld   $26
              65c7 00b4  ld   $b4         ;0233 SYS
              65c8 00cc  ld   $cc
              65c9 0093  ld   $93         ;0235 INC
              65ca 0032  ld   $32         ;0235 'j'
              65cb 0093  ld   $93         ;0237 INC
              65cc 0028  ld   $28
              65cd 0021  ld   $21         ;0239 LDW
              65ce 0030  ld   $30         ;0239 'i'
              65cf 00e6  ld   $e6         ;023b SUBI
              65d0 0001  ld   $01
              65d1 0035  ld   $35         ;023d BCC
              65d2 004d  ld   $4d         ;023e GT
              65d3 0029  ld   $29
              65d4 005e  ld   $5e         ;0240 ST
              65d5 0026  ld   $26
              65d6 00b4  ld   $b4         ;0242 SYS
              65d7 00cc  ld   $cc
              65d8 00ff  ld   $ff         ;0244 RET
              65d9 002b  ld   $2b         ;0245 STW
              65da 0036  ld   $36         ;0245 'PrintChar'
              65db 0011  ld   $11         ;0247 LDWI
              65dc 00e1  ld   $e1
              65dd 0004  ld   $04
              65de 002b  ld   $2b         ;024a STW
              65df 0022  ld   $22         ;024a '_sysFn'
              65e0 0011  ld   $11         ;024c LDWI
              65e1 0020  ld   $20
              65e2 000f  ld   $0f
              65e3 002b  ld   $2b         ;024f STW
              65e4 0024  ld   $24         ;024f '_sysArgs0'
              65e5 0011  ld   $11         ;0251 LDWI
              65e6 0006  ld   $06
              65e7 0050  ld   $50
              65e8 002b  ld   $2b         ;0254 STW
              65e9 0034  ld   $34         ;0254 'Pos'
              65ea 00cd  ld   $cd         ;0256 DEF
              65eb 0065  ld   $65
              65ec 0020  ld   $20         ;0258 ' '
              65ed 0052  ld   $52         ;0259 'R'
              65ee 0065  ld   $65         ;025a 'e'
              65ef 0061  ld   $61         ;025b 'a'
              65f0 0064  ld   $64         ;025c 'd'
              65f1 0079  ld   $79         ;025d 'y'
              65f2 0020  ld   $20         ;025e ' '
              65f3 0074  ld   $74         ;025f 't'
              65f4 006f  ld   $6f         ;0260 'o'
              65f5 0020  ld   $20         ;0261 ' '
              65f6 006c  ld   $6c         ;0262 'l'
              65f7 006f  ld   $6f         ;0263 'o'
              65f8 0061  ld   $61         ;0264 'a'
              65f9 0064  ld   $64         ;0265 'd'
              65fa 0000  ld   $00         ;0266 0
              65fb fe00  bra  ac          ;+-----------------------------------+
              65fc fcfd  bra  $65fd       ;|                                   |
              65fd 1418  ld   $18,y       ;| Trampoline for page $6500 lookups |
              65fe e006  jmp  y,$06       ;|                                   |
              65ff c218  st   [$18]       ;+-----------------------------------+
              6600 002b  ld   $2b         ;0267 STW
              6601 0038  ld   $38         ;0267 'Text'
              6602 0021  ld   $21         ;0269 LDW
              6603 0038  ld   $38         ;0269 'Text'
              6604 00ad  ld   $ad         ;026b PEEK
              6605 0035  ld   $35         ;026c BCC
              6606 003f  ld   $3f         ;026d EQ
              6607 0073  ld   $73
              6608 0093  ld   $93         ;026f INC
              6609 0038  ld   $38         ;026f 'Text'
              660a 00cf  ld   $cf         ;0271 CALL
              660b 0036  ld   $36         ;0271 'PrintChar'
              660c 0090  ld   $90         ;0273 BRA
              660d 0067  ld   $67
              660e 005e  ld   $5e         ;0275 ST
              660f 0028  ld   $28
              6610 0011  ld   $11         ;0277 LDWI
              6611 000c  ld   $0c
              6612 0059  ld   $59
              6613 002b  ld   $2b         ;027a STW
              6614 003a  ld   $3a         ;027a 'A'
              6615 0011  ld   $11         ;027c LDWI
              6616 000c  ld   $0c
              6617 005b  ld   $5b
              6618 002b  ld   $2b         ;027f STW
              6619 003c  ld   $3c         ;027f 'B'
              661a 0059  ld   $59         ;0281 LDI
              661b 0067  ld   $67
              661c 005e  ld   $5e         ;0283 ST
              661d 0026  ld   $26
              661e 0011  ld   $11         ;0285 LDWI
              661f 0000  ld   $00
              6620 0041  ld   $41
              6621 002b  ld   $2b         ;0288 STW
              6622 003e  ld   $3e         ;0288 'NextByteIn_32'
              6623 0011  ld   $11         ;028a LDWI
              6624 0053  ld   $53
              6625 0041  ld   $41
              6626 002b  ld   $2b         ;028d STW
              6627 0040  ld   $40         ;028d 'PayloadCopy_34'
              6628 0011  ld   $11         ;028f LDWI
              6629 000c  ld   $0c
              662a 005a  ld   $5a
              662b 002b  ld   $2b         ;0292 STW
              662c 001a  ld   $1a         ;0292 '_vLR'
              662d 00ff  ld   $ff         ;0294 RET
              662e 005a  ld   $5a         ;| RAM segment address (high byte first)
              662f 000c  ld   $0c         ;|
              6630 0075  ld   $75         ;| Length (1..256)
              6631 0021  ld   $21         ;5a0c LDW
              6632 003c  ld   $3c         ;5a0c 'B'
              6633 002b  ld   $2b         ;5a0e STW
              6634 0024  ld   $24         ;5a0e '_sysArgs0'
              6635 0059  ld   $59         ;5a10 LDI
              6636 00cf  ld   $cf
              6637 005e  ld   $5e         ;5a12 ST
              6638 0027  ld   $27
              6639 0021  ld   $21         ;5a14 LDW
              663a 003e  ld   $3e         ;5a14 'NextByteIn_32'
              663b 002b  ld   $2b         ;5a16 STW
              663c 0022  ld   $22         ;5a16 '_sysFn'
              663d 00b4  ld   $b4         ;5a18 SYS
              663e 00ff  ld   $ff
              663f 0059  ld   $59         ;5a1a LDI
              6640 00db  ld   $db
              6641 005e  ld   $5e         ;5a1c ST
              6642 0027  ld   $27
              6643 00b4  ld   $b4         ;5a1e SYS
              6644 00ff  ld   $ff
              6645 0059  ld   $59         ;5a20 LDI
              6646 00eb  ld   $eb
              6647 005e  ld   $5e         ;5a22 ST
              6648 0027  ld   $27
              6649 00b4  ld   $b4         ;5a24 SYS
              664a 00ff  ld   $ff
              664b 0059  ld   $59         ;5a26 LDI
              664c 00fb  ld   $fb
              664d 005e  ld   $5e         ;5a28 ST
              664e 0027  ld   $27
              664f 00b4  ld   $b4         ;5a2a SYS
              6650 00ff  ld   $ff
              6651 0021  ld   $21         ;5a2c LDW
              6652 0040  ld   $40         ;5a2c 'PayloadCopy_34'
              6653 002b  ld   $2b         ;5a2e STW
              6654 0022  ld   $22         ;5a2e '_sysFn'
              6655 00b4  ld   $b4         ;5a30 SYS
              6656 00fe  ld   $fe
              6657 0059  ld   $59         ;5a32 LDI
              6658 0002  ld   $02
              6659 005e  ld   $5e         ;5a34 ST
              665a 0027  ld   $27
              665b 0021  ld   $21         ;5a36 LDW
              665c 003e  ld   $3e         ;5a36 'NextByteIn_32'
              665d 002b  ld   $2b         ;5a38 STW
              665e 0022  ld   $22         ;5a38 '_sysFn'
              665f 00b4  ld   $b4         ;5a3a SYS
              6660 00ff  ld   $ff
              6661 0059  ld   $59         ;5a3c LDI
              6662 0006  ld   $06
              6663 005e  ld   $5e         ;5a3e ST
              6664 0027  ld   $27
              6665 0021  ld   $21         ;5a40 LDW
              6666 0040  ld   $40         ;5a40 'PayloadCopy_34'
              6667 002b  ld   $2b         ;5a42 STW
              6668 0022  ld   $22         ;5a42 '_sysFn'
              6669 00b4  ld   $b4         ;5a44 SYS
              666a 00fe  ld   $fe
              666b 0021  ld   $21         ;5a46 LDW
              666c 003e  ld   $3e         ;5a46 'NextByteIn_32'
              666d 002b  ld   $2b         ;5a48 STW
              666e 0022  ld   $22         ;5a48 '_sysFn'
              666f 00b4  ld   $b4         ;5a4a SYS
              6670 00ff  ld   $ff
              6671 001a  ld   $1a         ;5a4c LD
              6672 0027  ld   $27
              6673 00e3  ld   $e3         ;5a4e ADDI
              6674 0004  ld   $04
              6675 005e  ld   $5e         ;5a50 ST
              6676 0027  ld   $27
              6677 008c  ld   $8c         ;5a52 XORI
              6678 00f2  ld   $f2
              6679 0035  ld   $35         ;5a54 BCC
              667a 0072  ld   $72         ;5a55 NE
              667b 003e  ld   $3e
              667c 0059  ld   $59         ;5a57 LDI
              667d 00b9  ld   $b9
              667e 005e  ld   $5e         ;5a59 ST
              667f 0027  ld   $27
              6680 00b4  ld   $b4         ;5a5b SYS
              6681 00ff  ld   $ff
              6682 001a  ld   $1a         ;5a5d LD
              6683 0026  ld   $26
              6684 0035  ld   $35         ;5a5f BCC
              6685 0072  ld   $72         ;5a60 NE
              6686 0064  ld   $64
              6687 0059  ld   $59         ;5a62 LDI
              6688 000c  ld   $0c
              6689 0090  ld   $90         ;5a64 BRA
              668a 0066  ld   $66
              668b 0059  ld   $59         ;5a66 LDI
              668c 0003  ld   $03
              668d 00f0  ld   $f0         ;5a68 POKE
              668e 003a  ld   $3a         ;5a68 'A'
              668f 001a  ld   $1a         ;5a6a LD
              6690 003a  ld   $3a         ;5a6a 'A'
              6691 00e6  ld   $e6         ;5a6c SUBI
              6692 000b  ld   $0b
              6693 0082  ld   $82         ;5a6e ANDI
              6694 007f  ld   $7f
              6695 00e3  ld   $e3         ;5a70 ADDI
              6696 000c  ld   $0c
              6697 005e  ld   $5e         ;5a72 ST
              6698 003a  ld   $3a         ;5a72 'A'
              6699 0059  ld   $59         ;5a74 LDI
              669a 003f  ld   $3f
              669b 00f0  ld   $f0         ;5a76 POKE
              669c 003a  ld   $3a         ;5a76 'A'
              669d 0011  ld   $11         ;5a78 LDWI
              669e 0015  ld   $15
              669f 0041  ld   $41
              66a0 002b  ld   $2b         ;5a7b STW
              66a1 0022  ld   $22         ;5a7b '_sysFn'
              66a2 00b4  ld   $b4         ;5a7d SYS
              66a3 00ef  ld   $ef
              66a4 0090  ld   $90         ;5a7f BRA
              66a5 000a  ld   $0a
              66a6 0000  ld   $00         ;End of Apps/Loader/Loader_v4.gcl, size 278
                                          ;+-----------------------------------+
                                          ;| Apps/Credits/Credits_v3.gcl       |
                                          ;+-----------------------------------+
              66a7 dc4c  st   $4c,[y,x++] ;'L'
              66a8 dc6f  st   $6f,[y,x++] ;'o'
              66a9 dc61  st   $61,[y,x++] ;'a'
              66aa dc64  st   $64,[y,x++] ;'d'
              66ab dc65  st   $65,[y,x++] ;'e'
              66ac dc72  st   $72,[y,x++] ;'r'
              66ad dc00  st   $00,[y,x++] ;'\x00'
              66ae dc00  st   $00,[y,x++] ;'\x00'
              66af 0091  ld   $91
              66b0 c218  st   [$18]
              66b1 0065  ld   $65
              66b2 14e1  ld   $e1,y
              66b3 e071  jmp  y,$71
              66b4 c219  st   [$19]
Credits:      66b5 0002  ld   $02         ;| RAM segment address (high byte first)
              66b6 0000  ld   $00         ;|
              66b7 00d4  ld   $d4         ;| Length (1..256)
              66b8 00cd  ld   $cd         ;0200 DEF
              66b9 0025  ld   $25
              66ba 0075  ld   $75         ;0202 PUSH
              66bb 0021  ld   $21         ;0203 LDW
              66bc 0030  ld   $30         ;0203 'Text'
              66bd 00ad  ld   $ad         ;0205 PEEK
              66be 002b  ld   $2b         ;0206 STW
              66bf 0032  ld   $32         ;0206 'Char'
              66c0 0035  ld   $35         ;0208 BCC
              66c1 003f  ld   $3f         ;0209 EQ
              66c2 0023  ld   $23
              66c3 0093  ld   $93         ;020b INC
              66c4 0030  ld   $30         ;020b 'Text'
              66c5 0021  ld   $21         ;020d LDW
              66c6 0032  ld   $32         ;020d 'Char'
              66c7 008c  ld   $8c         ;020f XORI
              66c8 000a  ld   $0a
              66c9 0035  ld   $35         ;0211 BCC
              66ca 0072  ld   $72         ;0212 NE
              66cb 001f  ld   $1f
              66cc 0059  ld   $59         ;0214 LDI
              66cd 0002  ld   $02
              66ce 005e  ld   $5e         ;0216 ST
              66cf 0034  ld   $34         ;0216 'Pos'
              66d0 0011  ld   $11         ;0218 LDWI
              66d1 0000  ld   $00
              66d2 0008  ld   $08
              66d3 0099  ld   $99         ;021b ADDW
              66d4 0034  ld   $34         ;021b 'Pos'
              66d5 002b  ld   $2b         ;021d STW
              66d6 0034  ld   $34         ;021d 'Pos'
              66d7 0090  ld   $90         ;021f BRA
              66d8 0021  ld   $21
              66d9 00cf  ld   $cf         ;0221 CALL
              66da 0036  ld   $36         ;0221 'PrintChar'
              66db 0090  ld   $90         ;0223 BRA
              66dc 0001  ld   $01
              66dd 0063  ld   $63         ;0225 POP
              66de 00ff  ld   $ff         ;0226 RET
              66df 002b  ld   $2b         ;0227 STW
              66e0 0038  ld   $38         ;0227 'PrintText'
              66e1 00cd  ld   $cd         ;0229 DEF
              66e2 00cd  ld   $cd
              66e3 0054  ld   $54         ;022b 'T'
              66e4 0068  ld   $68         ;022c 'h'
              66e5 0069  ld   $69         ;022d 'i'
              66e6 0073  ld   $73         ;022e 's'
              66e7 0020  ld   $20         ;022f ' '
              66e8 0047  ld   $47         ;0230 'G'
              66e9 0069  ld   $69         ;0231 'i'
              66ea 0067  ld   $67         ;0232 'g'
              66eb 0061  ld   $61         ;0233 'a'
              66ec 0074  ld   $74         ;0234 't'
              66ed 0072  ld   $72         ;0235 'r'
              66ee 006f  ld   $6f         ;0236 'o'
              66ef 006e  ld   $6e         ;0237 'n'
              66f0 0020  ld   $20         ;0238 ' '
              66f1 0054  ld   $54         ;0239 'T'
              66f2 0054  ld   $54         ;023a 'T'
              66f3 004c  ld   $4c         ;023b 'L'
              66f4 0020  ld   $20         ;023c ' '
              66f5 0063  ld   $63         ;023d 'c'
              66f6 006f  ld   $6f         ;023e 'o'
              66f7 006d  ld   $6d         ;023f 'm'
              66f8 0070  ld   $70         ;0240 'p'
              66f9 0075  ld   $75         ;0241 'u'
              66fa 0074  ld   $74         ;0242 't'
              66fb fe00  bra  ac          ;+-----------------------------------+
              66fc fcfd  bra  $66fd       ;|                                   |
              66fd 1418  ld   $18,y       ;| Trampoline for page $6600 lookups |
              66fe e006  jmp  y,$06       ;|                                   |
              66ff c218  st   [$18]       ;+-----------------------------------+
              6700 0065  ld   $65         ;0243 'e'
              6701 0072  ld   $72         ;0244 'r'
              6702 000a  ld   $0a         ;0245 10
              6703 006b  ld   $6b         ;0246 'k'
              6704 0069  ld   $69         ;0247 'i'
              6705 0074  ld   $74         ;0248 't'
              6706 0020  ld   $20         ;0249 ' '
              6707 0077  ld   $77         ;024a 'w'
              6708 0061  ld   $61         ;024b 'a'
              6709 0073  ld   $73         ;024c 's'
              670a 0020  ld   $20         ;024d ' '
              670b 0062  ld   $62         ;024e 'b'
              670c 0072  ld   $72         ;024f 'r'
              670d 006f  ld   $6f         ;0250 'o'
              670e 0075  ld   $75         ;0251 'u'
              670f 0067  ld   $67         ;0252 'g'
              6710 0068  ld   $68         ;0253 'h'
              6711 0074  ld   $74         ;0254 't'
              6712 0020  ld   $20         ;0255 ' '
              6713 0074  ld   $74         ;0256 't'
              6714 006f  ld   $6f         ;0257 'o'
              6715 0020  ld   $20         ;0258 ' '
              6716 0079  ld   $79         ;0259 'y'
              6717 006f  ld   $6f         ;025a 'o'
              6718 0075  ld   $75         ;025b 'u'
              6719 0020  ld   $20         ;025c ' '
              671a 0062  ld   $62         ;025d 'b'
              671b 0079  ld   $79         ;025e 'y'
              671c 000a  ld   $0a         ;025f 10
              671d 004d  ld   $4d         ;0260 'M'
              671e 0061  ld   $61         ;0261 'a'
              671f 0072  ld   $72         ;0262 'r'
              6720 0063  ld   $63         ;0263 'c'
              6721 0065  ld   $65         ;0264 'e'
              6722 006c  ld   $6c         ;0265 'l'
              6723 0020  ld   $20         ;0266 ' '
              6724 0076  ld   $76         ;0267 'v'
              6725 0061  ld   $61         ;0268 'a'
              6726 006e  ld   $6e         ;0269 'n'
              6727 0020  ld   $20         ;026a ' '
              6728 004b  ld   $4b         ;026b 'K'
              6729 0065  ld   $65         ;026c 'e'
              672a 0072  ld   $72         ;026d 'r'
              672b 0076  ld   $76         ;026e 'v'
              672c 0069  ld   $69         ;026f 'i'
              672d 006e  ld   $6e         ;0270 'n'
              672e 0063  ld   $63         ;0271 'c'
              672f 006b  ld   $6b         ;0272 'k'
              6730 0020  ld   $20         ;0273 ' '
              6731 0061  ld   $61         ;0274 'a'
              6732 006e  ld   $6e         ;0275 'n'
              6733 0064  ld   $64         ;0276 'd'
              6734 000a  ld   $0a         ;0277 10
              6735 0057  ld   $57         ;0278 'W'
              6736 0061  ld   $61         ;0279 'a'
              6737 006c  ld   $6c         ;027a 'l'
              6738 0074  ld   $74         ;027b 't'
              6739 0065  ld   $65         ;027c 'e'
              673a 0072  ld   $72         ;027d 'r'
              673b 0020  ld   $20         ;027e ' '
              673c 0042  ld   $42         ;027f 'B'
              673d 0065  ld   $65         ;0280 'e'
              673e 006c  ld   $6c         ;0281 'l'
              673f 0067  ld   $67         ;0282 'g'
              6740 0065  ld   $65         ;0283 'e'
              6741 0072  ld   $72         ;0284 'r'
              6742 0073  ld   $73         ;0285 's'
              6743 002e  ld   $2e         ;0286 '.'
              6744 000a  ld   $0a         ;0287 10
              6745 000a  ld   $0a         ;0288 10
              6746 0060  ld   $60         ;0289 '`'
              6747 0054  ld   $54         ;028a 'T'
              6748 0065  ld   $65         ;028b 'e'
              6749 0074  ld   $74         ;028c 't'
              674a 0072  ld   $72         ;028d 'r'
              674b 006f  ld   $6f         ;028e 'o'
              674c 006e  ld   $6e         ;028f 'n'
              674d 0069  ld   $69         ;0290 'i'
              674e 0073  ld   $73         ;0291 's'
              674f 0027  ld   $27         ;0292 "'"
              6750 0020  ld   $20         ;0293 ' '
              6751 0069  ld   $69         ;0294 'i'
              6752 0073  ld   $73         ;0295 's'
              6753 0020  ld   $20         ;0296 ' '
              6754 0062  ld   $62         ;0297 'b'
              6755 0079  ld   $79         ;0298 'y'
              6756 0020  ld   $20         ;0299 ' '
              6757 0061  ld   $61         ;029a 'a'
              6758 0074  ld   $74         ;029b 't'
              6759 0036  ld   $36         ;029c '6'
              675a 0037  ld   $37         ;029d '7'
              675b 0020  ld   $20         ;029e ' '
              675c 0061  ld   $61         ;029f 'a'
              675d 006e  ld   $6e         ;02a0 'n'
              675e 0064  ld   $64         ;02a1 'd'
              675f 000a  ld   $0a         ;02a2 10
              6760 0060  ld   $60         ;02a3 '`'
              6761 0042  ld   $42         ;02a4 'B'
              6762 0072  ld   $72         ;02a5 'r'
              6763 0069  ld   $69         ;02a6 'i'
              6764 0063  ld   $63         ;02a7 'c'
              6765 006b  ld   $6b         ;02a8 'k'
              6766 0073  ld   $73         ;02a9 's'
              6767 0027  ld   $27         ;02aa "'"
              6768 0020  ld   $20         ;02ab ' '
              6769 0062  ld   $62         ;02ac 'b'
              676a 0079  ld   $79         ;02ad 'y'
              676b 0020  ld   $20         ;02ae ' '
              676c 0078  ld   $78         ;02af 'x'
              676d 0062  ld   $62         ;02b0 'b'
              676e 0078  ld   $78         ;02b1 'x'
              676f 002e  ld   $2e         ;02b2 '.'
              6770 000a  ld   $0a         ;02b3 10
              6771 000a  ld   $0a         ;02b4 10
              6772 0053  ld   $53         ;02b5 'S'
              6773 0070  ld   $70         ;02b6 'p'
              6774 0065  ld   $65         ;02b7 'e'
              6775 0063  ld   $63         ;02b8 'c'
              6776 0069  ld   $69         ;02b9 'i'
              6777 0061  ld   $61         ;02ba 'a'
              6778 006c  ld   $6c         ;02bb 'l'
              6779 0020  ld   $20         ;02bc ' '
              677a 0074  ld   $74         ;02bd 't'
              677b 0068  ld   $68         ;02be 'h'
              677c 0061  ld   $61         ;02bf 'a'
              677d 006e  ld   $6e         ;02c0 'n'
              677e 006b  ld   $6b         ;02c1 'k'
              677f 0073  ld   $73         ;02c2 's'
              6780 0020  ld   $20         ;02c3 ' '
              6781 006d  ld   $6d         ;02c4 'm'
              6782 0075  ld   $75         ;02c5 'u'
              6783 0073  ld   $73         ;02c6 's'
              6784 0074  ld   $74         ;02c7 't'
              6785 0020  ld   $20         ;02c8 ' '
              6786 0067  ld   $67         ;02c9 'g'
              6787 006f  ld   $6f         ;02ca 'o'
              6788 0020  ld   $20         ;02cb ' '
              6789 0074  ld   $74         ;02cc 't'
              678a 006f  ld   $6f         ;02cd 'o'
              678b 0000  ld   $00         ;02ce 0
              678c 002b  ld   $2b         ;02cf STW
              678d 003a  ld   $3a         ;02cf 'Part1'
              678e 0093  ld   $93         ;02d1 INC
              678f 001b  ld   $1b
              6790 00ff  ld   $ff         ;02d3 RET
              6791 0003  ld   $03         ;| RAM segment address (high byte first)
              6792 0000  ld   $00         ;|
              6793 00e8  ld   $e8         ;| Length (1..256)
              6794 00cd  ld   $cd         ;0300 DEF
              6795 0098  ld   $98
              6796 000a  ld   $0a         ;0302 10
              6797 004d  ld   $4d         ;0303 'M'
              6798 0061  ld   $61         ;0304 'a'
              6799 0072  ld   $72         ;0305 'r'
              679a 0063  ld   $63         ;0306 'c'
              679b 002c  ld   $2c         ;0307 ','
              679c 0020  ld   $20         ;0308 ' '
              679d 0050  ld   $50         ;0309 'P'
              679e 0061  ld   $61         ;030a 'a'
              679f 0075  ld   $75         ;030b 'u'
              67a0 006c  ld   $6c         ;030c 'l'
              67a1 002c  ld   $2c         ;030d ','
              67a2 0020  ld   $20         ;030e ' '
              67a3 0049  ld   $49         ;030f 'I'
              67a4 0076  ld   $76         ;0310 'v'
              67a5 0061  ld   $61         ;0311 'a'
              67a6 006e  ld   $6e         ;0312 'n'
              67a7 0061  ld   $61         ;0313 'a'
              67a8 002c  ld   $2c         ;0314 ','
              67a9 0020  ld   $20         ;0315 ' '
              67aa 004f  ld   $4f         ;0316 'O'
              67ab 0073  ld   $73         ;0317 's'
              67ac 0063  ld   $63         ;0318 'c'
              67ad 0061  ld   $61         ;0319 'a'
              67ae 0072  ld   $72         ;031a 'r'
              67af 002c  ld   $2c         ;031b ','
              67b0 000a  ld   $0a         ;031c 10
              67b1 004d  ld   $4d         ;031d 'M'
              67b2 0061  ld   $61         ;031e 'a'
              67b3 0072  ld   $72         ;031f 'r'
              67b4 0074  ld   $74         ;0320 't'
              67b5 0069  ld   $69         ;0321 'i'
              67b6 006a  ld   $6a         ;0322 'j'
              67b7 006e  ld   $6e         ;0323 'n'
              67b8 002c  ld   $2c         ;0324 ','
              67b9 0020  ld   $20         ;0325 ' '
              67ba 0045  ld   $45         ;0326 'E'
              67bb 0072  ld   $72         ;0327 'r'
              67bc 0069  ld   $69         ;0328 'i'
              67bd 006b  ld   $6b         ;0329 'k'
              67be 002c  ld   $2c         ;032a ','
              67bf 0020  ld   $20         ;032b ' '
              67c0 0043  ld   $43         ;032c 'C'
              67c1 0068  ld   $68         ;032d 'h'
              67c2 0075  ld   $75         ;032e 'u'
              67c3 0063  ld   $63         ;032f 'c'
              67c4 006b  ld   $6b         ;0330 'k'
              67c5 002c  ld   $2c         ;0331 ','
              67c6 0020  ld   $20         ;0332 ' '
              67c7 0042  ld   $42         ;0333 'B'
              67c8 0065  ld   $65         ;0334 'e'
              67c9 006e  ld   $6e         ;0335 'n'
              67ca 002c  ld   $2c         ;0336 ','
              67cb 000a  ld   $0a         ;0337 10
              67cc 0044  ld   $44         ;0338 'D'
              67cd 0069  ld   $69         ;0339 'i'
              67ce 0065  ld   $65         ;033a 'e'
              67cf 0074  ld   $74         ;033b 't'
              67d0 0065  ld   $65         ;033c 'e'
              67d1 0072  ld   $72         ;033d 'r'
              67d2 002c  ld   $2c         ;033e ','
              67d3 0020  ld   $20         ;033f ' '
              67d4 004d  ld   $4d         ;0340 'M'
              67d5 0061  ld   $61         ;0341 'a'
              67d6 0072  ld   $72         ;0342 'r'
              67d7 0074  ld   $74         ;0343 't'
              67d8 0069  ld   $69         ;0344 'i'
              67d9 006e  ld   $6e         ;0345 'n'
              67da 002c  ld   $2c         ;0346 ','
              67db 0020  ld   $20         ;0347 ' '
              67dc 0042  ld   $42         ;0348 'B'
              67dd 0072  ld   $72         ;0349 'r'
              67de 0061  ld   $61         ;034a 'a'
              67df 0064  ld   $64         ;034b 'd'
              67e0 002c  ld   $2c         ;034c ','
              67e1 0020  ld   $20         ;034d ' '
              67e2 004c  ld   $4c         ;034e 'L'
              67e3 006f  ld   $6f         ;034f 'o'
              67e4 0075  ld   $75         ;0350 'u'
              67e5 002c  ld   $2c         ;0351 ','
              67e6 000a  ld   $0a         ;0352 10
              67e7 0050  ld   $50         ;0353 'P'
              67e8 0068  ld   $68         ;0354 'h'
              67e9 0069  ld   $69         ;0355 'i'
              67ea 006c  ld   $6c         ;0356 'l'
              67eb 002c  ld   $2c         ;0357 ','
              67ec 0020  ld   $20         ;0358 ' '
              67ed 0042  ld   $42         ;0359 'B'
              67ee 0072  ld   $72         ;035a 'r'
              67ef 0069  ld   $69         ;035b 'i'
              67f0 0061  ld   $61         ;035c 'a'
              67f1 006e  ld   $6e         ;035d 'n'
              67f2 002c  ld   $2c         ;035e ','
              67f3 0020  ld   $20         ;035f ' '
              67f4 0044  ld   $44         ;0360 'D'
              67f5 0061  ld   $61         ;0361 'a'
              67f6 0076  ld   $76         ;0362 'v'
              67f7 0069  ld   $69         ;0363 'i'
              67f8 0064  ld   $64         ;0364 'd'
              67f9 002c  ld   $2c         ;0365 ','
              67fa 0020  ld   $20         ;0366 ' '
              67fb fe00  bra  ac          ;+-----------------------------------+
              67fc fcfd  bra  $67fd       ;|                                   |
              67fd 1418  ld   $18,y       ;| Trampoline for page $6700 lookups |
              67fe e006  jmp  y,$06       ;|                                   |
              67ff c218  st   [$18]       ;+-----------------------------------+
              6800 0044  ld   $44         ;0367 'D'
              6801 0061  ld   $61         ;0368 'a'
              6802 0076  ld   $76         ;0369 'v'
              6803 0065  ld   $65         ;036a 'e'
              6804 002c  ld   $2c         ;036b ','
              6805 000a  ld   $0a         ;036c 10
              6806 0048  ld   $48         ;036d 'H'
              6807 0047  ld   $47         ;036e 'G'
              6808 0020  ld   $20         ;036f ' '
              6809 0061  ld   $61         ;0370 'a'
              680a 006e  ld   $6e         ;0371 'n'
              680b 0064  ld   $64         ;0372 'd'
              680c 0020  ld   $20         ;0373 ' '
              680d 0061  ld   $61         ;0374 'a'
              680e 006c  ld   $6c         ;0375 'l'
              680f 006c  ld   $6c         ;0376 'l'
              6810 0020  ld   $20         ;0377 ' '
              6811 0066  ld   $66         ;0378 'f'
              6812 0061  ld   $61         ;0379 'a'
              6813 006e  ld   $6e         ;037a 'n'
              6814 0073  ld   $73         ;037b 's'
              6815 0021  ld   $21         ;037c '!'
              6816 000a  ld   $0a         ;037d 10
              6817 0020  ld   $20         ;037e ' '
              6818 0020  ld   $20         ;037f ' '
              6819 0020  ld   $20         ;0380 ' '
              681a 0020  ld   $20         ;0381 ' '
              681b 0020  ld   $20         ;0382 ' '
              681c 0020  ld   $20         ;0383 ' '
              681d 0020  ld   $20         ;0384 ' '
              681e 0020  ld   $20         ;0385 ' '
              681f 0020  ld   $20         ;0386 ' '
              6820 0020  ld   $20         ;0387 ' '
              6821 0020  ld   $20         ;0388 ' '
              6822 004d  ld   $4d         ;0389 'M'
              6823 0061  ld   $61         ;038a 'a'
              6824 0072  ld   $72         ;038b 'r'
              6825 0063  ld   $63         ;038c 'c'
              6826 0065  ld   $65         ;038d 'e'
              6827 006c  ld   $6c         ;038e 'l'
              6828 0020  ld   $20         ;038f ' '
              6829 0026  ld   $26         ;0390 '&'
              682a 0020  ld   $20         ;0391 ' '
              682b 0057  ld   $57         ;0392 'W'
              682c 0061  ld   $61         ;0393 'a'
              682d 006c  ld   $6c         ;0394 'l'
              682e 0074  ld   $74         ;0395 't'
              682f 0065  ld   $65         ;0396 'e'
              6830 0072  ld   $72         ;0397 'r'
              6831 000a  ld   $0a         ;0398 10
              6832 0000  ld   $00         ;0399 0
              6833 002b  ld   $2b         ;039a STW
              6834 003c  ld   $3c         ;039a 'Part2'
              6835 00cd  ld   $cd         ;039c DEF
              6836 00cd  ld   $cd
              6837 0011  ld   $11         ;039e LDWI
              6838 0000  ld   $00
              6839 0008  ld   $08
              683a 002b  ld   $2b         ;03a1 STW
              683b 003e  ld   $3e         ;03a1 'p'
              683c 0011  ld   $11         ;03a3 LDWI
              683d 0001  ld   $01
              683e 0088  ld   $88
              683f 002b  ld   $2b         ;03a6 STW
              6840 0040  ld   $40         ;03a6 'i'
              6841 0059  ld   $59         ;03a8 LDI
              6842 0000  ld   $00
              6843 005e  ld   $5e         ;03aa ST
              6844 0024  ld   $24
              6845 005e  ld   $5e         ;03ac ST
              6846 0025  ld   $25
              6847 0011  ld   $11         ;03ae LDWI
              6848 00e1  ld   $e1
              6849 0004  ld   $04
              684a 002b  ld   $2b         ;03b1 STW
              684b 0022  ld   $22
              684c 0021  ld   $21         ;03b3 LDW
              684d 003e  ld   $3e         ;03b3 'p'
              684e 002b  ld   $2b         ;03b5 STW
              684f 0028  ld   $28
              6850 00b4  ld   $b4         ;03b7 SYS
              6851 00cc  ld   $cc
              6852 0011  ld   $11         ;03b9 LDWI
              6853 0000  ld   $00
              6854 0008  ld   $08
              6855 0099  ld   $99         ;03bc ADDW
              6856 003e  ld   $3e         ;03bc 'p'
              6857 002b  ld   $2b         ;03be STW
              6858 003e  ld   $3e         ;03be 'p'
              6859 0035  ld   $35         ;03c0 BCC
              685a 004d  ld   $4d         ;03c1 GT
              685b 00b3  ld   $b3
              685c 0099  ld   $99         ;03c3 ADDW
              685d 0040  ld   $40         ;03c3 'i'
              685e 002b  ld   $2b         ;03c5 STW
              685f 003e  ld   $3e         ;03c5 'p'
              6860 0082  ld   $82         ;03c7 ANDI
              6861 00ff  ld   $ff
              6862 008c  ld   $8c         ;03c9 XORI
              6863 00a0  ld   $a0
              6864 0035  ld   $35         ;03cb BCC
              6865 0072  ld   $72         ;03cc NE
              6866 00b1  ld   $b1
              6867 00ff  ld   $ff         ;03ce RET
              6868 002b  ld   $2b         ;03cf STW
              6869 0042  ld   $42         ;03cf 'ClearScreen'
              686a 00cd  ld   $cd         ;03d1 DEF
              686b 00e1  ld   $e1
              686c 001a  ld   $1a         ;03d3 LD
              686d 000e  ld   $0e
              686e 0099  ld   $99         ;03d5 ADDW
              686f 0044  ld   $44         ;03d5 'Delay'
              6870 0082  ld   $82         ;03d7 ANDI
              6871 00ff  ld   $ff
              6872 002b  ld   $2b         ;03d9 STW
              6873 0046  ld   $46         ;03d9 'tmp'
              6874 001a  ld   $1a         ;03db LD
              6875 000e  ld   $0e
              6876 00b8  ld   $b8         ;03dd SUBW
              6877 0046  ld   $46         ;03dd 'tmp'
              6878 0035  ld   $35         ;03df BCC
              6879 0072  ld   $72         ;03e0 NE
              687a 00d9  ld   $d9
              687b 00ff  ld   $ff         ;03e2 RET
              687c 002b  ld   $2b         ;03e3 STW
              687d 0048  ld   $48         ;03e3 'Wait'
              687e 0093  ld   $93         ;03e5 INC
              687f 001b  ld   $1b
              6880 00ff  ld   $ff         ;03e7 RET
              6881 0004  ld   $04         ;| RAM segment address (high byte first)
              6882 0000  ld   $00         ;|
              6883 0081  ld   $81         ;| Length (1..256)
              6884 00cd  ld   $cd         ;0400 DEF
              6885 004a  ld   $4a
              6886 0021  ld   $21         ;0402 LDW
              6887 0032  ld   $32         ;0402 'Char'
              6888 00e6  ld   $e6         ;0404 SUBI
              6889 0052  ld   $52
              688a 0035  ld   $35         ;0406 BCC
              688b 0053  ld   $53         ;0407 GE
              688c 0010  ld   $10
              688d 00e3  ld   $e3         ;0409 ADDI
              688e 0032  ld   $32
              688f 002b  ld   $2b         ;040b STW
              6890 0040  ld   $40         ;040b 'i'
              6891 0011  ld   $11         ;040d LDWI
              6892 0000  ld   $00
              6893 0007  ld   $07
              6894 0090  ld   $90         ;0410 BRA
              6895 0015  ld   $15
              6896 002b  ld   $2b         ;0412 STW
              6897 0040  ld   $40         ;0412 'i'
              6898 0011  ld   $11         ;0414 LDWI
              6899 0000  ld   $00
              689a 0008  ld   $08
              689b 002b  ld   $2b         ;0417 STW
              689c 004a  ld   $4a         ;0417 'fontData'
              689d 0021  ld   $21         ;0419 LDW
              689e 0040  ld   $40         ;0419 'i'
              689f 00e9  ld   $e9         ;041b LSLW
              68a0 00e9  ld   $e9         ;041c LSLW
              68a1 0099  ld   $99         ;041d ADDW
              68a2 0040  ld   $40         ;041d 'i'
              68a3 0099  ld   $99         ;041f ADDW
              68a4 004a  ld   $4a         ;041f 'fontData'
              68a5 002b  ld   $2b         ;0421 STW
              68a6 004a  ld   $4a         ;0421 'fontData'
              68a7 0021  ld   $21         ;0423 LDW
              68a8 004c  ld   $4c         ;0423 'Color'
              68a9 005e  ld   $5e         ;0425 ST
              68aa 0025  ld   $25
              68ab 0021  ld   $21         ;0427 LDW
              68ac 0034  ld   $34         ;0427 'Pos'
              68ad 002b  ld   $2b         ;0429 STW
              68ae 0028  ld   $28
              68af 00e3  ld   $e3         ;042b ADDI
              68b0 0006  ld   $06
              68b1 002b  ld   $2b         ;042d STW
              68b2 0034  ld   $34         ;042d 'Pos'
              68b3 0011  ld   $11         ;042f LDWI
              68b4 00e1  ld   $e1
              68b5 0004  ld   $04
              68b6 002b  ld   $2b         ;0432 STW
              68b7 0022  ld   $22
              68b8 0059  ld   $59         ;0434 LDI
              68b9 00fb  ld   $fb
              68ba 002b  ld   $2b         ;0436 STW
              68bb 0040  ld   $40         ;0436 'i'
              68bc 0021  ld   $21         ;0438 LDW
              68bd 004a  ld   $4a         ;0438 'fontData'
              68be 007f  ld   $7f         ;043a LUP
              68bf 0000  ld   $00
              68c0 0093  ld   $93         ;043c INC
              68c1 004a  ld   $4a         ;043c 'fontData'
              68c2 005e  ld   $5e         ;043e ST
              68c3 0026  ld   $26
              68c4 00b4  ld   $b4         ;0440 SYS
              68c5 00cc  ld   $cc
              68c6 0093  ld   $93         ;0442 INC
              68c7 0028  ld   $28
              68c8 0093  ld   $93         ;0444 INC
              68c9 0040  ld   $40         ;0444 'i'
              68ca 0021  ld   $21         ;0446 LDW
              68cb 0040  ld   $40         ;0446 'i'
              68cc 0035  ld   $35         ;0448 BCC
              68cd 0072  ld   $72         ;0449 NE
              68ce 0036  ld   $36
              68cf 00ff  ld   $ff         ;044b RET
              68d0 002b  ld   $2b         ;044c STW
              68d1 0036  ld   $36         ;044c 'PrintChar'
              68d2 0011  ld   $11         ;044e LDWI
              68d3 0002  ld   $02
              68d4 0008  ld   $08
              68d5 002b  ld   $2b         ;0451 STW
              68d6 0034  ld   $34         ;0451 'Pos'
              68d7 00cf  ld   $cf         ;0453 CALL
              68d8 0042  ld   $42         ;0453 'ClearScreen'
              68d9 0059  ld   $59         ;0455 LDI
              68da 003e  ld   $3e
              68db 002b  ld   $2b         ;0457 STW
              68dc 004c  ld   $4c         ;0457 'Color'
              68dd 0011  ld   $11         ;0459 LDWI
              68de 0000  ld   $00
              68df 0008  ld   $08
              68e0 002b  ld   $2b         ;045c STW
              68e1 0034  ld   $34         ;045c 'Pos'
              68e2 0021  ld   $21         ;045e LDW
              68e3 003a  ld   $3a         ;045e 'Part1'
              68e4 002b  ld   $2b         ;0460 STW
              68e5 0030  ld   $30         ;0460 'Text'
              68e6 00cf  ld   $cf         ;0462 CALL
              68e7 0038  ld   $38         ;0462 'PrintText'
              68e8 0021  ld   $21         ;0464 LDW
              68e9 003c  ld   $3c         ;0464 'Part2'
              68ea 002b  ld   $2b         ;0466 STW
              68eb 0030  ld   $30         ;0466 'Text'
              68ec 00cf  ld   $cf         ;0468 CALL
              68ed 0038  ld   $38         ;0468 'PrintText'
              68ee 0059  ld   $59         ;046a LDI
              68ef 00f0  ld   $f0
              68f0 002b  ld   $2b         ;046c STW
              68f1 0044  ld   $44         ;046c 'Delay'
              68f2 00cf  ld   $cf         ;046e CALL
              68f3 0048  ld   $48         ;046e 'Wait'
              68f4 0021  ld   $21         ;0470 LDW
              68f5 004c  ld   $4c         ;0470 'Color'
              68f6 008c  ld   $8c         ;0472 XORI
              68f7 0008  ld   $08
              68f8 0035  ld   $35         ;0474 BCC
              68f9 003f  ld   $3f         ;0475 EQ
              68fa 007d  ld   $7d
              68fb fe00  bra  ac          ;+-----------------------------------+
              68fc fcfd  bra  $68fd       ;|                                   |
              68fd 1418  ld   $18,y       ;| Trampoline for page $6800 lookups |
              68fe e006  jmp  y,$06       ;|                                   |
              68ff c218  st   [$18]       ;+-----------------------------------+
              6900 0021  ld   $21         ;0477 LDW
              6901 004c  ld   $4c         ;0477 'Color'
              6902 00e6  ld   $e6         ;0479 SUBI
              6903 0009  ld   $09
              6904 002b  ld   $2b         ;047b STW
              6905 004c  ld   $4c         ;047b 'Color'
              6906 0090  ld   $90         ;047d BRA
              6907 0057  ld   $57
              6908 0090  ld   $90         ;047f BRA
              6909 0053  ld   $53
              690a 0000  ld   $00         ;End of Apps/Credits/Credits_v3.gcl, size 598
                                          ;+-----------------------------------+
                                          ;| Apps/Snake/Snake_v3.gcl           |
                                          ;+-----------------------------------+
              690b dc43  st   $43,[y,x++] ;'C'
              690c dc72  st   $72,[y,x++] ;'r'
              690d dc65  st   $65,[y,x++] ;'e'
              690e dc64  st   $64,[y,x++] ;'d'
              690f dc69  st   $69,[y,x++] ;'i'
              6910 dc74  st   $74,[y,x++] ;'t'
              6911 dc73  st   $73,[y,x++] ;'s'
              6912 dc00  st   $00,[y,x++] ;'\x00'
              6913 00b5  ld   $b5
              6914 c218  st   [$18]
              6915 0066  ld   $66
              6916 14e1  ld   $e1,y
              6917 e071  jmp  y,$71
              6918 c219  st   [$19]
Snake:        6919 0002  ld   $02         ;| RAM segment address (high byte first)
              691a 0000  ld   $00         ;|
              691b 00e5  ld   $e5         ;| Length (1..256)
              691c 001a  ld   $1a         ;0200 LD
              691d 0021  ld   $21
              691e 00e6  ld   $e6         ;0202 SUBI
              691f 0020  ld   $20
              6920 0035  ld   $35         ;0204 BCC
              6921 0053  ld   $53         ;0205 GE
              6922 000b  ld   $0b
              6923 0021  ld   $21         ;0207 LDW
              6924 000e  ld   $0e         ;0207 '_frameCount'
              6925 00f3  ld   $f3         ;0209 DOKE
              6926 0017  ld   $17         ;0209 '_vPCH'
              6927 0090  ld   $90         ;020b BRA
              6928 0005  ld   $05
              6929 0059  ld   $59         ;020d LDI
              692a 0000  ld   $00
              692b 002b  ld   $2b         ;020f STW
              692c 0030  ld   $30         ;020f 'HighScore'
              692d 00cd  ld   $cd         ;0211 DEF
              692e 005f  ld   $5f
              692f 0021  ld   $21         ;0213 LDW
              6930 0032  ld   $32         ;0213 'Char'
              6931 00e6  ld   $e6         ;0215 SUBI
              6932 0052  ld   $52
              6933 0035  ld   $35         ;0217 BCC
              6934 0053  ld   $53         ;0218 GE
              6935 0021  ld   $21
              6936 00e3  ld   $e3         ;021a ADDI
              6937 0032  ld   $32
              6938 002b  ld   $2b         ;021c STW
              6939 0034  ld   $34         ;021c 'i'
              693a 0011  ld   $11         ;021e LDWI
              693b 0000  ld   $00
              693c 0007  ld   $07
              693d 0090  ld   $90         ;0221 BRA
              693e 0026  ld   $26
              693f 002b  ld   $2b         ;0223 STW
              6940 0034  ld   $34         ;0223 'i'
              6941 0011  ld   $11         ;0225 LDWI
              6942 0000  ld   $00
              6943 0008  ld   $08
              6944 002b  ld   $2b         ;0228 STW
              6945 0036  ld   $36         ;0228 'fontData'
              6946 0021  ld   $21         ;022a LDW
              6947 0034  ld   $34         ;022a 'i'
              6948 00e9  ld   $e9         ;022c LSLW
              6949 00e9  ld   $e9         ;022d LSLW
              694a 0099  ld   $99         ;022e ADDW
              694b 0034  ld   $34         ;022e 'i'
              694c 0099  ld   $99         ;0230 ADDW
              694d 0036  ld   $36         ;0230 'fontData'
              694e 002b  ld   $2b         ;0232 STW
              694f 0036  ld   $36         ;0232 'fontData'
              6950 0021  ld   $21         ;0234 LDW
              6951 0038  ld   $38         ;0234 'BgColor'
              6952 005e  ld   $5e         ;0236 ST
              6953 0024  ld   $24
              6954 0021  ld   $21         ;0238 LDW
              6955 003a  ld   $3a         ;0238 'Color'
              6956 005e  ld   $5e         ;023a ST
              6957 0025  ld   $25
              6958 0021  ld   $21         ;023c LDW
              6959 003c  ld   $3c         ;023c 'Pos'
              695a 002b  ld   $2b         ;023e STW
              695b 0028  ld   $28
              695c 00e3  ld   $e3         ;0240 ADDI
              695d 0006  ld   $06
              695e 002b  ld   $2b         ;0242 STW
              695f 003c  ld   $3c         ;0242 'Pos'
              6960 0011  ld   $11         ;0244 LDWI
              6961 00e1  ld   $e1
              6962 0004  ld   $04
              6963 002b  ld   $2b         ;0247 STW
              6964 0022  ld   $22
              6965 0059  ld   $59         ;0249 LDI
              6966 00fb  ld   $fb
              6967 002b  ld   $2b         ;024b STW
              6968 0034  ld   $34         ;024b 'i'
              6969 0021  ld   $21         ;024d LDW
              696a 0036  ld   $36         ;024d 'fontData'
              696b 007f  ld   $7f         ;024f LUP
              696c 0000  ld   $00
              696d 0093  ld   $93         ;0251 INC
              696e 0036  ld   $36         ;0251 'fontData'
              696f 005e  ld   $5e         ;0253 ST
              6970 0026  ld   $26
              6971 00b4  ld   $b4         ;0255 SYS
              6972 00cc  ld   $cc
              6973 0093  ld   $93         ;0257 INC
              6974 0028  ld   $28
              6975 0093  ld   $93         ;0259 INC
              6976 0034  ld   $34         ;0259 'i'
              6977 0021  ld   $21         ;025b LDW
              6978 0034  ld   $34         ;025b 'i'
              6979 0035  ld   $35         ;025d BCC
              697a 0072  ld   $72         ;025e NE
              697b 004b  ld   $4b
              697c 00ff  ld   $ff         ;0260 RET
              697d 002b  ld   $2b         ;0261 STW
              697e 003e  ld   $3e         ;0261 'PrintChar'
              697f 00cd  ld   $cd         ;0263 DEF
              6980 0076  ld   $76
              6981 0075  ld   $75         ;0265 PUSH
              6982 002b  ld   $2b         ;0266 STW
              6983 0040  ld   $40         ;0266 'Text'
              6984 0021  ld   $21         ;0268 LDW
              6985 0040  ld   $40         ;0268 'Text'
              6986 00ad  ld   $ad         ;026a PEEK
              6987 002b  ld   $2b         ;026b STW
              6988 0032  ld   $32         ;026b 'Char'
              6989 0093  ld   $93         ;026d INC
              698a 0040  ld   $40         ;026d 'Text'
              698b 0035  ld   $35         ;026f BCC
              698c 003f  ld   $3f         ;0270 EQ
              698d 0074  ld   $74
              698e 00cf  ld   $cf         ;0272 CALL
              698f 003e  ld   $3e         ;0272 'PrintChar'
              6990 0090  ld   $90         ;0274 BRA
              6991 0066  ld   $66
              6992 0063  ld   $63         ;0276 POP
              6993 00ff  ld   $ff         ;0277 RET
              6994 002b  ld   $2b         ;0278 STW
              6995 0042  ld   $42         ;0278 'PrintText'
              6996 00cd  ld   $cd         ;027a DEF
              6997 0090  ld   $90
              6998 0035  ld   $35         ;027c BCC
              6999 0056  ld   $56         ;027d LE
              699a 008f  ld   $8f
              699b 002b  ld   $2b         ;027f STW
              699c 0034  ld   $34         ;027f 'i'
              699d 0021  ld   $21         ;0281 LDW
              699e 003a  ld   $3a         ;0281 'Color'
              699f 00f0  ld   $f0         ;0283 POKE
              69a0 003c  ld   $3c         ;0283 'Pos'
              69a1 0021  ld   $21         ;0285 LDW
              69a2 003c  ld   $3c         ;0285 'Pos'
              69a3 0099  ld   $99         ;0287 ADDW
              69a4 0044  ld   $44         ;0287 'Step'
              69a5 002b  ld   $2b         ;0289 STW
              69a6 003c  ld   $3c         ;0289 'Pos'
              69a7 0021  ld   $21         ;028b LDW
              69a8 0034  ld   $34         ;028b 'i'
              69a9 00e6  ld   $e6         ;028d SUBI
              69aa 0001  ld   $01
              69ab 0090  ld   $90         ;028f BRA
              69ac 007a  ld   $7a
              69ad 00ff  ld   $ff         ;0291 RET
              69ae 002b  ld   $2b         ;0292 STW
              69af 0046  ld   $46         ;0292 'DrawLine'
              69b0 00cd  ld   $cd         ;0294 DEF
              69b1 00bc  ld   $bc
              69b2 0075  ld   $75         ;0296 PUSH
              69b3 001a  ld   $1a         ;0297 LD
              69b4 000e  ld   $0e
              69b5 00b8  ld   $b8         ;0299 SUBW
              69b6 0048  ld   $48         ;0299 'TimeOut'
              69b7 0082  ld   $82         ;029b ANDI
              69b8 0080  ld   $80
              69b9 0035  ld   $35         ;029d BCC
              69ba 0072  ld   $72         ;029e NE
              69bb 00a9  ld   $a9
              69bc 0021  ld   $21         ;02a0 LDW
              69bd 004a  ld   $4a         ;02a0 'Timer'
              69be 0035  ld   $35         ;02a2 BCC
              69bf 0056  ld   $56         ;02a3 LE
              69c0 00a7  ld   $a7
              69c1 00e6  ld   $e6         ;02a5 SUBI
              69c2 0001  ld   $01
              69c3 002b  ld   $2b         ;02a7 STW
              69c4 004a  ld   $4a         ;02a7 'Timer'
              69c5 00cf  ld   $cf         ;02a9 CALL
              69c6 004c  ld   $4c         ;02a9 'DrawTimer'
              69c7 001a  ld   $1a         ;02ab LD
              69c8 0011  ld   $11
              69c9 0082  ld   $82         ;02ad ANDI
              69ca 0080  ld   $80
              69cb 0035  ld   $35         ;02af BCC
              69cc 0072  ld   $72         ;02b0 NE
              69cd 00b4  ld   $b4
              69ce 00e6  ld   $e6         ;02b2 SUBI
              69cf 0001  ld   $01
              69d0 0090  ld   $90         ;02b4 BRA
              69d1 00b6  ld   $b6
              69d2 0059  ld   $59         ;02b6 LDI
              69d3 0000  ld   $00
              69d4 0099  ld   $99         ;02b8 ADDW
              69d5 004e  ld   $4e         ;02b8 'Delay'
              69d6 00cf  ld   $cf         ;02ba CALL
              69d7 0050  ld   $50         ;02ba 'Wait'
              69d8 0063  ld   $63         ;02bc POP
              69d9 00ff  ld   $ff         ;02bd RET
              69da 002b  ld   $2b         ;02be STW
              69db 0052  ld   $52         ;02be 'TimeStep'
              69dc 00cd  ld   $cd         ;02c0 DEF
              69dd 00de  ld   $de
              69de 0075  ld   $75         ;02c2 PUSH
              69df 0011  ld   $11         ;02c3 LDWI
              69e0 0020  ld   $20
              69e1 0008  ld   $08
              69e2 002b  ld   $2b         ;02c6 STW
              69e3 003c  ld   $3c         ;02c6 'Pos'
              69e4 0059  ld   $59         ;02c8 LDI
              69e5 0008  ld   $08
              69e6 002b  ld   $2b         ;02ca STW
              69e7 003a  ld   $3a         ;02ca 'Color'
              69e8 0059  ld   $59         ;02cc LDI
              69e9 0000  ld   $00
              69ea 002b  ld   $2b         ;02ce STW
              69eb 0038  ld   $38         ;02ce 'BgColor'
              69ec 0021  ld   $21         ;02d0 LDW
              69ed 004a  ld   $4a         ;02d0 'Timer'
              69ee 002b  ld   $2b         ;02d2 STW
              69ef 0054  ld   $54         ;02d2 'Value'
              69f0 00cf  ld   $cf         ;02d4 CALL
              69f1 0056  ld   $56         ;02d4 'DrawNumber2'
              69f2 0021  ld   $21         ;02d6 LDW
              69f3 0048  ld   $48         ;02d6 'TimeOut'
              69f4 00e3  ld   $e3         ;02d8 ADDI
              69f5 003c  ld   $3c
              69f6 0082  ld   $82         ;02da ANDI
              69f7 00ff  ld   $ff
              69f8 002b  ld   $2b         ;02dc STW
              69f9 0048  ld   $48         ;02dc 'TimeOut'
              69fa 0063  ld   $63         ;02de POP
              69fb fe00  bra  ac          ;+-----------------------------------+
              69fc fcfd  bra  $69fd       ;|                                   |
              69fd 1418  ld   $18,y       ;| Trampoline for page $6900 lookups |
              69fe e006  jmp  y,$06       ;|                                   |
              69ff c218  st   [$18]       ;+-----------------------------------+
              6a00 00ff  ld   $ff         ;02df RET
              6a01 002b  ld   $2b         ;02e0 STW
              6a02 004c  ld   $4c         ;02e0 'DrawTimer'
              6a03 0093  ld   $93         ;02e2 INC
              6a04 001b  ld   $1b         ;02e2 '_vLR'+1
              6a05 00ff  ld   $ff         ;02e4 RET
              6a06 0003  ld   $03         ;| RAM segment address (high byte first)
              6a07 0000  ld   $00         ;|
              6a08 00f7  ld   $f7         ;| Length (1..256)
              6a09 00cd  ld   $cd         ;0300 DEF
              6a0a 000b  ld   $0b
              6a0b 0075  ld   $75         ;0302 PUSH
              6a0c 0059  ld   $59         ;0303 LDI
              6a0d 000f  ld   $0f
              6a0e 002b  ld   $2b         ;0305 STW
              6a0f 003a  ld   $3a         ;0305 'Color'
              6a10 0021  ld   $21         ;0307 LDW
              6a11 0058  ld   $58         ;0307 'Head'
              6a12 00cf  ld   $cf         ;0309 CALL
              6a13 005a  ld   $5a         ;0309 'DrawBlock'
              6a14 0063  ld   $63         ;030b POP
              6a15 00ff  ld   $ff         ;030c RET
              6a16 002b  ld   $2b         ;030d STW
              6a17 005c  ld   $5c         ;030d 'DrawHead'
              6a18 00cd  ld   $cd         ;030f DEF
              6a19 0043  ld   $43
              6a1a 0075  ld   $75         ;0311 PUSH
              6a1b 0011  ld   $11         ;0312 LDWI
              6a1c 0035  ld   $35
              6a1d 0044  ld   $44
              6a1e 002b  ld   $2b         ;0315 STW
              6a1f 003c  ld   $3c         ;0315 'Pos'
              6a20 0059  ld   $59         ;0317 LDI
              6a21 0004  ld   $04
              6a22 002b  ld   $2b         ;0319 STW
              6a23 0038  ld   $38         ;0319 'BgColor'
              6a24 00cd  ld   $cd         ;031b DEF
              6a25 0025  ld   $25
              6a26 0047  ld   $47         ;031d 'G'
              6a27 0041  ld   $41         ;031e 'A'
              6a28 004d  ld   $4d         ;031f 'M'
              6a29 0045  ld   $45         ;0320 'E'
              6a2a 0020  ld   $20         ;0321 ' '
              6a2b 004f  ld   $4f         ;0322 'O'
              6a2c 0056  ld   $56         ;0323 'V'
              6a2d 0045  ld   $45         ;0324 'E'
              6a2e 0052  ld   $52         ;0325 'R'
              6a2f 0000  ld   $00         ;0326 0
              6a30 00cf  ld   $cf         ;0327 CALL
              6a31 0042  ld   $42         ;0327 'PrintText'
              6a32 0021  ld   $21         ;0329 LDW
              6a33 005e  ld   $5e         ;0329 'Score'
              6a34 00b8  ld   $b8         ;032b SUBW
              6a35 0030  ld   $30         ;032b 'HighScore'
              6a36 0035  ld   $35         ;032d BCC
              6a37 0056  ld   $56         ;032e LE
              6a38 003f  ld   $3f
              6a39 0021  ld   $21         ;0330 LDW
              6a3a 0060  ld   $60         ;0330 'Control'
              6a3b 00fc  ld   $fc         ;0332 XORW
              6a3c 0062  ld   $62         ;0332 'PlayerControl'
              6a3d 0035  ld   $35         ;0334 BCC
              6a3e 0072  ld   $72         ;0335 NE
              6a3f 003f  ld   $3f
              6a40 0021  ld   $21         ;0337 LDW
              6a41 005e  ld   $5e         ;0337 'Score'
              6a42 002b  ld   $2b         ;0339 STW
              6a43 0030  ld   $30         ;0339 'HighScore'
              6a44 0059  ld   $59         ;033b LDI
              6a45 001e  ld   $1e
              6a46 002b  ld   $2b         ;033d STW
              6a47 003a  ld   $3a         ;033d 'Color'
              6a48 00cf  ld   $cf         ;033f CALL
              6a49 0064  ld   $64         ;033f 'DrawHighScore'
              6a4a 00cf  ld   $cf         ;0341 CALL
              6a4b 0066  ld   $66         ;0341 'PlayGameOverSound'
              6a4c 0063  ld   $63         ;0343 POP
              6a4d 00ff  ld   $ff         ;0344 RET
              6a4e 002b  ld   $2b         ;0345 STW
              6a4f 0068  ld   $68         ;0345 'GameOver'
              6a50 00cd  ld   $cd         ;0347 DEF
              6a51 0059  ld   $59
              6a52 002b  ld   $2b         ;0349 STW
              6a53 006a  ld   $6a         ;0349 'tmp'
              6a54 001a  ld   $1a         ;034b LD
              6a55 000e  ld   $0e
              6a56 0099  ld   $99         ;034d ADDW
              6a57 006a  ld   $6a         ;034d 'tmp'
              6a58 0082  ld   $82         ;034f ANDI
              6a59 00ff  ld   $ff
              6a5a 002b  ld   $2b         ;0351 STW
              6a5b 006a  ld   $6a         ;0351 'tmp'
              6a5c 001a  ld   $1a         ;0353 LD
              6a5d 000e  ld   $0e
              6a5e 00b8  ld   $b8         ;0355 SUBW
              6a5f 006a  ld   $6a         ;0355 'tmp'
              6a60 0035  ld   $35         ;0357 BCC
              6a61 0072  ld   $72         ;0358 NE
              6a62 0051  ld   $51
              6a63 00ff  ld   $ff         ;035a RET
              6a64 002b  ld   $2b         ;035b STW
              6a65 0050  ld   $50         ;035b 'Wait'
              6a66 00cd  ld   $cd         ;035d DEF
              6a67 007f  ld   $7f
              6a68 0075  ld   $75         ;035f PUSH
              6a69 0059  ld   $59         ;0360 LDI
              6a6a 0008  ld   $08
              6a6b 002b  ld   $2b         ;0362 STW
              6a6c 003a  ld   $3a         ;0362 'Color'
              6a6d 0059  ld   $59         ;0364 LDI
              6a6e 0000  ld   $00
              6a6f 002b  ld   $2b         ;0366 STW
              6a70 0038  ld   $38         ;0366 'BgColor'
              6a71 0011  ld   $11         ;0368 LDWI
              6a72 0000  ld   $00
              6a73 0008  ld   $08
              6a74 00cf  ld   $cf         ;036b CALL
              6a75 006c  ld   $6c         ;036b 'ClearScreen'
              6a76 0011  ld   $11         ;036d LDWI
              6a77 0038  ld   $38
              6a78 0008  ld   $08
              6a79 002b  ld   $2b         ;0370 STW
              6a7a 003c  ld   $3c         ;0370 'Pos'
              6a7b 00cd  ld   $cd         ;0372 DEF
              6a7c 007b  ld   $7b
              6a7d 0047  ld   $47         ;0374 'G'
              6a7e 0069  ld   $69         ;0375 'i'
              6a7f 0067  ld   $67         ;0376 'g'
              6a80 0061  ld   $61         ;0377 'a'
              6a81 0074  ld   $74         ;0378 't'
              6a82 0072  ld   $72         ;0379 'r'
              6a83 006f  ld   $6f         ;037a 'o'
              6a84 006e  ld   $6e         ;037b 'n'
              6a85 0000  ld   $00         ;037c 0
              6a86 00cf  ld   $cf         ;037d CALL
              6a87 0042  ld   $42         ;037d 'PrintText'
              6a88 0063  ld   $63         ;037f POP
              6a89 00ff  ld   $ff         ;0380 RET
              6a8a 002b  ld   $2b         ;0381 STW
              6a8b 006e  ld   $6e         ;0381 'Intro'
              6a8c 00cd  ld   $cd         ;0383 DEF
              6a8d 00a3  ld   $a3
              6a8e 002b  ld   $2b         ;0385 STW
              6a8f 0070  ld   $70         ;0385 'p'
              6a90 0011  ld   $11         ;0387 LDWI
              6a91 0003  ld   $03
              6a92 000b  ld   $0b
              6a93 002b  ld   $2b         ;038a STW
              6a94 0022  ld   $22
              6a95 0021  ld   $21         ;038c LDW
              6a96 0038  ld   $38         ;038c 'BgColor'
              6a97 005e  ld   $5e         ;038e ST
              6a98 0025  ld   $25
              6a99 0021  ld   $21         ;0390 LDW
              6a9a 0070  ld   $70         ;0390 'p'
              6a9b 002b  ld   $2b         ;0392 STW
              6a9c 0026  ld   $26
              6a9d 0059  ld   $59         ;0394 LDI
              6a9e 00a0  ld   $a0
              6a9f 005e  ld   $5e         ;0396 ST
              6aa0 0024  ld   $24
              6aa1 00b4  ld   $b4         ;0398 SYS
              6aa2 00f4  ld   $f4
              6aa3 0011  ld   $11         ;039a LDWI
              6aa4 0000  ld   $00
              6aa5 0001  ld   $01
              6aa6 0099  ld   $99         ;039d ADDW
              6aa7 0070  ld   $70         ;039d 'p'
              6aa8 002b  ld   $2b         ;039f STW
              6aa9 0070  ld   $70         ;039f 'p'
              6aaa 0035  ld   $35         ;03a1 BCC
              6aab 004d  ld   $4d         ;03a2 GT
              6aac 0090  ld   $90
              6aad 00ff  ld   $ff         ;03a4 RET
              6aae 002b  ld   $2b         ;03a5 STW
              6aaf 006c  ld   $6c         ;03a5 'ClearScreen'
              6ab0 00cd  ld   $cd         ;03a7 DEF
              6ab1 00c1  ld   $c1
              6ab2 0059  ld   $59         ;03a9 LDI
              6ab3 0000  ld   $00
              6ab4 00b8  ld   $b8         ;03ab SUBW
              6ab5 0072  ld   $72         ;03ab 'stepV'
              6ab6 002b  ld   $2b         ;03ad STW
              6ab7 006a  ld   $6a         ;03ad 'tmp'
              6ab8 0021  ld   $21         ;03af LDW
              6ab9 0074  ld   $74         ;03af 'stepU'
              6aba 002b  ld   $2b         ;03b1 STW
              6abb 0072  ld   $72         ;03b1 'stepV'
              6abc 0021  ld   $21         ;03b3 LDW
              6abd 006a  ld   $6a         ;03b3 'tmp'
              6abe 002b  ld   $2b         ;03b5 STW
              6abf 0074  ld   $74         ;03b5 'stepU'
              6ac0 0021  ld   $21         ;03b7 LDW
              6ac1 0076  ld   $76         ;03b7 'Bias'
              6ac2 0035  ld   $35         ;03b9 BCC
              6ac3 0053  ld   $53         ;03ba GE
              6ac4 00bc  ld   $bc
              6ac5 0059  ld   $59         ;03bc LDI
              6ac6 0000  ld   $00
              6ac7 00e3  ld   $e3         ;03be ADDI
              6ac8 003c  ld   $3c
              6ac9 002b  ld   $2b         ;03c0 STW
              6aca 0076  ld   $76         ;03c0 'Bias'
              6acb 00ff  ld   $ff         ;03c2 RET
              6acc 002b  ld   $2b         ;03c3 STW
              6acd 0078  ld   $78         ;03c3 'TurnL'
              6ace 00cd  ld   $cd         ;03c5 DEF
              6acf 00df  ld   $df
              6ad0 0059  ld   $59         ;03c7 LDI
              6ad1 0000  ld   $00
              6ad2 00b8  ld   $b8         ;03c9 SUBW
              6ad3 0074  ld   $74         ;03c9 'stepU'
              6ad4 002b  ld   $2b         ;03cb STW
              6ad5 006a  ld   $6a         ;03cb 'tmp'
              6ad6 0021  ld   $21         ;03cd LDW
              6ad7 0072  ld   $72         ;03cd 'stepV'
              6ad8 002b  ld   $2b         ;03cf STW
              6ad9 0074  ld   $74         ;03cf 'stepU'
              6ada 0021  ld   $21         ;03d1 LDW
              6adb 006a  ld   $6a         ;03d1 'tmp'
              6adc 002b  ld   $2b         ;03d3 STW
              6add 0072  ld   $72         ;03d3 'stepV'
              6ade 0021  ld   $21         ;03d5 LDW
              6adf 0076  ld   $76         ;03d5 'Bias'
              6ae0 0035  ld   $35         ;03d7 BCC
              6ae1 0056  ld   $56         ;03d8 LE
              6ae2 00da  ld   $da
              6ae3 0059  ld   $59         ;03da LDI
              6ae4 0000  ld   $00
              6ae5 00e6  ld   $e6         ;03dc SUBI
              6ae6 003c  ld   $3c
              6ae7 002b  ld   $2b         ;03de STW
              6ae8 0076  ld   $76         ;03de 'Bias'
              6ae9 00ff  ld   $ff         ;03e0 RET
              6aea 002b  ld   $2b         ;03e1 STW
              6aeb 007a  ld   $7a         ;03e1 'TurnR'
              6aec 00cd  ld   $cd         ;03e3 DEF
              6aed 00f0  ld   $f0
              6aee 002b  ld   $2b         ;03e5 STW
              6aef 003c  ld   $3c         ;03e5 'Pos'
              6af0 0021  ld   $21         ;03e7 LDW
              6af1 003a  ld   $3a         ;03e7 'Color'
              6af2 005e  ld   $5e         ;03e9 ST
              6af3 0019  ld   $19
              6af4 00f3  ld   $f3         ;03eb DOKE
              6af5 003c  ld   $3c         ;03eb 'Pos'
              6af6 0093  ld   $93         ;03ed INC
              6af7 003d  ld   $3d         ;03ed 'Pos'+1
              6af8 00f3  ld   $f3         ;03ef DOKE
              6af9 003c  ld   $3c         ;03ef 'Pos'
              6afa 00ff  ld   $ff         ;03f1 RET
              6afb fe00  bra  ac          ;+-----------------------------------+
              6afc fcfd  bra  $6afd       ;|                                   |
              6afd 1418  ld   $18,y       ;| Trampoline for page $6a00 lookups |
              6afe e006  jmp  y,$06       ;|                                   |
              6aff c218  st   [$18]       ;+-----------------------------------+
              6b00 002b  ld   $2b         ;03f2 STW
              6b01 005a  ld   $5a         ;03f2 'DrawBlock'
              6b02 0093  ld   $93         ;03f4 INC
              6b03 001b  ld   $1b         ;03f4 '_vLR'+1
              6b04 00ff  ld   $ff         ;03f6 RET
              6b05 0004  ld   $04         ;| RAM segment address (high byte first)
              6b06 0000  ld   $00         ;|
              6b07 00f9  ld   $f9         ;| Length (1..256)
              6b08 00cd  ld   $cd         ;0400 DEF
              6b09 00ae  ld   $ae
              6b0a 0075  ld   $75         ;0402 PUSH
              6b0b 00cf  ld   $cf         ;0403 CALL
              6b0c 0060  ld   $60         ;0403 'Control'
              6b0d 001a  ld   $1a         ;0405 LD
              6b0e 0075  ld   $75         ;0405 'stepU'+1
              6b0f 0082  ld   $82         ;0407 ANDI
              6b10 0080  ld   $80
              6b11 002b  ld   $2b         ;0409 STW
              6b12 006a  ld   $6a         ;0409 'tmp'
              6b13 0021  ld   $21         ;040b LDW
              6b14 0074  ld   $74         ;040b 'stepU'
              6b15 0082  ld   $82         ;040d ANDI
              6b16 0002  ld   $02
              6b17 0035  ld   $35         ;040f BCC
              6b18 003f  ld   $3f         ;0410 EQ
              6b19 0012  ld   $12
              6b1a 0059  ld   $59         ;0412 LDI
              6b1b 0040  ld   $40
              6b1c 0099  ld   $99         ;0414 ADDW
              6b1d 006a  ld   $6a         ;0414 'tmp'
              6b1e 00e3  ld   $e3         ;0416 ADDI
              6b1f 001b  ld   $1b
              6b20 002b  ld   $2b         ;0418 STW
              6b21 003a  ld   $3a         ;0418 'Color'
              6b22 001a  ld   $1a         ;041a LD
              6b23 0059  ld   $59         ;041a 'Head'+1
              6b24 00fc  ld   $fc         ;041c XORW
              6b25 0058  ld   $58         ;041c 'Head'
              6b26 0082  ld   $82         ;041e ANDI
              6b27 0002  ld   $02
              6b28 0035  ld   $35         ;0420 BCC
              6b29 003f  ld   $3f         ;0421 EQ
              6b2a 0023  ld   $23
              6b2b 0059  ld   $59         ;0423 LDI
              6b2c 0001  ld   $01
              6b2d 00fc  ld   $fc         ;0425 XORW
              6b2e 003a  ld   $3a         ;0425 'Color'
              6b2f 002b  ld   $2b         ;0427 STW
              6b30 003a  ld   $3a         ;0427 'Color'
              6b31 0021  ld   $21         ;0429 LDW
              6b32 0058  ld   $58         ;0429 'Head'
              6b33 00cf  ld   $cf         ;042b CALL
              6b34 005a  ld   $5a         ;042b 'DrawBlock'
              6b35 0021  ld   $21         ;042d LDW
              6b36 0058  ld   $58         ;042d 'Head'
              6b37 0099  ld   $99         ;042f ADDW
              6b38 0074  ld   $74         ;042f 'stepU'
              6b39 002b  ld   $2b         ;0431 STW
              6b3a 0058  ld   $58         ;0431 'Head'
              6b3b 0021  ld   $21         ;0433 LDW
              6b3c 0058  ld   $58         ;0433 'Head'
              6b3d 00ad  ld   $ad         ;0435 PEEK
              6b3e 0082  ld   $82         ;0436 ANDI
              6b3f 0003  ld   $03
              6b40 0035  ld   $35         ;0438 BCC
              6b41 003f  ld   $3f         ;0439 EQ
              6b42 003b  ld   $3b
              6b43 0063  ld   $63         ;043b POP
              6b44 00ff  ld   $ff         ;043c RET
              6b45 0021  ld   $21         ;043d LDW
              6b46 0058  ld   $58         ;043d 'Head'
              6b47 00ad  ld   $ad         ;043f PEEK
              6b48 008c  ld   $8c         ;0440 XORI
              6b49 0018  ld   $18
              6b4a 0035  ld   $35         ;0442 BCC
              6b4b 0072  ld   $72         ;0443 NE
              6b4c 005d  ld   $5d
              6b4d 0059  ld   $59         ;0445 LDI
              6b4e 0040  ld   $40
              6b4f 0099  ld   $99         ;0447 ADDW
              6b50 004a  ld   $4a         ;0447 'Timer'
              6b51 00cf  ld   $cf         ;0449 CALL
              6b52 007c  ld   $7c         ;0449 'SetNote'
              6b53 0059  ld   $59         ;044b LDI
              6b54 0002  ld   $02
              6b55 005e  ld   $5e         ;044d ST
              6b56 002c  ld   $2c
              6b57 0021  ld   $21         ;044f LDW
              6b58 005e  ld   $5e         ;044f 'Score'
              6b59 0099  ld   $99         ;0451 ADDW
              6b5a 004a  ld   $4a         ;0451 'Timer'
              6b5b 002b  ld   $2b         ;0453 STW
              6b5c 005e  ld   $5e         ;0453 'Score'
              6b5d 00cf  ld   $cf         ;0455 CALL
              6b5e 007e  ld   $7e         ;0455 'DrawScore'
              6b5f 0059  ld   $59         ;0457 LDI
              6b60 0005  ld   $05
              6b61 00cf  ld   $cf         ;0459 CALL
              6b62 0081  ld   $81         ;0459 'AddTimer'
              6b63 0093  ld   $93         ;045b INC
              6b64 0083  ld   $83         ;045b 'Grow'
              6b65 0093  ld   $93         ;045d INC
              6b66 0085  ld   $85         ;045d 'Drops'
              6b67 00cf  ld   $cf         ;045f CALL
              6b68 005c  ld   $5c         ;045f 'DrawHead'
              6b69 0021  ld   $21         ;0461 LDW
              6b6a 0083  ld   $83         ;0461 'Grow'
              6b6b 0035  ld   $35         ;0463 BCC
              6b6c 0056  ld   $56         ;0464 LE
              6b6d 006c  ld   $6c
              6b6e 00e6  ld   $e6         ;0466 SUBI
              6b6f 0001  ld   $01
              6b70 002b  ld   $2b         ;0468 STW
              6b71 0083  ld   $83         ;0468 'Grow'
              6b72 00cf  ld   $cf         ;046a CALL
              6b73 0087  ld   $87         ;046a 'AddFood'
              6b74 0090  ld   $90         ;046c BRA
              6b75 00aa  ld   $aa
              6b76 0021  ld   $21         ;046e LDW
              6b77 0089  ld   $89         ;046e 'Tail'
              6b78 00ad  ld   $ad         ;0470 PEEK
              6b79 002b  ld   $2b         ;0471 STW
              6b7a 006a  ld   $6a         ;0471 'tmp'
              6b7b 0021  ld   $21         ;0473 LDW
              6b7c 0085  ld   $85         ;0473 'Drops'
              6b7d 0035  ld   $35         ;0475 BCC
              6b7e 0056  ld   $56         ;0476 LE
              6b7f 007e  ld   $7e
              6b80 00e6  ld   $e6         ;0478 SUBI
              6b81 0001  ld   $01
              6b82 002b  ld   $2b         ;047a STW
              6b83 0085  ld   $85         ;047a 'Drops'
              6b84 0059  ld   $59         ;047c LDI
              6b85 003e  ld   $3e
              6b86 0090  ld   $90         ;047e BRA
              6b87 0080  ld   $80
              6b88 0059  ld   $59         ;0480 LDI
              6b89 0004  ld   $04
              6b8a 002b  ld   $2b         ;0482 STW
              6b8b 003a  ld   $3a         ;0482 'Color'
              6b8c 0021  ld   $21         ;0484 LDW
              6b8d 0089  ld   $89         ;0484 'Tail'
              6b8e 00cf  ld   $cf         ;0486 CALL
              6b8f 005a  ld   $5a         ;0486 'DrawBlock'
              6b90 0021  ld   $21         ;0488 LDW
              6b91 006a  ld   $6a         ;0488 'tmp'
              6b92 0082  ld   $82         ;048a ANDI
              6b93 0040  ld   $40
              6b94 0035  ld   $35         ;048c BCC
              6b95 0072  ld   $72         ;048d NE
              6b96 0092  ld   $92
              6b97 0011  ld   $11         ;048f LDWI
              6b98 0000  ld   $00
              6b99 0001  ld   $01
              6b9a 0090  ld   $90         ;0492 BRA
              6b9b 0094  ld   $94
              6b9c 0059  ld   $59         ;0494 LDI
              6b9d 0001  ld   $01
              6b9e 002b  ld   $2b         ;0496 STW
              6b9f 008b  ld   $8b         ;0496 'x'
              6ba0 0021  ld   $21         ;0498 LDW
              6ba1 006a  ld   $6a         ;0498 'tmp'
              6ba2 0082  ld   $82         ;049a ANDI
              6ba3 0080  ld   $80
              6ba4 0035  ld   $35         ;049c BCC
              6ba5 0072  ld   $72         ;049d NE
              6ba6 00a1  ld   $a1
              6ba7 0021  ld   $21         ;049f LDW
              6ba8 008b  ld   $8b         ;049f 'x'
              6ba9 0090  ld   $90         ;04a1 BRA
              6baa 00a5  ld   $a5
              6bab 0059  ld   $59         ;04a3 LDI
              6bac 0000  ld   $00
              6bad 00b8  ld   $b8         ;04a5 SUBW
              6bae 008b  ld   $8b         ;04a5 'x'
              6baf 00e9  ld   $e9         ;04a7 LSLW
              6bb0 0099  ld   $99         ;04a8 ADDW
              6bb1 0089  ld   $89         ;04a8 'Tail'
              6bb2 002b  ld   $2b         ;04aa STW
              6bb3 0089  ld   $89         ;04aa 'Tail'
              6bb4 00cf  ld   $cf         ;04ac CALL
              6bb5 0052  ld   $52         ;04ac 'TimeStep'
              6bb6 0090  ld   $90         ;04ae BRA
              6bb7 0001  ld   $01
              6bb8 002b  ld   $2b         ;04b0 STW
              6bb9 008d  ld   $8d         ;04b0 'RunGame'
              6bba 00cd  ld   $cd         ;04b2 DEF
              6bbb 00ee  ld   $ee
              6bbc 0075  ld   $75         ;04b4 PUSH
              6bbd 0059  ld   $59         ;04b5 LDI
              6bbe 0018  ld   $18
              6bbf 002b  ld   $2b         ;04b7 STW
              6bc0 003a  ld   $3a         ;04b7 'Color'
              6bc1 0011  ld   $11         ;04b9 LDWI
              6bc2 00a7  ld   $a7
              6bc3 0004  ld   $04
              6bc4 002b  ld   $2b         ;04bc STW
              6bc5 0022  ld   $22
              6bc6 00b4  ld   $b4         ;04be SYS
              6bc7 00fe  ld   $fe
              6bc8 002b  ld   $2b         ;04c0 STW
              6bc9 003c  ld   $3c         ;04c0 'Pos'
              6bca 001a  ld   $1a         ;04c2 LD
              6bcb 003c  ld   $3c         ;04c2 'Pos'
              6bcc 00e6  ld   $e6         ;04c4 SUBI
              6bcd 0080  ld   $80
              6bce 0035  ld   $35         ;04c6 BCC
              6bcf 0053  ld   $53         ;04c7 GE
              6bd0 00c9  ld   $c9
              6bd1 00e3  ld   $e3         ;04c9 ADDI
              6bd2 0096  ld   $96
              6bd3 00e3  ld   $e3         ;04cb ADDI
              6bd4 0005  ld   $05
              6bd5 0082  ld   $82         ;04cd ANDI
              6bd6 00fe  ld   $fe
              6bd7 005e  ld   $5e         ;04cf ST
              6bd8 003c  ld   $3c         ;04cf 'Pos'
              6bd9 001a  ld   $1a         ;04d1 LD
              6bda 003d  ld   $3d         ;04d1 'Pos'+1
              6bdb 0082  ld   $82         ;04d3 ANDI
              6bdc 007f  ld   $7f
              6bdd 00e6  ld   $e6         ;04d5 SUBI
              6bde 0040  ld   $40
              6bdf 0035  ld   $35         ;04d7 BCC
              6be0 0053  ld   $53         ;04d8 GE
              6be1 00da  ld   $da
              6be2 00e3  ld   $e3         ;04da ADDI
              6be3 0066  ld   $66
              6be4 00e3  ld   $e3         ;04dc ADDI
              6be5 0015  ld   $15
              6be6 0082  ld   $82         ;04de ANDI
              6be7 00fe  ld   $fe
              6be8 005e  ld   $5e         ;04e0 ST
              6be9 003d  ld   $3d         ;04e0 'Pos'+1
              6bea 0021  ld   $21         ;04e2 LDW
              6beb 003c  ld   $3c         ;04e2 'Pos'
              6bec 00ad  ld   $ad         ;04e4 PEEK
              6bed 008c  ld   $8c         ;04e5 XORI
              6bee 0004  ld   $04
              6bef 0035  ld   $35         ;04e7 BCC
              6bf0 0072  ld   $72         ;04e8 NE
              6bf1 00b7  ld   $b7
              6bf2 0021  ld   $21         ;04ea LDW
              6bf3 003c  ld   $3c         ;04ea 'Pos'
              6bf4 00cf  ld   $cf         ;04ec CALL
              6bf5 005a  ld   $5a         ;04ec 'DrawBlock'
              6bf6 0063  ld   $63         ;04ee POP
              6bf7 00ff  ld   $ff         ;04ef RET
              6bf8 002b  ld   $2b         ;04f0 STW
              6bf9 0087  ld   $87         ;04f0 'AddFood'
              6bfa 0059  ld   $59         ;04f2 LDI
              6bfb fe00  bra  ac          ;+-----------------------------------+
              6bfc fcfd  bra  $6bfd       ;|                                   |
              6bfd 1418  ld   $18,y       ;| Trampoline for page $6b00 lookups |
              6bfe e006  jmp  y,$06       ;|                                   |
              6bff c218  st   [$18]       ;+-----------------------------------+
              6c00 0000  ld   $00
              6c01 002b  ld   $2b         ;04f4 STW
              6c02 0076  ld   $76         ;04f4 'Bias'
              6c03 0093  ld   $93         ;04f6 INC
              6c04 001b  ld   $1b         ;04f6 '_vLR'+1
              6c05 00ff  ld   $ff         ;04f8 RET
              6c06 0005  ld   $05         ;| RAM segment address (high byte first)
              6c07 0000  ld   $00         ;|
              6c08 00ed  ld   $ed         ;| Length (1..256)
              6c09 00cd  ld   $cd         ;0500 DEF
              6c0a 00e6  ld   $e6
              6c0b 0075  ld   $75         ;0502 PUSH
              6c0c 001a  ld   $1a         ;0503 LD
              6c0d 0011  ld   $11
              6c0e 0082  ld   $82         ;0505 ANDI
              6c0f 00cf  ld   $cf
              6c10 008c  ld   $8c         ;0507 XORI
              6c11 00cf  ld   $cf
              6c12 0035  ld   $35         ;0509 BCC
              6c13 003f  ld   $3f         ;050a EQ
              6c14 000e  ld   $0e
              6c15 00cf  ld   $cf         ;050c CALL
              6c16 008f  ld   $8f         ;050c 'SetupGame'
              6c17 0063  ld   $63         ;050e POP
              6c18 00ff  ld   $ff         ;050f RET
              6c19 0021  ld   $21         ;0510 LDW
              6c1a 0078  ld   $78         ;0510 'TurnL'
              6c1b 002b  ld   $2b         ;0512 STW
              6c1c 0070  ld   $70         ;0512 'p'
              6c1d 0021  ld   $21         ;0514 LDW
              6c1e 007a  ld   $7a         ;0514 'TurnR'
              6c1f 002b  ld   $2b         ;0516 STW
              6c20 0091  ld   $91         ;0516 'q'
              6c21 0021  ld   $21         ;0518 LDW
              6c22 0058  ld   $58         ;0518 'Head'
              6c23 0099  ld   $99         ;051a ADDW
              6c24 0074  ld   $74         ;051a 'stepU'
              6c25 00ad  ld   $ad         ;051c PEEK
              6c26 008c  ld   $8c         ;051d XORI
              6c27 0004  ld   $04
              6c28 002b  ld   $2b         ;051f STW
              6c29 006a  ld   $6a         ;051f 'tmp'
              6c2a 0035  ld   $35         ;0521 BCC
              6c2b 003f  ld   $3f         ;0522 EQ
              6c2c 002b  ld   $2b
              6c2d 008c  ld   $8c         ;0524 XORI
              6c2e 001c  ld   $1c
              6c2f 0035  ld   $35         ;0526 BCC
              6c30 0072  ld   $72         ;0527 NE
              6c31 0029  ld   $29
              6c32 002b  ld   $2b         ;0529 STW
              6c33 006a  ld   $6a         ;0529 'tmp'
              6c34 0090  ld   $90         ;052b BRA
              6c35 0039  ld   $39
              6c36 0021  ld   $21         ;052d LDW
              6c37 0058  ld   $58         ;052d 'Head'
              6c38 0099  ld   $99         ;052f ADDW
              6c39 0074  ld   $74         ;052f 'stepU'
              6c3a 0099  ld   $99         ;0531 ADDW
              6c3b 0074  ld   $74         ;0531 'stepU'
              6c3c 00ad  ld   $ad         ;0533 PEEK
              6c3d 008c  ld   $8c         ;0534 XORI
              6c3e 003e  ld   $3e
              6c3f 0035  ld   $35         ;0536 BCC
              6c40 0072  ld   $72         ;0537 NE
              6c41 0039  ld   $39
              6c42 0093  ld   $93         ;0539 INC
              6c43 006b  ld   $6b         ;0539 'tmp'+1
              6c44 0021  ld   $21         ;053b LDW
              6c45 0058  ld   $58         ;053b 'Head'
              6c46 00b8  ld   $b8         ;053d SUBW
              6c47 0072  ld   $72         ;053d 'stepV'
              6c48 00ad  ld   $ad         ;053f PEEK
              6c49 008c  ld   $8c         ;0540 XORI
              6c4a 0004  ld   $04
              6c4b 0035  ld   $35         ;0542 BCC
              6c4c 003f  ld   $3f         ;0543 EQ
              6c4d 0054  ld   $54
              6c4e 008c  ld   $8c         ;0545 XORI
              6c4f 001c  ld   $1c
              6c50 0035  ld   $35         ;0547 BCC
              6c51 0072  ld   $72         ;0548 NE
              6c52 004e  ld   $4e
              6c53 002b  ld   $2b         ;054a STW
              6c54 0091  ld   $91         ;054a 'q'
              6c55 0093  ld   $93         ;054c INC
              6c56 006b  ld   $6b         ;054c 'tmp'+1
              6c57 0090  ld   $90         ;054e BRA
              6c58 0052  ld   $52
              6c59 0059  ld   $59         ;0550 LDI
              6c5a 0000  ld   $00
              6c5b 002b  ld   $2b         ;0552 STW
              6c5c 0070  ld   $70         ;0552 'p'
              6c5d 0090  ld   $90         ;0554 BRA
              6c5e 0071  ld   $71
              6c5f 0021  ld   $21         ;0556 LDW
              6c60 0058  ld   $58         ;0556 'Head'
              6c61 00b8  ld   $b8         ;0558 SUBW
              6c62 0072  ld   $72         ;0558 'stepV'
              6c63 00b8  ld   $b8         ;055a SUBW
              6c64 0072  ld   $72         ;055a 'stepV'
              6c65 00ad  ld   $ad         ;055c PEEK
              6c66 008c  ld   $8c         ;055d XORI
              6c67 0004  ld   $04
              6c68 0035  ld   $35         ;055f BCC
              6c69 003f  ld   $3f         ;0560 EQ
              6c6a 0071  ld   $71
              6c6b 008c  ld   $8c         ;0562 XORI
              6c6c 001c  ld   $1c
              6c6d 0035  ld   $35         ;0564 BCC
              6c6e 0072  ld   $72         ;0565 NE
              6c6f 006b  ld   $6b
              6c70 002b  ld   $2b         ;0567 STW
              6c71 0091  ld   $91         ;0567 'q'
              6c72 0093  ld   $93         ;0569 INC
              6c73 006b  ld   $6b         ;0569 'tmp'+1
              6c74 0090  ld   $90         ;056b BRA
              6c75 0071  ld   $71
              6c76 0021  ld   $21         ;056d LDW
              6c77 0076  ld   $76         ;056d 'Bias'
              6c78 00e3  ld   $e3         ;056f ADDI
              6c79 000f  ld   $0f
              6c7a 0021  ld   $21         ;0571 LDW
              6c7b 0076  ld   $76         ;0571 'Bias'
              6c7c 0021  ld   $21         ;0573 LDW
              6c7d 0058  ld   $58         ;0573 'Head'
              6c7e 0099  ld   $99         ;0575 ADDW
              6c7f 0072  ld   $72         ;0575 'stepV'
              6c80 00ad  ld   $ad         ;0577 PEEK
              6c81 008c  ld   $8c         ;0578 XORI
              6c82 0004  ld   $04
              6c83 0035  ld   $35         ;057a BCC
              6c84 003f  ld   $3f         ;057b EQ
              6c85 008c  ld   $8c
              6c86 008c  ld   $8c         ;057d XORI
              6c87 001c  ld   $1c
              6c88 0035  ld   $35         ;057f BCC
              6c89 0072  ld   $72         ;0580 NE
              6c8a 0086  ld   $86
              6c8b 002b  ld   $2b         ;0582 STW
              6c8c 0070  ld   $70         ;0582 'p'
              6c8d 0093  ld   $93         ;0584 INC
              6c8e 006b  ld   $6b         ;0584 'tmp'+1
              6c8f 0090  ld   $90         ;0586 BRA
              6c90 008a  ld   $8a
              6c91 0059  ld   $59         ;0588 LDI
              6c92 0000  ld   $00
              6c93 002b  ld   $2b         ;058a STW
              6c94 0091  ld   $91         ;058a 'q'
              6c95 0090  ld   $90         ;058c BRA
              6c96 00a9  ld   $a9
              6c97 0021  ld   $21         ;058e LDW
              6c98 0058  ld   $58         ;058e 'Head'
              6c99 0099  ld   $99         ;0590 ADDW
              6c9a 0072  ld   $72         ;0590 'stepV'
              6c9b 0099  ld   $99         ;0592 ADDW
              6c9c 0072  ld   $72         ;0592 'stepV'
              6c9d 00ad  ld   $ad         ;0594 PEEK
              6c9e 008c  ld   $8c         ;0595 XORI
              6c9f 0004  ld   $04
              6ca0 0035  ld   $35         ;0597 BCC
              6ca1 003f  ld   $3f         ;0598 EQ
              6ca2 00a9  ld   $a9
              6ca3 008c  ld   $8c         ;059a XORI
              6ca4 001c  ld   $1c
              6ca5 0035  ld   $35         ;059c BCC
              6ca6 0072  ld   $72         ;059d NE
              6ca7 00a3  ld   $a3
              6ca8 002b  ld   $2b         ;059f STW
              6ca9 0070  ld   $70         ;059f 'p'
              6caa 0093  ld   $93         ;05a1 INC
              6cab 006b  ld   $6b         ;05a1 'tmp'+1
              6cac 0090  ld   $90         ;05a3 BRA
              6cad 00a9  ld   $a9
              6cae 0021  ld   $21         ;05a5 LDW
              6caf 0076  ld   $76         ;05a5 'Bias'
              6cb0 00e6  ld   $e6         ;05a7 SUBI
              6cb1 000f  ld   $0f
              6cb2 0021  ld   $21         ;05a9 LDW
              6cb3 0076  ld   $76         ;05a9 'Bias'
              6cb4 0021  ld   $21         ;05ab LDW
              6cb5 006a  ld   $6a         ;05ab 'tmp'
              6cb6 0035  ld   $35         ;05ad BCC
              6cb7 0072  ld   $72         ;05ae NE
              6cb8 00bb  ld   $bb
              6cb9 001a  ld   $1a         ;05b0 LD
              6cba 0006  ld   $06
              6cbb 00e6  ld   $e6         ;05b2 SUBI
              6cbc 000d  ld   $0d
              6cbd 0035  ld   $35         ;05b4 BCC
              6cbe 0053  ld   $53         ;05b5 GE
              6cbf 00b9  ld   $b9
              6cc0 0059  ld   $59         ;05b7 LDI
              6cc1 0001  ld   $01
              6cc2 0090  ld   $90         ;05b9 BRA
              6cc3 00bb  ld   $bb
              6cc4 0059  ld   $59         ;05bb LDI
              6cc5 0000  ld   $00
              6cc6 0035  ld   $35         ;05bd BCC
              6cc7 003f  ld   $3f         ;05be EQ
              6cc8 00e4  ld   $e4
              6cc9 0021  ld   $21         ;05c0 LDW
              6cca 0070  ld   $70         ;05c0 'p'
              6ccb 0035  ld   $35         ;05c2 BCC
              6ccc 0072  ld   $72         ;05c3 NE
              6ccd 00c7  ld   $c7
              6cce 0021  ld   $21         ;05c5 LDW
              6ccf 0091  ld   $91         ;05c5 'q'
              6cd0 0090  ld   $90         ;05c7 BRA
              6cd1 00df  ld   $df
              6cd2 0021  ld   $21         ;05c9 LDW
              6cd3 0091  ld   $91         ;05c9 'q'
              6cd4 0035  ld   $35         ;05cb BCC
              6cd5 0072  ld   $72         ;05cc NE
              6cd6 00d0  ld   $d0
              6cd7 0021  ld   $21         ;05ce LDW
              6cd8 0070  ld   $70         ;05ce 'p'
              6cd9 0090  ld   $90         ;05d0 BRA
              6cda 00df  ld   $df
              6cdb 001a  ld   $1a         ;05d2 LD
              6cdc 0006  ld   $06
              6cdd 00e6  ld   $e6         ;05d4 SUBI
              6cde 0080  ld   $80
              6cdf 0099  ld   $99         ;05d6 ADDW
              6ce0 0076  ld   $76         ;05d6 'Bias'
              6ce1 0035  ld   $35         ;05d8 BCC
              6ce2 0053  ld   $53         ;05d9 GE
              6ce3 00dd  ld   $dd
              6ce4 0021  ld   $21         ;05db LDW
              6ce5 0070  ld   $70         ;05db 'p'
              6ce6 0090  ld   $90         ;05dd BRA
              6ce7 00df  ld   $df
              6ce8 0021  ld   $21         ;05df LDW
              6ce9 0091  ld   $91         ;05df 'q'
              6cea 0035  ld   $35         ;05e1 BCC
              6ceb 003f  ld   $3f         ;05e2 EQ
              6cec 00e4  ld   $e4
              6ced 00cf  ld   $cf         ;05e4 CALL
              6cee 0018  ld   $18         ;05e4 vAC
              6cef 0063  ld   $63         ;05e6 POP
              6cf0 00ff  ld   $ff         ;05e7 RET
              6cf1 002b  ld   $2b         ;05e8 STW
              6cf2 0093  ld   $93         ;05e8 'AutoControl'
              6cf3 0093  ld   $93         ;05ea INC
              6cf4 001b  ld   $1b         ;05ea '_vLR'+1
              6cf5 00ff  ld   $ff         ;05ec RET
              6cf6 0006  ld   $06         ;| RAM segment address (high byte first)
              6cf7 0000  ld   $00         ;|
              6cf8 00fa  ld   $fa         ;| Length (1..256)
              6cf9 00cd  ld   $cd         ;0600 DEF
              6cfa 0016  ld   $16
              6cfb fe00  bra  ac          ;+-----------------------------------+
              6cfc fcfd  bra  $6cfd       ;|                                   |
              6cfd 1418  ld   $18,y       ;| Trampoline for page $6c00 lookups |
              6cfe e006  jmp  y,$06       ;|                                   |
              6cff c218  st   [$18]       ;+-----------------------------------+
              6d00 0075  ld   $75         ;0602 PUSH
              6d01 0099  ld   $99         ;0603 ADDW
              6d02 004a  ld   $4a         ;0603 'Timer'
              6d03 002b  ld   $2b         ;0605 STW
              6d04 004a  ld   $4a         ;0605 'Timer'
              6d05 00e6  ld   $e6         ;0607 SUBI
              6d06 000f  ld   $0f
              6d07 0035  ld   $35         ;0609 BCC
              6d08 0056  ld   $56         ;060a LE
              6d09 000e  ld   $0e
              6d0a 0059  ld   $59         ;060c LDI
              6d0b 000f  ld   $0f
              6d0c 002b  ld   $2b         ;060e STW
              6d0d 004a  ld   $4a         ;060e 'Timer'
              6d0e 001a  ld   $1a         ;0610 LD
              6d0f 000e  ld   $0e
              6d10 002b  ld   $2b         ;0612 STW
              6d11 0048  ld   $48         ;0612 'TimeOut'
              6d12 00cf  ld   $cf         ;0614 CALL
              6d13 004c  ld   $4c         ;0614 'DrawTimer'
              6d14 0063  ld   $63         ;0616 POP
              6d15 00ff  ld   $ff         ;0617 RET
              6d16 002b  ld   $2b         ;0618 STW
              6d17 0081  ld   $81         ;0618 'AddTimer'
              6d18 00cd  ld   $cd         ;061a DEF
              6d19 00b3  ld   $b3
              6d1a 0075  ld   $75         ;061c PUSH
              6d1b 0059  ld   $59         ;061d LDI
              6d1c 0000  ld   $00
              6d1d 002b  ld   $2b         ;061f STW
              6d1e 005e  ld   $5e         ;061f 'Score'
              6d1f 002b  ld   $2b         ;0621 STW
              6d20 004a  ld   $4a         ;0621 'Timer'
              6d21 00cf  ld   $cf         ;0623 CALL
              6d22 007e  ld   $7e         ;0623 'DrawScore'
              6d23 0059  ld   $59         ;0625 LDI
              6d24 000f  ld   $0f
              6d25 002b  ld   $2b         ;0627 STW
              6d26 004a  ld   $4a         ;0627 'Timer'
              6d27 00cf  ld   $cf         ;0629 CALL
              6d28 004c  ld   $4c         ;0629 'DrawTimer'
              6d29 00cf  ld   $cf         ;062b CALL
              6d2a 0064  ld   $64         ;062b 'DrawHighScore'
              6d2b 0059  ld   $59         ;062d LDI
              6d2c 0004  ld   $04
              6d2d 002b  ld   $2b         ;062f STW
              6d2e 0038  ld   $38         ;062f 'BgColor'
              6d2f 0011  ld   $11         ;0631 LDWI
              6d30 0000  ld   $00
              6d31 0010  ld   $10
              6d32 002b  ld   $2b         ;0634 STW
              6d33 003c  ld   $3c         ;0634 'Pos'
              6d34 00cf  ld   $cf         ;0636 CALL
              6d35 006c  ld   $6c         ;0636 'ClearScreen'
              6d36 0059  ld   $59         ;0638 LDI
              6d37 001a  ld   $1a
              6d38 002b  ld   $2b         ;063a STW
              6d39 003a  ld   $3a         ;063a 'Color'
              6d3a 0059  ld   $59         ;063c LDI
              6d3b 0001  ld   $01
              6d3c 002b  ld   $2b         ;063e STW
              6d3d 0044  ld   $44         ;063e 'Step'
              6d3e 0059  ld   $59         ;0640 LDI
              6d3f 009f  ld   $9f
              6d40 00cf  ld   $cf         ;0642 CALL
              6d41 0046  ld   $46         ;0642 'DrawLine'
              6d42 0011  ld   $11         ;0644 LDWI
              6d43 0000  ld   $00
              6d44 0001  ld   $01
              6d45 002b  ld   $2b         ;0647 STW
              6d46 0044  ld   $44         ;0647 'Step'
              6d47 0059  ld   $59         ;0649 LDI
              6d48 006f  ld   $6f
              6d49 00cf  ld   $cf         ;064b CALL
              6d4a 0046  ld   $46         ;064b 'DrawLine'
              6d4b 0011  ld   $11         ;064d LDWI
              6d4c 00ff  ld   $ff
              6d4d 00ff  ld   $ff
              6d4e 002b  ld   $2b         ;0650 STW
              6d4f 0044  ld   $44         ;0650 'Step'
              6d50 0059  ld   $59         ;0652 LDI
              6d51 009f  ld   $9f
              6d52 00cf  ld   $cf         ;0654 CALL
              6d53 0046  ld   $46         ;0654 'DrawLine'
              6d54 0011  ld   $11         ;0656 LDWI
              6d55 0000  ld   $00
              6d56 00ff  ld   $ff
              6d57 002b  ld   $2b         ;0659 STW
              6d58 0044  ld   $44         ;0659 'Step'
              6d59 0059  ld   $59         ;065b LDI
              6d5a 006e  ld   $6e
              6d5b 00cf  ld   $cf         ;065d CALL
              6d5c 0046  ld   $46         ;065d 'DrawLine'
              6d5d 0059  ld   $59         ;065f LDI
              6d5e 0001  ld   $01
              6d5f 002b  ld   $2b         ;0661 STW
              6d60 0044  ld   $44         ;0661 'Step'
              6d61 0059  ld   $59         ;0663 LDI
              6d62 009e  ld   $9e
              6d63 00cf  ld   $cf         ;0665 CALL
              6d64 0046  ld   $46         ;0665 'DrawLine'
              6d65 0011  ld   $11         ;0667 LDWI
              6d66 0000  ld   $00
              6d67 0001  ld   $01
              6d68 002b  ld   $2b         ;066a STW
              6d69 0044  ld   $44         ;066a 'Step'
              6d6a 0059  ld   $59         ;066c LDI
              6d6b 006d  ld   $6d
              6d6c 00cf  ld   $cf         ;066e CALL
              6d6d 0046  ld   $46         ;066e 'DrawLine'
              6d6e 0011  ld   $11         ;0670 LDWI
              6d6f 00ff  ld   $ff
              6d70 00ff  ld   $ff
              6d71 002b  ld   $2b         ;0673 STW
              6d72 0044  ld   $44         ;0673 'Step'
              6d73 0059  ld   $59         ;0675 LDI
              6d74 009d  ld   $9d
              6d75 00cf  ld   $cf         ;0677 CALL
              6d76 0046  ld   $46         ;0677 'DrawLine'
              6d77 0011  ld   $11         ;0679 LDWI
              6d78 0000  ld   $00
              6d79 00ff  ld   $ff
              6d7a 002b  ld   $2b         ;067c STW
              6d7b 0044  ld   $44         ;067c 'Step'
              6d7c 0059  ld   $59         ;067e LDI
              6d7d 006d  ld   $6d
              6d7e 00cf  ld   $cf         ;0680 CALL
              6d7f 0046  ld   $46         ;0680 'DrawLine'
              6d80 00cf  ld   $cf         ;0682 CALL
              6d81 0095  ld   $95         ;0682 'GetReady'
              6d82 0011  ld   $11         ;0684 LDWI
              6d83 0030  ld   $30
              6d84 0044  ld   $44
              6d85 002b  ld   $2b         ;0687 STW
              6d86 0058  ld   $58         ;0687 'Head'
              6d87 002b  ld   $2b         ;0689 STW
              6d88 0089  ld   $89         ;0689 'Tail'
              6d89 00cf  ld   $cf         ;068b CALL
              6d8a 005c  ld   $5c         ;068b 'DrawHead'
              6d8b 0059  ld   $59         ;068d LDI
              6d8c 0000  ld   $00
              6d8d 002b  ld   $2b         ;068f STW
              6d8e 0083  ld   $83         ;068f 'Grow'
              6d8f 002b  ld   $2b         ;0691 STW
              6d90 0085  ld   $85         ;0691 'Drops'
              6d91 002b  ld   $2b         ;0693 STW
              6d92 004a  ld   $4a         ;0693 'Timer'
              6d93 0059  ld   $59         ;0695 LDI
              6d94 000f  ld   $0f
              6d95 00cf  ld   $cf         ;0697 CALL
              6d96 0081  ld   $81         ;0697 'AddTimer'
              6d97 0059  ld   $59         ;0699 LDI
              6d98 0002  ld   $02
              6d99 002b  ld   $2b         ;069b STW
              6d9a 0074  ld   $74         ;069b 'stepU'
              6d9b 0011  ld   $11         ;069d LDWI
              6d9c 0000  ld   $00
              6d9d 0002  ld   $02
              6d9e 002b  ld   $2b         ;06a0 STW
              6d9f 0072  ld   $72         ;06a0 'stepV'
              6da0 0059  ld   $59         ;06a2 LDI
              6da1 0019  ld   $19
              6da2 002b  ld   $2b         ;06a4 STW
              6da3 0034  ld   $34         ;06a4 'i'
              6da4 00cf  ld   $cf         ;06a6 CALL
              6da5 0087  ld   $87         ;06a6 'AddFood'
              6da6 0021  ld   $21         ;06a8 LDW
              6da7 0034  ld   $34         ;06a8 'i'
              6da8 00e6  ld   $e6         ;06aa SUBI
              6da9 0001  ld   $01
              6daa 0035  ld   $35         ;06ac BCC
              6dab 004d  ld   $4d         ;06ad GT
              6dac 00a2  ld   $a2
              6dad 0021  ld   $21         ;06af LDW
              6dae 0097  ld   $97         ;06af 'LaunchControl'
              6daf 002b  ld   $2b         ;06b1 STW
              6db0 0060  ld   $60         ;06b1 'Control'
              6db1 0063  ld   $63         ;06b3 POP
              6db2 00ff  ld   $ff         ;06b4 RET
              6db3 002b  ld   $2b         ;06b5 STW
              6db4 008f  ld   $8f         ;06b5 'SetupGame'
              6db5 00cd  ld   $cd         ;06b7 DEF
              6db6 00f0  ld   $f0
              6db7 0075  ld   $75         ;06b9 PUSH
              6db8 0011  ld   $11         ;06ba LDWI
              6db9 0002  ld   $02
              6dba 0008  ld   $08
              6dbb 002b  ld   $2b         ;06bd STW
              6dbc 003c  ld   $3c         ;06bd 'Pos'
              6dbd 0021  ld   $21         ;06bf LDW
              6dbe 005e  ld   $5e         ;06bf 'Score'
              6dbf 00b8  ld   $b8         ;06c1 SUBW
              6dc0 0030  ld   $30         ;06c1 'HighScore'
              6dc1 0035  ld   $35         ;06c3 BCC
              6dc2 0056  ld   $56         ;06c4 LE
              6dc3 00c8  ld   $c8
              6dc4 0059  ld   $59         ;06c6 LDI
              6dc5 001e  ld   $1e
              6dc6 0090  ld   $90         ;06c8 BRA
              6dc7 00ca  ld   $ca
              6dc8 0059  ld   $59         ;06ca LDI
              6dc9 0008  ld   $08
              6dca 002b  ld   $2b         ;06cc STW
              6dcb 003a  ld   $3a         ;06cc 'Color'
              6dcc 0059  ld   $59         ;06ce LDI
              6dcd 0000  ld   $00
              6dce 002b  ld   $2b         ;06d0 STW
              6dcf 0038  ld   $38         ;06d0 'BgColor'
              6dd0 0021  ld   $21         ;06d2 LDW
              6dd1 005e  ld   $5e         ;06d2 'Score'
              6dd2 002b  ld   $2b         ;06d4 STW
              6dd3 0054  ld   $54         ;06d4 'Value'
              6dd4 00cf  ld   $cf         ;06d6 CALL
              6dd5 0099  ld   $99         ;06d6 'DrawNumber4'
              6dd6 0021  ld   $21         ;06d8 LDW
              6dd7 005e  ld   $5e         ;06d8 'Score'
              6dd8 00e6  ld   $e6         ;06da SUBI
              6dd9 0064  ld   $64
              6dda 0035  ld   $35         ;06dc BCC
              6ddb 0053  ld   $53         ;06dd GE
              6ddc 00e1  ld   $e1
              6ddd 0059  ld   $59         ;06df LDI
              6dde 0004  ld   $04
              6ddf 0090  ld   $90         ;06e1 BRA
              6de0 00ec  ld   $ec
              6de1 00e6  ld   $e6         ;06e3 SUBI
              6de2 00c8  ld   $c8
              6de3 0035  ld   $35         ;06e5 BCC
              6de4 0053  ld   $53         ;06e6 GE
              6de5 00ea  ld   $ea
              6de6 0059  ld   $59         ;06e8 LDI
              6de7 0003  ld   $03
              6de8 0090  ld   $90         ;06ea BRA
              6de9 00ec  ld   $ec
              6dea 0059  ld   $59         ;06ec LDI
              6deb 0002  ld   $02
              6dec 002b  ld   $2b         ;06ee STW
              6ded 004e  ld   $4e         ;06ee 'Delay'
              6dee 0063  ld   $63         ;06f0 POP
              6def 00ff  ld   $ff         ;06f1 RET
              6df0 002b  ld   $2b         ;06f2 STW
              6df1 007e  ld   $7e         ;06f2 'DrawScore'
              6df2 0011  ld   $11         ;06f4 LDWI
              6df3 00a0  ld   $a0
              6df4 0008  ld   $08
              6df5 002b  ld   $2b         ;06f7 STW
              6df6 001a  ld   $1a
              6df7 00ff  ld   $ff         ;06f9 RET
              6df8 0008  ld   $08         ;| RAM segment address (high byte first)
              6df9 00a0  ld   $a0         ;|
              6dfa 0056  ld   $56         ;| Length (1..256)
              6dfb fe00  bra  ac          ;+-----------------------------------+
              6dfc fcfd  bra  $6dfd       ;|                                   |
              6dfd 1418  ld   $18,y       ;| Trampoline for page $6d00 lookups |
              6dfe e006  jmp  y,$06       ;|                                   |
              6dff c218  st   [$18]       ;+-----------------------------------+
              6e00 00cd  ld   $cd         ;08a0 DEF
              6e01 00d4  ld   $d4
              6e02 0075  ld   $75         ;08a2 PUSH
              6e03 0011  ld   $11         ;08a3 LDWI
              6e04 009c  ld   $9c
              6e05 0044  ld   $44
              6e06 00b8  ld   $b8         ;08a6 SUBW
              6e07 0058  ld   $58         ;08a6 'Head'
              6e08 0035  ld   $35         ;08a8 BCC
              6e09 0072  ld   $72         ;08a9 NE
              6e0a 00c3  ld   $c3
              6e0b 0059  ld   $59         ;08ab LDI
              6e0c 001e  ld   $1e
              6e0d 002b  ld   $2b         ;08ad STW
              6e0e 003a  ld   $3a         ;08ad 'Color'
              6e0f 0011  ld   $11         ;08af LDWI
              6e10 0002  ld   $02
              6e11 0008  ld   $08
              6e12 002b  ld   $2b         ;08b2 STW
              6e13 003c  ld   $3c         ;08b2 'Pos'
              6e14 00cd  ld   $cd         ;08b4 DEF
              6e15 00b9  ld   $b9
              6e16 0041  ld   $41         ;08b6 'A'
              6e17 0055  ld   $55         ;08b7 'U'
              6e18 0054  ld   $54         ;08b8 'T'
              6e19 004f  ld   $4f         ;08b9 'O'
              6e1a 0000  ld   $00         ;08ba 0
              6e1b 00cf  ld   $cf         ;08bb CALL
              6e1c 0042  ld   $42         ;08bb 'PrintText'
              6e1d 0021  ld   $21         ;08bd LDW
              6e1e 0093  ld   $93         ;08bd 'AutoControl'
              6e1f 002b  ld   $2b         ;08bf STW
              6e20 0060  ld   $60         ;08bf 'Control'
              6e21 00cf  ld   $cf         ;08c1 CALL
              6e22 0018  ld   $18         ;08c1 vAC
              6e23 0090  ld   $90         ;08c3 BRA
              6e24 00d2  ld   $d2
              6e25 001a  ld   $1a         ;08c5 LD
              6e26 0011  ld   $11
              6e27 0082  ld   $82         ;08c7 ANDI
              6e28 00cf  ld   $cf
              6e29 008c  ld   $8c         ;08c9 XORI
              6e2a 00cf  ld   $cf
              6e2b 0035  ld   $35         ;08cb BCC
              6e2c 003f  ld   $3f         ;08cc EQ
              6e2d 00d2  ld   $d2
              6e2e 0021  ld   $21         ;08ce LDW
              6e2f 0062  ld   $62         ;08ce 'PlayerControl'
              6e30 002b  ld   $2b         ;08d0 STW
              6e31 0060  ld   $60         ;08d0 'Control'
              6e32 00cf  ld   $cf         ;08d2 CALL
              6e33 0018  ld   $18         ;08d2 vAC
              6e34 0063  ld   $63         ;08d4 POP
              6e35 00ff  ld   $ff         ;08d5 RET
              6e36 002b  ld   $2b         ;08d6 STW
              6e37 0097  ld   $97         ;08d6 'LaunchControl'
              6e38 00cd  ld   $cd         ;08d8 DEF
              6e39 00ef  ld   $ef
              6e3a 0075  ld   $75         ;08da PUSH
              6e3b 0059  ld   $59         ;08db LDI
              6e3c 0020  ld   $20
              6e3d 002b  ld   $2b         ;08dd STW
              6e3e 0032  ld   $32         ;08dd 'Char'
              6e3f 0059  ld   $59         ;08df LDI
              6e40 000a  ld   $0a
              6e41 002b  ld   $2b         ;08e1 STW
              6e42 009b  ld   $9b         ;08e1 'Radix'
              6e43 00cf  ld   $cf         ;08e3 CALL
              6e44 009d  ld   $9d         ;08e3 'DrawNextDigit'
              6e45 0059  ld   $59         ;08e5 LDI
              6e46 0030  ld   $30
              6e47 002b  ld   $2b         ;08e7 STW
              6e48 0032  ld   $32         ;08e7 'Char'
              6e49 0059  ld   $59         ;08e9 LDI
              6e4a 0001  ld   $01
              6e4b 002b  ld   $2b         ;08eb STW
              6e4c 009b  ld   $9b         ;08eb 'Radix'
              6e4d 00cf  ld   $cf         ;08ed CALL
              6e4e 009d  ld   $9d         ;08ed 'DrawNextDigit'
              6e4f 0063  ld   $63         ;08ef POP
              6e50 00ff  ld   $ff         ;08f0 RET
              6e51 002b  ld   $2b         ;08f1 STW
              6e52 0056  ld   $56         ;08f1 'DrawNumber2'
              6e53 0093  ld   $93         ;08f3 INC
              6e54 001b  ld   $1b         ;08f3 '_vLR'+1
              6e55 00ff  ld   $ff         ;08f5 RET
              6e56 0009  ld   $09         ;| RAM segment address (high byte first)
              6e57 00a0  ld   $a0         ;|
              6e58 0056  ld   $56         ;| Length (1..256)
              6e59 00cd  ld   $cd         ;09a0 DEF
              6e5a 00c7  ld   $c7
              6e5b 0075  ld   $75         ;09a2 PUSH
              6e5c 0021  ld   $21         ;09a3 LDW
              6e5d 0054  ld   $54         ;09a3 'Value'
              6e5e 00b8  ld   $b8         ;09a5 SUBW
              6e5f 009b  ld   $9b         ;09a5 'Radix'
              6e60 0035  ld   $35         ;09a7 BCC
              6e61 0050  ld   $50         ;09a8 LT
              6e62 00c3  ld   $c3
              6e63 002b  ld   $2b         ;09aa STW
              6e64 0054  ld   $54         ;09aa 'Value'
              6e65 0059  ld   $59         ;09ac LDI
              6e66 0031  ld   $31
              6e67 002b  ld   $2b         ;09ae STW
              6e68 0032  ld   $32         ;09ae 'Char'
              6e69 0021  ld   $21         ;09b0 LDW
              6e6a 0054  ld   $54         ;09b0 'Value'
              6e6b 00b8  ld   $b8         ;09b2 SUBW
              6e6c 009b  ld   $9b         ;09b2 'Radix'
              6e6d 0035  ld   $35         ;09b4 BCC
              6e6e 0050  ld   $50         ;09b5 LT
              6e6f 00bb  ld   $bb
              6e70 002b  ld   $2b         ;09b7 STW
              6e71 0054  ld   $54         ;09b7 'Value'
              6e72 0093  ld   $93         ;09b9 INC
              6e73 0032  ld   $32         ;09b9 'Char'
              6e74 0090  ld   $90         ;09bb BRA
              6e75 00b0  ld   $b0
              6e76 00cf  ld   $cf         ;09bd CALL
              6e77 003e  ld   $3e         ;09bd 'PrintChar'
              6e78 0059  ld   $59         ;09bf LDI
              6e79 0030  ld   $30
              6e7a 002b  ld   $2b         ;09c1 STW
              6e7b 0032  ld   $32         ;09c1 'Char'
              6e7c 0090  ld   $90         ;09c3 BRA
              6e7d 00c5  ld   $c5
              6e7e 00cf  ld   $cf         ;09c5 CALL
              6e7f 003e  ld   $3e         ;09c5 'PrintChar'
              6e80 0063  ld   $63         ;09c7 POP
              6e81 00ff  ld   $ff         ;09c8 RET
              6e82 002b  ld   $2b         ;09c9 STW
              6e83 009d  ld   $9d         ;09c9 'DrawNextDigit'
              6e84 00cd  ld   $cd         ;09cb DEF
              6e85 00ef  ld   $ef
              6e86 0075  ld   $75         ;09cd PUSH
              6e87 0059  ld   $59         ;09ce LDI
              6e88 0020  ld   $20
              6e89 002b  ld   $2b         ;09d0 STW
              6e8a 0032  ld   $32         ;09d0 'Char'
              6e8b 0011  ld   $11         ;09d2 LDWI
              6e8c 00e8  ld   $e8
              6e8d 0003  ld   $03
              6e8e 002b  ld   $2b         ;09d5 STW
              6e8f 009b  ld   $9b         ;09d5 'Radix'
              6e90 00cf  ld   $cf         ;09d7 CALL
              6e91 009d  ld   $9d         ;09d7 'DrawNextDigit'
              6e92 0059  ld   $59         ;09d9 LDI
              6e93 0064  ld   $64
              6e94 002b  ld   $2b         ;09db STW
              6e95 009b  ld   $9b         ;09db 'Radix'
              6e96 00cf  ld   $cf         ;09dd CALL
              6e97 009d  ld   $9d         ;09dd 'DrawNextDigit'
              6e98 0059  ld   $59         ;09df LDI
              6e99 000a  ld   $0a
              6e9a 002b  ld   $2b         ;09e1 STW
              6e9b 009b  ld   $9b         ;09e1 'Radix'
              6e9c 00cf  ld   $cf         ;09e3 CALL
              6e9d 009d  ld   $9d         ;09e3 'DrawNextDigit'
              6e9e 0059  ld   $59         ;09e5 LDI
              6e9f 0030  ld   $30
              6ea0 002b  ld   $2b         ;09e7 STW
              6ea1 0032  ld   $32         ;09e7 'Char'
              6ea2 0059  ld   $59         ;09e9 LDI
              6ea3 0001  ld   $01
              6ea4 002b  ld   $2b         ;09eb STW
              6ea5 009b  ld   $9b         ;09eb 'Radix'
              6ea6 00cf  ld   $cf         ;09ed CALL
              6ea7 009d  ld   $9d         ;09ed 'DrawNextDigit'
              6ea8 0063  ld   $63         ;09ef POP
              6ea9 00ff  ld   $ff         ;09f0 RET
              6eaa 002b  ld   $2b         ;09f1 STW
              6eab 0099  ld   $99         ;09f1 'DrawNumber4'
              6eac 0093  ld   $93         ;09f3 INC
              6ead 001b  ld   $1b         ;09f3 '_vLR'+1
              6eae 00ff  ld   $ff         ;09f5 RET
              6eaf 000a  ld   $0a         ;| RAM segment address (high byte first)
              6eb0 00a0  ld   $a0         ;|
              6eb1 0056  ld   $56         ;| Length (1..256)
              6eb2 00cd  ld   $cd         ;0aa0 DEF
              6eb3 00ba  ld   $ba
              6eb4 0075  ld   $75         ;0aa2 PUSH
              6eb5 0011  ld   $11         ;0aa3 LDWI
              6eb6 0074  ld   $74
              6eb7 0008  ld   $08
              6eb8 002b  ld   $2b         ;0aa6 STW
              6eb9 003c  ld   $3c         ;0aa6 'Pos'
              6eba 0059  ld   $59         ;0aa8 LDI
              6ebb 0000  ld   $00
              6ebc 002b  ld   $2b         ;0aaa STW
              6ebd 0038  ld   $38         ;0aaa 'BgColor'
              6ebe 00cd  ld   $cd         ;0aac DEF
              6ebf 00b0  ld   $b0
              6ec0 0048  ld   $48         ;0aae 'H'
              6ec1 0049  ld   $49         ;0aaf 'I'
              6ec2 0020  ld   $20         ;0ab0 ' '
              6ec3 0000  ld   $00         ;0ab1 0
              6ec4 00cf  ld   $cf         ;0ab2 CALL
              6ec5 0042  ld   $42         ;0ab2 'PrintText'
              6ec6 0021  ld   $21         ;0ab4 LDW
              6ec7 0030  ld   $30         ;0ab4 'HighScore'
              6ec8 002b  ld   $2b         ;0ab6 STW
              6ec9 0054  ld   $54         ;0ab6 'Value'
              6eca 00cf  ld   $cf         ;0ab8 CALL
              6ecb 0099  ld   $99         ;0ab8 'DrawNumber4'
              6ecc 0063  ld   $63         ;0aba POP
              6ecd 00ff  ld   $ff         ;0abb RET
              6ece 002b  ld   $2b         ;0abc STW
              6ecf 0064  ld   $64         ;0abc 'DrawHighScore'
              6ed0 00cd  ld   $cd         ;0abe DEF
              6ed1 00ef  ld   $ef
              6ed2 002b  ld   $2b         ;0ac0 STW
              6ed3 0034  ld   $34         ;0ac0 'i'
              6ed4 0088  ld   $88         ;0ac2 ORI
              6ed5 00ff  ld   $ff
              6ed6 008c  ld   $8c         ;0ac4 XORI
              6ed7 00ff  ld   $ff
              6ed8 0088  ld   $88         ;0ac6 ORI
              6ed9 00fa  ld   $fa
              6eda 002b  ld   $2b         ;0ac8 STW
              6edb 0070  ld   $70         ;0ac8 'p'
              6edc 001a  ld   $1a         ;0aca LD
              6edd 0034  ld   $34         ;0aca 'i'
              6ede 002b  ld   $2b         ;0acc STW
              6edf 0034  ld   $34         ;0acc 'i'
              6ee0 0059  ld   $59         ;0ace LDI
              6ee1 0000  ld   $00
              6ee2 00f0  ld   $f0         ;0ad0 POKE
              6ee3 0070  ld   $70         ;0ad0 'p'
              6ee4 0093  ld   $93         ;0ad2 INC
              6ee5 0070  ld   $70         ;0ad2 'p'
              6ee6 0059  ld   $59         ;0ad4 LDI
              6ee7 0001  ld   $01
              6ee8 00f0  ld   $f0         ;0ad6 POKE
              6ee9 0070  ld   $70         ;0ad6 'p'
              6eea 0093  ld   $93         ;0ad8 INC
              6eeb 0070  ld   $70         ;0ad8 'p'
              6eec 0011  ld   $11         ;0ada LDWI
              6eed 0000  ld   $00
              6eee 0009  ld   $09
              6eef 0099  ld   $99         ;0add ADDW
              6ef0 0034  ld   $34         ;0add 'i'
              6ef1 007f  ld   $7f         ;0adf LUP
              6ef2 0000  ld   $00
              6ef3 00f0  ld   $f0         ;0ae1 POKE
              6ef4 0070  ld   $70         ;0ae1 'p'
              6ef5 0093  ld   $93         ;0ae3 INC
              6ef6 0070  ld   $70         ;0ae3 'p'
              6ef7 0011  ld   $11         ;0ae5 LDWI
              6ef8 0000  ld   $00
              6ef9 0009  ld   $09
              6efa 0099  ld   $99         ;0ae8 ADDW
              6efb fe00  bra  ac          ;+-----------------------------------+
              6efc fcfd  bra  $6efd       ;|                                   |
              6efd 1418  ld   $18,y       ;| Trampoline for page $6e00 lookups |
              6efe e006  jmp  y,$06       ;|                                   |
              6eff c218  st   [$18]       ;+-----------------------------------+
              6f00 0034  ld   $34         ;0ae8 'i'
              6f01 007f  ld   $7f         ;0aea LUP
              6f02 0001  ld   $01
              6f03 00f0  ld   $f0         ;0aec POKE
              6f04 0070  ld   $70         ;0aec 'p'
              6f05 0093  ld   $93         ;0aee INC
              6f06 0070  ld   $70         ;0aee 'p'
              6f07 00ff  ld   $ff         ;0af0 RET
              6f08 002b  ld   $2b         ;0af1 STW
              6f09 009f  ld   $9f         ;0af1 'SetupChannel'
              6f0a 0093  ld   $93         ;0af3 INC
              6f0b 001b  ld   $1b         ;0af3 '_vLR'+1
              6f0c 00ff  ld   $ff         ;0af5 RET
              6f0d 000b  ld   $0b         ;| RAM segment address (high byte first)
              6f0e 00a0  ld   $a0         ;|
              6f0f 004c  ld   $4c         ;| Length (1..256)
              6f10 00cd  ld   $cd         ;0ba0 DEF
              6f11 00c2  ld   $c2
              6f12 0075  ld   $75         ;0ba2 PUSH
              6f13 00e9  ld   $e9         ;0ba3 LSLW
              6f14 002b  ld   $2b         ;0ba4 STW
              6f15 006a  ld   $6a         ;0ba4 'tmp'
              6f16 0011  ld   $11         ;0ba6 LDWI
              6f17 0000  ld   $00
              6f18 0001  ld   $01
              6f19 00fa  ld   $fa         ;0ba9 ORW
              6f1a 006a  ld   $6a         ;0ba9 'tmp'
              6f1b 00cf  ld   $cf         ;0bab CALL
              6f1c 009f  ld   $9f         ;0bab 'SetupChannel'
              6f1d 0011  ld   $11         ;0bad LDWI
              6f1e 0000  ld   $00
              6f1f 0002  ld   $02
              6f20 00fa  ld   $fa         ;0bb0 ORW
              6f21 006a  ld   $6a         ;0bb0 'tmp'
              6f22 00cf  ld   $cf         ;0bb2 CALL
              6f23 009f  ld   $9f         ;0bb2 'SetupChannel'
              6f24 0011  ld   $11         ;0bb4 LDWI
              6f25 0000  ld   $00
              6f26 0003  ld   $03
              6f27 00fa  ld   $fa         ;0bb7 ORW
              6f28 006a  ld   $6a         ;0bb7 'tmp'
              6f29 00cf  ld   $cf         ;0bb9 CALL
              6f2a 009f  ld   $9f         ;0bb9 'SetupChannel'
              6f2b 0011  ld   $11         ;0bbb LDWI
              6f2c 0000  ld   $00
              6f2d 0004  ld   $04
              6f2e 00fa  ld   $fa         ;0bbe ORW
              6f2f 006a  ld   $6a         ;0bbe 'tmp'
              6f30 00cf  ld   $cf         ;0bc0 CALL
              6f31 009f  ld   $9f         ;0bc0 'SetupChannel'
              6f32 0063  ld   $63         ;0bc2 POP
              6f33 00ff  ld   $ff         ;0bc3 RET
              6f34 002b  ld   $2b         ;0bc4 STW
              6f35 007c  ld   $7c         ;0bc4 'SetNote'
              6f36 00cd  ld   $cd         ;0bc6 DEF
              6f37 00e5  ld   $e5
              6f38 0075  ld   $75         ;0bc8 PUSH
              6f39 0059  ld   $59         ;0bc9 LDI
              6f3a 0049  ld   $49
              6f3b 002b  ld   $2b         ;0bcb STW
              6f3c 00a1  ld   $a1         ;0bcb 'j'
              6f3d 0021  ld   $21         ;0bcd LDW
              6f3e 00a1  ld   $a1         ;0bcd 'j'
              6f3f 00cf  ld   $cf         ;0bcf CALL
              6f40 007c  ld   $7c         ;0bcf 'SetNote'
              6f41 0059  ld   $59         ;0bd1 LDI
              6f42 0005  ld   $05
              6f43 005e  ld   $5e         ;0bd3 ST
              6f44 002c  ld   $2c
              6f45 001a  ld   $1a         ;0bd5 LD
              6f46 002c  ld   $2c
              6f47 0035  ld   $35         ;0bd7 BCC
              6f48 0072  ld   $72         ;0bd8 NE
              6f49 00d3  ld   $d3
              6f4a 0021  ld   $21         ;0bda LDW
              6f4b 00a1  ld   $a1         ;0bda 'j'
              6f4c 00e6  ld   $e6         ;0bdc SUBI
              6f4d 0001  ld   $01
              6f4e 002b  ld   $2b         ;0bde STW
              6f4f 00a1  ld   $a1         ;0bde 'j'
              6f50 008c  ld   $8c         ;0be0 XORI
              6f51 0030  ld   $30
              6f52 0035  ld   $35         ;0be2 BCC
              6f53 0072  ld   $72         ;0be3 NE
              6f54 00cb  ld   $cb
              6f55 0063  ld   $63         ;0be5 POP
              6f56 00ff  ld   $ff         ;0be6 RET
              6f57 002b  ld   $2b         ;0be7 STW
              6f58 0066  ld   $66         ;0be7 'PlayGameOverSound'
              6f59 0093  ld   $93         ;0be9 INC
              6f5a 001b  ld   $1b         ;0be9 '_vLR'+1
              6f5b 00ff  ld   $ff         ;0beb RET
              6f5c 000c  ld   $0c         ;| RAM segment address (high byte first)
              6f5d 00a0  ld   $a0         ;|
              6f5e 0045  ld   $45         ;| Length (1..256)
              6f5f 00cd  ld   $cd         ;0ca0 DEF
              6f60 00de  ld   $de
              6f61 0075  ld   $75         ;0ca2 PUSH
              6f62 0011  ld   $11         ;0ca3 LDWI
              6f63 0033  ld   $33
              6f64 0045  ld   $45
              6f65 002b  ld   $2b         ;0ca6 STW
              6f66 0070  ld   $70         ;0ca6 'p'
              6f67 002b  ld   $2b         ;0ca8 STW
              6f68 003c  ld   $3c         ;0ca8 'Pos'
              6f69 0059  ld   $59         ;0caa LDI
              6f6a 0018  ld   $18
              6f6b 002b  ld   $2b         ;0cac STW
              6f6c 003a  ld   $3a         ;0cac 'Color'
              6f6d 0021  ld   $21         ;0cae LDW
              6f6e 00a3  ld   $a3         ;0cae 'Messages'
              6f6f 00cf  ld   $cf         ;0cb0 CALL
              6f70 0042  ld   $42         ;0cb0 'PrintText'
              6f71 0059  ld   $59         ;0cb2 LDI
              6f72 002d  ld   $2d
              6f73 00cf  ld   $cf         ;0cb4 CALL
              6f74 0050  ld   $50         ;0cb4 'Wait'
              6f75 0021  ld   $21         ;0cb6 LDW
              6f76 0070  ld   $70         ;0cb6 'p'
              6f77 002b  ld   $2b         ;0cb8 STW
              6f78 003c  ld   $3c         ;0cb8 'Pos'
              6f79 0059  ld   $59         ;0cba LDI
              6f7a 003e  ld   $3e
              6f7b 002b  ld   $2b         ;0cbc STW
              6f7c 003a  ld   $3a         ;0cbc 'Color'
              6f7d 0021  ld   $21         ;0cbe LDW
              6f7e 0040  ld   $40         ;0cbe 'Text'
              6f7f 00cf  ld   $cf         ;0cc0 CALL
              6f80 0042  ld   $42         ;0cc0 'PrintText'
              6f81 0059  ld   $59         ;0cc2 LDI
              6f82 002d  ld   $2d
              6f83 00cf  ld   $cf         ;0cc4 CALL
              6f84 0050  ld   $50         ;0cc4 'Wait'
              6f85 0021  ld   $21         ;0cc6 LDW
              6f86 0070  ld   $70         ;0cc6 'p'
              6f87 002b  ld   $2b         ;0cc8 STW
              6f88 003c  ld   $3c         ;0cc8 'Pos'
              6f89 0059  ld   $59         ;0cca LDI
              6f8a 000f  ld   $0f
              6f8b 002b  ld   $2b         ;0ccc STW
              6f8c 003a  ld   $3a         ;0ccc 'Color'
              6f8d 0021  ld   $21         ;0cce LDW
              6f8e 0040  ld   $40         ;0cce 'Text'
              6f8f 00cf  ld   $cf         ;0cd0 CALL
              6f90 0042  ld   $42         ;0cd0 'PrintText'
              6f91 0059  ld   $59         ;0cd2 LDI
              6f92 002d  ld   $2d
              6f93 00cf  ld   $cf         ;0cd4 CALL
              6f94 0050  ld   $50         ;0cd4 'Wait'
              6f95 0021  ld   $21         ;0cd6 LDW
              6f96 0070  ld   $70         ;0cd6 'p'
              6f97 002b  ld   $2b         ;0cd8 STW
              6f98 003c  ld   $3c         ;0cd8 'Pos'
              6f99 0021  ld   $21         ;0cda LDW
              6f9a 0040  ld   $40         ;0cda 'Text'
              6f9b 00cf  ld   $cf         ;0cdc CALL
              6f9c 0042  ld   $42         ;0cdc 'PrintText'
              6f9d 0063  ld   $63         ;0cde POP
              6f9e 00ff  ld   $ff         ;0cdf RET
              6f9f 002b  ld   $2b         ;0ce0 STW
              6fa0 0095  ld   $95         ;0ce0 'GetReady'
              6fa1 0093  ld   $93         ;0ce2 INC
              6fa2 001b  ld   $1b         ;0ce2 '_vLR'+1
              6fa3 00ff  ld   $ff         ;0ce4 RET
              6fa4 000d  ld   $0d         ;| RAM segment address (high byte first)
              6fa5 00a0  ld   $a0         ;|
              6fa6 0046  ld   $46         ;| Length (1..256)
              6fa7 00cd  ld   $cd         ;0da0 DEF
              6fa8 00df  ld   $df
              6fa9 0021  ld   $21         ;0da2 LDW
              6faa 0074  ld   $74         ;0da2 'stepU'
              6fab 002b  ld   $2b         ;0da4 STW
              6fac 006a  ld   $6a         ;0da4 'tmp'
              6fad 001a  ld   $1a         ;0da6 LD
              6fae 0011  ld   $11
              6faf 008c  ld   $8c         ;0da8 XORI
              6fb0 00fe  ld   $fe
              6fb1 0035  ld   $35         ;0daa BCC
              6fb2 0072  ld   $72         ;0dab NE
              6fb3 00af  ld   $af
              6fb4 0059  ld   $59         ;0dad LDI
              6fb5 0002  ld   $02
              6fb6 002b  ld   $2b         ;0daf STW
              6fb7 006a  ld   $6a         ;0daf 'tmp'
              6fb8 001a  ld   $1a         ;0db1 LD
              6fb9 0011  ld   $11
              6fba 008c  ld   $8c         ;0db3 XORI
              6fbb 00fd  ld   $fd
              6fbc 0035  ld   $35         ;0db5 BCC
              6fbd 0072  ld   $72         ;0db6 NE
              6fbe 00bb  ld   $bb
              6fbf 0011  ld   $11         ;0db8 LDWI
              6fc0 00fe  ld   $fe
              6fc1 00ff  ld   $ff
              6fc2 002b  ld   $2b         ;0dbb STW
              6fc3 006a  ld   $6a         ;0dbb 'tmp'
              6fc4 001a  ld   $1a         ;0dbd LD
              6fc5 0011  ld   $11
              6fc6 008c  ld   $8c         ;0dbf XORI
              6fc7 00fb  ld   $fb
              6fc8 0035  ld   $35         ;0dc1 BCC
              6fc9 0072  ld   $72         ;0dc2 NE
              6fca 00c7  ld   $c7
              6fcb 0011  ld   $11         ;0dc4 LDWI
              6fcc 0000  ld   $00
              6fcd 0002  ld   $02
              6fce 002b  ld   $2b         ;0dc7 STW
              6fcf 006a  ld   $6a         ;0dc7 'tmp'
              6fd0 001a  ld   $1a         ;0dc9 LD
              6fd1 0011  ld   $11
              6fd2 008c  ld   $8c         ;0dcb XORI
              6fd3 00f7  ld   $f7
              6fd4 0035  ld   $35         ;0dcd BCC
              6fd5 0072  ld   $72         ;0dce NE
              6fd6 00d3  ld   $d3
              6fd7 0011  ld   $11         ;0dd0 LDWI
              6fd8 0000  ld   $00
              6fd9 00fe  ld   $fe
              6fda 002b  ld   $2b         ;0dd3 STW
              6fdb 006a  ld   $6a         ;0dd3 'tmp'
              6fdc 0021  ld   $21         ;0dd5 LDW
              6fdd 006a  ld   $6a         ;0dd5 'tmp'
              6fde 0099  ld   $99         ;0dd7 ADDW
              6fdf 0074  ld   $74         ;0dd7 'stepU'
              6fe0 0035  ld   $35         ;0dd9 BCC
              6fe1 003f  ld   $3f         ;0dda EQ
              6fe2 00de  ld   $de
              6fe3 0021  ld   $21         ;0ddc LDW
              6fe4 006a  ld   $6a         ;0ddc 'tmp'
              6fe5 002b  ld   $2b         ;0dde STW
              6fe6 0074  ld   $74         ;0dde 'stepU'
              6fe7 00ff  ld   $ff         ;0de0 RET
              6fe8 002b  ld   $2b         ;0de1 STW
              6fe9 0062  ld   $62         ;0de1 'PlayerControl'
              6fea 0093  ld   $93         ;0de3 INC
              6feb 001b  ld   $1b         ;0de3 '_vLR'+1
              6fec 00ff  ld   $ff         ;0de5 RET
              6fed 000e  ld   $0e         ;| RAM segment address (high byte first)
              6fee 00a0  ld   $a0         ;|
              6fef 004d  ld   $4d         ;| Length (1..256)
              6ff0 00cd  ld   $cd         ;0ea0 DEF
              6ff1 00cb  ld   $cb
              6ff2 0020  ld   $20         ;0ea2 ' '
              6ff3 0045  ld   $45         ;0ea3 'E'
              6ff4 0041  ld   $41         ;0ea4 'A'
              6ff5 0054  ld   $54         ;0ea5 'T'
              6ff6 0020  ld   $20         ;0ea6 ' '
              6ff7 0046  ld   $46         ;0ea7 'F'
              6ff8 004f  ld   $4f         ;0ea8 'O'
              6ff9 004f  ld   $4f         ;0ea9 'O'
              6ffa 0044  ld   $44         ;0eaa 'D'
              6ffb fe00  bra  ac          ;+-----------------------------------+
              6ffc fcfd  bra  $6ffd       ;|                                   |
              6ffd 1418  ld   $18,y       ;| Trampoline for page $6f00 lookups |
              6ffe e006  jmp  y,$06       ;|                                   |
              6fff c218  st   [$18]       ;+-----------------------------------+
              7000 0000  ld   $00         ;0eab 0
              7001 004e  ld   $4e         ;0eac 'N'
              7002 004f  ld   $4f         ;0ead 'O'
              7003 0054  ld   $54         ;0eae 'T'
              7004 0020  ld   $20         ;0eaf ' '
              7005 0050  ld   $50         ;0eb0 'P'
              7006 004f  ld   $4f         ;0eb1 'O'
              7007 0049  ld   $49         ;0eb2 'I'
              7008 0053  ld   $53         ;0eb3 'S'
              7009 004f  ld   $4f         ;0eb4 'O'
              700a 004e  ld   $4e         ;0eb5 'N'
              700b 0000  ld   $00         ;0eb6 0
              700c 0047  ld   $47         ;0eb7 'G'
              700d 0045  ld   $45         ;0eb8 'E'
              700e 0054  ld   $54         ;0eb9 'T'
              700f 0020  ld   $20         ;0eba ' '
              7010 0052  ld   $52         ;0ebb 'R'
              7011 0045  ld   $45         ;0ebc 'E'
              7012 0041  ld   $41         ;0ebd 'A'
              7013 0044  ld   $44         ;0ebe 'D'
              7014 0059  ld   $59         ;0ebf 'Y'
              7015 0021  ld   $21         ;0ec0 '!'
              7016 0000  ld   $00         ;0ec1 0
              7017 0020  ld   $20         ;0ec2 ' '
              7018 0020  ld   $20         ;0ec3 ' '
              7019 0020  ld   $20         ;0ec4 ' '
              701a 0020  ld   $20         ;0ec5 ' '
              701b 0020  ld   $20         ;0ec6 ' '
              701c 0020  ld   $20         ;0ec7 ' '
              701d 0020  ld   $20         ;0ec8 ' '
              701e 0020  ld   $20         ;0ec9 ' '
              701f 0020  ld   $20         ;0eca ' '
              7020 0020  ld   $20         ;0ecb ' '
              7021 0000  ld   $00         ;0ecc 0
              7022 002b  ld   $2b         ;0ecd STW
              7023 00a3  ld   $a3         ;0ecd 'Messages'
              7024 00cf  ld   $cf         ;0ecf CALL
              7025 006e  ld   $6e         ;0ecf 'Intro'
              7026 0059  ld   $59         ;0ed1 LDI
              7027 0049  ld   $49
              7028 00cf  ld   $cf         ;0ed3 CALL
              7029 007c  ld   $7c         ;0ed3 'SetNote'
              702a 00cf  ld   $cf         ;0ed5 CALL
              702b 008f  ld   $8f         ;0ed5 'SetupGame'
              702c 00cf  ld   $cf         ;0ed7 CALL
              702d 008d  ld   $8d         ;0ed7 'RunGame'
              702e 0059  ld   $59         ;0ed9 LDI
              702f 0078  ld   $78
              7030 005e  ld   $5e         ;0edb ST
              7031 002c  ld   $2c
              7032 0059  ld   $59         ;0edd LDI
              7033 0007  ld   $07
              7034 002b  ld   $2b         ;0edf STW
              7035 003a  ld   $3a         ;0edf 'Color'
              7036 0021  ld   $21         ;0ee1 LDW
              7037 0058  ld   $58         ;0ee1 'Head'
              7038 00cf  ld   $cf         ;0ee3 CALL
              7039 005a  ld   $5a         ;0ee3 'DrawBlock'
              703a 00cf  ld   $cf         ;0ee5 CALL
              703b 0068  ld   $68         ;0ee5 'GameOver'
              703c 0059  ld   $59         ;0ee7 LDI
              703d 003c  ld   $3c
              703e 00cf  ld   $cf         ;0ee9 CALL
              703f 0050  ld   $50         ;0ee9 'Wait'
              7040 0090  ld   $90         ;0eeb BRA
              7041 00d3  ld   $d3
              7042 0000  ld   $00         ;End of Apps/Snake/Snake_v3.gcl, size 1834
                                          ;+-----------------------------------+
                                          ;| Apps/TinyBASIC/TinyBASIC_v4.gcl   |
                                          ;+-----------------------------------+
              7043 dc53  st   $53,[y,x++] ;'S'
              7044 dc6e  st   $6e,[y,x++] ;'n'
              7045 dc61  st   $61,[y,x++] ;'a'
              7046 dc6b  st   $6b,[y,x++] ;'k'
              7047 dc65  st   $65,[y,x++] ;'e'
              7048 dc00  st   $00,[y,x++] ;'\x00'
              7049 dc00  st   $00,[y,x++] ;'\x00'
              704a dc00  st   $00,[y,x++] ;'\x00'
              704b 0019  ld   $19
              704c c218  st   [$18]
              704d 0069  ld   $69
              704e 14e1  ld   $e1,y
              704f e071  jmp  y,$71
              7050 c219  st   [$19]
TinyBASIC:    7051 0002  ld   $02         ;| RAM segment address (high byte first)
              7052 0000  ld   $00         ;|
              7053 00f8  ld   $f8         ;| Length (1..256)
              7054 0011  ld   $11         ;0200 LDWI
              7055 00df  ld   $df
              7056 0001  ld   $01
              7057 00f6  ld   $f6         ;0203 DEEK
              7058 002b  ld   $2b         ;0204 STW
              7059 0030  ld   $30         ;0204 'Pos'
              705a 00cd  ld   $cd         ;0206 DEF
              705b 00c3  ld   $c3
              705c 0075  ld   $75         ;0208 PUSH
              705d 00cf  ld   $cf         ;0209 CALL
              705e 0032  ld   $32         ;0209 'Number'
              705f 0035  ld   $35         ;020b BCC
              7060 0050  ld   $50         ;020c LT
              7061 0010  ld   $10
              7062 00cf  ld   $cf         ;020e CALL
              7063 0034  ld   $34         ;020e 'Spaces'
              7064 0063  ld   $63         ;0210 POP
              7065 00ff  ld   $ff         ;0211 RET
              7066 0021  ld   $21         ;0212 LDW
              7067 0036  ld   $36         ;0212 'Active'
              7068 00ad  ld   $ad         ;0214 PEEK
              7069 008c  ld   $8c         ;0215 XORI
              706a 0024  ld   $24
              706b 0035  ld   $35         ;0217 BCC
              706c 0072  ld   $72         ;0218 NE
              706d 0021  ld   $21
              706e 0011  ld   $11         ;021a LDWI
              706f 00ce  ld   $ce
              7070 0005  ld   $05
              7071 00cf  ld   $cf         ;021d CALL
              7072 0018  ld   $18         ;021d vAC
              7073 00cf  ld   $cf         ;021f CALL
              7074 0034  ld   $34         ;021f 'Spaces'
              7075 0063  ld   $63         ;0221 POP
              7076 00ff  ld   $ff         ;0222 RET
              7077 00cf  ld   $cf         ;0223 CALL
              7078 0038  ld   $38         ;0223 'Keyword'
              7079 0028  ld   $28         ;0225 '('
              707a 0000  ld   $00         ;0226 0
              707b 0035  ld   $35         ;0227 BCC
              707c 003f  ld   $3f         ;0228 EQ
              707d 002c  ld   $2c
              707e 00cf  ld   $cf         ;022a CALL
              707f 003a  ld   $3a         ;022a 'Expression'
              7080 0090  ld   $90         ;022c BRA
              7081 00b8  ld   $b8
              7082 00cf  ld   $cf         ;022e CALL
              7083 0038  ld   $38         ;022e 'Keyword'
              7084 0070  ld   $70         ;0230 'p'
              7085 0065  ld   $65         ;0231 'e'
              7086 0065  ld   $65         ;0232 'e'
              7087 006b  ld   $6b         ;0233 'k'
              7088 0028  ld   $28         ;0234 '('
              7089 0000  ld   $00         ;0235 0
              708a 0035  ld   $35         ;0236 BCC
              708b 003f  ld   $3f         ;0237 EQ
              708c 003e  ld   $3e
              708d 00cf  ld   $cf         ;0239 CALL
              708e 003a  ld   $3a         ;0239 'Expression'
              708f 00ad  ld   $ad         ;023b PEEK
              7090 002b  ld   $2b         ;023c STW
              7091 003c  ld   $3c         ;023c 'Value'
              7092 0090  ld   $90         ;023e BRA
              7093 00b8  ld   $b8
              7094 00cf  ld   $cf         ;0240 CALL
              7095 0038  ld   $38         ;0240 'Keyword'
              7096 0072  ld   $72         ;0242 'r'
              7097 006e  ld   $6e         ;0243 'n'
              7098 0064  ld   $64         ;0244 'd'
              7099 0028  ld   $28         ;0245 '('
              709a 0000  ld   $00         ;0246 0
              709b 0035  ld   $35         ;0247 BCC
              709c 003f  ld   $3f         ;0248 EQ
              709d 005c  ld   $5c
              709e 00cf  ld   $cf         ;024a CALL
              709f 003a  ld   $3a         ;024a 'Expression'
              70a0 0011  ld   $11         ;024c LDWI
              70a1 00a7  ld   $a7
              70a2 0004  ld   $04
              70a3 002b  ld   $2b         ;024f STW
              70a4 0022  ld   $22         ;024f '_sysFn'
              70a5 00b4  ld   $b4         ;0251 SYS
              70a6 00fe  ld   $fe
              70a7 0035  ld   $35         ;0253 BCC
              70a8 0050  ld   $50         ;0254 LT
              70a9 004f  ld   $4f
              70aa 00cf  ld   $cf         ;0256 CALL
              70ab 003e  ld   $3e         ;0256 'Divide'
              70ac 0021  ld   $21         ;0258 LDW
              70ad 0040  ld   $40         ;0258 'i'
              70ae 002b  ld   $2b         ;025a STW
              70af 003c  ld   $3c         ;025a 'Value'
              70b0 0090  ld   $90         ;025c BRA
              70b1 00b8  ld   $b8
              70b2 00cf  ld   $cf         ;025e CALL
              70b3 0038  ld   $38         ;025e 'Keyword'
              70b4 0075  ld   $75         ;0260 'u'
              70b5 0073  ld   $73         ;0261 's'
              70b6 0072  ld   $72         ;0262 'r'
              70b7 0028  ld   $28         ;0263 '('
              70b8 0000  ld   $00         ;0264 0
              70b9 0035  ld   $35         ;0265 BCC
              70ba 003f  ld   $3f         ;0266 EQ
              70bb 006e  ld   $6e
              70bc 00cf  ld   $cf         ;0268 CALL
              70bd 003a  ld   $3a         ;0268 'Expression'
              70be 00cf  ld   $cf         ;026a CALL
              70bf 003c  ld   $3c         ;026a 'Value'
              70c0 002b  ld   $2b         ;026c STW
              70c1 003c  ld   $3c         ;026c 'Value'
              70c2 0090  ld   $90         ;026e BRA
              70c3 00b8  ld   $b8
              70c4 00cf  ld   $cf         ;0270 CALL
              70c5 0042  ld   $42         ;0270 'Variable'
              70c6 002b  ld   $2b         ;0272 STW
              70c7 0044  ld   $44         ;0272 'k'
              70c8 00cf  ld   $cf         ;0274 CALL
              70c9 0034  ld   $34         ;0274 'Spaces'
              70ca 00cf  ld   $cf         ;0276 CALL
              70cb 0038  ld   $38         ;0276 'Keyword'
              70cc 0028  ld   $28         ;0278 '('
              70cd 0000  ld   $00         ;0279 0
              70ce 0035  ld   $35         ;027a BCC
              70cf 003f  ld   $3f         ;027b EQ
              70d0 00b1  ld   $b1
              70d1 0075  ld   $75         ;027d PUSH
              70d2 0021  ld   $21         ;027e LDW
              70d3 0044  ld   $44         ;027e 'k'
              70d4 00ec  ld   $ec         ;0280 STLW
              70d5 0000  ld   $00
              70d6 00cf  ld   $cf         ;0282 CALL
              70d7 003a  ld   $3a         ;0282 'Expression'
              70d8 0035  ld   $35         ;0284 BCC
              70d9 0053  ld   $53         ;0285 GE
              70da 0087  ld   $87
              70db 00cf  ld   $cf         ;0287 CALL
              70dc 0046  ld   $46         ;0287 'ValueError'
              70dd 00ee  ld   $ee         ;0289 LDLW
              70de 0000  ld   $00
              70df 002b  ld   $2b         ;028b STW
              70e0 0044  ld   $44         ;028b 'k'
              70e1 0063  ld   $63         ;028d POP
              70e2 001a  ld   $1a         ;028e LD
              70e3 0045  ld   $45         ;028e 'k'+1
              70e4 00b8  ld   $b8         ;0290 SUBW
              70e5 003c  ld   $3c         ;0290 'Value'
              70e6 00e6  ld   $e6         ;0292 SUBI
              70e7 0002  ld   $02
              70e8 005e  ld   $5e         ;0294 ST
              70e9 0045  ld   $45         ;0294 'k'+1
              70ea 0021  ld   $21         ;0296 LDW
              70eb 0048  ld   $48         ;0296 'End'
              70ec 00fc  ld   $fc         ;0298 XORW
              70ed 0044  ld   $44         ;0298 'k'
              70ee 0035  ld   $35         ;029a BCC
              70ef 0053  ld   $53         ;029b GE
              70f0 009f  ld   $9f
              70f1 0021  ld   $21         ;029d LDW
              70f2 0048  ld   $48         ;029d 'End'
              70f3 0090  ld   $90         ;029f BRA
              70f4 00a3  ld   $a3
              70f5 0021  ld   $21         ;02a1 LDW
              70f6 0044  ld   $44         ;02a1 'k'
              70f7 00b8  ld   $b8         ;02a3 SUBW
              70f8 0048  ld   $48         ;02a3 'End'
              70f9 0035  ld   $35         ;02a5 BCC
              70fa 0053  ld   $53         ;02a6 GE
              70fb fe00  bra  ac          ;+-----------------------------------+
              70fc fcfd  bra  $70fd       ;|                                   |
              70fd 1418  ld   $18,y       ;| Trampoline for page $7000 lookups |
              70fe e006  jmp  y,$06       ;|                                   |
              70ff c218  st   [$18]       ;+-----------------------------------+
              7100 00a8  ld   $a8
              7101 00cf  ld   $cf         ;02a8 CALL
              7102 0046  ld   $46         ;02a8 'ValueError'
              7103 00cf  ld   $cf         ;02aa CALL
              7104 0038  ld   $38         ;02aa 'Keyword'
              7105 0029  ld   $29         ;02ac ')'
              7106 0000  ld   $00         ;02ad 0
              7107 0035  ld   $35         ;02ae BCC
              7108 0072  ld   $72         ;02af NE
              7109 00b1  ld   $b1
              710a 00cf  ld   $cf         ;02b1 CALL
              710b 004a  ld   $4a         ;02b1 'SyntaxError'
              710c 0021  ld   $21         ;02b3 LDW
              710d 0044  ld   $44         ;02b3 'k'
              710e 00f6  ld   $f6         ;02b5 DEEK
              710f 002b  ld   $2b         ;02b6 STW
              7110 003c  ld   $3c         ;02b6 'Value'
              7111 0063  ld   $63         ;02b8 POP
              7112 00ff  ld   $ff         ;02b9 RET
              7113 00cf  ld   $cf         ;02ba CALL
              7114 0038  ld   $38         ;02ba 'Keyword'
              7115 0029  ld   $29         ;02bc ')'
              7116 0000  ld   $00         ;02bd 0
              7117 0035  ld   $35         ;02be BCC
              7118 0072  ld   $72         ;02bf NE
              7119 00c1  ld   $c1
              711a 00cf  ld   $cf         ;02c1 CALL
              711b 004a  ld   $4a         ;02c1 'SyntaxError'
              711c 0063  ld   $63         ;02c3 POP
              711d 00ff  ld   $ff         ;02c4 RET
              711e 002b  ld   $2b         ;02c5 STW
              711f 004c  ld   $4c         ;02c5 'Factor'
              7120 00cd  ld   $cd         ;02c7 DEF
              7121 00d9  ld   $d9
              7122 0021  ld   $21         ;02c9 LDW
              7123 001a  ld   $1a
              7124 002b  ld   $2b         ;02cb STW
              7125 004e  ld   $4e         ;02cb 'tmp'
              7126 0021  ld   $21         ;02cd LDW
              7127 004e  ld   $4e         ;02cd 'tmp'
              7128 00ad  ld   $ad         ;02cf PEEK
              7129 0093  ld   $93         ;02d0 INC
              712a 004e  ld   $4e         ;02d0 'tmp'
              712b 0035  ld   $35         ;02d2 BCC
              712c 003f  ld   $3f         ;02d3 EQ
              712d 00d7  ld   $d7
              712e 00cf  ld   $cf         ;02d5 CALL
              712f 0050  ld   $50         ;02d5 'PrintChar'
              7130 0090  ld   $90         ;02d7 BRA
              7131 00cb  ld   $cb
              7132 00cf  ld   $cf         ;02d9 CALL
              7133 004e  ld   $4e         ;02d9 'tmp'
              7134 002b  ld   $2b         ;02db STW
              7135 0052  ld   $52         ;02db 'PrintS'
              7136 00cd  ld   $cd         ;02dd DEF
              7137 00f1  ld   $f1
              7138 001a  ld   $1a         ;02df LD
              7139 000f  ld   $0f
              713a 008c  ld   $8c         ;02e1 XORI
              713b 0003  ld   $03
              713c 0035  ld   $35         ;02e3 BCC
              713d 0072  ld   $72         ;02e4 NE
              713e 00f0  ld   $f0
              713f 0021  ld   $21         ;02e6 LDW
              7140 0054  ld   $54         ;02e6 'PrintCharScreen'
              7141 002b  ld   $2b         ;02e8 STW
              7142 0050  ld   $50         ;02e8 'PrintChar'
              7143 00cf  ld   $cf         ;02ea CALL
              7144 0056  ld   $56         ;02ea 'Prompt'
              7145 0042  ld   $42         ;02ec 'B'
              7146 0072  ld   $72         ;02ed 'r'
              7147 0065  ld   $65         ;02ee 'e'
              7148 0061  ld   $61         ;02ef 'a'
              7149 006b  ld   $6b         ;02f0 'k'
              714a 0000  ld   $00         ;02f1 0
              714b 00ff  ld   $ff         ;02f2 RET
              714c 002b  ld   $2b         ;02f3 STW
              714d 0058  ld   $58         ;02f3 'TestBreak'
              714e 0093  ld   $93         ;02f5 INC
              714f 001b  ld   $1b
              7150 00ff  ld   $ff         ;02f7 RET
              7151 0003  ld   $03         ;| RAM segment address (high byte first)
              7152 0000  ld   $00         ;|
              7153 00f9  ld   $f9         ;| Length (1..256)
              7154 00cd  ld   $cd         ;0300 DEF
              7155 006e  ld   $6e
              7156 002b  ld   $2b         ;0302 STW
              7157 0044  ld   $44         ;0302 'k'
              7158 00e6  ld   $e6         ;0304 SUBI
              7159 0083  ld   $83
              715a 0035  ld   $35         ;0306 BCC
              715b 004d  ld   $4d         ;0307 GT
              715c 006d  ld   $6d
              715d 001a  ld   $1a         ;0309 LD
              715e 0031  ld   $31         ;0309 'Pos'+1
              715f 00e6  ld   $e6         ;030b SUBI
              7160 0078  ld   $78
              7161 0035  ld   $35         ;030d BCC
              7162 004d  ld   $4d         ;030e GT
              7163 006d  ld   $6d
              7164 001a  ld   $1a         ;0310 LD
              7165 0030  ld   $30         ;0310 'Pos'
              7166 00e6  ld   $e6         ;0312 SUBI
              7167 009a  ld   $9a
              7168 0035  ld   $35         ;0314 BCC
              7169 0056  ld   $56         ;0315 LE
              716a 0019  ld   $19
              716b 0075  ld   $75         ;0317 PUSH
              716c 00cf  ld   $cf         ;0318 CALL
              716d 005a  ld   $5a         ;0318 'Newline'
              716e 0063  ld   $63         ;031a POP
              716f 0021  ld   $21         ;031b LDW
              7170 0044  ld   $44         ;031b 'k'
              7171 00e6  ld   $e6         ;031d SUBI
              7172 0052  ld   $52
              7173 0035  ld   $35         ;031f BCC
              7174 0053  ld   $53         ;0320 GE
              7175 0029  ld   $29
              7176 00e3  ld   $e3         ;0322 ADDI
              7177 0032  ld   $32
              7178 002b  ld   $2b         ;0324 STW
              7179 0040  ld   $40         ;0324 'i'
              717a 0011  ld   $11         ;0326 LDWI
              717b 0000  ld   $00
              717c 0007  ld   $07
              717d 0090  ld   $90         ;0329 BRA
              717e 002e  ld   $2e
              717f 002b  ld   $2b         ;032b STW
              7180 0040  ld   $40         ;032b 'i'
              7181 0011  ld   $11         ;032d LDWI
              7182 0000  ld   $00
              7183 0008  ld   $08
              7184 002b  ld   $2b         ;0330 STW
              7185 0044  ld   $44         ;0330 'k'
              7186 0021  ld   $21         ;0332 LDW
              7187 0040  ld   $40         ;0332 'i'
              7188 0035  ld   $35         ;0334 BCC
              7189 0050  ld   $50         ;0335 LT
              718a 006d  ld   $6d
              718b 00e9  ld   $e9         ;0337 LSLW
              718c 00e9  ld   $e9         ;0338 LSLW
              718d 0099  ld   $99         ;0339 ADDW
              718e 0040  ld   $40         ;0339 'i'
              718f 0099  ld   $99         ;033b ADDW
              7190 0044  ld   $44         ;033b 'k'
              7191 002b  ld   $2b         ;033d STW
              7192 0044  ld   $44         ;033d 'k'
              7193 0011  ld   $11         ;033f LDWI
              7194 00e1  ld   $e1
              7195 0004  ld   $04
              7196 002b  ld   $2b         ;0342 STW
              7197 0022  ld   $22         ;0342 '_sysFn'
              7198 0021  ld   $21         ;0344 LDW
              7199 002a  ld   $2a         ;0344 '_sysArgs6'
              719a 002b  ld   $2b         ;0346 STW
              719b 0024  ld   $24         ;0346 '_sysArgs0'
              719c 0021  ld   $21         ;0348 LDW
              719d 0030  ld   $30         ;0348 'Pos'
              719e 002b  ld   $2b         ;034a STW
              719f 0028  ld   $28
              71a0 00ec  ld   $ec         ;034c STLW
              71a1 00fe  ld   $fe
              71a2 00e3  ld   $e3         ;034e ADDI
              71a3 0006  ld   $06
              71a4 002b  ld   $2b         ;0350 STW
              71a5 0030  ld   $30         ;0350 'Pos'
              71a6 0059  ld   $59         ;0352 LDI
              71a7 0005  ld   $05
              71a8 002b  ld   $2b         ;0354 STW
              71a9 0040  ld   $40         ;0354 'i'
              71aa 0021  ld   $21         ;0356 LDW
              71ab 0044  ld   $44         ;0356 'k'
              71ac 007f  ld   $7f         ;0358 LUP
              71ad 0000  ld   $00
              71ae 005e  ld   $5e         ;035a ST
              71af 0026  ld   $26
              71b0 00b4  ld   $b4         ;035c SYS
              71b1 00cc  ld   $cc
              71b2 0093  ld   $93         ;035e INC
              71b3 0044  ld   $44         ;035e 'k'
              71b4 0093  ld   $93         ;0360 INC
              71b5 0028  ld   $28
              71b6 0021  ld   $21         ;0362 LDW
              71b7 0040  ld   $40         ;0362 'i'
              71b8 00e6  ld   $e6         ;0364 SUBI
              71b9 0001  ld   $01
              71ba 0035  ld   $35         ;0366 BCC
              71bb 004d  ld   $4d         ;0367 GT
              71bc 0052  ld   $52
              71bd 005e  ld   $5e         ;0369 ST
              71be 0026  ld   $26
              71bf 00b4  ld   $b4         ;036b SYS
              71c0 00cc  ld   $cc
              71c1 00ee  ld   $ee         ;036d LDLW
              71c2 00fe  ld   $fe
              71c3 00ff  ld   $ff         ;036f RET
              71c4 002b  ld   $2b         ;0370 STW
              71c5 0050  ld   $50         ;0370 'PrintChar'
              71c6 002b  ld   $2b         ;0372 STW
              71c7 0054  ld   $54         ;0372 'PrintCharScreen'
              71c8 00cd  ld   $cd         ;0374 DEF
              71c9 00f4  ld   $f4
              71ca 0075  ld   $75         ;0376 PUSH
              71cb 002b  ld   $2b         ;0377 STW
              71cc 004e  ld   $4e         ;0377 'tmp'
              71cd 0011  ld   $11         ;0379 LDWI
              71ce 0000  ld   $00
              71cf 000b  ld   $0b
              71d0 002b  ld   $2b         ;037c STW
              71d1 0022  ld   $22         ;037c '_sysFn'
              71d2 001a  ld   $1a         ;037e LD
              71d3 0021  ld   $21
              71d4 00e6  ld   $e6         ;0380 SUBI
              71d5 0038  ld   $38
              71d6 0035  ld   $35         ;0382 BCC
              71d7 0050  ld   $50         ;0383 LT
              71d8 0087  ld   $87
              71d9 00e6  ld   $e6         ;0385 SUBI
              71da 00ff  ld   $ff
              71db 00b4  ld   $b4         ;0387 SYS
              71dc 00e7  ld   $e7
              71dd 0011  ld   $11         ;0389 LDWI
              71de 00a0  ld   $a0
              71df 001b  ld   $1b
              71e0 002b  ld   $2b         ;038c STW
              71e1 0036  ld   $36         ;038c 'Active'
              71e2 0021  ld   $21         ;038e LDW
              71e3 004e  ld   $4e         ;038e 'tmp'
              71e4 00f3  ld   $f3         ;0390 DOKE
              71e5 0036  ld   $36         ;0390 'Active'
              71e6 0059  ld   $59         ;0392 LDI
              71e7 00a2  ld   $a2
              71e8 005e  ld   $5e         ;0394 ST
              71e9 0036  ld   $36         ;0394 'Active'
              71ea 0059  ld   $59         ;0396 LDI
              71eb 007f  ld   $7f
              71ec 00cf  ld   $cf         ;0398 CALL
              71ed 0050  ld   $50         ;0398 'PrintChar'
              71ee 002b  ld   $2b         ;039a STW
              71ef 0030  ld   $30         ;039a 'Pos'
              71f0 001a  ld   $1a         ;039c LD
              71f1 000f  ld   $0f
              71f2 002b  ld   $2b         ;039e STW
              71f3 004e  ld   $4e         ;039e 'tmp'
              71f4 001a  ld   $1a         ;03a0 LD
              71f5 000f  ld   $0f
              71f6 00f0  ld   $f0         ;03a2 POKE
              71f7 0036  ld   $36         ;03a2 'Active'
              71f8 00fc  ld   $fc         ;03a4 XORW
              71f9 004e  ld   $4e         ;03a4 'tmp'
              71fa 0035  ld   $35         ;03a6 BCC
              71fb fe00  bra  ac          ;+-----------------------------------+
              71fc fcfd  bra  $71fd       ;|                                   |
              71fd 1418  ld   $18,y       ;| Trampoline for page $7100 lookups |
              71fe e006  jmp  y,$06       ;|                                   |
              71ff c218  st   [$18]       ;+-----------------------------------+
              7200 0072  ld   $72         ;03a7 NE
              7201 00ac  ld   $ac
              7202 0021  ld   $21         ;03a9 LDW
              7203 0036  ld   $36         ;03a9 'Active'
              7204 00ad  ld   $ad         ;03ab PEEK
              7205 0090  ld   $90         ;03ac BRA
              7206 009c  ld   $9c
              7207 0021  ld   $21         ;03ae LDW
              7208 0036  ld   $36         ;03ae 'Active'
              7209 00ad  ld   $ad         ;03b0 PEEK
              720a 008c  ld   $8c         ;03b1 XORI
              720b 000a  ld   $0a
              720c 0035  ld   $35         ;03b3 BCC
              720d 003f  ld   $3f         ;03b4 EQ
              720e 00ef  ld   $ef
              720f 008c  ld   $8c         ;03b6 XORI
              7210 0075  ld   $75
              7211 0035  ld   $35         ;03b8 BCC
              7212 0072  ld   $72         ;03b9 NE
              7213 00d0  ld   $d0
              7214 0059  ld   $59         ;03bb LDI
              7215 0020  ld   $20
              7216 00cf  ld   $cf         ;03bd CALL
              7217 0050  ld   $50         ;03bd 'PrintChar'
              7218 002b  ld   $2b         ;03bf STW
              7219 0030  ld   $30         ;03bf 'Pos'
              721a 001a  ld   $1a         ;03c1 LD
              721b 0030  ld   $30         ;03c1 'Pos'
              721c 00e6  ld   $e6         ;03c3 SUBI
              721d 0006  ld   $06
              721e 0035  ld   $35         ;03c5 BCC
              721f 0050  ld   $50         ;03c6 LT
              7220 00ce  ld   $ce
              7221 005e  ld   $5e         ;03c8 ST
              7222 0030  ld   $30         ;03c8 'Pos'
              7223 0021  ld   $21         ;03ca LDW
              7224 0036  ld   $36         ;03ca 'Active'
              7225 00e6  ld   $e6         ;03cc SUBI
              7226 0001  ld   $01
              7227 002b  ld   $2b         ;03ce STW
              7228 0036  ld   $36         ;03ce 'Active'
              7229 0090  ld   $90         ;03d0 BRA
              722a 0094  ld   $94
              722b 00e6  ld   $e6         ;03d2 SUBI
              722c 0060  ld   $60
              722d 0035  ld   $35         ;03d4 BCC
              722e 0053  ld   $53         ;03d5 GE
              722f 0094  ld   $94
              7230 001a  ld   $1a         ;03d7 LD
              7231 0030  ld   $30         ;03d7 'Pos'
              7232 00e6  ld   $e6         ;03d9 SUBI
              7233 0096  ld   $96
              7234 0035  ld   $35         ;03db BCC
              7235 0050  ld   $50         ;03dc LT
              7236 00e6  ld   $e6
              7237 0059  ld   $59         ;03de LDI
              7238 00a2  ld   $a2
              7239 005e  ld   $5e         ;03e0 ST
              723a 0036  ld   $36         ;03e0 'Active'
              723b 0059  ld   $59         ;03e2 LDI
              723c 005c  ld   $5c
              723d 00cf  ld   $cf         ;03e4 CALL
              723e 0050  ld   $50         ;03e4 'PrintChar'
              723f 0090  ld   $90         ;03e6 BRA
              7240 0094  ld   $94
              7241 0021  ld   $21         ;03e8 LDW
              7242 0036  ld   $36         ;03e8 'Active'
              7243 00ad  ld   $ad         ;03ea PEEK
              7244 00cf  ld   $cf         ;03eb CALL
              7245 0050  ld   $50         ;03eb 'PrintChar'
              7246 0093  ld   $93         ;03ed INC
              7247 0036  ld   $36         ;03ed 'Active'
              7248 0090  ld   $90         ;03ef BRA
              7249 0094  ld   $94
              724a 0011  ld   $11         ;03f1 LDWI
              724b 00e8  ld   $e8
              724c 0006  ld   $06
              724d 00cf  ld   $cf         ;03f4 CALL
              724e 0018  ld   $18         ;03f4 vAC
              724f 0093  ld   $93         ;03f6 INC
              7250 001b  ld   $1b
              7251 00ff  ld   $ff         ;03f8 RET
              7252 0004  ld   $04         ;| RAM segment address (high byte first)
              7253 0000  ld   $00         ;|
              7254 00f8  ld   $f8         ;| Length (1..256)
              7255 002b  ld   $2b         ;0400 STW
              7256 005c  ld   $5c         ;0400 'GetLine'
              7257 00cd  ld   $cd         ;0402 DEF
              7258 00ef  ld   $ef
              7259 00cf  ld   $cf         ;0404 CALL
              725a 0034  ld   $34         ;0404 'Spaces'
              725b 00cf  ld   $cf         ;0406 CALL
              725c 0038  ld   $38         ;0406 'Keyword'
              725d 0067  ld   $67         ;0408 'g'
              725e 006f  ld   $6f         ;0409 'o'
              725f 0074  ld   $74         ;040a 't'
              7260 006f  ld   $6f         ;040b 'o'
              7261 0000  ld   $00         ;040c 0
              7262 0035  ld   $35         ;040d BCC
              7263 003f  ld   $3f         ;040e EQ
              7264 0012  ld   $12
              7265 00cf  ld   $cf         ;0410 CALL
              7266 003a  ld   $3a         ;0410 'Expression'
              7267 00cf  ld   $cf         ;0412 CALL
              7268 005e  ld   $5e         ;0412 'GotoValue'
              7269 00cf  ld   $cf         ;0414 CALL
              726a 0038  ld   $38         ;0414 'Keyword'
              726b 0067  ld   $67         ;0416 'g'
              726c 006f  ld   $6f         ;0417 'o'
              726d 0073  ld   $73         ;0418 's'
              726e 0075  ld   $75         ;0419 'u'
              726f 0062  ld   $62         ;041a 'b'
              7270 0000  ld   $00         ;041b 0
              7271 0035  ld   $35         ;041c BCC
              7272 003f  ld   $3f         ;041d EQ
              7273 0026  ld   $26
              7274 00cf  ld   $cf         ;041f CALL
              7275 003a  ld   $3a         ;041f 'Expression'
              7276 0075  ld   $75         ;0421 PUSH
              7277 0021  ld   $21         ;0422 LDW
              7278 0036  ld   $36         ;0422 'Active'
              7279 00ec  ld   $ec         ;0424 STLW
              727a 0000  ld   $00
              727b 00cf  ld   $cf         ;0426 CALL
              727c 005e  ld   $5e         ;0426 'GotoValue'
              727d 00cf  ld   $cf         ;0428 CALL
              727e 0038  ld   $38         ;0428 'Keyword'
              727f 0072  ld   $72         ;042a 'r'
              7280 0065  ld   $65         ;042b 'e'
              7281 0074  ld   $74         ;042c 't'
              7282 0075  ld   $75         ;042d 'u'
              7283 0072  ld   $72         ;042e 'r'
              7284 006e  ld   $6e         ;042f 'n'
              7285 0000  ld   $00         ;0430 0
              7286 0035  ld   $35         ;0431 BCC
              7287 003f  ld   $3f         ;0432 EQ
              7288 003f  ld   $3f
              7289 001a  ld   $1a         ;0434 LD
              728a 001c  ld   $1c
              728b 0035  ld   $35         ;0436 BCC
              728c 0072  ld   $72         ;0437 NE
              728d 0039  ld   $39
              728e 00cf  ld   $cf         ;0439 CALL
              728f 0060  ld   $60         ;0439 'StackError'
              7290 00f6  ld   $f6         ;043b DEEK
              7291 002b  ld   $2b         ;043c STW
              7292 0036  ld   $36         ;043c 'Active'
              7293 0063  ld   $63         ;043e POP
              7294 00cf  ld   $cf         ;043f CALL
              7295 0062  ld   $62         ;043f 'EndOfLine'
              7296 00cf  ld   $cf         ;0441 CALL
              7297 0038  ld   $38         ;0441 'Keyword'
              7298 0069  ld   $69         ;0443 'i'
              7299 0066  ld   $66         ;0444 'f'
              729a 0000  ld   $00         ;0445 0
              729b 0035  ld   $35         ;0446 BCC
              729c 003f  ld   $3f         ;0447 EQ
              729d 0096  ld   $96
              729e 00cf  ld   $cf         ;0449 CALL
              729f 003a  ld   $3a         ;0449 'Expression'
              72a0 00df  ld   $df         ;044b ALLOC
              72a1 00fc  ld   $fc
              72a2 00ec  ld   $ec         ;044d STLW
              72a3 0002  ld   $02
              72a4 00cf  ld   $cf         ;044f CALL
              72a5 0064  ld   $64         ;044f 'RelOp'
              72a6 0035  ld   $35         ;0451 BCC
              72a7 0072  ld   $72         ;0452 NE
              72a8 0054  ld   $54
              72a9 00cf  ld   $cf         ;0454 CALL
              72aa 004a  ld   $4a         ;0454 'SyntaxError'
              72ab 00ec  ld   $ec         ;0456 STLW
              72ac 0000  ld   $00
              72ad 00cf  ld   $cf         ;0458 CALL
              72ae 003a  ld   $3a         ;0458 'Expression'
              72af 00cf  ld   $cf         ;045a CALL
              72b0 0038  ld   $38         ;045a 'Keyword'
              72b1 0074  ld   $74         ;045c 't'
              72b2 0068  ld   $68         ;045d 'h'
              72b3 0065  ld   $65         ;045e 'e'
              72b4 006e  ld   $6e         ;045f 'n'
              72b5 0000  ld   $00         ;0460 0
              72b6 00ee  ld   $ee         ;0461 LDLW
              72b7 0002  ld   $02
              72b8 00fc  ld   $fc         ;0463 XORW
              72b9 003c  ld   $3c         ;0463 'Value'
              72ba 0035  ld   $35         ;0465 BCC
              72bb 0053  ld   $53         ;0466 GE
              72bc 006a  ld   $6a
              72bd 00ee  ld   $ee         ;0468 LDLW
              72be 0002  ld   $02
              72bf 0090  ld   $90         ;046a BRA
              72c0 006e  ld   $6e
              72c1 00ee  ld   $ee         ;046c LDLW
              72c2 0002  ld   $02
              72c3 00b8  ld   $b8         ;046e SUBW
              72c4 003c  ld   $3c         ;046e 'Value'
              72c5 0035  ld   $35         ;0470 BCC
              72c6 0056  ld   $56         ;0471 LE
              72c7 0073  ld   $73
              72c8 0059  ld   $59         ;0473 LDI
              72c9 0004  ld   $04
              72ca 0035  ld   $35         ;0475 BCC
              72cb 0053  ld   $53         ;0476 GE
              72cc 0078  ld   $78
              72cd 0059  ld   $59         ;0478 LDI
              72ce 0001  ld   $01
              72cf 0035  ld   $35         ;047a BCC
              72d0 0072  ld   $72         ;047b NE
              72d1 007d  ld   $7d
              72d2 0059  ld   $59         ;047d LDI
              72d3 0002  ld   $02
              72d4 002b  ld   $2b         ;047f STW
              72d5 0040  ld   $40         ;047f 'i'
              72d6 00ee  ld   $ee         ;0481 LDLW
              72d7 0000  ld   $00
              72d8 00f8  ld   $f8         ;0483 ANDW
              72d9 0040  ld   $40         ;0483 'i'
              72da 00df  ld   $df         ;0485 ALLOC
              72db 0004  ld   $04
              72dc 0035  ld   $35         ;0487 BCC
              72dd 003f  ld   $3f         ;0488 EQ
              72de 008a  ld   $8a
              72df 00cf  ld   $cf         ;048a CALL
              72e0 0066  ld   $66         ;048a 'Statements'
              72e1 0021  ld   $21         ;048c LDW
              72e2 0036  ld   $36         ;048c 'Active'
              72e3 00ad  ld   $ad         ;048e PEEK
              72e4 0035  ld   $35         ;048f BCC
              72e5 003f  ld   $3f         ;0490 EQ
              72e6 0094  ld   $94
              72e7 0093  ld   $93         ;0492 INC
              72e8 0036  ld   $36         ;0492 'Active'
              72e9 0090  ld   $90         ;0494 BRA
              72ea 008a  ld   $8a
              72eb 00cf  ld   $cf         ;0496 CALL
              72ec 0062  ld   $62         ;0496 'EndOfLine'
              72ed 00cf  ld   $cf         ;0498 CALL
              72ee 0038  ld   $38         ;0498 'Keyword'
              72ef 0070  ld   $70         ;049a 'p'
              72f0 006f  ld   $6f         ;049b 'o'
              72f1 006b  ld   $6b         ;049c 'k'
              72f2 0065  ld   $65         ;049d 'e'
              72f3 0000  ld   $00         ;049e 0
              72f4 0035  ld   $35         ;049f BCC
              72f5 003f  ld   $3f         ;04a0 EQ
              72f6 00b3  ld   $b3
              72f7 00cf  ld   $cf         ;04a2 CALL
              72f8 003a  ld   $3a         ;04a2 'Expression'
              72f9 002b  ld   $2b         ;04a4 STW
              72fa 0068  ld   $68         ;04a4 'Address'
              72fb fe00  bra  ac          ;+-----------------------------------+
              72fc fcfd  bra  $72fd       ;|                                   |
              72fd 1418  ld   $18,y       ;| Trampoline for page $7200 lookups |
              72fe e006  jmp  y,$06       ;|                                   |
              72ff c218  st   [$18]       ;+-----------------------------------+
              7300 00cf  ld   $cf         ;04a6 CALL
              7301 0038  ld   $38         ;04a6 'Keyword'
              7302 002c  ld   $2c         ;04a8 ','
              7303 0000  ld   $00         ;04a9 0
              7304 0035  ld   $35         ;04aa BCC
              7305 0072  ld   $72         ;04ab NE
              7306 00ad  ld   $ad
              7307 00cf  ld   $cf         ;04ad CALL
              7308 004a  ld   $4a         ;04ad 'SyntaxError'
              7309 00cf  ld   $cf         ;04af CALL
              730a 003a  ld   $3a         ;04af 'Expression'
              730b 00f0  ld   $f0         ;04b1 POKE
              730c 0068  ld   $68         ;04b1 'Address'
              730d 00cf  ld   $cf         ;04b3 CALL
              730e 0062  ld   $62         ;04b3 'EndOfLine'
              730f 00cf  ld   $cf         ;04b5 CALL
              7310 0038  ld   $38         ;04b5 'Keyword'
              7311 0027  ld   $27         ;04b7 "'"
              7312 0000  ld   $00         ;04b8 0
              7313 0035  ld   $35         ;04b9 BCC
              7314 0072  ld   $72         ;04ba NE
              7315 00c0  ld   $c0
              7316 00cf  ld   $cf         ;04bc CALL
              7317 0038  ld   $38         ;04bc 'Keyword'
              7318 0072  ld   $72         ;04be 'r'
              7319 0065  ld   $65         ;04bf 'e'
              731a 006d  ld   $6d         ;04c0 'm'
              731b 0000  ld   $00         ;04c1 0
              731c 0035  ld   $35         ;04c2 BCC
              731d 003f  ld   $3f         ;04c3 EQ
              731e 00cf  ld   $cf
              731f 0021  ld   $21         ;04c5 LDW
              7320 0036  ld   $36         ;04c5 'Active'
              7321 00ad  ld   $ad         ;04c7 PEEK
              7322 0035  ld   $35         ;04c8 BCC
              7323 003f  ld   $3f         ;04c9 EQ
              7324 00cd  ld   $cd
              7325 0093  ld   $93         ;04cb INC
              7326 0036  ld   $36         ;04cb 'Active'
              7327 0090  ld   $90         ;04cd BRA
              7328 00c3  ld   $c3
              7329 00cf  ld   $cf         ;04cf CALL
              732a 0062  ld   $62         ;04cf 'EndOfLine'
              732b 00cf  ld   $cf         ;04d1 CALL
              732c 0038  ld   $38         ;04d1 'Keyword'
              732d 006c  ld   $6c         ;04d3 'l'
              732e 0069  ld   $69         ;04d4 'i'
              732f 006e  ld   $6e         ;04d5 'n'
              7330 0065  ld   $65         ;04d6 'e'
              7331 0000  ld   $00         ;04d7 0
              7332 0035  ld   $35         ;04d8 BCC
              7333 003f  ld   $3f         ;04d9 EQ
              7334 00de  ld   $de
              7335 0011  ld   $11         ;04db LDWI
              7336 00a0  ld   $a0
              7337 0019  ld   $19
              7338 00cf  ld   $cf         ;04de CALL
              7339 0018  ld   $18         ;04de vAC
              733a 00cf  ld   $cf         ;04e0 CALL
              733b 0038  ld   $38         ;04e0 'Keyword'
              733c 0065  ld   $65         ;04e2 'e'
              733d 006e  ld   $6e         ;04e3 'n'
              733e 0064  ld   $64         ;04e4 'd'
              733f 0000  ld   $00         ;04e5 0
              7340 0035  ld   $35         ;04e6 BCC
              7341 003f  ld   $3f         ;04e7 EQ
              7342 00ea  ld   $ea
              7343 00cf  ld   $cf         ;04e9 CALL
              7344 0056  ld   $56         ;04e9 'Prompt'
              7345 0000  ld   $00         ;04eb 0
              7346 0011  ld   $11         ;04ec LDWI
              7347 0000  ld   $00
              7348 0005  ld   $05
              7349 00cf  ld   $cf         ;04ef CALL
              734a 0018  ld   $18         ;04ef vAC
              734b 002b  ld   $2b         ;04f1 STW
              734c 0066  ld   $66         ;04f1 'Statements'
              734d 0093  ld   $93         ;04f3 INC
              734e 001b  ld   $1b
              734f 0093  ld   $93         ;04f5 INC
              7350 001b  ld   $1b
              7351 00ff  ld   $ff         ;04f7 RET
              7352 0005  ld   $05         ;| RAM segment address (high byte first)
              7353 0000  ld   $00         ;|
              7354 0000  ld   $00         ;| Length (1..256)
              7355 00cf  ld   $cf         ;0500 CALL
              7356 0038  ld   $38         ;0500 'Keyword'
              7357 006e  ld   $6e         ;0502 'n'
              7358 0065  ld   $65         ;0503 'e'
              7359 0078  ld   $78         ;0504 'x'
              735a 0074  ld   $74         ;0505 't'
              735b 0000  ld   $00         ;0506 0
              735c 0035  ld   $35         ;0507 BCC
              735d 003f  ld   $3f         ;0508 EQ
              735e 0037  ld   $37
              735f 00cf  ld   $cf         ;050a CALL
              7360 0042  ld   $42         ;050a 'Variable'
              7361 002b  ld   $2b         ;050c STW
              7362 0068  ld   $68         ;050c 'Address'
              7363 0075  ld   $75         ;050e PUSH
              7364 0021  ld   $21         ;050f LDW
              7365 0036  ld   $36         ;050f 'Active'
              7366 00ec  ld   $ec         ;0511 STLW
              7367 0000  ld   $00
              7368 0011  ld   $11         ;0513 LDWI
              7369 0000  ld   $00
              736a 00ff  ld   $ff
              736b 0099  ld   $99         ;0516 ADDW
              736c 0068  ld   $68         ;0516 'Address'
              736d 00f6  ld   $f6         ;0518 DEEK
              736e 0035  ld   $35         ;0519 BCC
              736f 0072  ld   $72         ;051a NE
              7370 001c  ld   $1c
              7371 00cf  ld   $cf         ;051c CALL
              7372 0046  ld   $46         ;051c 'ValueError'
              7373 002b  ld   $2b         ;051e STW
              7374 0036  ld   $36         ;051e 'Active'
              7375 00cf  ld   $cf         ;0520 CALL
              7376 003a  ld   $3a         ;0520 'Expression'
              7377 0021  ld   $21         ;0522 LDW
              7378 0068  ld   $68         ;0522 'Address'
              7379 00f6  ld   $f6         ;0524 DEEK
              737a 00e3  ld   $e3         ;0525 ADDI
              737b 0001  ld   $01
              737c 00f3  ld   $f3         ;0527 DOKE
              737d 0068  ld   $68         ;0527 'Address'
              737e 00b8  ld   $b8         ;0529 SUBW
              737f 003c  ld   $3c         ;0529 'Value'
              7380 0035  ld   $35         ;052b BCC
              7381 0056  ld   $56         ;052c LE
              7382 0032  ld   $32
              7383 00ee  ld   $ee         ;052e LDLW
              7384 0000  ld   $00
              7385 002b  ld   $2b         ;0530 STW
              7386 0036  ld   $36         ;0530 'Active'
              7387 00cf  ld   $cf         ;0532 CALL
              7388 0034  ld   $34         ;0532 'Spaces'
              7389 0063  ld   $63         ;0534 POP
              738a 00cf  ld   $cf         ;0535 CALL
              738b 0058  ld   $58         ;0535 'TestBreak'
              738c 00cf  ld   $cf         ;0537 CALL
              738d 0062  ld   $62         ;0537 'EndOfLine'
              738e 00cf  ld   $cf         ;0539 CALL
              738f 0038  ld   $38         ;0539 'Keyword'
              7390 0066  ld   $66         ;053b 'f'
              7391 006f  ld   $6f         ;053c 'o'
              7392 0072  ld   $72         ;053d 'r'
              7393 0000  ld   $00         ;053e 0
              7394 0035  ld   $35         ;053f BCC
              7395 003f  ld   $3f         ;0540 EQ
              7396 006c  ld   $6c
              7397 00cf  ld   $cf         ;0542 CALL
              7398 0042  ld   $42         ;0542 'Variable'
              7399 002b  ld   $2b         ;0544 STW
              739a 0068  ld   $68         ;0544 'Address'
              739b 00cf  ld   $cf         ;0546 CALL
              739c 0034  ld   $34         ;0546 'Spaces'
              739d 00cf  ld   $cf         ;0548 CALL
              739e 0038  ld   $38         ;0548 'Keyword'
              739f 003d  ld   $3d         ;054a '='
              73a0 0000  ld   $00         ;054b 0
              73a1 0035  ld   $35         ;054c BCC
              73a2 0072  ld   $72         ;054d NE
              73a3 004f  ld   $4f
              73a4 00cf  ld   $cf         ;054f CALL
              73a5 004a  ld   $4a         ;054f 'SyntaxError'
              73a6 00cf  ld   $cf         ;0551 CALL
              73a7 003a  ld   $3a         ;0551 'Expression'
              73a8 00f3  ld   $f3         ;0553 DOKE
              73a9 0068  ld   $68         ;0553 'Address'
              73aa 00cf  ld   $cf         ;0555 CALL
              73ab 0038  ld   $38         ;0555 'Keyword'
              73ac 0074  ld   $74         ;0557 't'
              73ad 006f  ld   $6f         ;0558 'o'
              73ae 0000  ld   $00         ;0559 0
              73af 0035  ld   $35         ;055a BCC
              73b0 0072  ld   $72         ;055b NE
              73b1 005d  ld   $5d
              73b2 00cf  ld   $cf         ;055d CALL
              73b3 004a  ld   $4a         ;055d 'SyntaxError'
              73b4 0011  ld   $11         ;055f LDWI
              73b5 0000  ld   $00
              73b6 00ff  ld   $ff
              73b7 0099  ld   $99         ;0562 ADDW
              73b8 0068  ld   $68         ;0562 'Address'
              73b9 002b  ld   $2b         ;0564 STW
              73ba 006a  ld   $6a         ;0564 'j'
              73bb 0021  ld   $21         ;0566 LDW
              73bc 0036  ld   $36         ;0566 'Active'
              73bd 00f3  ld   $f3         ;0568 DOKE
              73be 006a  ld   $6a         ;0568 'j'
              73bf 00cf  ld   $cf         ;056a CALL
              73c0 003a  ld   $3a         ;056a 'Expression'
              73c1 00cf  ld   $cf         ;056c CALL
              73c2 0062  ld   $62         ;056c 'EndOfLine'
              73c3 00cf  ld   $cf         ;056e CALL
              73c4 0038  ld   $38         ;056e 'Keyword'
              73c5 0061  ld   $61         ;0570 'a'
              73c6 0074  ld   $74         ;0571 't'
              73c7 0000  ld   $00         ;0572 0
              73c8 0035  ld   $35         ;0573 BCC
              73c9 003f  ld   $3f         ;0574 EQ
              73ca 009a  ld   $9a
              73cb 00cf  ld   $cf         ;0576 CALL
              73cc 003a  ld   $3a         ;0576 'Expression'
              73cd 0035  ld   $35         ;0578 BCC
              73ce 0053  ld   $53         ;0579 GE
              73cf 007b  ld   $7b
              73d0 00cf  ld   $cf         ;057b CALL
              73d1 0046  ld   $46         ;057b 'ValueError'
              73d2 005e  ld   $5e         ;057d ST
              73d3 0030  ld   $30         ;057d 'Pos'
              73d4 00cf  ld   $cf         ;057f CALL
              73d5 0038  ld   $38         ;057f 'Keyword'
              73d6 002c  ld   $2c         ;0581 ','
              73d7 0000  ld   $00         ;0582 0
              73d8 0035  ld   $35         ;0583 BCC
              73d9 003f  ld   $3f         ;0584 EQ
              73da 0098  ld   $98
              73db 00cf  ld   $cf         ;0586 CALL
              73dc 003a  ld   $3a         ;0586 'Expression'
              73dd 0035  ld   $35         ;0588 BCC
              73de 0053  ld   $53         ;0589 GE
              73df 008b  ld   $8b
              73e0 00cf  ld   $cf         ;058b CALL
              73e1 0046  ld   $46         ;058b 'ValueError'
              73e2 00e6  ld   $e6         ;058d SUBI
              73e3 0078  ld   $78
              73e4 0035  ld   $35         ;058f BCC
              73e5 0050  ld   $50         ;0590 LT
              73e6 0092  ld   $92
              73e7 00cf  ld   $cf         ;0592 CALL
              73e8 0046  ld   $46         ;0592 'ValueError'
              73e9 00e3  ld   $e3         ;0594 ADDI
              73ea 00f8  ld   $f8
              73eb 00e9  ld   $e9         ;0596 LSLW
              73ec 00ad  ld   $ad         ;0597 PEEK
              73ed 005e  ld   $5e         ;0598 ST
              73ee 0031  ld   $31         ;0598 'Pos'+1
              73ef 00cf  ld   $cf         ;059a CALL
              73f0 0062  ld   $62         ;059a 'EndOfLine'
              73f1 00cf  ld   $cf         ;059c CALL
              73f2 0038  ld   $38         ;059c 'Keyword'
              73f3 0070  ld   $70         ;059e 'p'
              73f4 0075  ld   $75         ;059f 'u'
              73f5 0074  ld   $74         ;05a0 't'
              73f6 0000  ld   $00         ;05a1 0
              73f7 0035  ld   $35         ;05a2 BCC
              73f8 003f  ld   $3f         ;05a3 EQ
              73f9 00a9  ld   $a9
              73fa 00cf  ld   $cf         ;05a5 CALL
              73fb fe00  bra  ac          ;+-----------------------------------+
              73fc fcfd  bra  $73fd       ;|                                   |
              73fd 1418  ld   $18,y       ;| Trampoline for page $7300 lookups |
              73fe e006  jmp  y,$06       ;|                                   |
              73ff c218  st   [$18]       ;+-----------------------------------+
              7400 003a  ld   $3a         ;05a5 'Expression'
              7401 00cf  ld   $cf         ;05a7 CALL
              7402 0050  ld   $50         ;05a7 'PrintChar'
              7403 00cf  ld   $cf         ;05a9 CALL
              7404 0062  ld   $62         ;05a9 'EndOfLine'
              7405 00cf  ld   $cf         ;05ab CALL
              7406 0038  ld   $38         ;05ab 'Keyword'
              7407 006d  ld   $6d         ;05ad 'm'
              7408 006f  ld   $6f         ;05ae 'o'
              7409 0064  ld   $64         ;05af 'd'
              740a 0065  ld   $65         ;05b0 'e'
              740b 0000  ld   $00         ;05b1 0
              740c 0035  ld   $35         ;05b2 BCC
              740d 003f  ld   $3f         ;05b3 EQ
              740e 00c7  ld   $c7
              740f 00cf  ld   $cf         ;05b5 CALL
              7410 003a  ld   $3a         ;05b5 'Expression'
              7411 001a  ld   $1a         ;05b7 LD
              7412 0021  ld   $21
              7413 00e6  ld   $e6         ;05b9 SUBI
              7414 0020  ld   $20
              7415 0035  ld   $35         ;05bb BCC
              7416 0050  ld   $50         ;05bc LT
              7417 00c5  ld   $c5
              7418 0011  ld   $11         ;05be LDWI
              7419 0000  ld   $00
              741a 000b  ld   $0b
              741b 002b  ld   $2b         ;05c1 STW
              741c 0022  ld   $22         ;05c1 '_sysFn'
              741d 0021  ld   $21         ;05c3 LDW
              741e 003c  ld   $3c         ;05c3 'Value'
              741f 00b4  ld   $b4         ;05c5 SYS
              7420 00e7  ld   $e7
              7421 00cf  ld   $cf         ;05c7 CALL
              7422 0062  ld   $62         ;05c7 'EndOfLine'
              7423 0011  ld   $11         ;05c9 LDWI
              7424 00a0  ld   $a0
              7425 0014  ld   $14
              7426 00cf  ld   $cf         ;05cc CALL
              7427 0018  ld   $18         ;05cc vAC
              7428 0059  ld   $59         ;05ce LDI
              7429 0000  ld   $00
              742a 002b  ld   $2b         ;05d0 STW
              742b 003c  ld   $3c         ;05d0 'Value'
              742c 00e9  ld   $e9         ;05d2 LSLW
              742d 00e9  ld   $e9         ;05d3 LSLW
              742e 00e9  ld   $e9         ;05d4 LSLW
              742f 00e9  ld   $e9         ;05d5 LSLW
              7430 002b  ld   $2b         ;05d6 STW
              7431 0040  ld   $40         ;05d6 'i'
              7432 0093  ld   $93         ;05d8 INC
              7433 0036  ld   $36         ;05d8 'Active'
              7434 0021  ld   $21         ;05da LDW
              7435 0036  ld   $36         ;05da 'Active'
              7436 00ad  ld   $ad         ;05dc PEEK
              7437 00e6  ld   $e6         ;05dd SUBI
              7438 0030  ld   $30
              7439 0035  ld   $35         ;05df BCC
              743a 0050  ld   $50         ;05e0 LT
              743b 00fd  ld   $fd
              743c 00e6  ld   $e6         ;05e2 SUBI
              743d 000a  ld   $0a
              743e 0035  ld   $35         ;05e4 BCC
              743f 0053  ld   $53         ;05e5 GE
              7440 00eb  ld   $eb
              7441 00e3  ld   $e3         ;05e7 ADDI
              7442 000a  ld   $0a
              7443 0099  ld   $99         ;05e9 ADDW
              7444 0040  ld   $40         ;05e9 'i'
              7445 0090  ld   $90         ;05eb BRA
              7446 00ce  ld   $ce
              7447 0082  ld   $82         ;05ed ANDI
              7448 00df  ld   $df
              7449 00e6  ld   $e6         ;05ef SUBI
              744a 0007  ld   $07
              744b 0035  ld   $35         ;05f1 BCC
              744c 0050  ld   $50         ;05f2 LT
              744d 00fd  ld   $fd
              744e 00e6  ld   $e6         ;05f4 SUBI
              744f 0006  ld   $06
              7450 0035  ld   $35         ;05f6 BCC
              7451 0053  ld   $53         ;05f7 GE
              7452 00fd  ld   $fd
              7453 00e3  ld   $e3         ;05f9 ADDI
              7454 0010  ld   $10
              7455 0099  ld   $99         ;05fb ADDW
              7456 0040  ld   $40         ;05fb 'i'
              7457 0090  ld   $90         ;05fd BRA
              7458 00ce  ld   $ce
              7459 00ff  ld   $ff         ;05ff RET
              745a 0006  ld   $06         ;| RAM segment address (high byte first)
              745b 0000  ld   $00         ;|
              745c 00fd  ld   $fd         ;| Length (1..256)
              745d 00cd  ld   $cd         ;0600 DEF
              745e 00bb  ld   $bb
              745f 0075  ld   $75         ;0602 PUSH
              7460 00cf  ld   $cf         ;0603 CALL
              7461 0032  ld   $32         ;0603 'Number'
              7462 0035  ld   $35         ;0605 BCC
              7463 0056  ld   $56         ;0606 LE
              7464 00b9  ld   $b9
              7465 0021  ld   $21         ;0608 LDW
              7466 0048  ld   $48         ;0608 'End'
              7467 002b  ld   $2b         ;060a STW
              7468 0040  ld   $40         ;060a 'i'
              7469 002b  ld   $2b         ;060c STW
              746a 006a  ld   $6a         ;060c 'j'
              746b 00fc  ld   $fc         ;060e XORW
              746c 006c  ld   $6c         ;060e 'Begin'
              746d 0035  ld   $35         ;0610 BCC
              746e 003f  ld   $3f         ;0611 EQ
              746f 0016  ld   $16
              7470 0021  ld   $21         ;0613 LDW
              7471 0048  ld   $48         ;0613 'End'
              7472 00cf  ld   $cf         ;0615 CALL
              7473 006e  ld   $6e         ;0615 'PrevBlock'
              7474 00f6  ld   $f6         ;0617 DEEK
              7475 00b8  ld   $b8         ;0618 SUBW
              7476 003c  ld   $3c         ;0618 'Value'
              7477 0035  ld   $35         ;061a BCC
              7478 0050  ld   $50         ;061b LT
              7479 005a  ld   $5a
              747a 0021  ld   $21         ;061d LDW
              747b 006c  ld   $6c         ;061d 'Begin'
              747c 002b  ld   $2b         ;061f STW
              747d 0040  ld   $40         ;061f 'i'
              747e 0021  ld   $21         ;0621 LDW
              747f 0040  ld   $40         ;0621 'i'
              7480 00f6  ld   $f6         ;0623 DEEK
              7481 00b8  ld   $b8         ;0624 SUBW
              7482 003c  ld   $3c         ;0624 'Value'
              7483 0035  ld   $35         ;0626 BCC
              7484 0053  ld   $53         ;0627 GE
              7485 002d  ld   $2d
              7486 0021  ld   $21         ;0629 LDW
              7487 0040  ld   $40         ;0629 'i'
              7488 00cf  ld   $cf         ;062b CALL
              7489 0070  ld   $70         ;062b 'NextBlock'
              748a 0090  ld   $90         ;062d BRA
              748b 001d  ld   $1d
              748c 0035  ld   $35         ;062f BCC
              748d 0056  ld   $56         ;0630 LE
              748e 005a  ld   $5a
              748f 0021  ld   $21         ;0632 LDW
              7490 0000  ld   $00
              7491 00fc  ld   $fc         ;0634 XORW
              7492 0048  ld   $48         ;0634 'End'
              7493 0035  ld   $35         ;0636 BCC
              7494 003f  ld   $3f         ;0637 EQ
              7495 0058  ld   $58
              7496 0021  ld   $21         ;0639 LDW
              7497 006a  ld   $6a         ;0639 'j'
              7498 002b  ld   $2b         ;063b STW
              7499 0044  ld   $44         ;063b 'k'
              749a 00cf  ld   $cf         ;063d CALL
              749b 006e  ld   $6e         ;063d 'PrevBlock'
              749c 002b  ld   $2b         ;063f STW
              749d 006a  ld   $6a         ;063f 'j'
              749e 002b  ld   $2b         ;0641 STW
              749f 004e  ld   $4e         ;0641 'tmp'
              74a0 0021  ld   $21         ;0643 LDW
              74a1 004e  ld   $4e         ;0643 'tmp'
              74a2 00ad  ld   $ad         ;0645 PEEK
              74a3 00f0  ld   $f0         ;0646 POKE
              74a4 0044  ld   $44         ;0646 'k'
              74a5 0093  ld   $93         ;0648 INC
              74a6 004e  ld   $4e         ;0648 'tmp'
              74a7 0093  ld   $93         ;064a INC
              74a8 0044  ld   $44         ;064a 'k'
              74a9 0021  ld   $21         ;064c LDW
              74aa 004e  ld   $4e         ;064c 'tmp'
              74ab 0082  ld   $82         ;064e ANDI
              74ac 001f  ld   $1f
              74ad 0035  ld   $35         ;0650 BCC
              74ae 0072  ld   $72         ;0651 NE
              74af 0041  ld   $41
              74b0 0021  ld   $21         ;0653 LDW
              74b1 006a  ld   $6a         ;0653 'j'
              74b2 00fc  ld   $fc         ;0655 XORW
              74b3 0040  ld   $40         ;0655 'i'
              74b4 0035  ld   $35         ;0657 BCC
              74b5 0072  ld   $72         ;0658 NE
              74b6 0037  ld   $37
              74b7 0059  ld   $59         ;065a LDI
              74b8 0001  ld   $01
              74b9 0035  ld   $35         ;065c BCC
              74ba 003f  ld   $3f         ;065d EQ
              74bb 0070  ld   $70
              74bc 0021  ld   $21         ;065f LDW
              74bd 0000  ld   $00
              74be 00e6  ld   $e6         ;0661 SUBI
              74bf 0080  ld   $80
              74c0 00e6  ld   $e6         ;0663 SUBI
              74c1 00c0  ld   $c0
              74c2 00fc  ld   $fc         ;0665 XORW
              74c3 0048  ld   $48         ;0665 'End'
              74c4 0035  ld   $35         ;0667 BCC
              74c5 0072  ld   $72         ;0668 NE
              74c6 006a  ld   $6a
              74c7 00cf  ld   $cf         ;066a CALL
              74c8 004a  ld   $4a         ;066a 'SyntaxError'
              74c9 0021  ld   $21         ;066c LDW
              74ca 0048  ld   $48         ;066c 'End'
              74cb 00cf  ld   $cf         ;066e CALL
              74cc 0070  ld   $70         ;066e 'NextBlock'
              74cd 002b  ld   $2b         ;0670 STW
              74ce 0048  ld   $48         ;0670 'End'
              74cf 0021  ld   $21         ;0672 LDW
              74d0 0036  ld   $36         ;0672 'Active'
              74d1 00ad  ld   $ad         ;0674 PEEK
              74d2 0035  ld   $35         ;0675 BCC
              74d3 003f  ld   $3f         ;0676 EQ
              74d4 008a  ld   $8a
              74d5 0021  ld   $21         ;0678 LDW
              74d6 003c  ld   $3c         ;0678 'Value'
              74d7 00f3  ld   $f3         ;067a DOKE
              74d8 0040  ld   $40         ;067a 'i'
              74d9 0093  ld   $93         ;067c INC
              74da 0040  ld   $40         ;067c 'i'
              74db 0093  ld   $93         ;067e INC
              74dc 0040  ld   $40         ;067e 'i'
              74dd 0021  ld   $21         ;0680 LDW
              74de 0036  ld   $36         ;0680 'Active'
              74df 00ad  ld   $ad         ;0682 PEEK
              74e0 0093  ld   $93         ;0683 INC
              74e1 0036  ld   $36         ;0683 'Active'
              74e2 00f0  ld   $f0         ;0685 POKE
              74e3 0040  ld   $40         ;0685 'i'
              74e4 0035  ld   $35         ;0687 BCC
              74e5 0072  ld   $72         ;0688 NE
              74e6 007c  ld   $7c
              74e7 0090  ld   $90         ;068a BRA
              74e8 00b7  ld   $b7
              74e9 0021  ld   $21         ;068c LDW
              74ea 0040  ld   $40         ;068c 'i'
              74eb 002b  ld   $2b         ;068e STW
              74ec 006a  ld   $6a         ;068e 'j'
              74ed 00fc  ld   $fc         ;0690 XORW
              74ee 0048  ld   $48         ;0690 'End'
              74ef 0035  ld   $35         ;0692 BCC
              74f0 003f  ld   $3f         ;0693 EQ
              74f1 00b1  ld   $b1
              74f2 0021  ld   $21         ;0695 LDW
              74f3 006a  ld   $6a         ;0695 'j'
              74f4 00cf  ld   $cf         ;0697 CALL
              74f5 0070  ld   $70         ;0697 'NextBlock'
              74f6 002b  ld   $2b         ;0699 STW
              74f7 006a  ld   $6a         ;0699 'j'
              74f8 002b  ld   $2b         ;069b STW
              74f9 004e  ld   $4e         ;069b 'tmp'
              74fa 0021  ld   $21         ;069d LDW
              74fb fe00  bra  ac          ;+-----------------------------------+
              74fc fcfd  bra  $74fd       ;|                                   |
              74fd 1418  ld   $18,y       ;| Trampoline for page $7400 lookups |
              74fe e006  jmp  y,$06       ;|                                   |
              74ff c218  st   [$18]       ;+-----------------------------------+
              7500 004e  ld   $4e         ;069d 'tmp'
              7501 00ad  ld   $ad         ;069f PEEK
              7502 00f0  ld   $f0         ;06a0 POKE
              7503 0040  ld   $40         ;06a0 'i'
              7504 0093  ld   $93         ;06a2 INC
              7505 004e  ld   $4e         ;06a2 'tmp'
              7506 0093  ld   $93         ;06a4 INC
              7507 0040  ld   $40         ;06a4 'i'
              7508 0021  ld   $21         ;06a6 LDW
              7509 004e  ld   $4e         ;06a6 'tmp'
              750a 0082  ld   $82         ;06a8 ANDI
              750b 001f  ld   $1f
              750c 0035  ld   $35         ;06aa BCC
              750d 0072  ld   $72         ;06ab NE
              750e 009b  ld   $9b
              750f 0021  ld   $21         ;06ad LDW
              7510 006a  ld   $6a         ;06ad 'j'
              7511 002b  ld   $2b         ;06af STW
              7512 0040  ld   $40         ;06af 'i'
              7513 0090  ld   $90         ;06b1 BRA
              7514 008e  ld   $8e
              7515 0021  ld   $21         ;06b3 LDW
              7516 0048  ld   $48         ;06b3 'End'
              7517 00cf  ld   $cf         ;06b5 CALL
              7518 006e  ld   $6e         ;06b5 'PrevBlock'
              7519 002b  ld   $2b         ;06b7 STW
              751a 0048  ld   $48         ;06b7 'End'
              751b 0021  ld   $21         ;06b9 LDW
              751c 003c  ld   $3c         ;06b9 'Value'
              751d 0063  ld   $63         ;06bb POP
              751e 00ff  ld   $ff         ;06bc RET
              751f 002b  ld   $2b         ;06bd STW
              7520 0072  ld   $72         ;06bd 'Insert'
              7521 0011  ld   $11         ;06bf LDWI
              7522 003f  ld   $3f
              7523 0035  ld   $35
              7524 002b  ld   $2b         ;06c2 STW
              7525 002a  ld   $2a
              7526 0011  ld   $11         ;06c4 LDWI
              7527 00a0  ld   $a0
              7528 0018  ld   $18
              7529 002b  ld   $2b         ;06c7 STW
              752a 005a  ld   $5a         ;06c7 'Newline'
              752b 00cf  ld   $cf         ;06c9 CALL
              752c 0018  ld   $18         ;06c9 vAC
              752d 00cf  ld   $cf         ;06cb CALL
              752e 0052  ld   $52         ;06cb 'PrintS'
              752f 002a  ld   $2a         ;06cd '*'
              7530 002a  ld   $2a         ;06ce '*'
              7531 002a  ld   $2a         ;06cf '*'
              7532 0020  ld   $20         ;06d0 ' '
              7533 0054  ld   $54         ;06d1 'T'
              7534 0069  ld   $69         ;06d2 'i'
              7535 006e  ld   $6e         ;06d3 'n'
              7536 0079  ld   $79         ;06d4 'y'
              7537 0020  ld   $20         ;06d5 ' '
              7538 0042  ld   $42         ;06d6 'B'
              7539 0041  ld   $41         ;06d7 'A'
              753a 0053  ld   $53         ;06d8 'S'
              753b 0049  ld   $49         ;06d9 'I'
              753c 0043  ld   $43         ;06da 'C'
              753d 0020  ld   $20         ;06db ' '
              753e 0044  ld   $44         ;06dc 'D'
              753f 0045  ld   $45         ;06dd 'E'
              7540 0056  ld   $56         ;06de 'V'
              7541 0000  ld   $00         ;06df 0
              7542 00cf  ld   $cf         ;06e0 CALL
              7543 005a  ld   $5a         ;06e0 'Newline'
              7544 0011  ld   $11         ;06e2 LDWI
              7545 00a0  ld   $a0
              7546 0008  ld   $08
              7547 002b  ld   $2b         ;06e5 STW
              7548 001a  ld   $1a         ;06e5 '_vLR'
              7549 00ff  ld   $ff         ;06e7 RET
              754a 0059  ld   $59         ;06e8 LDI
              754b 0000  ld   $00
              754c 00f0  ld   $f0         ;06ea POKE
              754d 0036  ld   $36         ;06ea 'Active'
              754e 0059  ld   $59         ;06ec LDI
              754f 0020  ld   $20
              7550 00cf  ld   $cf         ;06ee CALL
              7551 0050  ld   $50         ;06ee 'PrintChar'
              7552 00cf  ld   $cf         ;06f0 CALL
              7553 005a  ld   $5a         ;06f0 'Newline'
              7554 0059  ld   $59         ;06f2 LDI
              7555 00a2  ld   $a2
              7556 005e  ld   $5e         ;06f4 ST
              7557 0036  ld   $36         ;06f4 'Active'
              7558 00cf  ld   $cf         ;06f6 CALL
              7559 0034  ld   $34         ;06f6 'Spaces'
              755a 0021  ld   $21         ;06f8 LDW
              755b 0036  ld   $36         ;06f8 'Active'
              755c 00ad  ld   $ad         ;06fa PEEK
              755d 0063  ld   $63         ;06fb POP
              755e 00ff  ld   $ff         ;06fc RET
              755f 0008  ld   $08         ;| RAM segment address (high byte first)
              7560 00a0  ld   $a0         ;|
              7561 005f  ld   $5f         ;| Length (1..256)
              7562 00cd  ld   $cd         ;08a0 DEF
              7563 00b6  ld   $b6
              7564 0088  ld   $88         ;08a2 ORI
              7565 001f  ld   $1f
              7566 00e3  ld   $e3         ;08a4 ADDI
              7567 0001  ld   $01
              7568 002b  ld   $2b         ;08a6 STW
              7569 004e  ld   $4e         ;08a6 'tmp'
              756a 0035  ld   $35         ;08a8 BCC
              756b 0056  ld   $56         ;08a9 LE
              756c 00b3  ld   $b3
              756d 0082  ld   $82         ;08ab ANDI
              756e 00e0  ld   $e0
              756f 0035  ld   $35         ;08ad BCC
              7570 0072  ld   $72         ;08ae NE
              7571 00b3  ld   $b3
              7572 0021  ld   $21         ;08b0 LDW
              7573 004e  ld   $4e         ;08b0 'tmp'
              7574 00e3  ld   $e3         ;08b2 ADDI
              7575 00a0  ld   $a0
              7576 00ff  ld   $ff         ;08b4 RET
              7577 0021  ld   $21         ;08b5 LDW
              7578 004e  ld   $4e         ;08b5 'tmp'
              7579 00ff  ld   $ff         ;08b7 RET
              757a 002b  ld   $2b         ;08b8 STW
              757b 0070  ld   $70         ;08b8 'NextBlock'
              757c 00cd  ld   $cd         ;08ba DEF
              757d 00ce  ld   $ce
              757e 00e6  ld   $e6         ;08bc SUBI
              757f 0020  ld   $20
              7580 002b  ld   $2b         ;08be STW
              7581 004e  ld   $4e         ;08be 'tmp'
              7582 0035  ld   $35         ;08c0 BCC
              7583 0050  ld   $50         ;08c1 LT
              7584 00cb  ld   $cb
              7585 0082  ld   $82         ;08c3 ANDI
              7586 0060  ld   $60
              7587 0035  ld   $35         ;08c5 BCC
              7588 0072  ld   $72         ;08c6 NE
              7589 00cb  ld   $cb
              758a 0021  ld   $21         ;08c8 LDW
              758b 004e  ld   $4e         ;08c8 'tmp'
              758c 00e6  ld   $e6         ;08ca SUBI
              758d 00a0  ld   $a0
              758e 00ff  ld   $ff         ;08cc RET
              758f 0021  ld   $21         ;08cd LDW
              7590 004e  ld   $4e         ;08cd 'tmp'
              7591 00ff  ld   $ff         ;08cf RET
              7592 002b  ld   $2b         ;08d0 STW
              7593 006e  ld   $6e         ;08d0 'PrevBlock'
              7594 00cd  ld   $cd         ;08d2 DEF
              7595 00fa  ld   $fa
              7596 0021  ld   $21         ;08d4 LDW
              7597 006c  ld   $6c         ;08d4 'Begin'
              7598 002b  ld   $2b         ;08d6 STW
              7599 0040  ld   $40         ;08d6 'i'
              759a 00fc  ld   $fc         ;08d8 XORW
              759b 0048  ld   $48         ;08d8 'End'
              759c 0035  ld   $35         ;08da BCC
              759d 003f  ld   $3f         ;08db EQ
              759e 00f3  ld   $f3
              759f 0021  ld   $21         ;08dd LDW
              75a0 0040  ld   $40         ;08dd 'i'
              75a1 00f6  ld   $f6         ;08df DEEK
              75a2 00fc  ld   $fc         ;08e0 XORW
              75a3 003c  ld   $3c         ;08e0 'Value'
              75a4 0035  ld   $35         ;08e2 BCC
              75a5 0072  ld   $72         ;08e3 NE
              75a6 00ed  ld   $ed
              75a7 0021  ld   $21         ;08e5 LDW
              75a8 0040  ld   $40         ;08e5 'i'
              75a9 00e3  ld   $e3         ;08e7 ADDI
              75aa 0002  ld   $02
              75ab 002b  ld   $2b         ;08e9 STW
              75ac 0036  ld   $36         ;08e9 'Active'
              75ad 00cf  ld   $cf         ;08eb CALL
              75ae 0058  ld   $58         ;08eb 'TestBreak'
              75af 00cf  ld   $cf         ;08ed CALL
              75b0 0066  ld   $66         ;08ed 'Statements'
              75b1 0021  ld   $21         ;08ef LDW
              75b2 0040  ld   $40         ;08ef 'i'
              75b3 00cf  ld   $cf         ;08f1 CALL
              75b4 0070  ld   $70         ;08f1 'NextBlock'
              75b5 0090  ld   $90         ;08f3 BRA
              75b6 00d4  ld   $d4
              75b7 00cf  ld   $cf         ;08f5 CALL
              75b8 0056  ld   $56         ;08f5 'Prompt'
              75b9 004c  ld   $4c         ;08f7 'L'
              75ba 0069  ld   $69         ;08f8 'i'
              75bb 006e  ld   $6e         ;08f9 'n'
              75bc 0065  ld   $65         ;08fa 'e'
              75bd 0000  ld   $00         ;08fb 0
              75be 0093  ld   $93         ;08fc INC
              75bf 001b  ld   $1b
              75c0 00ff  ld   $ff         ;08fe RET
              75c1 0009  ld   $09         ;| RAM segment address (high byte first)
              75c2 00a0  ld   $a0         ;|
              75c3 005e  ld   $5e         ;| Length (1..256)
              75c4 002b  ld   $2b         ;09a0 STW
              75c5 005e  ld   $5e         ;09a0 'GotoValue'
              75c6 00cd  ld   $cd         ;09a2 DEF
              75c7 00de  ld   $de
              75c8 0075  ld   $75         ;09a4 PUSH
              75c9 0035  ld   $35         ;09a5 BCC
              75ca 0053  ld   $53         ;09a6 GE
              75cb 00b0  ld   $b0
              75cc 0059  ld   $59         ;09a8 LDI
              75cd 0000  ld   $00
              75ce 00b8  ld   $b8         ;09aa SUBW
              75cf 003c  ld   $3c         ;09aa 'Value'
              75d0 002b  ld   $2b         ;09ac STW
              75d1 003c  ld   $3c         ;09ac 'Value'
              75d2 0059  ld   $59         ;09ae LDI
              75d3 002d  ld   $2d
              75d4 00cf  ld   $cf         ;09b0 CALL
              75d5 0050  ld   $50         ;09b0 'PrintChar'
              75d6 0059  ld   $59         ;09b2 LDI
              75d7 0000  ld   $00
              75d8 002b  ld   $2b         ;09b4 STW
              75d9 0044  ld   $44         ;09b4 'k'
              75da 0021  ld   $21         ;09b6 LDW
              75db 003c  ld   $3c         ;09b6 'Value'
              75dc 0035  ld   $35         ;09b8 BCC
              75dd 0053  ld   $53         ;09b9 GE
              75de 00c4  ld   $c4
              75df 0011  ld   $11         ;09bb LDWI
              75e0 00d0  ld   $d0
              75e1 008a  ld   $8a
              75e2 0099  ld   $99         ;09be ADDW
              75e3 003c  ld   $3c         ;09be 'Value'
              75e4 002b  ld   $2b         ;09c0 STW
              75e5 003c  ld   $3c         ;09c0 'Value'
              75e6 0059  ld   $59         ;09c2 LDI
              75e7 0003  ld   $03
              75e8 002b  ld   $2b         ;09c4 STW
              75e9 0044  ld   $44         ;09c4 'k'
              75ea 0011  ld   $11         ;09c6 LDWI
              75eb 0010  ld   $10
              75ec 0027  ld   $27
              75ed 00cf  ld   $cf         ;09c9 CALL
              75ee 0074  ld   $74         ;09c9 'PrintDigit'
              75ef 0011  ld   $11         ;09cb LDWI
              75f0 00e8  ld   $e8
              75f1 0003  ld   $03
              75f2 00cf  ld   $cf         ;09ce CALL
              75f3 0074  ld   $74         ;09ce 'PrintDigit'
              75f4 0059  ld   $59         ;09d0 LDI
              75f5 0064  ld   $64
              75f6 00cf  ld   $cf         ;09d2 CALL
              75f7 0074  ld   $74         ;09d2 'PrintDigit'
              75f8 0059  ld   $59         ;09d4 LDI
              75f9 000a  ld   $0a
              75fa 00cf  ld   $cf         ;09d6 CALL
              75fb fe00  bra  ac          ;+-----------------------------------+
              75fc fcfd  bra  $75fd       ;|                                   |
              75fd 1418  ld   $18,y       ;| Trampoline for page $7500 lookups |
              75fe e006  jmp  y,$06       ;|                                   |
              75ff c218  st   [$18]       ;+-----------------------------------+
              7600 0074  ld   $74         ;09d6 'PrintDigit'
              7601 0059  ld   $59         ;09d8 LDI
              7602 0030  ld   $30
              7603 0099  ld   $99         ;09da ADDW
              7604 003c  ld   $3c         ;09da 'Value'
              7605 00cf  ld   $cf         ;09dc CALL
              7606 0050  ld   $50         ;09dc 'PrintChar'
              7607 0063  ld   $63         ;09de POP
              7608 00ff  ld   $ff         ;09df RET
              7609 002b  ld   $2b         ;09e0 STW
              760a 0076  ld   $76         ;09e0 'PrintValue'
              760b 00cd  ld   $cd         ;09e2 DEF
              760c 00ea  ld   $ea
              760d 00cf  ld   $cf         ;09e4 CALL
              760e 0056  ld   $56         ;09e4 'Prompt'
              760f 0053  ld   $53         ;09e6 'S'
              7610 0074  ld   $74         ;09e7 't'
              7611 0061  ld   $61         ;09e8 'a'
              7612 0063  ld   $63         ;09e9 'c'
              7613 006b  ld   $6b         ;09ea 'k'
              7614 0000  ld   $00         ;09eb 0
              7615 002b  ld   $2b         ;09ec STW
              7616 0060  ld   $60         ;09ec 'StackError'
              7617 00cd  ld   $cd         ;09ee DEF
              7618 00f7  ld   $f7
              7619 00cf  ld   $cf         ;09f0 CALL
              761a 0056  ld   $56         ;09f0 'Prompt'
              761b 0053  ld   $53         ;09f2 'S'
              761c 0079  ld   $79         ;09f3 'y'
              761d 006e  ld   $6e         ;09f4 'n'
              761e 0074  ld   $74         ;09f5 't'
              761f 0061  ld   $61         ;09f6 'a'
              7620 0078  ld   $78         ;09f7 'x'
              7621 0000  ld   $00         ;09f8 0
              7622 002b  ld   $2b         ;09f9 STW
              7623 004a  ld   $4a         ;09f9 'SyntaxError'
              7624 0093  ld   $93         ;09fb INC
              7625 001b  ld   $1b
              7626 00ff  ld   $ff         ;09fd RET
              7627 000a  ld   $0a         ;| RAM segment address (high byte first)
              7628 00a0  ld   $a0         ;|
              7629 005f  ld   $5f         ;| Length (1..256)
              762a 00cd  ld   $cd         ;0aa0 DEF
              762b 00d2  ld   $d2
              762c 0021  ld   $21         ;0aa2 LDW
              762d 001a  ld   $1a
              762e 002b  ld   $2b         ;0aa4 STW
              762f 004e  ld   $4e         ;0aa4 'tmp'
              7630 0021  ld   $21         ;0aa6 LDW
              7631 0036  ld   $36         ;0aa6 'Active'
              7632 002b  ld   $2b         ;0aa8 STW
              7633 006a  ld   $6a         ;0aa8 'j'
              7634 0021  ld   $21         ;0aaa LDW
              7635 004e  ld   $4e         ;0aaa 'tmp'
              7636 00ad  ld   $ad         ;0aac PEEK
              7637 0093  ld   $93         ;0aad INC
              7638 004e  ld   $4e         ;0aad 'tmp'
              7639 0035  ld   $35         ;0aaf BCC
              763a 003f  ld   $3f         ;0ab0 EQ
              763b 00ce  ld   $ce
              763c 002b  ld   $2b         ;0ab2 STW
              763d 0040  ld   $40         ;0ab2 'i'
              763e 0021  ld   $21         ;0ab4 LDW
              763f 0036  ld   $36         ;0ab4 'Active'
              7640 00ad  ld   $ad         ;0ab6 PEEK
              7641 0088  ld   $88         ;0ab7 ORI
              7642 0020  ld   $20
              7643 00fc  ld   $fc         ;0ab9 XORW
              7644 0040  ld   $40         ;0ab9 'i'
              7645 0035  ld   $35         ;0abb BCC
              7646 0072  ld   $72         ;0abc NE
              7647 00c0  ld   $c0
              7648 0093  ld   $93         ;0abe INC
              7649 0036  ld   $36         ;0abe 'Active'
              764a 0090  ld   $90         ;0ac0 BRA
              764b 00a8  ld   $a8
              764c 0021  ld   $21         ;0ac2 LDW
              764d 006a  ld   $6a         ;0ac2 'j'
              764e 002b  ld   $2b         ;0ac4 STW
              764f 0036  ld   $36         ;0ac4 'Active'
              7650 0021  ld   $21         ;0ac6 LDW
              7651 004e  ld   $4e         ;0ac6 'tmp'
              7652 00ad  ld   $ad         ;0ac8 PEEK
              7653 0093  ld   $93         ;0ac9 INC
              7654 004e  ld   $4e         ;0ac9 'tmp'
              7655 0035  ld   $35         ;0acb BCC
              7656 0072  ld   $72         ;0acc NE
              7657 00c4  ld   $c4
              7658 00cf  ld   $cf         ;0ace CALL
              7659 004e  ld   $4e         ;0ace 'tmp'
              765a 00cf  ld   $cf         ;0ad0 CALL
              765b 0034  ld   $34         ;0ad0 'Spaces'
              765c 00cf  ld   $cf         ;0ad2 CALL
              765d 004e  ld   $4e         ;0ad2 'tmp'
              765e 002b  ld   $2b         ;0ad4 STW
              765f 0038  ld   $38         ;0ad4 'Keyword'
              7660 00cd  ld   $cd         ;0ad6 DEF
              7661 00fa  ld   $fa
              7662 0011  ld   $11         ;0ad8 LDWI
              7663 0000  ld   $00
              7664 0080  ld   $80
              7665 002b  ld   $2b         ;0adb STW
              7666 003c  ld   $3c         ;0adb 'Value'
              7667 00e9  ld   $e9         ;0add LSLW
              7668 00e9  ld   $e9         ;0ade LSLW
              7669 0099  ld   $99         ;0adf ADDW
              766a 003c  ld   $3c         ;0adf 'Value'
              766b 00e9  ld   $e9         ;0ae1 LSLW
              766c 002b  ld   $2b         ;0ae2 STW
              766d 0040  ld   $40         ;0ae2 'i'
              766e 0021  ld   $21         ;0ae4 LDW
              766f 0036  ld   $36         ;0ae4 'Active'
              7670 00ad  ld   $ad         ;0ae6 PEEK
              7671 00e6  ld   $e6         ;0ae7 SUBI
              7672 0030  ld   $30
              7673 0035  ld   $35         ;0ae9 BCC
              7674 0050  ld   $50         ;0aea LT
              7675 00f7  ld   $f7
              7676 00e6  ld   $e6         ;0aec SUBI
              7677 000a  ld   $0a
              7678 0035  ld   $35         ;0aee BCC
              7679 0053  ld   $53         ;0aef GE
              767a 00f7  ld   $f7
              767b 00e3  ld   $e3         ;0af1 ADDI
              767c 000a  ld   $0a
              767d 0099  ld   $99         ;0af3 ADDW
              767e 0040  ld   $40         ;0af3 'i'
              767f 0093  ld   $93         ;0af5 INC
              7680 0036  ld   $36         ;0af5 'Active'
              7681 0090  ld   $90         ;0af7 BRA
              7682 00d9  ld   $d9
              7683 0021  ld   $21         ;0af9 LDW
              7684 003c  ld   $3c         ;0af9 'Value'
              7685 00ff  ld   $ff         ;0afb RET
              7686 0093  ld   $93         ;0afc INC
              7687 001b  ld   $1b
              7688 00ff  ld   $ff         ;0afe RET
              7689 000b  ld   $0b         ;| RAM segment address (high byte first)
              768a 00a0  ld   $a0         ;|
              768b 0060  ld   $60         ;| Length (1..256)
              768c 002b  ld   $2b         ;0ba0 STW
              768d 0032  ld   $32         ;0ba0 'Number'
              768e 00cd  ld   $cd         ;0ba2 DEF
              768f 00d1  ld   $d1
              7690 0021  ld   $21         ;0ba4 LDW
              7691 0036  ld   $36         ;0ba4 'Active'
              7692 00ad  ld   $ad         ;0ba6 PEEK
              7693 0035  ld   $35         ;0ba7 BCC
              7694 003f  ld   $3f         ;0ba8 EQ
              7695 00b3  ld   $b3
              7696 008c  ld   $8c         ;0baa XORI
              7697 003a  ld   $3a
              7698 0035  ld   $35         ;0bac BCC
              7699 0072  ld   $72         ;0bad NE
              769a 00b1  ld   $b1
              769b 0093  ld   $93         ;0baf INC
              769c 0036  ld   $36         ;0baf 'Active'
              769d 00cf  ld   $cf         ;0bb1 CALL
              769e 0066  ld   $66         ;0bb1 'Statements'
              769f 00cf  ld   $cf         ;0bb3 CALL
              76a0 004a  ld   $4a         ;0bb3 'SyntaxError'
              76a1 0021  ld   $21         ;0bb5 LDW
              76a2 0036  ld   $36         ;0bb5 'Active'
              76a3 00cf  ld   $cf         ;0bb7 CALL
              76a4 0070  ld   $70         ;0bb7 'NextBlock'
              76a5 002b  ld   $2b         ;0bb9 STW
              76a6 0036  ld   $36         ;0bb9 'Active'
              76a7 00fc  ld   $fc         ;0bbb XORW
              76a8 0048  ld   $48         ;0bbb 'End'
              76a9 0035  ld   $35         ;0bbd BCC
              76aa 003f  ld   $3f         ;0bbe EQ
              76ab 00ce  ld   $ce
              76ac 0011  ld   $11         ;0bc0 LDWI
              76ad 00c0  ld   $c0
              76ae 001b  ld   $1b
              76af 00fc  ld   $fc         ;0bc3 XORW
              76b0 0036  ld   $36         ;0bc3 'Active'
              76b1 0035  ld   $35         ;0bc5 BCC
              76b2 003f  ld   $3f         ;0bc6 EQ
              76b3 00ce  ld   $ce
              76b4 0021  ld   $21         ;0bc8 LDW
              76b5 0036  ld   $36         ;0bc8 'Active'
              76b6 00e3  ld   $e3         ;0bca ADDI
              76b7 0002  ld   $02
              76b8 002b  ld   $2b         ;0bcc STW
              76b9 0036  ld   $36         ;0bcc 'Active'
              76ba 00cf  ld   $cf         ;0bce CALL
              76bb 0066  ld   $66         ;0bce 'Statements'
              76bc 00cf  ld   $cf         ;0bd0 CALL
              76bd 0056  ld   $56         ;0bd0 'Prompt'
              76be 0000  ld   $00         ;0bd2 0
              76bf 002b  ld   $2b         ;0bd3 STW
              76c0 0062  ld   $62         ;0bd3 'EndOfLine'
              76c1 00cd  ld   $cd         ;0bd5 DEF
              76c2 00fb  ld   $fb
              76c3 0021  ld   $21         ;0bd7 LDW
              76c4 0000  ld   $00
              76c5 002b  ld   $2b         ;0bd9 STW
              76c6 0040  ld   $40         ;0bd9 'i'
              76c7 0059  ld   $59         ;0bdb LDI
              76c8 0002  ld   $02
              76c9 002b  ld   $2b         ;0bdd STW
              76ca 006a  ld   $6a         ;0bdd 'j'
              76cb 0021  ld   $21         ;0bdf LDW
              76cc 0040  ld   $40         ;0bdf 'i'
              76cd 00e6  ld   $e6         ;0be1 SUBI
              76ce 0036  ld   $36
              76cf 002b  ld   $2b         ;0be3 STW
              76d0 0040  ld   $40         ;0be3 'i'
              76d1 0059  ld   $59         ;0be5 LDI
              76d2 0000  ld   $00
              76d3 00f0  ld   $f0         ;0be7 POKE
              76d4 0040  ld   $40         ;0be7 'i'
              76d5 0093  ld   $93         ;0be9 INC
              76d6 0040  ld   $40         ;0be9 'i'
              76d7 001a  ld   $1a         ;0beb LD
              76d8 0040  ld   $40         ;0beb 'i'
              76d9 0035  ld   $35         ;0bed BCC
              76da 0072  ld   $72         ;0bee NE
              76db 00e3  ld   $e3
              76dc 0021  ld   $21         ;0bf0 LDW
              76dd 006a  ld   $6a         ;0bf0 'j'
              76de 00e6  ld   $e6         ;0bf2 SUBI
              76df 0001  ld   $01
              76e0 0035  ld   $35         ;0bf4 BCC
              76e1 0072  ld   $72         ;0bf5 NE
              76e2 00db  ld   $db
              76e3 0011  ld   $11         ;0bf7 LDWI
              76e4 00c0  ld   $c0
              76e5 001b  ld   $1b
              76e6 002b  ld   $2b         ;0bfa STW
              76e7 006c  ld   $6c         ;0bfa 'Begin'
              76e8 00ff  ld   $ff         ;0bfc RET
              76e9 0093  ld   $93         ;0bfd INC
              76ea 001b  ld   $1b
              76eb 00ff  ld   $ff         ;0bff RET
              76ec 000c  ld   $0c         ;| RAM segment address (high byte first)
              76ed 00a0  ld   $a0         ;|
              76ee 0060  ld   $60         ;| Length (1..256)
              76ef 002b  ld   $2b         ;0ca0 STW
              76f0 0078  ld   $78         ;0ca0 'Clear'
              76f1 00cd  ld   $cd         ;0ca2 DEF
              76f2 00ed  ld   $ed
              76f3 0075  ld   $75         ;0ca4 PUSH
              76f4 001a  ld   $1a         ;0ca5 LD
              76f5 001c  ld   $1c
              76f6 00e6  ld   $e6         ;0ca7 SUBI
              76f7 008d  ld   $8d
              76f8 0035  ld   $35         ;0ca9 BCC
              76f9 0053  ld   $53         ;0caa GE
              76fa 00ac  ld   $ac
              76fb fe00  bra  ac          ;+-----------------------------------+
              76fc fcfd  bra  $76fd       ;|                                   |
              76fd 1418  ld   $18,y       ;| Trampoline for page $7600 lookups |
              76fe e006  jmp  y,$06       ;|                                   |
              76ff c218  st   [$18]       ;+-----------------------------------+
              7700 00cf  ld   $cf         ;0cac CALL
              7701 0060  ld   $60         ;0cac 'StackError'
              7702 00cf  ld   $cf         ;0cae CALL
              7703 0038  ld   $38         ;0cae 'Keyword'
              7704 002d  ld   $2d         ;0cb0 '-'
              7705 0000  ld   $00         ;0cb1 0
              7706 0035  ld   $35         ;0cb2 BCC
              7707 003f  ld   $3f         ;0cb3 EQ
              7708 00bb  ld   $bb
              7709 00cf  ld   $cf         ;0cb5 CALL
              770a 007a  ld   $7a         ;0cb5 'Term'
              770b 0059  ld   $59         ;0cb7 LDI
              770c 0000  ld   $00
              770d 00b8  ld   $b8         ;0cb9 SUBW
              770e 003c  ld   $3c         ;0cb9 'Value'
              770f 0090  ld   $90         ;0cbb BRA
              7710 00c1  ld   $c1
              7711 00cf  ld   $cf         ;0cbd CALL
              7712 0038  ld   $38         ;0cbd 'Keyword'
              7713 002b  ld   $2b         ;0cbf '+'
              7714 0000  ld   $00         ;0cc0 0
              7715 00cf  ld   $cf         ;0cc1 CALL
              7716 007a  ld   $7a         ;0cc1 'Term'
              7717 0075  ld   $75         ;0cc3 PUSH
              7718 00ec  ld   $ec         ;0cc4 STLW
              7719 0000  ld   $00
              771a 00cf  ld   $cf         ;0cc6 CALL
              771b 0038  ld   $38         ;0cc6 'Keyword'
              771c 002b  ld   $2b         ;0cc8 '+'
              771d 0000  ld   $00         ;0cc9 0
              771e 0035  ld   $35         ;0cca BCC
              771f 003f  ld   $3f         ;0ccb EQ
              7720 00d5  ld   $d5
              7721 00cf  ld   $cf         ;0ccd CALL
              7722 007a  ld   $7a         ;0ccd 'Term'
              7723 00ee  ld   $ee         ;0ccf LDLW
              7724 0000  ld   $00
              7725 0099  ld   $99         ;0cd1 ADDW
              7726 003c  ld   $3c         ;0cd1 'Value'
              7727 00ec  ld   $ec         ;0cd3 STLW
              7728 0000  ld   $00
              7729 0090  ld   $90         ;0cd5 BRA
              772a 00c4  ld   $c4
              772b 00cf  ld   $cf         ;0cd7 CALL
              772c 0038  ld   $38         ;0cd7 'Keyword'
              772d 002d  ld   $2d         ;0cd9 '-'
              772e 0000  ld   $00         ;0cda 0
              772f 0035  ld   $35         ;0cdb BCC
              7730 003f  ld   $3f         ;0cdc EQ
              7731 00e6  ld   $e6
              7732 00cf  ld   $cf         ;0cde CALL
              7733 007a  ld   $7a         ;0cde 'Term'
              7734 00ee  ld   $ee         ;0ce0 LDLW
              7735 0000  ld   $00
              7736 00b8  ld   $b8         ;0ce2 SUBW
              7737 003c  ld   $3c         ;0ce2 'Value'
              7738 00ec  ld   $ec         ;0ce4 STLW
              7739 0000  ld   $00
              773a 0090  ld   $90         ;0ce6 BRA
              773b 00c4  ld   $c4
              773c 00ee  ld   $ee         ;0ce8 LDLW
              773d 0000  ld   $00
              773e 002b  ld   $2b         ;0cea STW
              773f 003c  ld   $3c         ;0cea 'Value'
              7740 0063  ld   $63         ;0cec POP
              7741 0063  ld   $63         ;0ced POP
              7742 00ff  ld   $ff         ;0cee RET
              7743 002b  ld   $2b         ;0cef STW
              7744 003a  ld   $3a         ;0cef 'Expression'
              7745 00cd  ld   $cd         ;0cf1 DEF
              7746 00f9  ld   $f9
              7747 00cf  ld   $cf         ;0cf3 CALL
              7748 0056  ld   $56         ;0cf3 'Prompt'
              7749 0056  ld   $56         ;0cf5 'V'
              774a 0061  ld   $61         ;0cf6 'a'
              774b 006c  ld   $6c         ;0cf7 'l'
              774c 0075  ld   $75         ;0cf8 'u'
              774d 0065  ld   $65         ;0cf9 'e'
              774e 0000  ld   $00         ;0cfa 0
              774f 002b  ld   $2b         ;0cfb STW
              7750 0046  ld   $46         ;0cfb 'ValueError'
              7751 0093  ld   $93         ;0cfd INC
              7752 001b  ld   $1b
              7753 00ff  ld   $ff         ;0cff RET
              7754 000d  ld   $0d         ;| RAM segment address (high byte first)
              7755 00a0  ld   $a0         ;|
              7756 0060  ld   $60         ;| Length (1..256)
              7757 00cd  ld   $cd         ;0da0 DEF
              7758 00e4  ld   $e4
              7759 0075  ld   $75         ;0da2 PUSH
              775a 00cf  ld   $cf         ;0da3 CALL
              775b 004c  ld   $4c         ;0da3 'Factor'
              775c 0075  ld   $75         ;0da5 PUSH
              775d 0021  ld   $21         ;0da6 LDW
              775e 003c  ld   $3c         ;0da6 'Value'
              775f 00ec  ld   $ec         ;0da8 STLW
              7760 0000  ld   $00
              7761 00cf  ld   $cf         ;0daa CALL
              7762 0038  ld   $38         ;0daa 'Keyword'
              7763 002a  ld   $2a         ;0dac '*'
              7764 0000  ld   $00         ;0dad 0
              7765 0035  ld   $35         ;0dae BCC
              7766 003f  ld   $3f         ;0daf EQ
              7767 00b9  ld   $b9
              7768 00cf  ld   $cf         ;0db1 CALL
              7769 004c  ld   $4c         ;0db1 'Factor'
              776a 00ee  ld   $ee         ;0db3 LDLW
              776b 0000  ld   $00
              776c 00cf  ld   $cf         ;0db5 CALL
              776d 007c  ld   $7c         ;0db5 'Multiply'
              776e 00ec  ld   $ec         ;0db7 STLW
              776f 0000  ld   $00
              7770 0090  ld   $90         ;0db9 BRA
              7771 00a8  ld   $a8
              7772 00cf  ld   $cf         ;0dbb CALL
              7773 0038  ld   $38         ;0dbb 'Keyword'
              7774 002f  ld   $2f         ;0dbd '/'
              7775 0000  ld   $00         ;0dbe 0
              7776 0035  ld   $35         ;0dbf BCC
              7777 003f  ld   $3f         ;0dc0 EQ
              7778 00ca  ld   $ca
              7779 00cf  ld   $cf         ;0dc2 CALL
              777a 004c  ld   $4c         ;0dc2 'Factor'
              777b 00ee  ld   $ee         ;0dc4 LDLW
              777c 0000  ld   $00
              777d 00cf  ld   $cf         ;0dc6 CALL
              777e 003e  ld   $3e         ;0dc6 'Divide'
              777f 00ec  ld   $ec         ;0dc8 STLW
              7780 0000  ld   $00
              7781 0090  ld   $90         ;0dca BRA
              7782 00a8  ld   $a8
              7783 00cf  ld   $cf         ;0dcc CALL
              7784 0038  ld   $38         ;0dcc 'Keyword'
              7785 0025  ld   $25         ;0dce '%'
              7786 0000  ld   $00         ;0dcf 0
              7787 0035  ld   $35         ;0dd0 BCC
              7788 003f  ld   $3f         ;0dd1 EQ
              7789 00dd  ld   $dd
              778a 00cf  ld   $cf         ;0dd3 CALL
              778b 004c  ld   $4c         ;0dd3 'Factor'
              778c 00ee  ld   $ee         ;0dd5 LDLW
              778d 0000  ld   $00
              778e 00cf  ld   $cf         ;0dd7 CALL
              778f 003e  ld   $3e         ;0dd7 'Divide'
              7790 0021  ld   $21         ;0dd9 LDW
              7791 0040  ld   $40         ;0dd9 'i'
              7792 00ec  ld   $ec         ;0ddb STLW
              7793 0000  ld   $00
              7794 0090  ld   $90         ;0ddd BRA
              7795 00a8  ld   $a8
              7796 00ee  ld   $ee         ;0ddf LDLW
              7797 0000  ld   $00
              7798 002b  ld   $2b         ;0de1 STW
              7799 003c  ld   $3c         ;0de1 'Value'
              779a 0063  ld   $63         ;0de3 POP
              779b 0063  ld   $63         ;0de4 POP
              779c 00ff  ld   $ff         ;0de5 RET
              779d 002b  ld   $2b         ;0de6 STW
              779e 007a  ld   $7a         ;0de6 'Term'
              779f 0093  ld   $93         ;0de8 INC
              77a0 001b  ld   $1b
              77a1 00ff  ld   $ff         ;0dea RET
              77a2 00cf  ld   $cf         ;0deb CALL
              77a3 0038  ld   $38         ;0deb 'Keyword'
              77a4 0072  ld   $72         ;0ded 'r'
              77a5 0075  ld   $75         ;0dee 'u'
              77a6 006e  ld   $6e         ;0def 'n'
              77a7 0000  ld   $00         ;0df0 0
              77a8 0035  ld   $35         ;0df1 BCC
              77a9 003f  ld   $3f         ;0df2 EQ
              77aa 00f9  ld   $f9
              77ab 00cf  ld   $cf         ;0df4 CALL
              77ac 0078  ld   $78         ;0df4 'Clear'
              77ad 00f6  ld   $f6         ;0df6 DEEK
              77ae 002b  ld   $2b         ;0df7 STW
              77af 003c  ld   $3c         ;0df7 'Value'
              77b0 00cf  ld   $cf         ;0df9 CALL
              77b1 005e  ld   $5e         ;0df9 'GotoValue'
              77b2 0011  ld   $11         ;0dfb LDWI
              77b3 00a0  ld   $a0
              77b4 0016  ld   $16
              77b5 00cf  ld   $cf         ;0dfe CALL
              77b6 0018  ld   $18         ;0dfe vAC
              77b7 000e  ld   $0e         ;| RAM segment address (high byte first)
              77b8 00a0  ld   $a0         ;|
              77b9 0060  ld   $60         ;| Length (1..256)
              77ba 00cd  ld   $cd         ;0ea0 DEF
              77bb 00fb  ld   $fb
              77bc 002b  ld   $2b         ;0ea2 STW
              77bd 006a  ld   $6a         ;0ea2 'j'
              77be 00fc  ld   $fc         ;0ea4 XORW
              77bf 003c  ld   $3c         ;0ea4 'Value'
              77c0 002b  ld   $2b         ;0ea6 STW
              77c1 0044  ld   $44         ;0ea6 'k'
              77c2 0021  ld   $21         ;0ea8 LDW
              77c3 006a  ld   $6a         ;0ea8 'j'
              77c4 0035  ld   $35         ;0eaa BCC
              77c5 0053  ld   $53         ;0eab GE
              77c6 00b1  ld   $b1
              77c7 0059  ld   $59         ;0ead LDI
              77c8 0000  ld   $00
              77c9 00b8  ld   $b8         ;0eaf SUBW
              77ca 006a  ld   $6a         ;0eaf 'j'
              77cb 002b  ld   $2b         ;0eb1 STW
              77cc 006a  ld   $6a         ;0eb1 'j'
              77cd 0021  ld   $21         ;0eb3 LDW
              77ce 003c  ld   $3c         ;0eb3 'Value'
              77cf 0035  ld   $35         ;0eb5 BCC
              77d0 0053  ld   $53         ;0eb6 GE
              77d1 00bc  ld   $bc
              77d2 0059  ld   $59         ;0eb8 LDI
              77d3 0000  ld   $00
              77d4 00b8  ld   $b8         ;0eba SUBW
              77d5 003c  ld   $3c         ;0eba 'Value'
              77d6 002b  ld   $2b         ;0ebc STW
              77d7 003c  ld   $3c         ;0ebc 'Value'
              77d8 0035  ld   $35         ;0ebe BCC
              77d9 0072  ld   $72         ;0ebf NE
              77da 00c1  ld   $c1
              77db 00cf  ld   $cf         ;0ec1 CALL
              77dc 0046  ld   $46         ;0ec1 'ValueError'
              77dd 0059  ld   $59         ;0ec3 LDI
              77de 0000  ld   $00
              77df 002b  ld   $2b         ;0ec5 STW
              77e0 0040  ld   $40         ;0ec5 'i'
              77e1 002b  ld   $2b         ;0ec7 STW
              77e2 004e  ld   $4e         ;0ec7 'tmp'
              77e3 0021  ld   $21         ;0ec9 LDW
              77e4 0040  ld   $40         ;0ec9 'i'
              77e5 0099  ld   $99         ;0ecb ADDW
              77e6 0040  ld   $40         ;0ecb 'i'
              77e7 002b  ld   $2b         ;0ecd STW
              77e8 0040  ld   $40         ;0ecd 'i'
              77e9 0021  ld   $21         ;0ecf LDW
              77ea 006a  ld   $6a         ;0ecf 'j'
              77eb 0035  ld   $35         ;0ed1 BCC
              77ec 0053  ld   $53         ;0ed2 GE
              77ed 00d4  ld   $d4
              77ee 0093  ld   $93         ;0ed4 INC
              77ef 0040  ld   $40         ;0ed4 'i'
              77f0 0021  ld   $21         ;0ed6 LDW
              77f1 006a  ld   $6a         ;0ed6 'j'
              77f2 0099  ld   $99         ;0ed8 ADDW
              77f3 006a  ld   $6a         ;0ed8 'j'
              77f4 002b  ld   $2b         ;0eda STW
              77f5 006a  ld   $6a         ;0eda 'j'
              77f6 0021  ld   $21         ;0edc LDW
              77f7 0040  ld   $40         ;0edc 'i'
              77f8 00b8  ld   $b8         ;0ede SUBW
              77f9 003c  ld   $3c         ;0ede 'Value'
              77fa 0035  ld   $35         ;0ee0 BCC
              77fb fe00  bra  ac          ;+-----------------------------------+
              77fc fcfd  bra  $77fd       ;|                                   |
              77fd 1418  ld   $18,y       ;| Trampoline for page $7700 lookups |
              77fe e006  jmp  y,$06       ;|                                   |
              77ff c218  st   [$18]       ;+-----------------------------------+
              7800 0050  ld   $50         ;0ee1 LT
              7801 00e5  ld   $e5
              7802 002b  ld   $2b         ;0ee3 STW
              7803 0040  ld   $40         ;0ee3 'i'
              7804 0093  ld   $93         ;0ee5 INC
              7805 006a  ld   $6a         ;0ee5 'j'
              7806 0021  ld   $21         ;0ee7 LDW
              7807 004e  ld   $4e         ;0ee7 'tmp'
              7808 00e3  ld   $e3         ;0ee9 ADDI
              7809 0001  ld   $01
              780a 0082  ld   $82         ;0eeb ANDI
              780b 000f  ld   $0f
              780c 0035  ld   $35         ;0eed BCC
              780d 0072  ld   $72         ;0eee NE
              780e 00c5  ld   $c5
              780f 0021  ld   $21         ;0ef0 LDW
              7810 0044  ld   $44         ;0ef0 'k'
              7811 0035  ld   $35         ;0ef2 BCC
              7812 0053  ld   $53         ;0ef3 GE
              7813 00f8  ld   $f8
              7814 0059  ld   $59         ;0ef5 LDI
              7815 0000  ld   $00
              7816 00b8  ld   $b8         ;0ef7 SUBW
              7817 006a  ld   $6a         ;0ef7 'j'
              7818 00ff  ld   $ff         ;0ef9 RET
              7819 0021  ld   $21         ;0efa LDW
              781a 006a  ld   $6a         ;0efa 'j'
              781b 00ff  ld   $ff         ;0efc RET
              781c 0093  ld   $93         ;0efd INC
              781d 001b  ld   $1b
              781e 00ff  ld   $ff         ;0eff RET
              781f 000f  ld   $0f         ;| RAM segment address (high byte first)
              7820 00a0  ld   $a0         ;|
              7821 005e  ld   $5e         ;| Length (1..256)
              7822 002b  ld   $2b         ;0fa0 STW
              7823 003e  ld   $3e         ;0fa0 'Divide'
              7824 00cd  ld   $cd         ;0fa2 DEF
              7825 00c7  ld   $c7
              7826 002b  ld   $2b         ;0fa4 STW
              7827 004e  ld   $4e         ;0fa4 'tmp'
              7828 0059  ld   $59         ;0fa6 LDI
              7829 0000  ld   $00
              782a 002b  ld   $2b         ;0fa8 STW
              782b 006a  ld   $6a         ;0fa8 'j'
              782c 0059  ld   $59         ;0faa LDI
              782d 0001  ld   $01
              782e 002b  ld   $2b         ;0fac STW
              782f 0040  ld   $40         ;0fac 'i'
              7830 00f8  ld   $f8         ;0fae ANDW
              7831 004e  ld   $4e         ;0fae 'tmp'
              7832 0035  ld   $35         ;0fb0 BCC
              7833 003f  ld   $3f         ;0fb1 EQ
              7834 00b7  ld   $b7
              7835 0021  ld   $21         ;0fb3 LDW
              7836 006a  ld   $6a         ;0fb3 'j'
              7837 0099  ld   $99         ;0fb5 ADDW
              7838 003c  ld   $3c         ;0fb5 'Value'
              7839 002b  ld   $2b         ;0fb7 STW
              783a 006a  ld   $6a         ;0fb7 'j'
              783b 0021  ld   $21         ;0fb9 LDW
              783c 003c  ld   $3c         ;0fb9 'Value'
              783d 0099  ld   $99         ;0fbb ADDW
              783e 003c  ld   $3c         ;0fbb 'Value'
              783f 002b  ld   $2b         ;0fbd STW
              7840 003c  ld   $3c         ;0fbd 'Value'
              7841 0021  ld   $21         ;0fbf LDW
              7842 0040  ld   $40         ;0fbf 'i'
              7843 0099  ld   $99         ;0fc1 ADDW
              7844 0040  ld   $40         ;0fc1 'i'
              7845 0035  ld   $35         ;0fc3 BCC
              7846 0072  ld   $72         ;0fc4 NE
              7847 00aa  ld   $aa
              7848 0021  ld   $21         ;0fc6 LDW
              7849 006a  ld   $6a         ;0fc6 'j'
              784a 00ff  ld   $ff         ;0fc8 RET
              784b 002b  ld   $2b         ;0fc9 STW
              784c 007c  ld   $7c         ;0fc9 'Multiply'
              784d 00cd  ld   $cd         ;0fcb DEF
              784e 00e6  ld   $e6
              784f 0021  ld   $21         ;0fcd LDW
              7850 0000  ld   $00
              7851 002b  ld   $2b         ;0fcf STW
              7852 0040  ld   $40         ;0fcf 'i'
              7853 0021  ld   $21         ;0fd1 LDW
              7854 0036  ld   $36         ;0fd1 'Active'
              7855 00ad  ld   $ad         ;0fd3 PEEK
              7856 0082  ld   $82         ;0fd4 ANDI
              7857 005f  ld   $5f
              7858 00e6  ld   $e6         ;0fd6 SUBI
              7859 0040  ld   $40
              785a 0035  ld   $35         ;0fd8 BCC
              785b 0050  ld   $50         ;0fd9 LT
              785c 00e4  ld   $e4
              785d 00e6  ld   $e6         ;0fdb SUBI
              785e 001b  ld   $1b
              785f 0035  ld   $35         ;0fdd BCC
              7860 0053  ld   $53         ;0fde GE
              7861 00e4  ld   $e4
              7862 0093  ld   $93         ;0fe0 INC
              7863 0036  ld   $36         ;0fe0 'Active'
              7864 00e9  ld   $e9         ;0fe2 LSLW
              7865 0099  ld   $99         ;0fe3 ADDW
              7866 0040  ld   $40         ;0fe3 'i'
              7867 00ff  ld   $ff         ;0fe5 RET
              7868 00cf  ld   $cf         ;0fe6 CALL
              7869 004a  ld   $4a         ;0fe6 'SyntaxError'
              786a 002b  ld   $2b         ;0fe8 STW
              786b 0042  ld   $42         ;0fe8 'Variable'
              786c 00cd  ld   $cd         ;0fea DEF
              786d 00f7  ld   $f7
              786e 0021  ld   $21         ;0fec LDW
              786f 0036  ld   $36         ;0fec 'Active'
              7870 00ad  ld   $ad         ;0fee PEEK
              7871 008c  ld   $8c         ;0fef XORI
              7872 0020  ld   $20
              7873 0035  ld   $35         ;0ff1 BCC
              7874 0072  ld   $72         ;0ff2 NE
              7875 00f6  ld   $f6
              7876 0093  ld   $93         ;0ff4 INC
              7877 0036  ld   $36         ;0ff4 'Active'
              7878 0090  ld   $90         ;0ff6 BRA
              7879 00ea  ld   $ea
              787a 00ff  ld   $ff         ;0ff8 RET
              787b 002b  ld   $2b         ;0ff9 STW
              787c 0034  ld   $34         ;0ff9 'Spaces'
              787d 0093  ld   $93         ;0ffb INC
              787e 001b  ld   $1b
              787f 00ff  ld   $ff         ;0ffd RET
              7880 0010  ld   $10         ;| RAM segment address (high byte first)
              7881 00a0  ld   $a0         ;|
              7882 0060  ld   $60         ;| Length (1..256)
              7883 00cd  ld   $cd         ;10a0 DEF
              7884 00fb  ld   $fb
              7885 0075  ld   $75         ;10a2 PUSH
              7886 0021  ld   $21         ;10a3 LDW
              7887 006c  ld   $6c         ;10a3 'Begin'
              7888 002b  ld   $2b         ;10a5 STW
              7889 006a  ld   $6a         ;10a5 'j'
              788a 00fc  ld   $fc         ;10a7 XORW
              788b 0048  ld   $48         ;10a7 'End'
              788c 0035  ld   $35         ;10a9 BCC
              788d 003f  ld   $3f         ;10aa EQ
              788e 00c9  ld   $c9
              788f 00cf  ld   $cf         ;10ac CALL
              7890 0058  ld   $58         ;10ac 'TestBreak'
              7891 0021  ld   $21         ;10ae LDW
              7892 006a  ld   $6a         ;10ae 'j'
              7893 00f6  ld   $f6         ;10b0 DEEK
              7894 002b  ld   $2b         ;10b1 STW
              7895 003c  ld   $3c         ;10b1 'Value'
              7896 00cf  ld   $cf         ;10b3 CALL
              7897 0076  ld   $76         ;10b3 'PrintValue'
              7898 0093  ld   $93         ;10b5 INC
              7899 006a  ld   $6a         ;10b5 'j'
              789a 0093  ld   $93         ;10b7 INC
              789b 006a  ld   $6a         ;10b7 'j'
              789c 0021  ld   $21         ;10b9 LDW
              789d 006a  ld   $6a         ;10b9 'j'
              789e 00ad  ld   $ad         ;10bb PEEK
              789f 0035  ld   $35         ;10bc BCC
              78a0 003f  ld   $3f         ;10bd EQ
              78a1 00c1  ld   $c1
              78a2 00cf  ld   $cf         ;10bf CALL
              78a3 0050  ld   $50         ;10bf 'PrintChar'
              78a4 0090  ld   $90         ;10c1 BRA
              78a5 00b5  ld   $b5
              78a6 00cf  ld   $cf         ;10c3 CALL
              78a7 005a  ld   $5a         ;10c3 'Newline'
              78a8 0021  ld   $21         ;10c5 LDW
              78a9 006a  ld   $6a         ;10c5 'j'
              78aa 00cf  ld   $cf         ;10c7 CALL
              78ab 0070  ld   $70         ;10c7 'NextBlock'
              78ac 0090  ld   $90         ;10c9 BRA
              78ad 00a3  ld   $a3
              78ae 002b  ld   $2b         ;10cb STW
              78af 003c  ld   $3c         ;10cb 'Value'
              78b0 0021  ld   $21         ;10cd LDW
              78b1 0000  ld   $00
              78b2 00e6  ld   $e6         ;10cf SUBI
              78b3 0080  ld   $80
              78b4 00e6  ld   $e6         ;10d1 SUBI
              78b5 00c0  ld   $c0
              78b6 00fc  ld   $fc         ;10d3 XORW
              78b7 006a  ld   $6a         ;10d3 'j'
              78b8 0035  ld   $35         ;10d5 BCC
              78b9 003f  ld   $3f         ;10d6 EQ
              78ba 00e2  ld   $e2
              78bb 0021  ld   $21         ;10d8 LDW
              78bc 006a  ld   $6a         ;10d8 'j'
              78bd 00cf  ld   $cf         ;10da CALL
              78be 0070  ld   $70         ;10da 'NextBlock'
              78bf 002b  ld   $2b         ;10dc STW
              78c0 006a  ld   $6a         ;10dc 'j'
              78c1 0021  ld   $21         ;10de LDW
              78c2 003c  ld   $3c         ;10de 'Value'
              78c3 00e3  ld   $e3         ;10e0 ADDI
              78c4 0020  ld   $20
              78c5 0090  ld   $90         ;10e2 BRA
              78c6 00c9  ld   $c9
              78c7 0021  ld   $21         ;10e4 LDW
              78c8 0050  ld   $50         ;10e4 'PrintChar'
              78c9 00fc  ld   $fc         ;10e6 XORW
              78ca 0054  ld   $54         ;10e6 'PrintCharScreen'
              78cb 0035  ld   $35         ;10e8 BCC
              78cc 0072  ld   $72         ;10e9 NE
              78cd 00f9  ld   $f9
              78ce 00cf  ld   $cf         ;10eb CALL
              78cf 0076  ld   $76         ;10eb 'PrintValue'
              78d0 00cf  ld   $cf         ;10ed CALL
              78d1 0052  ld   $52         ;10ed 'PrintS'
              78d2 0020  ld   $20         ;10ef ' '
              78d3 0062  ld   $62         ;10f0 'b'
              78d4 0079  ld   $79         ;10f1 'y'
              78d5 0074  ld   $74         ;10f2 't'
              78d6 0065  ld   $65         ;10f3 'e'
              78d7 0073  ld   $73         ;10f4 's'
              78d8 0020  ld   $20         ;10f5 ' '
              78d9 0066  ld   $66         ;10f6 'f'
              78da 0072  ld   $72         ;10f7 'r'
              78db 0065  ld   $65         ;10f8 'e'
              78dc 0065  ld   $65         ;10f9 'e'
              78dd 0000  ld   $00         ;10fa 0
              78de 0063  ld   $63         ;10fb POP
              78df 00ff  ld   $ff         ;10fc RET
              78e0 0093  ld   $93         ;10fd INC
              78e1 001b  ld   $1b
              78e2 00ff  ld   $ff         ;10ff RET
              78e3 0011  ld   $11         ;| RAM segment address (high byte first)
              78e4 00a0  ld   $a0         ;|
              78e5 0060  ld   $60         ;| Length (1..256)
              78e6 002b  ld   $2b         ;11a0 STW
              78e7 007e  ld   $7e         ;11a0 'List'
              78e8 00cd  ld   $cd         ;11a2 DEF
              78e9 00c1  ld   $c1
              78ea 0075  ld   $75         ;11a4 PUSH
              78eb 002b  ld   $2b         ;11a5 STW
              78ec 0040  ld   $40         ;11a5 'i'
              78ed 0021  ld   $21         ;11a7 LDW
              78ee 003c  ld   $3c         ;11a7 'Value'
              78ef 00b8  ld   $b8         ;11a9 SUBW
              78f0 0040  ld   $40         ;11a9 'i'
              78f1 0035  ld   $35         ;11ab BCC
              78f2 0050  ld   $50         ;11ac LT
              78f3 00b2  ld   $b2
              78f4 002b  ld   $2b         ;11ae STW
              78f5 003c  ld   $3c         ;11ae 'Value'
              78f6 0093  ld   $93         ;11b0 INC
              78f7 0044  ld   $44         ;11b0 'k'
              78f8 0090  ld   $90         ;11b2 BRA
              78f9 00a7  ld   $a7
              78fa 0021  ld   $21         ;11b4 LDW
              78fb fe00  bra  ac          ;+-----------------------------------+
              78fc fcfd  bra  $78fd       ;|                                   |
              78fd 1418  ld   $18,y       ;| Trampoline for page $7800 lookups |
              78fe e006  jmp  y,$06       ;|                                   |
              78ff c218  st   [$18]       ;+-----------------------------------+
              7900 0044  ld   $44         ;11b4 'k'
              7901 0035  ld   $35         ;11b6 BCC
              7902 003f  ld   $3f         ;11b7 EQ
              7903 00bf  ld   $bf
              7904 0088  ld   $88         ;11b9 ORI
              7905 0030  ld   $30
              7906 00cf  ld   $cf         ;11bb CALL
              7907 0050  ld   $50         ;11bb 'PrintChar'
              7908 0059  ld   $59         ;11bd LDI
              7909 0030  ld   $30
              790a 002b  ld   $2b         ;11bf STW
              790b 0044  ld   $44         ;11bf 'k'
              790c 0063  ld   $63         ;11c1 POP
              790d 00ff  ld   $ff         ;11c2 RET
              790e 002b  ld   $2b         ;11c3 STW
              790f 0074  ld   $74         ;11c3 'PrintDigit'
              7910 00cd  ld   $cd         ;11c5 DEF
              7911 00f1  ld   $f1
              7912 0075  ld   $75         ;11c7 PUSH
              7913 0059  ld   $59         ;11c8 LDI
              7914 0000  ld   $00
              7915 002b  ld   $2b         ;11ca STW
              7916 0044  ld   $44         ;11ca 'k'
              7917 00cf  ld   $cf         ;11cc CALL
              7918 0038  ld   $38         ;11cc 'Keyword'
              7919 003c  ld   $3c         ;11ce '<'
              791a 0000  ld   $00         ;11cf 0
              791b 0035  ld   $35         ;11d0 BCC
              791c 003f  ld   $3f         ;11d1 EQ
              791d 00d3  ld   $d3
              791e 0093  ld   $93         ;11d3 INC
              791f 0044  ld   $44         ;11d3 'k'
              7920 00cf  ld   $cf         ;11d5 CALL
              7921 0038  ld   $38         ;11d5 'Keyword'
              7922 003e  ld   $3e         ;11d7 '>'
              7923 0000  ld   $00         ;11d8 0
              7924 0035  ld   $35         ;11d9 BCC
              7925 003f  ld   $3f         ;11da EQ
              7926 00e0  ld   $e0
              7927 0021  ld   $21         ;11dc LDW
              7928 0044  ld   $44         ;11dc 'k'
              7929 00e3  ld   $e3         ;11de ADDI
              792a 0004  ld   $04
              792b 002b  ld   $2b         ;11e0 STW
              792c 0044  ld   $44         ;11e0 'k'
              792d 00cf  ld   $cf         ;11e2 CALL
              792e 0038  ld   $38         ;11e2 'Keyword'
              792f 003d  ld   $3d         ;11e4 '='
              7930 0000  ld   $00         ;11e5 0
              7931 0035  ld   $35         ;11e6 BCC
              7932 003f  ld   $3f         ;11e7 EQ
              7933 00ed  ld   $ed
              7934 0021  ld   $21         ;11e9 LDW
              7935 0044  ld   $44         ;11e9 'k'
              7936 00e3  ld   $e3         ;11eb ADDI
              7937 0002  ld   $02
              7938 002b  ld   $2b         ;11ed STW
              7939 0044  ld   $44         ;11ed 'k'
              793a 0021  ld   $21         ;11ef LDW
              793b 0044  ld   $44         ;11ef 'k'
              793c 0063  ld   $63         ;11f1 POP
              793d 00ff  ld   $ff         ;11f2 RET
              793e 002b  ld   $2b         ;11f3 STW
              793f 0064  ld   $64         ;11f3 'RelOp'
              7940 0011  ld   $11         ;11f5 LDWI
              7941 00a0  ld   $a0
              7942 001b  ld   $1b
              7943 00f6  ld   $f6         ;11f8 DEEK
              7944 002b  ld   $2b         ;11f9 STW
              7945 0048  ld   $48         ;11f9 'End'
              7946 00e3  ld   $e3         ;11fb ADDI
              7947 0002  ld   $02
              7948 0093  ld   $93         ;11fd INC
              7949 001b  ld   $1b
              794a 00ff  ld   $ff         ;11ff RET
              794b 0012  ld   $12         ;| RAM segment address (high byte first)
              794c 00a0  ld   $a0         ;|
              794d 005d  ld   $5d         ;| Length (1..256)
              794e 002b  ld   $2b         ;12a0 STW
              794f 0036  ld   $36         ;12a0 'Active'
              7950 00cd  ld   $cd         ;12a2 DEF
              7951 00f7  ld   $f7
              7952 0021  ld   $21         ;12a4 LDW
              7953 001a  ld   $1a
              7954 002b  ld   $2b         ;12a6 STW
              7955 004e  ld   $4e         ;12a6 'tmp'
              7956 001a  ld   $1a         ;12a8 LD
              7957 0030  ld   $30         ;12a8 'Pos'
              7958 00e6  ld   $e6         ;12aa SUBI
              7959 0002  ld   $02
              795a 0035  ld   $35         ;12ac BCC
              795b 0056  ld   $56         ;12ad LE
              795c 00af  ld   $af
              795d 00cf  ld   $cf         ;12af CALL
              795e 005a  ld   $5a         ;12af 'Newline'
              795f 0059  ld   $59         ;12b1 LDI
              7960 0000  ld   $00
              7961 005e  ld   $5e         ;12b3 ST
              7962 001c  ld   $1c
              7963 0021  ld   $21         ;12b5 LDW
              7964 004e  ld   $4e         ;12b5 'tmp'
              7965 00ad  ld   $ad         ;12b7 PEEK
              7966 0035  ld   $35         ;12b8 BCC
              7967 003f  ld   $3f         ;12b9 EQ
              7968 00e3  ld   $e3
              7969 0059  ld   $59         ;12bb LDI
              796a 003f  ld   $3f
              796b 00cf  ld   $cf         ;12bd CALL
              796c 0050  ld   $50         ;12bd 'PrintChar'
              796d 0021  ld   $21         ;12bf LDW
              796e 004e  ld   $4e         ;12bf 'tmp'
              796f 00ad  ld   $ad         ;12c1 PEEK
              7970 0093  ld   $93         ;12c2 INC
              7971 004e  ld   $4e         ;12c2 'tmp'
              7972 0035  ld   $35         ;12c4 BCC
              7973 0072  ld   $72         ;12c5 NE
              7974 00bb  ld   $bb
              7975 00cf  ld   $cf         ;12c7 CALL
              7976 0052  ld   $52         ;12c7 'PrintS'
              7977 0020  ld   $20         ;12c9 ' '
              7978 0065  ld   $65         ;12ca 'e'
              7979 0072  ld   $72         ;12cb 'r'
              797a 0072  ld   $72         ;12cc 'r'
              797b 006f  ld   $6f         ;12cd 'o'
              797c 0072  ld   $72         ;12ce 'r'
              797d 0000  ld   $00         ;12cf 0
              797e 00e6  ld   $e6         ;12d0 SUBI
              797f 0020  ld   $20
              7980 00f8  ld   $f8         ;12d2 ANDW
              7981 0036  ld   $36         ;12d2 'Active'
              7982 00f6  ld   $f6         ;12d4 DEEK
              7983 0035  ld   $35         ;12d5 BCC
              7984 003f  ld   $3f         ;12d6 EQ
              7985 00e1  ld   $e1
              7986 002b  ld   $2b         ;12d8 STW
              7987 003c  ld   $3c         ;12d8 'Value'
              7988 00cf  ld   $cf         ;12da CALL
              7989 0052  ld   $52         ;12da 'PrintS'
              798a 0020  ld   $20         ;12dc ' '
              798b 0069  ld   $69         ;12dd 'i'
              798c 006e  ld   $6e         ;12de 'n'
              798d 0020  ld   $20         ;12df ' '
              798e 0000  ld   $00         ;12e0 0
              798f 00cf  ld   $cf         ;12e1 CALL
              7990 0076  ld   $76         ;12e1 'PrintValue'
              7991 00cf  ld   $cf         ;12e3 CALL
              7992 005a  ld   $5a         ;12e3 'Newline'
              7993 00cf  ld   $cf         ;12e5 CALL
              7994 0052  ld   $52         ;12e5 'PrintS'
              7995 004f  ld   $4f         ;12e7 'O'
              7996 006b  ld   $6b         ;12e8 'k'
              7997 0000  ld   $00         ;12e9 0
              7998 00cf  ld   $cf         ;12ea CALL
              7999 005a  ld   $5a         ;12ea 'Newline'
              799a 0059  ld   $59         ;12ec LDI
              799b 0000  ld   $00
              799c 00cf  ld   $cf         ;12ee CALL
              799d 005c  ld   $5c         ;12ee 'GetLine'
              799e 0035  ld   $35         ;12f0 BCC
              799f 003f  ld   $3f         ;12f1 EQ
              79a0 00ea  ld   $ea
              79a1 00cf  ld   $cf         ;12f3 CALL
              79a2 0072  ld   $72         ;12f3 'Insert'
              79a3 0035  ld   $35         ;12f5 BCC
              79a4 004d  ld   $4d         ;12f6 GT
              79a5 00ea  ld   $ea
              79a6 0011  ld   $11         ;12f8 785
              79a7 002b  ld   $2b         ;12f9 STW
              79a8 0056  ld   $56         ;12f9 'Prompt'
              79a9 00cf  ld   $cf         ;12fb CALL
              79aa 0066  ld   $66         ;12fb 'Statements'
              79ab 0013  ld   $13         ;| RAM segment address (high byte first)
              79ac 00a0  ld   $a0         ;|
              79ad 0059  ld   $59         ;| Length (1..256)
              79ae 0021  ld   $21         ;13a0 LDW
              79af 0036  ld   $36         ;13a0 'Active'
              79b0 00ad  ld   $ad         ;13a2 PEEK
              79b1 0035  ld   $35         ;13a3 BCC
              79b2 003f  ld   $3f         ;13a4 EQ
              79b3 00f3  ld   $f3
              79b4 008c  ld   $8c         ;13a6 XORI
              79b5 003a  ld   $3a
              79b6 0035  ld   $35         ;13a8 BCC
              79b7 003f  ld   $3f         ;13a9 EQ
              79b8 00f3  ld   $f3
              79b9 0021  ld   $21         ;13ab LDW
              79ba 0036  ld   $36         ;13ab 'Active'
              79bb 00ad  ld   $ad         ;13ad PEEK
              79bc 0035  ld   $35         ;13ae BCC
              79bd 003f  ld   $3f         ;13af EQ
              79be 00f1  ld   $f1
              79bf 008c  ld   $8c         ;13b1 XORI
              79c0 003a  ld   $3a
              79c1 0035  ld   $35         ;13b3 BCC
              79c2 003f  ld   $3f         ;13b4 EQ
              79c3 00f1  ld   $f1
              79c4 008c  ld   $8c         ;13b6 XORI
              79c5 0018  ld   $18
              79c6 0035  ld   $35         ;13b8 BCC
              79c7 0072  ld   $72         ;13b9 NE
              79c8 00ce  ld   $ce
              79c9 0093  ld   $93         ;13bb INC
              79ca 0036  ld   $36         ;13bb 'Active'
              79cb 00cf  ld   $cf         ;13bd CALL
              79cc 0038  ld   $38         ;13bd 'Keyword'
              79cd 0022  ld   $22         ;13bf 34
              79ce 0000  ld   $00         ;13c0 0
              79cf 0035  ld   $35         ;13c1 BCC
              79d0 0072  ld   $72         ;13c2 NE
              79d1 00cc  ld   $cc
              79d2 0021  ld   $21         ;13c4 LDW
              79d3 0036  ld   $36         ;13c4 'Active'
              79d4 00ad  ld   $ad         ;13c6 PEEK
              79d5 0035  ld   $35         ;13c7 BCC
              79d6 003f  ld   $3f         ;13c8 EQ
              79d7 00cc  ld   $cc
              79d8 00cf  ld   $cf         ;13ca CALL
              79d9 0050  ld   $50         ;13ca 'PrintChar'
              79da 0090  ld   $90         ;13cc BRA
              79db 00b9  ld   $b9
              79dc 0090  ld   $90         ;13ce BRA
              79dd 00d2  ld   $d2
              79de 00cf  ld   $cf         ;13d0 CALL
              79df 003a  ld   $3a         ;13d0 'Expression'
              79e0 00cf  ld   $cf         ;13d2 CALL
              79e1 0076  ld   $76         ;13d2 'PrintValue'
              79e2 00cf  ld   $cf         ;13d4 CALL
              79e3 0038  ld   $38         ;13d4 'Keyword'
              79e4 002c  ld   $2c         ;13d6 44
              79e5 0000  ld   $00         ;13d7 0
              79e6 0035  ld   $35         ;13d8 BCC
              79e7 003f  ld   $3f         ;13d9 EQ
              79e8 00e8  ld   $e8
              79e9 0059  ld   $59         ;13db LDI
              79ea 0020  ld   $20
              79eb 00cf  ld   $cf         ;13dd CALL
              79ec 0050  ld   $50         ;13dd 'PrintChar'
              79ed 001a  ld   $1a         ;13df LD
              79ee 0030  ld   $30         ;13df 'Pos'
              79ef 00e6  ld   $e6         ;13e1 SUBI
              79f0 0002  ld   $02
              79f1 0082  ld   $82         ;13e3 ANDI
              79f2 0007  ld   $07
              79f3 0035  ld   $35         ;13e5 BCC
              79f4 0072  ld   $72         ;13e6 NE
              79f5 00d9  ld   $d9
              79f6 0090  ld   $90         ;13e8 BRA
              79f7 00a9  ld   $a9
              79f8 00cf  ld   $cf         ;13ea CALL
              79f9 0038  ld   $38         ;13ea 'Keyword'
              79fa 003b  ld   $3b         ;13ec 59
              79fb fe00  bra  ac          ;+-----------------------------------+
              79fc fcfd  bra  $79fd       ;|                                   |
              79fd 1418  ld   $18,y       ;| Trampoline for page $7900 lookups |
              79fe e006  jmp  y,$06       ;|                                   |
              79ff c218  st   [$18]       ;+-----------------------------------+
              7a00 0000  ld   $00         ;13ed 0
              7a01 0035  ld   $35         ;13ee BCC
              7a02 0072  ld   $72         ;13ef NE
              7a03 00a9  ld   $a9
              7a04 00cf  ld   $cf         ;13f1 CALL
              7a05 005a  ld   $5a         ;13f1 'Newline'
              7a06 0090  ld   $90         ;13f3 BRA
              7a07 00f5  ld   $f5
              7a08 00cf  ld   $cf         ;13f5 CALL
              7a09 005a  ld   $5a         ;13f5 'Newline'
              7a0a 00cf  ld   $cf         ;13f7 CALL
              7a0b 0062  ld   $62         ;13f7 'EndOfLine'
              7a0c 0014  ld   $14         ;| RAM segment address (high byte first)
              7a0d 00a0  ld   $a0         ;|
              7a0e 005f  ld   $5f         ;| Length (1..256)
              7a0f 00cf  ld   $cf         ;14a0 CALL
              7a10 0038  ld   $38         ;14a0 'Keyword'
              7a11 003f  ld   $3f         ;14a2 '?'
              7a12 0000  ld   $00         ;14a3 0
              7a13 0035  ld   $35         ;14a4 BCC
              7a14 0072  ld   $72         ;14a5 NE
              7a15 00ad  ld   $ad
              7a16 00cf  ld   $cf         ;14a7 CALL
              7a17 0038  ld   $38         ;14a7 'Keyword'
              7a18 0070  ld   $70         ;14a9 'p'
              7a19 0072  ld   $72         ;14aa 'r'
              7a1a 0069  ld   $69         ;14ab 'i'
              7a1b 006e  ld   $6e         ;14ac 'n'
              7a1c 0074  ld   $74         ;14ad 't'
              7a1d 0000  ld   $00         ;14ae 0
              7a1e 0035  ld   $35         ;14af BCC
              7a1f 003f  ld   $3f         ;14b0 EQ
              7a20 00b5  ld   $b5
              7a21 0011  ld   $11         ;14b2 LDWI
              7a22 00a0  ld   $a0
              7a23 0013  ld   $13
              7a24 00cf  ld   $cf         ;14b5 CALL
              7a25 0018  ld   $18         ;14b5 vAC
              7a26 00cf  ld   $cf         ;14b7 CALL
              7a27 0038  ld   $38         ;14b7 'Keyword'
              7a28 0069  ld   $69         ;14b9 'i'
              7a29 006e  ld   $6e         ;14ba 'n'
              7a2a 0070  ld   $70         ;14bb 'p'
              7a2b 0075  ld   $75         ;14bc 'u'
              7a2c 0074  ld   $74         ;14bd 't'
              7a2d 0000  ld   $00         ;14be 0
              7a2e 0035  ld   $35         ;14bf BCC
              7a2f 003f  ld   $3f         ;14c0 EQ
              7a30 00f8  ld   $f8
              7a31 0021  ld   $21         ;14c2 LDW
              7a32 0036  ld   $36         ;14c2 'Active'
              7a33 00ad  ld   $ad         ;14c4 PEEK
              7a34 00cf  ld   $cf         ;14c5 CALL
              7a35 0050  ld   $50         ;14c5 'PrintChar'
              7a36 00cf  ld   $cf         ;14c7 CALL
              7a37 0042  ld   $42         ;14c7 'Variable'
              7a38 002b  ld   $2b         ;14c9 STW
              7a39 0068  ld   $68         ;14c9 'Address'
              7a3a 00cf  ld   $cf         ;14cb CALL
              7a3b 0034  ld   $34         ;14cb 'Spaces'
              7a3c 00df  ld   $df         ;14cd ALLOC
              7a3d 00fc  ld   $fc
              7a3e 0021  ld   $21         ;14cf LDW
              7a3f 0036  ld   $36         ;14cf 'Active'
              7a40 00ec  ld   $ec         ;14d1 STLW
              7a41 0002  ld   $02
              7a42 0088  ld   $88         ;14d3 ORI
              7a43 001f  ld   $1f
              7a44 00e6  ld   $e6         ;14d5 SUBI
              7a45 001f  ld   $1f
              7a46 00f6  ld   $f6         ;14d7 DEEK
              7a47 00ec  ld   $ec         ;14d8 STLW
              7a48 0000  ld   $00
              7a49 0059  ld   $59         ;14da LDI
              7a4a 003f  ld   $3f
              7a4b 00cf  ld   $cf         ;14dc CALL
              7a4c 0050  ld   $50         ;14dc 'PrintChar'
              7a4d 00cf  ld   $cf         ;14de CALL
              7a4e 005a  ld   $5a         ;14de 'Newline'
              7a4f 00ee  ld   $ee         ;14e0 LDLW
              7a50 0000  ld   $00
              7a51 00cf  ld   $cf         ;14e2 CALL
              7a52 005c  ld   $5c         ;14e2 'GetLine'
              7a53 0035  ld   $35         ;14e4 BCC
              7a54 003f  ld   $3f         ;14e5 EQ
              7a55 00d8  ld   $d8
              7a56 00cf  ld   $cf         ;14e7 CALL
              7a57 003a  ld   $3a         ;14e7 'Expression'
              7a58 00f3  ld   $f3         ;14e9 DOKE
              7a59 0068  ld   $68         ;14e9 'Address'
              7a5a 00ee  ld   $ee         ;14eb LDLW
              7a5b 0002  ld   $02
              7a5c 002b  ld   $2b         ;14ed STW
              7a5d 0036  ld   $36         ;14ed 'Active'
              7a5e 00df  ld   $df         ;14ef ALLOC
              7a5f 0004  ld   $04
              7a60 00cf  ld   $cf         ;14f1 CALL
              7a61 0038  ld   $38         ;14f1 'Keyword'
              7a62 002c  ld   $2c         ;14f3 ','
              7a63 0000  ld   $00         ;14f4 0
              7a64 0035  ld   $35         ;14f5 BCC
              7a65 0072  ld   $72         ;14f6 NE
              7a66 00c0  ld   $c0
              7a67 00cf  ld   $cf         ;14f8 CALL
              7a68 0062  ld   $62         ;14f8 'EndOfLine'
              7a69 0011  ld   $11         ;14fa LDWI
              7a6a 00a0  ld   $a0
              7a6b 0015  ld   $15
              7a6c 00cf  ld   $cf         ;14fd CALL
              7a6d 0018  ld   $18         ;14fd vAC
              7a6e 0015  ld   $15         ;| RAM segment address (high byte first)
              7a6f 00a0  ld   $a0         ;|
              7a70 0058  ld   $58         ;| Length (1..256)
              7a71 00cf  ld   $cf         ;15a0 CALL
              7a72 0038  ld   $38         ;15a0 'Keyword'
              7a73 0063  ld   $63         ;15a2 'c'
              7a74 006c  ld   $6c         ;15a3 'l'
              7a75 0073  ld   $73         ;15a4 's'
              7a76 0000  ld   $00         ;15a5 0
              7a77 0035  ld   $35         ;15a6 BCC
              7a78 003f  ld   $3f         ;15a7 EQ
              7a79 00cb  ld   $cb
              7a7a 0011  ld   $11         ;15a9 LDWI
              7a7b 0000  ld   $00
              7a7c 0001  ld   $01
              7a7d 00ad  ld   $ad         ;15ac PEEK
              7a7e 005e  ld   $5e         ;15ad ST
              7a7f 0031  ld   $31         ;15ad 'Pos'+1
              7a80 0059  ld   $59         ;15af LDI
              7a81 000e  ld   $0e
              7a82 002b  ld   $2b         ;15b1 STW
              7a83 006a  ld   $6a         ;15b1 'j'
              7a84 00cf  ld   $cf         ;15b3 CALL
              7a85 005a  ld   $5a         ;15b3 'Newline'
              7a86 0021  ld   $21         ;15b5 LDW
              7a87 006a  ld   $6a         ;15b5 'j'
              7a88 00e6  ld   $e6         ;15b7 SUBI
              7a89 0001  ld   $01
              7a8a 0035  ld   $35         ;15b9 BCC
              7a8b 004d  ld   $4d         ;15ba GT
              7a8c 00af  ld   $af
              7a8d 00cf  ld   $cf         ;15bc CALL
              7a8e 005a  ld   $5a         ;15bc 'Newline'
              7a8f 0011  ld   $11         ;15be LDWI
              7a90 0000  ld   $00
              7a91 0001  ld   $01
              7a92 00ad  ld   $ad         ;15c1 PEEK
              7a93 008c  ld   $8c         ;15c2 XORI
              7a94 0008  ld   $08
              7a95 0035  ld   $35         ;15c4 BCC
              7a96 0072  ld   $72         ;15c5 NE
              7a97 00ba  ld   $ba
              7a98 0059  ld   $59         ;15c7 LDI
              7a99 0008  ld   $08
              7a9a 005e  ld   $5e         ;15c9 ST
              7a9b 0031  ld   $31         ;15c9 'Pos'+1
              7a9c 00cf  ld   $cf         ;15cb CALL
              7a9d 0062  ld   $62         ;15cb 'EndOfLine'
              7a9e 00cf  ld   $cf         ;15cd CALL
              7a9f 0038  ld   $38         ;15cd 'Keyword'
              7aa0 006c  ld   $6c         ;15cf 'l'
              7aa1 0069  ld   $69         ;15d0 'i'
              7aa2 0073  ld   $73         ;15d1 's'
              7aa3 0074  ld   $74         ;15d2 't'
              7aa4 0000  ld   $00         ;15d3 0
              7aa5 0035  ld   $35         ;15d4 BCC
              7aa6 003f  ld   $3f         ;15d5 EQ
              7aa7 00d9  ld   $d9
              7aa8 00cf  ld   $cf         ;15d7 CALL
              7aa9 007e  ld   $7e         ;15d7 'List'
              7aaa 00cf  ld   $cf         ;15d9 CALL
              7aab 0062  ld   $62         ;15d9 'EndOfLine'
              7aac 00cf  ld   $cf         ;15db CALL
              7aad 0038  ld   $38         ;15db 'Keyword'
              7aae 0073  ld   $73         ;15dd 's'
              7aaf 0061  ld   $61         ;15de 'a'
              7ab0 0076  ld   $76         ;15df 'v'
              7ab1 0065  ld   $65         ;15e0 'e'
              7ab2 0000  ld   $00         ;15e1 0
              7ab3 0035  ld   $35         ;15e2 BCC
              7ab4 003f  ld   $3f         ;15e3 EQ
              7ab5 00f1  ld   $f1
              7ab6 001a  ld   $1a         ;15e5 LD
              7ab7 0021  ld   $21
              7ab8 00e6  ld   $e6         ;15e7 SUBI
              7ab9 0028  ld   $28
              7aba 0035  ld   $35         ;15e9 BCC
              7abb 0053  ld   $53         ;15ea GE
              7abc 00ec  ld   $ec
              7abd 00cf  ld   $cf         ;15ec CALL
              7abe 0046  ld   $46         ;15ec 'ValueError'
              7abf 0011  ld   $11         ;15ee LDWI
              7ac0 00a0  ld   $a0
              7ac1 0017  ld   $17
              7ac2 00cf  ld   $cf         ;15f1 CALL
              7ac3 0018  ld   $18         ;15f1 vAC
              7ac4 0011  ld   $11         ;15f3 LDWI
              7ac5 00eb  ld   $eb
              7ac6 000d  ld   $0d
              7ac7 00cf  ld   $cf         ;15f6 CALL
              7ac8 0018  ld   $18         ;15f6 vAC
              7ac9 0016  ld   $16         ;| RAM segment address (high byte first)
              7aca 00a0  ld   $a0         ;|
              7acb 0060  ld   $60         ;| Length (1..256)
              7acc 00cf  ld   $cf         ;16a0 CALL
              7acd 0038  ld   $38         ;16a0 'Keyword'
              7ace 006e  ld   $6e         ;16a2 'n'
              7acf 0065  ld   $65         ;16a3 'e'
              7ad0 0077  ld   $77         ;16a4 'w'
              7ad1 0000  ld   $00         ;16a5 0
              7ad2 0035  ld   $35         ;16a6 BCC
              7ad3 003f  ld   $3f         ;16a7 EQ
              7ad4 00b0  ld   $b0
              7ad5 00cf  ld   $cf         ;16a9 CALL
              7ad6 0078  ld   $78         ;16a9 'Clear'
              7ad7 002b  ld   $2b         ;16ab STW
              7ad8 0048  ld   $48         ;16ab 'End'
              7ad9 00cf  ld   $cf         ;16ad CALL
              7ada 007e  ld   $7e         ;16ad 'List'
              7adb 00cf  ld   $cf         ;16af CALL
              7adc 0056  ld   $56         ;16af 'Prompt'
              7add 0000  ld   $00         ;16b1 0
              7ade 00cf  ld   $cf         ;16b2 CALL
              7adf 0038  ld   $38         ;16b2 'Keyword'
              7ae0 006c  ld   $6c         ;16b4 'l'
              7ae1 0065  ld   $65         ;16b5 'e'
              7ae2 0074  ld   $74         ;16b6 't'
              7ae3 0000  ld   $00         ;16b7 0
              7ae4 00cf  ld   $cf         ;16b8 CALL
              7ae5 0042  ld   $42         ;16b8 'Variable'
              7ae6 002b  ld   $2b         ;16ba STW
              7ae7 0068  ld   $68         ;16ba 'Address'
              7ae8 00cf  ld   $cf         ;16bc CALL
              7ae9 0034  ld   $34         ;16bc 'Spaces'
              7aea 00cf  ld   $cf         ;16be CALL
              7aeb 0038  ld   $38         ;16be 'Keyword'
              7aec 0028  ld   $28         ;16c0 40
              7aed 0000  ld   $00         ;16c1 0
              7aee 0035  ld   $35         ;16c2 BCC
              7aef 003f  ld   $3f         ;16c3 EQ
              7af0 00ef  ld   $ef
              7af1 00cf  ld   $cf         ;16c5 CALL
              7af2 003a  ld   $3a         ;16c5 'Expression'
              7af3 0035  ld   $35         ;16c7 BCC
              7af4 0053  ld   $53         ;16c8 GE
              7af5 00ca  ld   $ca
              7af6 00cf  ld   $cf         ;16ca CALL
              7af7 0046  ld   $46         ;16ca 'ValueError'
              7af8 001a  ld   $1a         ;16cc LD
              7af9 0069  ld   $69         ;16cc 'Address'+1
              7afa 00b8  ld   $b8         ;16ce SUBW
              7afb fe00  bra  ac          ;+-----------------------------------+
              7afc fcfd  bra  $7afd       ;|                                   |
              7afd 1418  ld   $18,y       ;| Trampoline for page $7a00 lookups |
              7afe e006  jmp  y,$06       ;|                                   |
              7aff c218  st   [$18]       ;+-----------------------------------+
              7b00 003c  ld   $3c         ;16ce 'Value'
              7b01 00e6  ld   $e6         ;16d0 SUBI
              7b02 0002  ld   $02
              7b03 005e  ld   $5e         ;16d2 ST
              7b04 0069  ld   $69         ;16d2 'Address'+1
              7b05 0021  ld   $21         ;16d4 LDW
              7b06 0048  ld   $48         ;16d4 'End'
              7b07 00fc  ld   $fc         ;16d6 XORW
              7b08 0068  ld   $68         ;16d6 'Address'
              7b09 0035  ld   $35         ;16d8 BCC
              7b0a 0053  ld   $53         ;16d9 GE
              7b0b 00dd  ld   $dd
              7b0c 0021  ld   $21         ;16db LDW
              7b0d 0048  ld   $48         ;16db 'End'
              7b0e 0090  ld   $90         ;16dd BRA
              7b0f 00e1  ld   $e1
              7b10 0021  ld   $21         ;16df LDW
              7b11 0068  ld   $68         ;16df 'Address'
              7b12 00b8  ld   $b8         ;16e1 SUBW
              7b13 0048  ld   $48         ;16e1 'End'
              7b14 0035  ld   $35         ;16e3 BCC
              7b15 0053  ld   $53         ;16e4 GE
              7b16 00e6  ld   $e6
              7b17 00cf  ld   $cf         ;16e6 CALL
              7b18 0046  ld   $46         ;16e6 'ValueError'
              7b19 00cf  ld   $cf         ;16e8 CALL
              7b1a 0038  ld   $38         ;16e8 'Keyword'
              7b1b 0029  ld   $29         ;16ea 41
              7b1c 0000  ld   $00         ;16eb 0
              7b1d 0035  ld   $35         ;16ec BCC
              7b1e 0072  ld   $72         ;16ed NE
              7b1f 00ef  ld   $ef
              7b20 00cf  ld   $cf         ;16ef CALL
              7b21 004a  ld   $4a         ;16ef 'SyntaxError'
              7b22 00cf  ld   $cf         ;16f1 CALL
              7b23 0038  ld   $38         ;16f1 'Keyword'
              7b24 003d  ld   $3d         ;16f3 '='
              7b25 0000  ld   $00         ;16f4 0
              7b26 0035  ld   $35         ;16f5 BCC
              7b27 0072  ld   $72         ;16f6 NE
              7b28 00f8  ld   $f8
              7b29 00cf  ld   $cf         ;16f8 CALL
              7b2a 004a  ld   $4a         ;16f8 'SyntaxError'
              7b2b 00cf  ld   $cf         ;16fa CALL
              7b2c 003a  ld   $3a         ;16fa 'Expression'
              7b2d 00f3  ld   $f3         ;16fc DOKE
              7b2e 0068  ld   $68         ;16fc 'Address'
              7b2f 00cf  ld   $cf         ;16fe CALL
              7b30 0062  ld   $62         ;16fe 'EndOfLine'
              7b31 0017  ld   $17         ;| RAM segment address (high byte first)
              7b32 00a0  ld   $a0         ;|
              7b33 005f  ld   $5f         ;| Length (1..256)
              7b34 0021  ld   $21         ;17a0 LDW
              7b35 0000  ld   $00
              7b36 005e  ld   $5e         ;17a2 ST
              7b37 0027  ld   $27
              7b38 00e6  ld   $e6         ;17a4 SUBI
              7b39 0060  ld   $60
              7b3a 002b  ld   $2b         ;17a6 STW
              7b3b 0068  ld   $68         ;17a6 'Address'
              7b3c 00cd  ld   $cd         ;17a8 DEF
              7b3d 00e8  ld   $e8
              7b3e 0075  ld   $75         ;17aa PUSH
              7b3f 002b  ld   $2b         ;17ab STW
              7b40 0044  ld   $44         ;17ab 'k'
              7b41 001a  ld   $1a         ;17ad LD
              7b42 0027  ld   $27
              7b43 00e3  ld   $e3         ;17af ADDI
              7b44 0008  ld   $08
              7b45 005e  ld   $5e         ;17b1 ST
              7b46 0027  ld   $27
              7b47 001a  ld   $1a         ;17b3 LD
              7b48 0030  ld   $30         ;17b3 'Pos'
              7b49 00e6  ld   $e6         ;17b5 SUBI
              7b4a 0006  ld   $06
              7b4b 0035  ld   $35         ;17b7 BCC
              7b4c 0053  ld   $53         ;17b8 GE
              7b4d 00de  ld   $de
              7b4e 0059  ld   $59         ;17ba LDI
              7b4f 000a  ld   $0a
              7b50 00f0  ld   $f0         ;17bc POKE
              7b51 0068  ld   $68         ;17bc 'Address'
              7b52 0021  ld   $21         ;17be LDW
              7b53 0068  ld   $68         ;17be 'Address'
              7b54 0088  ld   $88         ;17c0 ORI
              7b55 001f  ld   $1f
              7b56 008c  ld   $8c         ;17c2 XORI
              7b57 001f  ld   $1f
              7b58 002b  ld   $2b         ;17c4 STW
              7b59 0068  ld   $68         ;17c4 'Address'
              7b5a 002b  ld   $2b         ;17c6 STW
              7b5b 0024  ld   $24
              7b5c 0059  ld   $59         ;17c8 LDI
              7b5d 0001  ld   $01
              7b5e 005e  ld   $5e         ;17ca ST
              7b5f 0026  ld   $26
              7b60 0011  ld   $11         ;17cc LDWI
              7b61 0006  ld   $06
              7b62 000b  ld   $0b
              7b63 002b  ld   $2b         ;17cf STW
              7b64 0022  ld   $22         ;17cf '_sysFn'
              7b65 00b4  ld   $b4         ;17d1 SYS
              7b66 00e7  ld   $e7
              7b67 0035  ld   $35         ;17d3 BCC
              7b68 003f  ld   $3f         ;17d4 EQ
              7b69 00da  ld   $da
              7b6a 0059  ld   $59         ;17d6 LDI
              7b6b 0003  ld   $03
              7b6c 005e  ld   $5e         ;17d8 ST
              7b6d 000f  ld   $0f
              7b6e 00cf  ld   $cf         ;17da CALL
              7b6f 0058  ld   $58         ;17da 'TestBreak'
              7b70 0059  ld   $59         ;17dc LDI
              7b71 0008  ld   $08
              7b72 005e  ld   $5e         ;17de ST
              7b73 0027  ld   $27
              7b74 0021  ld   $21         ;17e0 LDW
              7b75 0044  ld   $44         ;17e0 'k'
              7b76 00f0  ld   $f0         ;17e2 POKE
              7b77 0068  ld   $68         ;17e2 'Address'
              7b78 0093  ld   $93         ;17e4 INC
              7b79 0068  ld   $68         ;17e4 'Address'
              7b7a 00cf  ld   $cf         ;17e6 CALL
              7b7b 0054  ld   $54         ;17e6 'PrintCharScreen'
              7b7c 0063  ld   $63         ;17e8 POP
              7b7d 00ff  ld   $ff         ;17e9 RET
              7b7e 002b  ld   $2b         ;17ea STW
              7b7f 0050  ld   $50         ;17ea 'PrintChar'
              7b80 001a  ld   $1a         ;17ec LD
              7b81 000f  ld   $0f
              7b82 008c  ld   $8c         ;17ee XORI
              7b83 00ff  ld   $ff
              7b84 0035  ld   $35         ;17f0 BCC
              7b85 0072  ld   $72         ;17f1 NE
              7b86 00ea  ld   $ea
              7b87 00cf  ld   $cf         ;17f3 CALL
              7b88 007e  ld   $7e         ;17f3 'List'
              7b89 0059  ld   $59         ;17f5 LDI
              7b8a 0020  ld   $20
              7b8b 00cf  ld   $cf         ;17f7 CALL
              7b8c 0050  ld   $50         ;17f7 'PrintChar'
              7b8d 0021  ld   $21         ;17f9 LDW
              7b8e 0054  ld   $54         ;17f9 'PrintCharScreen'
              7b8f 002b  ld   $2b         ;17fb STW
              7b90 0050  ld   $50         ;17fb 'PrintChar'
              7b91 00cf  ld   $cf         ;17fd CALL
              7b92 0062  ld   $62         ;17fd 'EndOfLine'
              7b93 0018  ld   $18         ;| RAM segment address (high byte first)
              7b94 00a0  ld   $a0         ;|
              7b95 0060  ld   $60         ;| Length (1..256)
              7b96 0011  ld   $11         ;18a0 LDWI
              7b97 00e1  ld   $e1
              7b98 0004  ld   $04
              7b99 002b  ld   $2b         ;18a3 STW
              7b9a 0022  ld   $22         ;18a3 '_sysFn'
              7b9b 0059  ld   $59         ;18a5 LDI
              7b9c 0000  ld   $00
              7b9d 005e  ld   $5e         ;18a7 ST
              7b9e 0030  ld   $30         ;18a7 'Pos'
              7b9f 005e  ld   $5e         ;18a9 ST
              7ba0 0026  ld   $26
              7ba1 001a  ld   $1a         ;18ab LD
              7ba2 0031  ld   $31         ;18ab 'Pos'+1
              7ba3 00e3  ld   $e3         ;18ad ADDI
              7ba4 000f  ld   $0f
              7ba5 0082  ld   $82         ;18af ANDI
              7ba6 0078  ld   $78
              7ba7 0035  ld   $35         ;18b1 BCC
              7ba8 0072  ld   $72         ;18b2 NE
              7ba9 00b4  ld   $b4
              7baa 0059  ld   $59         ;18b4 LDI
              7bab 0008  ld   $08
              7bac 005e  ld   $5e         ;18b6 ST
              7bad 0031  ld   $31         ;18b6 'Pos'+1
              7bae 0021  ld   $21         ;18b8 LDW
              7baf 002a  ld   $2a
              7bb0 002b  ld   $2b         ;18ba STW
              7bb1 0024  ld   $24
              7bb2 0021  ld   $21         ;18bc LDW
              7bb3 0030  ld   $30         ;18bc 'Pos'
              7bb4 002b  ld   $2b         ;18be STW
              7bb5 0028  ld   $28
              7bb6 00b4  ld   $b4         ;18c0 SYS
              7bb7 00cc  ld   $cc
              7bb8 0093  ld   $93         ;18c2 INC
              7bb9 0028  ld   $28
              7bba 00b4  ld   $b4         ;18c4 SYS
              7bbb 00cc  ld   $cc
              7bbc 0093  ld   $93         ;18c6 INC
              7bbd 0028  ld   $28
              7bbe 001a  ld   $1a         ;18c8 LD
              7bbf 0028  ld   $28
              7bc0 008c  ld   $8c         ;18ca XORI
              7bc1 00a0  ld   $a0
              7bc2 0035  ld   $35         ;18cc BCC
              7bc3 0072  ld   $72         ;18cd NE
              7bc4 00be  ld   $be
              7bc5 0011  ld   $11         ;18cf LDWI
              7bc6 0000  ld   $00
              7bc7 0001  ld   $01
              7bc8 002b  ld   $2b         ;18d2 STW
              7bc9 0040  ld   $40         ;18d2 'i'
              7bca 0088  ld   $88         ;18d4 ORI
              7bcb 00ff  ld   $ff
              7bcc 00f6  ld   $f6         ;18d6 DEEK
              7bcd 00b8  ld   $b8         ;18d7 SUBW
              7bce 0030  ld   $30         ;18d7 'Pos'
              7bcf 001a  ld   $1a         ;18d9 LD
              7bd0 0019  ld   $19
              7bd1 0035  ld   $35         ;18db BCC
              7bd2 0072  ld   $72         ;18dc NE
              7bd3 00f9  ld   $f9
              7bd4 0021  ld   $21         ;18de LDW
              7bd5 0040  ld   $40         ;18de 'i'
              7bd6 00e3  ld   $e3         ;18e0 ADDI
              7bd7 0010  ld   $10
              7bd8 002b  ld   $2b         ;18e2 STW
              7bd9 0024  ld   $24         ;18e2 '_sysArgs0'
              7bda 00ad  ld   $ad         ;18e4 PEEK
              7bdb 005e  ld   $5e         ;18e5 ST
              7bdc 0026  ld   $26
              7bdd 0021  ld   $21         ;18e7 LDW
              7bde 0040  ld   $40         ;18e7 'i'
              7bdf 00ad  ld   $ad         ;18e9 PEEK
              7be0 00f0  ld   $f0         ;18ea POKE
              7be1 0024  ld   $24         ;18ea '_sysArgs0'
              7be2 001a  ld   $1a         ;18ec LD
              7be3 0026  ld   $26
              7be4 00f0  ld   $f0         ;18ee POKE
              7be5 0040  ld   $40         ;18ee 'i'
              7be6 0093  ld   $93         ;18f0 INC
              7be7 0040  ld   $40         ;18f0 'i'
              7be8 0093  ld   $93         ;18f2 INC
              7be9 0040  ld   $40         ;18f2 'i'
              7bea 001a  ld   $1a         ;18f4 LD
              7beb 0040  ld   $40         ;18f4 'i'
              7bec 008c  ld   $8c         ;18f6 XORI
              7bed 00e0  ld   $e0
              7bee 0035  ld   $35         ;18f8 BCC
              7bef 0072  ld   $72         ;18f9 NE
              7bf0 00dc  ld   $dc
              7bf1 0093  ld   $93         ;18fb INC
              7bf2 0030  ld   $30         ;18fb 'Pos'
              7bf3 0093  ld   $93         ;18fd INC
              7bf4 0030  ld   $30         ;18fd 'Pos'
              7bf5 00ff  ld   $ff         ;18ff RET
              7bf6 0019  ld   $19         ;| RAM segment address (high byte first)
              7bf7 00a0  ld   $a0         ;|
              7bf8 0060  ld   $60         ;| Length (1..256)
              7bf9 0059  ld   $59         ;19a0 LDI
              7bfa 0001  ld   $01
              7bfb fe00  bra  ac          ;+-----------------------------------+
              7bfc fcfd  bra  $7bfd       ;|                                   |
              7bfd 1418  ld   $18,y       ;| Trampoline for page $7b00 lookups |
              7bfe e006  jmp  y,$06       ;|                                   |
              7bff c218  st   [$18]       ;+-----------------------------------+
              7c00 002b  ld   $2b         ;19a2 STW
              7c01 0024  ld   $24
              7c02 0011  ld   $11         ;19a4 LDWI
              7c03 0000  ld   $00
              7c04 0001  ld   $01
              7c05 002b  ld   $2b         ;19a7 STW
              7c06 0026  ld   $26
              7c07 00cf  ld   $cf         ;19a9 CALL
              7c08 003a  ld   $3a         ;19a9 'Expression'
              7c09 0075  ld   $75         ;19ab PUSH
              7c0a 00ec  ld   $ec         ;19ac STLW
              7c0b 0000  ld   $00
              7c0c 00cf  ld   $cf         ;19ae CALL
              7c0d 0038  ld   $38         ;19ae 'Keyword'
              7c0e 002c  ld   $2c         ;19b0 ','
              7c0f 0000  ld   $00         ;19b1 0
              7c10 0035  ld   $35         ;19b2 BCC
              7c11 0072  ld   $72         ;19b3 NE
              7c12 00b5  ld   $b5
              7c13 00cf  ld   $cf         ;19b5 CALL
              7c14 004a  ld   $4a         ;19b5 'SyntaxError'
              7c15 00cf  ld   $cf         ;19b7 CALL
              7c16 003a  ld   $3a         ;19b7 'Expression'
              7c17 002b  ld   $2b         ;19b9 STW
              7c18 006a  ld   $6a         ;19b9 'j'
              7c19 0035  ld   $35         ;19bb BCC
              7c1a 0053  ld   $53         ;19bc GE
              7c1b 00c8  ld   $c8
              7c1c 0059  ld   $59         ;19be LDI
              7c1d 0000  ld   $00
              7c1e 00b8  ld   $b8         ;19c0 952
              7c1f 0026  ld   $26         ;19c1 38
              7c20 002b  ld   $2b         ;19c2 STW
              7c21 0026  ld   $26
              7c22 0059  ld   $59         ;19c4 LDI
              7c23 0000  ld   $00
              7c24 00b8  ld   $b8         ;19c6 SUBW
              7c25 006a  ld   $6a         ;19c6 'j'
              7c26 002b  ld   $2b         ;19c8 STW
              7c27 006a  ld   $6a         ;19c8 'j'
              7c28 00ee  ld   $ee         ;19ca LDLW
              7c29 0000  ld   $00
              7c2a 002b  ld   $2b         ;19cc STW
              7c2b 0040  ld   $40         ;19cc 'i'
              7c2c 0035  ld   $35         ;19ce BCC
              7c2d 0053  ld   $53         ;19cf GE
              7c2e 00db  ld   $db
              7c2f 0059  ld   $59         ;19d1 LDI
              7c30 0000  ld   $00
              7c31 00b8  ld   $b8         ;19d3 952
              7c32 0024  ld   $24         ;19d4 36
              7c33 002b  ld   $2b         ;19d5 STW
              7c34 0024  ld   $24
              7c35 0059  ld   $59         ;19d7 LDI
              7c36 0000  ld   $00
              7c37 00b8  ld   $b8         ;19d9 SUBW
              7c38 0040  ld   $40         ;19d9 'i'
              7c39 002b  ld   $2b         ;19db STW
              7c3a 0040  ld   $40         ;19db 'i'
              7c3b 00b8  ld   $b8         ;19dd SUBW
              7c3c 006a  ld   $6a         ;19dd 'j'
              7c3d 0035  ld   $35         ;19df BCC
              7c3e 0053  ld   $53         ;19e0 GE
              7c3f 00f8  ld   $f8
              7c40 0021  ld   $21         ;19e2 LDW
              7c41 0040  ld   $40         ;19e2 'i'
              7c42 002b  ld   $2b         ;19e4 STW
              7c43 004e  ld   $4e         ;19e4 'tmp'
              7c44 0021  ld   $21         ;19e6 LDW
              7c45 006a  ld   $6a         ;19e6 'j'
              7c46 002b  ld   $2b         ;19e8 STW
              7c47 0040  ld   $40         ;19e8 'i'
              7c48 0021  ld   $21         ;19ea LDW
              7c49 004e  ld   $4e         ;19ea 'tmp'
              7c4a 002b  ld   $2b         ;19ec STW
              7c4b 006a  ld   $6a         ;19ec 'j'
              7c4c 0021  ld   $21         ;19ee LDW
              7c4d 0024  ld   $24
              7c4e 002b  ld   $2b         ;19f0 STW
              7c4f 004e  ld   $4e         ;19f0 'tmp'
              7c50 0021  ld   $21         ;19f2 LDW
              7c51 0026  ld   $26
              7c52 002b  ld   $2b         ;19f4 STW
              7c53 0024  ld   $24
              7c54 0021  ld   $21         ;19f6 LDW
              7c55 004e  ld   $4e         ;19f6 'tmp'
              7c56 002b  ld   $2b         ;19f8 STW
              7c57 0026  ld   $26
              7c58 0063  ld   $63         ;19fa POP
              7c59 0011  ld   $11         ;19fb LDWI
              7c5a 00a0  ld   $a0
              7c5b 001a  ld   $1a
              7c5c 00cf  ld   $cf         ;19fe CALL
              7c5d 0018  ld   $18         ;19fe vAC
              7c5e 001a  ld   $1a         ;| RAM segment address (high byte first)
              7c5f 00a0  ld   $a0         ;|
              7c60 0060  ld   $60         ;| Length (1..256)
              7c61 0021  ld   $21         ;1aa0 LDW
              7c62 003c  ld   $3c         ;1aa0 'Value'
              7c63 0035  ld   $35         ;1aa2 BCC
              7c64 0053  ld   $53         ;1aa3 GE
              7c65 00a8  ld   $a8
              7c66 0011  ld   $11         ;1aa5 LDWI
              7c67 0000  ld   $00
              7c68 0078  ld   $78
              7c69 0090  ld   $90         ;1aa8 BRA
              7c6a 00ab  ld   $ab
              7c6b 0011  ld   $11         ;1aaa LDWI
              7c6c 0000  ld   $00
              7c6d 0088  ld   $88
              7c6e 002b  ld   $2b         ;1aad STW
              7c6f 0028  ld   $28
              7c70 0021  ld   $21         ;1aaf LDW
              7c71 0040  ld   $40         ;1aaf 'i'
              7c72 002b  ld   $2b         ;1ab1 STW
              7c73 004e  ld   $4e         ;1ab1 'tmp'
              7c74 002b  ld   $2b         ;1ab3 STW
              7c75 0044  ld   $44         ;1ab3 'k'
              7c76 001a  ld   $1a         ;1ab5 LD
              7c77 002b  ld   $2b
              7c78 00f0  ld   $f0         ;1ab7 POKE
              7c79 0030  ld   $30         ;1ab7 'Pos'
              7c7a 0021  ld   $21         ;1ab9 LDW
              7c7b 004e  ld   $4e         ;1ab9 'tmp'
              7c7c 00e6  ld   $e6         ;1abb SUBI
              7c7d 0001  ld   $01
              7c7e 002b  ld   $2b         ;1abd STW
              7c7f 004e  ld   $4e         ;1abd 'tmp'
              7c80 0035  ld   $35         ;1abf BCC
              7c81 0050  ld   $50         ;1ac0 LT
              7c82 00fc  ld   $fc
              7c83 0021  ld   $21         ;1ac2 LDW
              7c84 0044  ld   $44         ;1ac2 'k'
              7c85 00b8  ld   $b8         ;1ac4 SUBW
              7c86 006a  ld   $6a         ;1ac4 'j'
              7c87 00b8  ld   $b8         ;1ac6 SUBW
              7c88 006a  ld   $6a         ;1ac6 'j'
              7c89 002b  ld   $2b         ;1ac8 STW
              7c8a 0044  ld   $44         ;1ac8 'k'
              7c8b 0035  ld   $35         ;1aca BCC
              7c8c 0053  ld   $53         ;1acb GE
              7c8d 00d7  ld   $d7
              7c8e 0099  ld   $99         ;1acd ADDW
              7c8f 0040  ld   $40         ;1acd 'i'
              7c90 0099  ld   $99         ;1acf ADDW
              7c91 0040  ld   $40         ;1acf 'i'
              7c92 002b  ld   $2b         ;1ad1 STW
              7c93 0044  ld   $44         ;1ad1 'k'
              7c94 0021  ld   $21         ;1ad3 LDW
              7c95 0026  ld   $26
              7c96 0099  ld   $99         ;1ad5 ADDW
              7c97 0030  ld   $30         ;1ad5 'Pos'
              7c98 002b  ld   $2b         ;1ad7 STW
              7c99 0030  ld   $30         ;1ad7 'Pos'
              7c9a 0021  ld   $21         ;1ad9 LDW
              7c9b 0024  ld   $24
              7c9c 0099  ld   $99         ;1adb ADDW
              7c9d 0030  ld   $30         ;1adb 'Pos'
              7c9e 002b  ld   $2b         ;1add STW
              7c9f 0030  ld   $30         ;1add 'Pos'
              7ca0 001a  ld   $1a         ;1adf LD
              7ca1 0030  ld   $30         ;1adf 'Pos'
              7ca2 00e6  ld   $e6         ;1ae1 SUBI
              7ca3 00a0  ld   $a0
              7ca4 0035  ld   $35         ;1ae3 BCC
              7ca5 0050  ld   $50         ;1ae4 LT
              7ca6 00ed  ld   $ed
              7ca7 0035  ld   $35         ;1ae6 BCC
              7ca8 0056  ld   $56         ;1ae7 LE
              7ca9 00eb  ld   $eb
              7caa 0093  ld   $93         ;1ae9 INC
              7cab 0031  ld   $31         ;1ae9 'Pos'+1
              7cac 00e3  ld   $e3         ;1aeb ADDI
              7cad 0040  ld   $40
              7cae 005e  ld   $5e         ;1aed ST
              7caf 0030  ld   $30         ;1aed 'Pos'
              7cb0 001a  ld   $1a         ;1aef LD
              7cb1 0031  ld   $31         ;1aef 'Pos'+1
              7cb2 0082  ld   $82         ;1af1 ANDI
              7cb3 0078  ld   $78
              7cb4 0035  ld   $35         ;1af3 BCC
              7cb5 0072  ld   $72         ;1af4 NE
              7cb6 00fa  ld   $fa
              7cb7 0021  ld   $21         ;1af6 LDW
              7cb8 0028  ld   $28
              7cb9 0099  ld   $99         ;1af8 ADDW
              7cba 0030  ld   $30         ;1af8 'Pos'
              7cbb 002b  ld   $2b         ;1afa STW
              7cbc 0030  ld   $30         ;1afa 'Pos'
              7cbd 0090  ld   $90         ;1afc BRA
              7cbe 00b3  ld   $b3
              7cbf 00cf  ld   $cf         ;1afe CALL
              7cc0 0062  ld   $62         ;1afe 'EndOfLine'
              7cc1 001b  ld   $1b         ;| RAM segment address (high byte first)
              7cc2 00a0  ld   $a0         ;|
              7cc3 0006  ld   $06         ;| Length (1..256)
              7cc4 00a0  ld   $a0         ;1ba0 _Buffer
              7cc5 001b  ld   $1b
              7cc6 004e  ld   $4e         ;1ba2 'N'
              7cc7 0045  ld   $45         ;1ba3 'E'
              7cc8 0057  ld   $57         ;1ba4 'W'
              7cc9 0000  ld   $00         ;1ba5 0
              7cca 0000  ld   $00         ;End of Apps/TinyBASIC/TinyBASIC_v4.gcl, size 3194
                                          ;+-----------------------------------+
                                          ;| Apps/TicTac/LoadTicTac_v1.gcl     |
                                          ;+-----------------------------------+
              7ccb dc54  st   $54,[y,x++] ;'T'
              7ccc dc69  st   $69,[y,x++] ;'i'
              7ccd dc6e  st   $6e,[y,x++] ;'n'
              7cce dc79  st   $79,[y,x++] ;'y'
              7ccf dc42  st   $42,[y,x++] ;'B'
              7cd0 dc41  st   $41,[y,x++] ;'A'
              7cd1 dc53  st   $53,[y,x++] ;'S'
              7cd2 dc49  st   $49,[y,x++] ;'I'
              7cd3 0051  ld   $51
              7cd4 c218  st   [$18]
              7cd5 0070  ld   $70
              7cd6 14e1  ld   $e1,y
              7cd7 e071  jmp  y,$71
              7cd8 c219  st   [$19]
TicTac:       7cd9 0002  ld   $02         ;| RAM segment address (high byte first)
              7cda 0000  ld   $00         ;|
              7cdb 0010  ld   $10         ;| Length (1..256)
              7cdc 0059  ld   $59         ;0200 LDI
              7cdd 00ad  ld   $ad
              7cde 002b  ld   $2b         ;0202 STW
              7cdf 0022  ld   $22         ;0202 '_sysFn'
              7ce0 0011  ld   $11         ;0204 LDWI
              7ce1 00a0  ld   $a0
              7ce2 00ff  ld   $ff
              7ce3 002b  ld   $2b         ;0207 STW
              7ce4 001a  ld   $1a         ;0207 '_vLR'
              7ce5 0011  ld   $11         ;0209 LDWI
              7ce6 0051  ld   $51
              7ce7 0070  ld   $70
              7ce8 002b  ld   $2b         ;020c STW
              7ce9 0024  ld   $24         ;020c '_sysArgs0'
              7cea 00b4  ld   $b4         ;020e SYS
              7ceb 00e3  ld   $e3
              7cec 00ff  ld   $ff         ;| RAM segment address (high byte first)
              7ced 00a0  ld   $a0         ;|
              7cee 000c  ld   $0c         ;| Length (1..256)
              7cef 0011  ld   $11         ;ffa0 LDWI
              7cf0 0000  ld   $00
              7cf1 0002  ld   $02
              7cf2 002b  ld   $2b         ;ffa3 STW
              7cf3 001a  ld   $1a         ;ffa3 '_vLR'
              7cf4 0011  ld   $11         ;ffa5 LDWI
              7cf5 0001  ld   $01
              7cf6 007d  ld   $7d
              7cf7 002b  ld   $2b         ;ffa8 STW
              7cf8 0024  ld   $24         ;ffa8 '_sysArgs0'
              7cf9 00b4  ld   $b4         ;ffaa SYS
              7cfa 00e3  ld   $e3
              7cfb fe00  bra  ac          ;+-----------------------------------+
              7cfc fcfd  bra  $7cfd       ;|                                   |
              7cfd 1418  ld   $18,y       ;| Trampoline for page $7c00 lookups |
              7cfe e006  jmp  y,$06       ;|                                   |
              7cff c218  st   [$18]       ;+-----------------------------------+
              7d00 0000  ld   $00         ;End of Apps/TicTac/LoadTicTac_v1.gcl, size 40
                                          ;+-----------------------------------+
                                          ;| Apps/TicTac/TicTac_v2.gtb         |
                                          ;+-----------------------------------+
TicTacGtb:    7d01 001b  ld   $1b
              7d02 00c0  ld   $c0
              7d03 0019  ld   $19
              7d04 0064  ld   $64
              7d05 0000  ld   $00
              7d06 0027  ld   $27         ;"'"
              7d07 0054  ld   $54         ;'T'
              7d08 0049  ld   $49         ;'I'
              7d09 0043  ld   $43         ;'C'
              7d0a 002d  ld   $2d         ;'-'
              7d0b 0054  ld   $54         ;'T'
              7d0c 0041  ld   $41         ;'A'
              7d0d 0043  ld   $43         ;'C'
              7d0e 002d  ld   $2d         ;'-'
              7d0f 0054  ld   $54         ;'T'
              7d10 004f  ld   $4f         ;'O'
              7d11 0045  ld   $45         ;'E'
              7d12 002e  ld   $2e         ;'.'
              7d13 0020  ld   $20         ;' '
              7d14 0059  ld   $59         ;'Y'
              7d15 004f  ld   $4f         ;'O'
              7d16 0055  ld   $55         ;'U'
              7d17 0020  ld   $20         ;' '
              7d18 0028  ld   $28         ;'('
              7d19 0058  ld   $58         ;'X'
              7d1a 0029  ld   $29         ;')'
              7d1b 0020  ld   $20         ;' '
              7d1c 0000  ld   $00         ;'\x00'
              7d1d 001b  ld   $1b
              7d1e 00e0  ld   $e0
              7d1f 0015  ld   $15
              7d20 00d2  ld   $d2
              7d21 0000  ld   $00
              7d22 003f  ld   $3f         ;'?'
              7d23 0022  ld   $22         ;'"'
              7d24 0054  ld   $54         ;'T'
              7d25 004f  ld   $4f         ;'O'
              7d26 004d  ld   $4d         ;'M'
              7d27 0020  ld   $20         ;' '
              7d28 0050  ld   $50         ;'P'
              7d29 0049  ld   $49         ;'I'
              7d2a 0054  ld   $54         ;'T'
              7d2b 0054  ld   $54         ;'T'
              7d2c 004d  ld   $4d         ;'M'
              7d2d 0041  ld   $41         ;'A'
              7d2e 004e  ld   $4e         ;'N'
              7d2f 0027  ld   $27         ;"'"
              7d30 0053  ld   $53         ;'S'
              7d31 0020  ld   $20         ;' '
              7d32 0022  ld   $22         ;'"'
              7d33 003b  ld   $3b         ;';'
              7d34 0000  ld   $00         ;'\x00'
              7d35 001c  ld   $1c
              7d36 00a0  ld   $a0
              7d37 0012  ld   $12
              7d38 00d3  ld   $d3
              7d39 0000  ld   $00
              7d3a 003f  ld   $3f         ;'?'
              7d3b 0022  ld   $22         ;'"'
              7d3c 0054  ld   $54         ;'T'
              7d3d 0049  ld   $49         ;'I'
              7d3e 0043  ld   $43         ;'C'
              7d3f 002d  ld   $2d         ;'-'
              7d40 0054  ld   $54         ;'T'
              7d41 0041  ld   $41         ;'A'
              7d42 0043  ld   $43         ;'C'
              7d43 002d  ld   $2d         ;'-'
              7d44 0054  ld   $54         ;'T'
              7d45 004f  ld   $4f         ;'O'
              7d46 0045  ld   $45         ;'E'
              7d47 002e  ld   $2e         ;'.'
              7d48 0022  ld   $22         ;'"'
              7d49 0000  ld   $00         ;'\x00'
              7d4a 001c  ld   $1c
              7d4b 00c0  ld   $c0
              7d4c 0012  ld   $12
              7d4d 00d4  ld   $d4
              7d4e 0000  ld   $00
              7d4f 003f  ld   $3f         ;'?'
              7d50 0022  ld   $22         ;'"'
              7d51 0059  ld   $59         ;'Y'
              7d52 004f  ld   $4f         ;'O'
              7d53 0055  ld   $55         ;'U'
              7d54 0020  ld   $20         ;' '
              7d55 0041  ld   $41         ;'A'
              7d56 0047  ld   $47         ;'G'
              7d57 0041  ld   $41         ;'A'
              7d58 0049  ld   $49         ;'I'
              7d59 004e  ld   $4e         ;'N'
              7d5a 0053  ld   $53         ;'S'
              7d5b 0054  ld   $54         ;'T'
              7d5c 0022  ld   $22         ;'"'
              7d5d 003b  ld   $3b         ;';'
              7d5e 0000  ld   $00         ;'\x00'
              7d5f 001c  ld   $1c
              7d60 00e0  ld   $e0
              7d61 0011  ld   $11
              7d62 00d5  ld   $d5
              7d63 0000  ld   $00
              7d64 003f  ld   $3f         ;'?'
              7d65 0022  ld   $22         ;'"'
              7d66 0020  ld   $20         ;' '
              7d67 0054  ld   $54         ;'T'
              7d68 0049  ld   $49         ;'I'
              7d69 004e  ld   $4e         ;'N'
              7d6a 0059  ld   $59         ;'Y'
              7d6b 0020  ld   $20         ;' '
              7d6c 0042  ld   $42         ;'B'
              7d6d 0041  ld   $41         ;'A'
              7d6e 0053  ld   $53         ;'S'
              7d6f 0049  ld   $49         ;'I'
              7d70 0043  ld   $43         ;'C'
              7d71 0022  ld   $22         ;'"'
              7d72 0000  ld   $00         ;'\x00'
              7d73 001d  ld   $1d
              7d74 00a0  ld   $a0
              7d75 0016  ld   $16
              7d76 00dd  ld   $dd
              7d77 0000  ld   $00
              7d78 003f  ld   $3f         ;'?'
              7d79 0022  ld   $22         ;'"'
              7d7a 0059  ld   $59         ;'Y'
              7d7b 004f  ld   $4f         ;'O'
              7d7c 0055  ld   $55         ;'U'
              7d7d 0020  ld   $20         ;' '
              7d7e 0041  ld   $41         ;'A'
              7d7f 0052  ld   $52         ;'R'
              7d80 0045  ld   $45         ;'E'
              7d81 0020  ld   $20         ;' '
              7d82 0058  ld   $58         ;'X'
              7d83 002e  ld   $2e         ;'.'
              7d84 0020  ld   $20         ;' '
              7d85 0049  ld   $49         ;'I'
              7d86 0020  ld   $20         ;' '
              7d87 0041  ld   $41         ;'A'
              7d88 004d  ld   $4d         ;'M'
              7d89 0022  ld   $22         ;'"'
              7d8a 003b  ld   $3b         ;';'
              7d8b 0000  ld   $00         ;'\x00'
              7d8c 001d  ld   $1d
              7d8d 00c0  ld   $c0
              7d8e 000d  ld   $0d
              7d8f 00de  ld   $de
              7d90 0000  ld   $00
              7d91 003f  ld   $3f         ;'?'
              7d92 0022  ld   $22         ;'"'
              7d93 0020  ld   $20         ;' '
              7d94 004f  ld   $4f         ;'O'
              7d95 002e  ld   $2e         ;'.'
              7d96 0020  ld   $20         ;' '
              7d97 0059  ld   $59         ;'Y'
              7d98 004f  ld   $4f         ;'O'
              7d99 0055  ld   $55         ;'U'
              7d9a 0022  ld   $22         ;'"'
              7d9b 0000  ld   $00         ;'\x00'
              7d9c 001d  ld   $1d
              7d9d 00e0  ld   $e0
              7d9e 0010  ld   $10
              7d9f 00e7  ld   $e7
              7da0 0000  ld   $00
              7da1 003f  ld   $3f         ;'?'
              7da2 0022  ld   $22         ;'"'
              7da3 0050  ld   $50         ;'P'
              7da4 004c  ld   $4c         ;'L'
              7da5 0041  ld   $41         ;'A'
              7da6 0059  ld   $59         ;'Y'
              7da7 0020  ld   $20         ;' '
              7da8 0059  ld   $59         ;'Y'
              7da9 004f  ld   $4f         ;'O'
              7daa 0055  ld   $55         ;'U'
              7dab 0052  ld   $52         ;'R'
              7dac 0022  ld   $22         ;'"'
              7dad 003b  ld   $3b         ;';'
              7dae 0000  ld   $00         ;'\x00'
              7daf 001e  ld   $1e
              7db0 00a0  ld   $a0
              7db1 0015  ld   $15
              7db2 00e8  ld   $e8
              7db3 0000  ld   $00
              7db4 003f  ld   $3f         ;'?'
              7db5 0022  ld   $22         ;'"'
              7db6 0020  ld   $20         ;' '
              7db7 0054  ld   $54         ;'T'
              7db8 0055  ld   $55         ;'U'
              7db9 0052  ld   $52         ;'R'
              7dba 004e  ld   $4e         ;'N'
              7dbb 0020  ld   $20         ;' '
              7dbc 0042  ld   $42         ;'B'
              7dbd 0059  ld   $59         ;'Y'
              7dbe 0020  ld   $20         ;' '
              7dbf 0054  ld   $54         ;'T'
              7dc0 0059  ld   $59         ;'Y'
              7dc1 0050  ld   $50         ;'P'
              7dc2 0049  ld   $49         ;'I'
              7dc3 004e  ld   $4e         ;'N'
              7dc4 0047  ld   $47         ;'G'
              7dc5 0022  ld   $22         ;'"'
              7dc6 0000  ld   $00         ;'\x00'
              7dc7 001e  ld   $1e
              7dc8 00c0  ld   $c0
              7dc9 0016  ld   $16
              7dca 00e9  ld   $e9
              7dcb 0000  ld   $00
              7dcc 003f  ld   $3f         ;'?'
              7dcd 0022  ld   $22         ;'"'
              7dce 0054  ld   $54         ;'T'
              7dcf 0048  ld   $48         ;'H'
              7dd0 0045  ld   $45         ;'E'
              7dd1 0020  ld   $20         ;' '
              7dd2 004e  ld   $4e         ;'N'
              7dd3 0055  ld   $55         ;'U'
              7dd4 004d  ld   $4d         ;'M'
              7dd5 0042  ld   $42         ;'B'
              7dd6 0045  ld   $45         ;'E'
              7dd7 0052  ld   $52         ;'R'
              7dd8 0020  ld   $20         ;' '
              7dd9 004f  ld   $4f         ;'O'
              7dda 0046  ld   $46         ;'F'
              7ddb 0020  ld   $20         ;' '
              7ddc 0041  ld   $41         ;'A'
              7ddd 0022  ld   $22         ;'"'
              7dde 003b  ld   $3b         ;';'
              7ddf 0000  ld   $00         ;'\x00'
              7de0 001e  ld   $1e
              7de1 00e0  ld   $e0
              7de2 000e  ld   $0e
              7de3 00ea  ld   $ea
              7de4 0000  ld   $00
              7de5 003f  ld   $3f         ;'?'
              7de6 0022  ld   $22         ;'"'
              7de7 0020  ld   $20         ;' '
              7de8 0053  ld   $53         ;'S'
              7de9 0051  ld   $51         ;'Q'
              7dea 0055  ld   $55         ;'U'
              7deb 0041  ld   $41         ;'A'
              7dec 0052  ld   $52         ;'R'
              7ded 0045  ld   $45         ;'E'
              7dee 002e  ld   $2e         ;'.'
              7def 0022  ld   $22         ;'"'
              7df0 0000  ld   $00         ;'\x00'
              7df1 001f  ld   $1f
              7df2 00a0  ld   $a0
              7df3 0006  ld   $06
              7df4 00f0  ld   $f0
              7df5 0000  ld   $00
              7df6 0041  ld   $41         ;'A'
              7df7 003d  ld   $3d         ;'='
              7df8 0030  ld   $30         ;'0'
              7df9 0000  ld   $00         ;'\x00'
              7dfa 001f  ld   $1f
              7dfb fe00  bra  ac          ;+-----------------------------------+
              7dfc fcfd  bra  $7dfd       ;|                                   |
              7dfd 1418  ld   $18,y       ;| Trampoline for page $7d00 lookups |
              7dfe e006  jmp  y,$06       ;|                                   |
              7dff c218  st   [$18]       ;+-----------------------------------+
              7e00 00c0  ld   $c0
              7e01 0006  ld   $06
              7e02 00fa  ld   $fa
              7e03 0000  ld   $00
              7e04 0042  ld   $42         ;'B'
              7e05 003d  ld   $3d         ;'='
              7e06 0030  ld   $30         ;'0'
              7e07 0000  ld   $00         ;'\x00'
              7e08 001f  ld   $1f
              7e09 00e0  ld   $e0
              7e0a 0006  ld   $06
              7e0b 0004  ld   $04
              7e0c 0001  ld   $01
              7e0d 0043  ld   $43         ;'C'
              7e0e 003d  ld   $3d         ;'='
              7e0f 0030  ld   $30         ;'0'
              7e10 0000  ld   $00         ;'\x00'
              7e11 0020  ld   $20
              7e12 00a0  ld   $a0
              7e13 0006  ld   $06
              7e14 000e  ld   $0e
              7e15 0001  ld   $01
              7e16 0044  ld   $44         ;'D'
              7e17 003d  ld   $3d         ;'='
              7e18 0030  ld   $30         ;'0'
              7e19 0000  ld   $00         ;'\x00'
              7e1a 0020  ld   $20
              7e1b 00c0  ld   $c0
              7e1c 0006  ld   $06
              7e1d 0018  ld   $18
              7e1e 0001  ld   $01
              7e1f 0045  ld   $45         ;'E'
              7e20 003d  ld   $3d         ;'='
              7e21 0030  ld   $30         ;'0'
              7e22 0000  ld   $00         ;'\x00'
              7e23 0020  ld   $20
              7e24 00e0  ld   $e0
              7e25 0006  ld   $06
              7e26 0022  ld   $22
              7e27 0001  ld   $01
              7e28 0046  ld   $46         ;'F'
              7e29 003d  ld   $3d         ;'='
              7e2a 0030  ld   $30         ;'0'
              7e2b 0000  ld   $00         ;'\x00'
              7e2c 0021  ld   $21
              7e2d 00a0  ld   $a0
              7e2e 0006  ld   $06
              7e2f 00e8  ld   $e8
              7e30 0003  ld   $03
              7e31 0046  ld   $46         ;'F'
              7e32 003d  ld   $3d         ;'='
              7e33 0031  ld   $31         ;'1'
              7e34 0000  ld   $00         ;'\x00'
              7e35 0021  ld   $21
              7e36 00c0  ld   $c0
              7e37 0004  ld   $04
              7e38 00f2  ld   $f2
              7e39 0003  ld   $03
              7e3a 003f  ld   $3f         ;'?'
              7e3b 0000  ld   $00         ;'\x00'
              7e3c 0021  ld   $21
              7e3d 00e0  ld   $e0
              7e3e 000f  ld   $0f
              7e3f 00fc  ld   $fc
              7e40 0003  ld   $03
              7e41 003f  ld   $3f         ;'?'
              7e42 0022  ld   $22         ;'"'
              7e43 004e  ld   $4e         ;'N'
              7e44 0045  ld   $45         ;'E'
              7e45 0057  ld   $57         ;'W'
              7e46 0020  ld   $20         ;' '
              7e47 0047  ld   $47         ;'G'
              7e48 0041  ld   $41         ;'A'
              7e49 004d  ld   $4d         ;'M'
              7e4a 0045  ld   $45         ;'E'
              7e4b 002e  ld   $2e         ;'.'
              7e4c 0022  ld   $22         ;'"'
              7e4d 0000  ld   $00         ;'\x00'
              7e4e 0022  ld   $22
              7e4f 00a0  ld   $a0
              7e50 0006  ld   $06
              7e51 004c  ld   $4c
              7e52 0004  ld   $04
              7e53 0049  ld   $49         ;'I'
              7e54 003d  ld   $3d         ;'='
              7e55 0037  ld   $37         ;'7'
              7e56 0000  ld   $00         ;'\x00'
              7e57 0022  ld   $22
              7e58 00c0  ld   $c0
              7e59 000f  ld   $0f
              7e5a 0056  ld   $56
              7e5b 0004  ld   $04
              7e5c 0041  ld   $41         ;'A'
              7e5d 0028  ld   $28         ;'('
              7e5e 0049  ld   $49         ;'I'
              7e5f 0029  ld   $29         ;')'
              7e60 003d  ld   $3d         ;'='
              7e61 0030  ld   $30         ;'0'
              7e62 003a  ld   $3a         ;':'
              7e63 0049  ld   $49         ;'I'
              7e64 003d  ld   $3d         ;'='
              7e65 0049  ld   $49         ;'I'
              7e66 002b  ld   $2b         ;'+'
              7e67 0031  ld   $31         ;'1'
              7e68 0000  ld   $00         ;'\x00'
              7e69 0022  ld   $22
              7e6a 00e0  ld   $e0
              7e6b 0011  ld   $11
              7e6c 0060  ld   $60
              7e6d 0004  ld   $04
              7e6e 0049  ld   $49         ;'I'
              7e6f 0046  ld   $46         ;'F'
              7e70 0049  ld   $49         ;'I'
              7e71 003c  ld   $3c         ;'<'
              7e72 0031  ld   $31         ;'1'
              7e73 0036  ld   $36         ;'6'
              7e74 0047  ld   $47         ;'G'
              7e75 004f  ld   $4f         ;'O'
              7e76 0054  ld   $54         ;'T'
              7e77 004f  ld   $4f         ;'O'
              7e78 0031  ld   $31         ;'1'
              7e79 0031  ld   $31         ;'1'
              7e7a 0031  ld   $31         ;'1'
              7e7b 0030  ld   $30         ;'0'
              7e7c 0000  ld   $00         ;'\x00'
              7e7d 0023  ld   $23
              7e7e 00a0  ld   $a0
              7e7f 0006  ld   $06
              7e80 006a  ld   $6a
              7e81 0004  ld   $04
              7e82 0055  ld   $55         ;'U'
              7e83 003d  ld   $3d         ;'='
              7e84 0039  ld   $39         ;'9'
              7e85 0000  ld   $00         ;'\x00'
              7e86 0023  ld   $23
              7e87 00c0  ld   $c0
              7e88 0006  ld   $06
              7e89 0074  ld   $74
              7e8a 0004  ld   $04
              7e8b 005a  ld   $5a         ;'Z'
              7e8c 003d  ld   $3d         ;'='
              7e8d 0030  ld   $30         ;'0'
              7e8e 0000  ld   $00         ;'\x00'
              7e8f 0023  ld   $23
              7e90 00e0  ld   $e0
              7e91 0010  ld   $10
              7e92 007f  ld   $7f
              7e93 0004  ld   $04
              7e94 0049  ld   $49         ;'I'
              7e95 0046  ld   $46         ;'F'
              7e96 0046  ld   $46         ;'F'
              7e97 003d  ld   $3d         ;'='
              7e98 0030  ld   $30         ;'0'
              7e99 0047  ld   $47         ;'G'
              7e9a 004f  ld   $4f         ;'O'
              7e9b 0054  ld   $54         ;'T'
              7e9c 004f  ld   $4f         ;'O'
              7e9d 0034  ld   $34         ;'4'
              7e9e 0030  ld   $30         ;'0'
              7e9f 0031  ld   $31         ;'1'
              7ea0 0030  ld   $30         ;'0'
              7ea1 0000  ld   $00         ;'\x00'
              7ea2 0024  ld   $24
              7ea3 00a0  ld   $a0
              7ea4 000b  ld   $0b
              7ea5 0089  ld   $89
              7ea6 0004  ld   $04
              7ea7 0047  ld   $47         ;'G'
              7ea8 004f  ld   $4f         ;'O'
              7ea9 0054  ld   $54         ;'T'
              7eaa 004f  ld   $4f         ;'O'
              7eab 0032  ld   $32         ;'2'
              7eac 0030  ld   $30         ;'0'
              7ead 0031  ld   $31         ;'1'
              7eae 0030  ld   $30         ;'0'
              7eaf 0000  ld   $00         ;'\x00'
              7eb0 0024  ld   $24
              7eb1 00c0  ld   $c0
              7eb2 0006  ld   $06
              7eb3 00e6  ld   $e6
              7eb4 0005  ld   $05
              7eb5 005a  ld   $5a         ;'Z'
              7eb6 003d  ld   $3d         ;'='
              7eb7 0031  ld   $31         ;'1'
              7eb8 0000  ld   $00         ;'\x00'
              7eb9 0024  ld   $24
              7eba 00e0  ld   $e0
              7ebb 0006  ld   $06
              7ebc 00f0  ld   $f0
              7ebd 0005  ld   $05
              7ebe 0046  ld   $46         ;'F'
              7ebf 003d  ld   $3d         ;'='
              7ec0 0030  ld   $30         ;'0'
              7ec1 0000  ld   $00         ;'\x00'
              7ec2 0025  ld   $25
              7ec3 00a0  ld   $a0
              7ec4 0006  ld   $06
              7ec5 00da  ld   $da
              7ec6 0007  ld   $07
              7ec7 0049  ld   $49         ;'I'
              7ec8 003d  ld   $3d         ;'='
              7ec9 0036  ld   $36         ;'6'
              7eca 0000  ld   $00         ;'\x00'
              7ecb 0025  ld   $25
              7ecc 00c0  ld   $c0
              7ecd 0008  ld   $08
              7ece 003e  ld   $3e
              7ecf 0008  ld   $08
              7ed0 0049  ld   $49         ;'I'
              7ed1 003d  ld   $3d         ;'='
              7ed2 0049  ld   $49         ;'I'
              7ed3 002b  ld   $2b         ;'+'
              7ed4 0031  ld   $31         ;'1'
              7ed5 0000  ld   $00         ;'\x00'
              7ed6 0025  ld   $25
              7ed7 00e0  ld   $e0
              7ed8 0008  ld   $08
              7ed9 0048  ld   $48
              7eda 0008  ld   $08
              7edb 003f  ld   $3f         ;'?'
              7edc 0022  ld   $22         ;'"'
              7edd 0020  ld   $20         ;' '
              7ede 0022  ld   $22         ;'"'
              7edf 003b  ld   $3b         ;';'
              7ee0 0000  ld   $00         ;'\x00'
              7ee1 0026  ld   $26
              7ee2 00a0  ld   $a0
              7ee3 0013  ld   $13
              7ee4 0053  ld   $53
              7ee5 0008  ld   $08
              7ee6 0047  ld   $47         ;'G'
              7ee7 004f  ld   $4f         ;'O'
              7ee8 0054  ld   $54         ;'T'
              7ee9 004f  ld   $4f         ;'O'
              7eea 0041  ld   $41         ;'A'
              7eeb 0028  ld   $28         ;'('
              7eec 0049  ld   $49         ;'I'
              7eed 0029  ld   $29         ;')'
              7eee 002a  ld   $2a         ;'*'
              7eef 0032  ld   $32         ;'2'
              7ef0 0030  ld   $30         ;'0'
              7ef1 002b  ld   $2b         ;'+'
              7ef2 0032  ld   $32         ;'2'
              7ef3 0032  ld   $32         ;'2'
              7ef4 0030  ld   $30         ;'0'
              7ef5 0030  ld   $30         ;'0'
              7ef6 0000  ld   $00         ;'\x00'
              7ef7 0026  ld   $26
              7ef8 00c0  ld   $c0
              7ef9 0008  ld   $08
              7efa 0098  ld   $98
              7efb fe00  bra  ac          ;+-----------------------------------+
              7efc fcfd  bra  $7efd       ;|                                   |
              7efd 1418  ld   $18,y       ;| Trampoline for page $7e00 lookups |
              7efe e006  jmp  y,$06       ;|                                   |
              7eff c218  st   [$18]       ;+-----------------------------------+
              7f00 0008  ld   $08
              7f01 003f  ld   $3f         ;'?'
              7f02 0049  ld   $49         ;'I'
              7f03 002d  ld   $2d         ;'-'
              7f04 0036  ld   $36         ;'6'
              7f05 003b  ld   $3b         ;';'
              7f06 0000  ld   $00         ;'\x00'
              7f07 0026  ld   $26
              7f08 00e0  ld   $e0
              7f09 000b  ld   $0b
              7f0a 00a2  ld   $a2
              7f0b 0008  ld   $08
              7f0c 0047  ld   $47         ;'G'
              7f0d 004f  ld   $4f         ;'O'
              7f0e 0054  ld   $54         ;'T'
              7f0f 004f  ld   $4f         ;'O'
              7f10 0032  ld   $32         ;'2'
              7f11 0033  ld   $33         ;'3'
              7f12 0030  ld   $30         ;'0'
              7f13 0030  ld   $30         ;'0'
              7f14 0000  ld   $00         ;'\x00'
              7f15 0027  ld   $27
              7f16 00a0  ld   $a0
              7f17 0008  ld   $08
              7f18 00ac  ld   $ac
              7f19 0008  ld   $08
              7f1a 003f  ld   $3f         ;'?'
              7f1b 0022  ld   $22         ;'"'
              7f1c 0058  ld   $58         ;'X'
              7f1d 0022  ld   $22         ;'"'
              7f1e 003b  ld   $3b         ;';'
              7f1f 0000  ld   $00         ;'\x00'
              7f20 0027  ld   $27
              7f21 00c0  ld   $c0
              7f22 000b  ld   $0b
              7f23 00b6  ld   $b6
              7f24 0008  ld   $08
              7f25 0047  ld   $47         ;'G'
              7f26 004f  ld   $4f         ;'O'
              7f27 0054  ld   $54         ;'T'
              7f28 004f  ld   $4f         ;'O'
              7f29 0032  ld   $32         ;'2'
              7f2a 0033  ld   $33         ;'3'
              7f2b 0030  ld   $30         ;'0'
              7f2c 0030  ld   $30         ;'0'
              7f2d 0000  ld   $00         ;'\x00'
              7f2e 0027  ld   $27
              7f2f 00e0  ld   $e0
              7f30 0008  ld   $08
              7f31 00d4  ld   $d4
              7f32 0008  ld   $08
              7f33 003f  ld   $3f         ;'?'
              7f34 0022  ld   $22         ;'"'
              7f35 004f  ld   $4f         ;'O'
              7f36 0022  ld   $22         ;'"'
              7f37 003b  ld   $3b         ;';'
              7f38 0000  ld   $00         ;'\x00'
              7f39 0028  ld   $28
              7f3a 00a0  ld   $a0
              7f3b 0014  ld   $14
              7f3c 00fc  ld   $fc
              7f3d 0008  ld   $08
              7f3e 0049  ld   $49         ;'I'
              7f3f 0046  ld   $46         ;'F'
              7f40 0049  ld   $49         ;'I'
              7f41 002f  ld   $2f         ;'/'
              7f42 0033  ld   $33         ;'3'
              7f43 002a  ld   $2a         ;'*'
              7f44 0033  ld   $33         ;'3'
              7f45 003d  ld   $3d         ;'='
              7f46 0049  ld   $49         ;'I'
              7f47 0047  ld   $47         ;'G'
              7f48 004f  ld   $4f         ;'O'
              7f49 0054  ld   $54         ;'T'
              7f4a 004f  ld   $4f         ;'O'
              7f4b 0032  ld   $32         ;'2'
              7f4c 0034  ld   $34         ;'4'
              7f4d 0030  ld   $30         ;'0'
              7f4e 0030  ld   $30         ;'0'
              7f4f 0000  ld   $00         ;'\x00'
              7f50 0028  ld   $28
              7f51 00c0  ld   $c0
              7f52 0009  ld   $09
              7f53 0006  ld   $06
              7f54 0009  ld   $09
              7f55 003f  ld   $3f         ;'?'
              7f56 0022  ld   $22         ;'"'
              7f57 0020  ld   $20         ;' '
              7f58 007c  ld   $7c         ;'|'
              7f59 0022  ld   $22         ;'"'
              7f5a 003b  ld   $3b         ;';'
              7f5b 0000  ld   $00         ;'\x00'
              7f5c 0028  ld   $28
              7f5d 00e0  ld   $e0
              7f5e 000b  ld   $0b
              7f5f 0010  ld   $10
              7f60 0009  ld   $09
              7f61 0047  ld   $47         ;'G'
              7f62 004f  ld   $4f         ;'O'
              7f63 0054  ld   $54         ;'T'
              7f64 004f  ld   $4f         ;'O'
              7f65 0032  ld   $32         ;'2'
              7f66 0031  ld   $31         ;'1'
              7f67 0031  ld   $31         ;'1'
              7f68 0030  ld   $30         ;'0'
              7f69 0000  ld   $00         ;'\x00'
              7f6a 0029  ld   $29
              7f6b 00a0  ld   $a0
              7f6c 0004  ld   $04
              7f6d 0060  ld   $60
              7f6e 0009  ld   $09
              7f6f 003f  ld   $3f         ;'?'
              7f70 0000  ld   $00         ;'\x00'
              7f71 0029  ld   $29
              7f72 00c0  ld   $c0
              7f73 0011  ld   $11
              7f74 0074  ld   $74
              7f75 0009  ld   $09
              7f76 0049  ld   $49         ;'I'
              7f77 0046  ld   $46         ;'F'
              7f78 0049  ld   $49         ;'I'
              7f79 003d  ld   $3d         ;'='
              7f7a 0031  ld   $31         ;'1'
              7f7b 0035  ld   $35         ;'5'
              7f7c 0047  ld   $47         ;'G'
              7f7d 004f  ld   $4f         ;'O'
              7f7e 0054  ld   $54         ;'T'
              7f7f 004f  ld   $4f         ;'O'
              7f80 0033  ld   $33         ;'3'
              7f81 0030  ld   $30         ;'0'
              7f82 0030  ld   $30         ;'0'
              7f83 0030  ld   $30         ;'0'
              7f84 0000  ld   $00         ;'\x00'
              7f85 0029  ld   $29
              7f86 00e0  ld   $e0
              7f87 0011  ld   $11
              7f88 007e  ld   $7e
              7f89 0009  ld   $09
              7f8a 003f  ld   $3f         ;'?'
              7f8b 0022  ld   $22         ;'"'
              7f8c 002d  ld   $2d         ;'-'
              7f8d 002d  ld   $2d         ;'-'
              7f8e 002d  ld   $2d         ;'-'
              7f8f 002b  ld   $2b         ;'+'
              7f90 002d  ld   $2d         ;'-'
              7f91 002d  ld   $2d         ;'-'
              7f92 002d  ld   $2d         ;'-'
              7f93 002b  ld   $2b         ;'+'
              7f94 002d  ld   $2d         ;'-'
              7f95 002d  ld   $2d         ;'-'
              7f96 002d  ld   $2d         ;'-'
              7f97 0022  ld   $22         ;'"'
              7f98 0000  ld   $00         ;'\x00'
              7f99 002a  ld   $2a
              7f9a 00a0  ld   $a0
              7f9b 000b  ld   $0b
              7f9c 0088  ld   $88
              7f9d 0009  ld   $09
              7f9e 0047  ld   $47         ;'G'
              7f9f 004f  ld   $4f         ;'O'
              7fa0 0054  ld   $54         ;'T'
              7fa1 004f  ld   $4f         ;'O'
              7fa2 0032  ld   $32         ;'2'
              7fa3 0031  ld   $31         ;'1'
              7fa4 0031  ld   $31         ;'1'
              7fa5 0030  ld   $30         ;'0'
              7fa6 0000  ld   $00         ;'\x00'
              7fa7 002a  ld   $2a
              7fa8 00c0  ld   $c0
              7fa9 0010  ld   $10
              7faa 00b8  ld   $b8
              7fab 000b  ld   $0b
              7fac 0049  ld   $49         ;'I'
              7fad 0046  ld   $46         ;'F'
              7fae 005a  ld   $5a         ;'Z'
              7faf 003d  ld   $3d         ;'='
              7fb0 0030  ld   $30         ;'0'
              7fb1 0047  ld   $47         ;'G'
              7fb2 004f  ld   $4f         ;'O'
              7fb3 0054  ld   $54         ;'T'
              7fb4 004f  ld   $4f         ;'O'
              7fb5 0033  ld   $33         ;'3'
              7fb6 0031  ld   $31         ;'1'
              7fb7 0030  ld   $30         ;'0'
              7fb8 0030  ld   $30         ;'0'
              7fb9 0000  ld   $00         ;'\x00'
              7fba 002a  ld   $2a
              7fbb 00e0  ld   $e0
              7fbc 0010  ld   $10
              7fbd 00cc  ld   $cc
              7fbe 000b  ld   $0b
              7fbf 0049  ld   $49         ;'I'
              7fc0 0046  ld   $46         ;'F'
              7fc1 0046  ld   $46         ;'F'
              7fc2 003d  ld   $3d         ;'='
              7fc3 0031  ld   $31         ;'1'
              7fc4 0047  ld   $47         ;'G'
              7fc5 004f  ld   $4f         ;'O'
              7fc6 0054  ld   $54         ;'T'
              7fc7 004f  ld   $4f         ;'O'
              7fc8 0033  ld   $33         ;'3'
              7fc9 0030  ld   $30         ;'0'
              7fca 0035  ld   $35         ;'5'
              7fcb 0030  ld   $30         ;'0'
              7fcc 0000  ld   $00         ;'\x00'
              7fcd 002b  ld   $2b
              7fce 00a0  ld   $a0
              7fcf 000e  ld   $0e
              7fd0 00d6  ld   $d6
              7fd1 000b  ld   $0b
              7fd2 003f  ld   $3f         ;'?'
              7fd3 0022  ld   $22         ;'"'
              7fd4 0059  ld   $59         ;'Y'
              7fd5 004f  ld   $4f         ;'O'
              7fd6 0055  ld   $55         ;'U'
              7fd7 0020  ld   $20         ;' '
              7fd8 0057  ld   $57         ;'W'
              7fd9 0049  ld   $49         ;'I'
              7fda 004e  ld   $4e         ;'N'
              7fdb 002e  ld   $2e         ;'.'
              7fdc 0022  ld   $22         ;'"'
              7fdd 0000  ld   $00         ;'\x00'
              7fde 002b  ld   $2b
              7fdf 00c0  ld   $c0
              7fe0 000b  ld   $0b
              7fe1 00e0  ld   $e0
              7fe2 000b  ld   $0b
              7fe3 0047  ld   $47         ;'G'
              7fe4 004f  ld   $4f         ;'O'
              7fe5 0054  ld   $54         ;'T'
              7fe6 004f  ld   $4f         ;'O'
              7fe7 0031  ld   $31         ;'1'
              7fe8 0030  ld   $30         ;'0'
              7fe9 0031  ld   $31         ;'1'
              7fea 0030  ld   $30         ;'0'
              7feb 0000  ld   $00         ;'\x00'
              7fec 002b  ld   $2b
              7fed 00e0  ld   $e0
              7fee 000c  ld   $0c
              7fef 00ea  ld   $ea
              7ff0 000b  ld   $0b
              7ff1 003f  ld   $3f         ;'?'
              7ff2 0022  ld   $22         ;'"'
              7ff3 0049  ld   $49         ;'I'
              7ff4 0020  ld   $20         ;' '
              7ff5 0057  ld   $57         ;'W'
              7ff6 0049  ld   $49         ;'I'
              7ff7 004e  ld   $4e         ;'N'
              7ff8 002e  ld   $2e         ;'.'
              7ff9 0022  ld   $22         ;'"'
              7ffa 0000  ld   $00         ;'\x00'
              7ffb fe00  bra  ac          ;+-----------------------------------+
              7ffc fcfd  bra  $7ffd       ;|                                   |
              7ffd 1418  ld   $18,y       ;| Trampoline for page $7f00 lookups |
              7ffe e006  jmp  y,$06       ;|                                   |
              7fff c218  st   [$18]       ;+-----------------------------------+
              8000 002c  ld   $2c
              8001 00a0  ld   $a0
              8002 000b  ld   $0b
              8003 00f4  ld   $f4
              8004 000b  ld   $0b
              8005 0047  ld   $47         ;'G'
              8006 004f  ld   $4f         ;'O'
              8007 0054  ld   $54         ;'T'
              8008 004f  ld   $4f         ;'O'
              8009 0031  ld   $31         ;'1'
              800a 0030  ld   $30         ;'0'
              800b 0031  ld   $31         ;'1'
              800c 0030  ld   $30         ;'0'
              800d 0000  ld   $00         ;'\x00'
              800e 002c  ld   $2c
              800f 00c0  ld   $c0
              8010 0010  ld   $10
              8011 001c  ld   $1c
              8012 000c  ld   $0c
              8013 0049  ld   $49         ;'I'
              8014 0046  ld   $46         ;'F'
              8015 0055  ld   $55         ;'U'
              8016 003e  ld   $3e         ;'>'
              8017 0030  ld   $30         ;'0'
              8018 0047  ld   $47         ;'G'
              8019 004f  ld   $4f         ;'O'
              801a 0054  ld   $54         ;'T'
              801b 004f  ld   $4f         ;'O'
              801c 0033  ld   $33         ;'3'
              801d 0032  ld   $32         ;'2'
              801e 0031  ld   $31         ;'1'
              801f 0030  ld   $30         ;'0'
              8020 0000  ld   $00         ;'\x00'
              8021 002c  ld   $2c
              8022 00e0  ld   $e0
              8023 0011  ld   $11
              8024 0026  ld   $26
              8025 000c  ld   $0c
              8026 003f  ld   $3f         ;'?'
              8027 0022  ld   $22         ;'"'
              8028 0043  ld   $43         ;'C'
              8029 0041  ld   $41         ;'A'
              802a 0054  ld   $54         ;'T'
              802b 0027  ld   $27         ;"'"
              802c 0053  ld   $53         ;'S'
              802d 0020  ld   $20         ;' '
              802e 0047  ld   $47         ;'G'
              802f 0041  ld   $41         ;'A'
              8030 004d  ld   $4d         ;'M'
              8031 0045  ld   $45         ;'E'
              8032 002e  ld   $2e         ;'.'
              8033 0022  ld   $22         ;'"'
              8034 0000  ld   $00         ;'\x00'
              8035 002d  ld   $2d
              8036 00a0  ld   $a0
              8037 0008  ld   $08
              8038 0030  ld   $30
              8039 000c  ld   $0c
              803a 0046  ld   $46         ;'F'
              803b 003d  ld   $3d         ;'='
              803c 0031  ld   $31         ;'1'
              803d 002d  ld   $2d         ;'-'
              803e 0046  ld   $46         ;'F'
              803f 0000  ld   $00         ;'\x00'
              8040 002d  ld   $2d
              8041 00c0  ld   $c0
              8042 000b  ld   $0b
              8043 003a  ld   $3a
              8044 000c  ld   $0c
              8045 0047  ld   $47         ;'G'
              8046 004f  ld   $4f         ;'O'
              8047 0054  ld   $54         ;'T'
              8048 004f  ld   $4f         ;'O'
              8049 0031  ld   $31         ;'1'
              804a 0030  ld   $30         ;'0'
              804b 0031  ld   $31         ;'1'
              804c 0030  ld   $30         ;'0'
              804d 0000  ld   $00         ;'\x00'
              804e 002d  ld   $2d
              804f 00e0  ld   $e0
              8050 000f  ld   $0f
              8051 008a  ld   $8a
              8052 000c  ld   $0c
              8053 003f  ld   $3f         ;'?'
              8054 0022  ld   $22         ;'"'
              8055 0059  ld   $59         ;'Y'
              8056 004f  ld   $4f         ;'O'
              8057 0055  ld   $55         ;'U'
              8058 0052  ld   $52         ;'R'
              8059 0020  ld   $20         ;' '
              805a 0050  ld   $50         ;'P'
              805b 004c  ld   $4c         ;'L'
              805c 0041  ld   $41         ;'A'
              805d 0022  ld   $22         ;'"'
              805e 003b  ld   $3b         ;';'
              805f 0000  ld   $00         ;'\x00'
              8060 002e  ld   $2e
              8061 00a0  ld   $a0
              8062 000d  ld   $0d
              8063 0097  ld   $97
              8064 000c  ld   $0c
              8065 0049  ld   $49         ;'I'
              8066 004e  ld   $4e         ;'N'
              8067 0050  ld   $50         ;'P'
              8068 0055  ld   $55         ;'U'
              8069 0054  ld   $54         ;'T'
              806a 0059  ld   $59         ;'Y'
              806b 003a  ld   $3a         ;':'
              806c 0049  ld   $49         ;'I'
              806d 003d  ld   $3d         ;'='
              806e 0059  ld   $59         ;'Y'
              806f 0000  ld   $00         ;'\x00'
              8070 002e  ld   $2e
              8071 00c0  ld   $c0
              8072 0011  ld   $11
              8073 009f  ld   $9f
              8074 000c  ld   $0c
              8075 0049  ld   $49         ;'I'
              8076 0046  ld   $46         ;'F'
              8077 0049  ld   $49         ;'I'
              8078 003c  ld   $3c         ;'<'
              8079 003d  ld   $3d         ;'='
              807a 0030  ld   $30         ;'0'
              807b 0047  ld   $47         ;'G'
              807c 004f  ld   $4f         ;'O'
              807d 0054  ld   $54         ;'T'
              807e 004f  ld   $4f         ;'O'
              807f 0033  ld   $33         ;'3'
              8080 0032  ld   $32         ;'2'
              8081 0034  ld   $34         ;'4'
              8082 0030  ld   $30         ;'0'
              8083 0000  ld   $00         ;'\x00'
              8084 002e  ld   $2e
              8085 00e0  ld   $e0
              8086 0011  ld   $11
              8087 00a0  ld   $a0
              8088 000c  ld   $0c
              8089 0049  ld   $49         ;'I'
              808a 0046  ld   $46         ;'F'
              808b 0049  ld   $49         ;'I'
              808c 003c  ld   $3c         ;'<'
              808d 0031  ld   $31         ;'1'
              808e 0030  ld   $30         ;'0'
              808f 0047  ld   $47         ;'G'
              8090 004f  ld   $4f         ;'O'
              8091 0054  ld   $54         ;'T'
              8092 004f  ld   $4f         ;'O'
              8093 0033  ld   $33         ;'3'
              8094 0032  ld   $32         ;'2'
              8095 0037  ld   $37         ;'7'
              8096 0030  ld   $30         ;'0'
              8097 0000  ld   $00         ;'\x00'
              8098 002f  ld   $2f
              8099 00a0  ld   $a0
              809a 0014  ld   $14
              809b 00a8  ld   $a8
              809c 000c  ld   $0c
              809d 003f  ld   $3f         ;'?'
              809e 0022  ld   $22         ;'"'
              809f 0050  ld   $50         ;'P'
              80a0 004c  ld   $4c         ;'L'
              80a1 0045  ld   $45         ;'E'
              80a2 0041  ld   $41         ;'A'
              80a3 0053  ld   $53         ;'S'
              80a4 0045  ld   $45         ;'E'
              80a5 0020  ld   $20         ;' '
              80a6 0054  ld   $54         ;'T'
              80a7 0059  ld   $59         ;'Y'
              80a8 0050  ld   $50         ;'P'
              80a9 0045  ld   $45         ;'E'
              80aa 0020  ld   $20         ;' '
              80ab 0041  ld   $41         ;'A'
              80ac 0022  ld   $22         ;'"'
              80ad 003b  ld   $3b         ;';'
              80ae 0000  ld   $00         ;'\x00'
              80af 002f  ld   $2f
              80b0 00c0  ld   $c0
              80b1 000d  ld   $0d
              80b2 00aa  ld   $aa
              80b3 000c  ld   $0c
              80b4 003f  ld   $3f         ;'?'
              80b5 0022  ld   $22         ;'"'
              80b6 0020  ld   $20         ;' '
              80b7 004e  ld   $4e         ;'N'
              80b8 0055  ld   $55         ;'U'
              80b9 004d  ld   $4d         ;'M'
              80ba 0042  ld   $42         ;'B'
              80bb 0045  ld   $45         ;'E'
              80bc 0052  ld   $52         ;'R'
              80bd 0022  ld   $22         ;'"'
              80be 0000  ld   $00         ;'\x00'
              80bf 002f  ld   $2f
              80c0 00e0  ld   $e0
              80c1 0016  ld   $16
              80c2 00ab  ld   $ab
              80c3 000c  ld   $0c
              80c4 003f  ld   $3f         ;'?'
              80c5 0022  ld   $22         ;'"'
              80c6 0042  ld   $42         ;'B'
              80c7 0045  ld   $45         ;'E'
              80c8 0054  ld   $54         ;'T'
              80c9 0057  ld   $57         ;'W'
              80ca 0045  ld   $45         ;'E'
              80cb 0045  ld   $45         ;'E'
              80cc 004e  ld   $4e         ;'N'
              80cd 0020  ld   $20         ;' '
              80ce 0031  ld   $31         ;'1'
              80cf 0020  ld   $20         ;' '
              80d0 0041  ld   $41         ;'A'
              80d1 004e  ld   $4e         ;'N'
              80d2 0044  ld   $44         ;'D'
              80d3 0020  ld   $20         ;' '
              80d4 0039  ld   $39         ;'9'
              80d5 0022  ld   $22         ;'"'
              80d6 003b  ld   $3b         ;';'
              80d7 0000  ld   $00         ;'\x00'
              80d8 0030  ld   $30
              80d9 00a0  ld   $a0
              80da 0010  ld   $10
              80db 00b3  ld   $b3
              80dc 000c  ld   $0c
              80dd 003f  ld   $3f         ;'?'
              80de 0022  ld   $22         ;'"'
              80df 0020  ld   $20         ;' '
              80e0 0057  ld   $57         ;'W'
              80e1 0048  ld   $48         ;'H'
              80e2 0045  ld   $45         ;'E'
              80e3 0052  ld   $52         ;'R'
              80e4 0045  ld   $45         ;'E'
              80e5 0020  ld   $20         ;' '
              80e6 0059  ld   $59         ;'Y'
              80e7 004f  ld   $4f         ;'O'
              80e8 0055  ld   $55         ;'U'
              80e9 0022  ld   $22         ;'"'
              80ea 0000  ld   $00         ;'\x00'
              80eb 0030  ld   $30
              80ec 00c0  ld   $c0
              80ed 0013  ld   $13
              80ee 00b4  ld   $b4
              80ef 000c  ld   $0c
              80f0 003f  ld   $3f         ;'?'
              80f1 0022  ld   $22         ;'"'
              80f2 0057  ld   $57         ;'W'
              80f3 0049  ld   $49         ;'I'
              80f4 0053  ld   $53         ;'S'
              80f5 0048  ld   $48         ;'H'
              80f6 0020  ld   $20         ;' '
              80f7 0054  ld   $54         ;'T'
              80f8 004f  ld   $4f         ;'O'
              80f9 0020  ld   $20         ;' '
              80fa 0050  ld   $50         ;'P'
              80fb fe00  bra  ac          ;+-----------------------------------+
              80fc fcfd  bra  $80fd       ;|                                   |
              80fd 1418  ld   $18,y       ;| Trampoline for page $8000 lookups |
              80fe e006  jmp  y,$06       ;|                                   |
              80ff c218  st   [$18]       ;+-----------------------------------+
              8100 004c  ld   $4c         ;'L'
              8101 0041  ld   $41         ;'A'
              8102 0059  ld   $59         ;'Y'
              8103 0022  ld   $22         ;'"'
              8104 003b  ld   $3b         ;';'
              8105 0000  ld   $00         ;'\x00'
              8106 0030  ld   $30
              8107 00e0  ld   $e0
              8108 000d  ld   $0d
              8109 00b5  ld   $b5
              810a 000c  ld   $0c
              810b 003f  ld   $3f         ;'?'
              810c 0022  ld   $22         ;'"'
              810d 0020  ld   $20         ;' '
              810e 0059  ld   $59         ;'Y'
              810f 004f  ld   $4f         ;'O'
              8110 0055  ld   $55         ;'U'
              8111 0052  ld   $52         ;'R'
              8112 0020  ld   $20         ;' '
              8113 0058  ld   $58         ;'X'
              8114 0022  ld   $22         ;'"'
              8115 0000  ld   $00         ;'\x00'
              8116 0031  ld   $31
              8117 00a0  ld   $a0
              8118 000b  ld   $0b
              8119 00bc  ld   $bc
              811a 000c  ld   $0c
              811b 0047  ld   $47         ;'G'
              811c 004f  ld   $4f         ;'O'
              811d 0054  ld   $54         ;'T'
              811e 004f  ld   $4f         ;'O'
              811f 0033  ld   $33         ;'3'
              8120 0032  ld   $32         ;'2'
              8121 0031  ld   $31         ;'1'
              8122 0030  ld   $30         ;'0'
              8123 0000  ld   $00         ;'\x00'
              8124 0031  ld   $31
              8125 00c0  ld   $c0
              8126 0015  ld   $15
              8127 00c6  ld   $c6
              8128 000c  ld   $0c
              8129 0049  ld   $49         ;'I'
              812a 0046  ld   $46         ;'F'
              812b 0041  ld   $41         ;'A'
              812c 0028  ld   $28         ;'('
              812d 0049  ld   $49         ;'I'
              812e 002b  ld   $2b         ;'+'
              812f 0036  ld   $36         ;'6'
              8130 0029  ld   $29         ;')'
              8131 003d  ld   $3d         ;'='
              8132 0030  ld   $30         ;'0'
              8133 0047  ld   $47         ;'G'
              8134 004f  ld   $4f         ;'O'
              8135 0054  ld   $54         ;'T'
              8136 004f  ld   $4f         ;'O'
              8137 0033  ld   $33         ;'3'
              8138 0033  ld   $33         ;'3'
              8139 0031  ld   $31         ;'1'
              813a 0030  ld   $30         ;'0'
              813b 0000  ld   $00         ;'\x00'
              813c 0031  ld   $31
              813d 00e0  ld   $e0
              813e 0015  ld   $15
              813f 00d1  ld   $d1
              8140 000c  ld   $0c
              8141 003f  ld   $3f         ;'?'
              8142 0022  ld   $22         ;'"'
              8143 0054  ld   $54         ;'T'
              8144 0048  ld   $48         ;'H'
              8145 0041  ld   $41         ;'A'
              8146 0054  ld   $54         ;'T'
              8147 0020  ld   $20         ;' '
              8148 0053  ld   $53         ;'S'
              8149 0051  ld   $51         ;'Q'
              814a 0055  ld   $55         ;'U'
              814b 0041  ld   $41         ;'A'
              814c 0052  ld   $52         ;'R'
              814d 0045  ld   $45         ;'E'
              814e 0020  ld   $20         ;' '
              814f 0049  ld   $49         ;'I'
              8150 0053  ld   $53         ;'S'
              8151 0022  ld   $22         ;'"'
              8152 003b  ld   $3b         ;';'
              8153 0000  ld   $00         ;'\x00'
              8154 0032  ld   $32
              8155 00a0  ld   $a0
              8156 0017  ld   $17
              8157 00d2  ld   $d2
              8158 000c  ld   $0c
              8159 003f  ld   $3f         ;'?'
              815a 0022  ld   $22         ;'"'
              815b 0020  ld   $20         ;' '
              815c 0041  ld   $41         ;'A'
              815d 004c  ld   $4c         ;'L'
              815e 0052  ld   $52         ;'R'
              815f 0045  ld   $45         ;'E'
              8160 0041  ld   $41         ;'A'
              8161 0044  ld   $44         ;'D'
              8162 0059  ld   $59         ;'Y'
              8163 0022  ld   $22         ;'"'
              8164 003a  ld   $3a         ;':'
              8165 003f  ld   $3f         ;'?'
              8166 0022  ld   $22         ;'"'
              8167 0054  ld   $54         ;'T'
              8168 0041  ld   $41         ;'A'
              8169 004b  ld   $4b         ;'K'
              816a 0045  ld   $45         ;'E'
              816b 004e  ld   $4e         ;'N'
              816c 0022  ld   $22         ;'"'
              816d 0000  ld   $00         ;'\x00'
              816e 0032  ld   $32
              816f 00c0  ld   $c0
              8170 000b  ld   $0b
              8171 00da  ld   $da
              8172 000c  ld   $0c
              8173 0047  ld   $47         ;'G'
              8174 004f  ld   $4f         ;'O'
              8175 0054  ld   $54         ;'T'
              8176 004f  ld   $4f         ;'O'
              8177 0033  ld   $33         ;'3'
              8178 0032  ld   $32         ;'2'
              8179 0031  ld   $31         ;'1'
              817a 0030  ld   $30         ;'0'
              817b 0000  ld   $00         ;'\x00'
              817c 0032  ld   $32
              817d 00e0  ld   $e0
              817e 0011  ld   $11
              817f 00ee  ld   $ee
              8180 000c  ld   $0c
              8181 0041  ld   $41         ;'A'
              8182 0028  ld   $28         ;'('
              8183 0049  ld   $49         ;'I'
              8184 002b  ld   $2b         ;'+'
              8185 0036  ld   $36         ;'6'
              8186 0029  ld   $29         ;')'
              8187 003d  ld   $3d         ;'='
              8188 0031  ld   $31         ;'1'
              8189 003a  ld   $3a         ;':'
              818a 0055  ld   $55         ;'U'
              818b 003d  ld   $3d         ;'='
              818c 0055  ld   $55         ;'U'
              818d 002d  ld   $2d         ;'-'
              818e 0031  ld   $31         ;'1'
              818f 0000  ld   $00         ;'\x00'
              8190 0033  ld   $33
              8191 00a0  ld   $a0
              8192 0009  ld   $09
              8193 00f8  ld   $f8
              8194 000c  ld   $0c
              8195 0057  ld   $57         ;'W'
              8196 003d  ld   $3d         ;'='
              8197 0036  ld   $36         ;'6'
              8198 0031  ld   $31         ;'1'
              8199 0030  ld   $30         ;'0'
              819a 0030  ld   $30         ;'0'
              819b 0000  ld   $00         ;'\x00'
              819c 0033  ld   $33
              819d 00c0  ld   $c0
              819e 0009  ld   $09
              819f 0002  ld   $02
              81a0 000d  ld   $0d
              81a1 0047  ld   $47         ;'G'
              81a2 004f  ld   $4f         ;'O'
              81a3 0053  ld   $53         ;'S'
              81a4 0055  ld   $55         ;'U'
              81a5 0042  ld   $42         ;'B'
              81a6 0057  ld   $57         ;'W'
              81a7 0000  ld   $00         ;'\x00'
              81a8 0033  ld   $33
              81a9 00e0  ld   $e0
              81aa 0011  ld   $11
              81ab 000d  ld   $0d
              81ac 000d  ld   $0d
              81ad 0049  ld   $49         ;'I'
              81ae 0046  ld   $46         ;'F'
              81af 004a  ld   $4a         ;'J'
              81b0 003c  ld   $3c         ;'<'
              81b1 003d  ld   $3d         ;'='
              81b2 0030  ld   $30         ;'0'
              81b3 0047  ld   $47         ;'G'
              81b4 004f  ld   $4f         ;'O'
              81b5 0054  ld   $54         ;'T'
              81b6 004f  ld   $4f         ;'O'
              81b7 0033  ld   $33         ;'3'
              81b8 0033  ld   $33         ;'3'
              81b9 0035  ld   $35         ;'5'
              81ba 0030  ld   $30         ;'0'
              81bb 0000  ld   $00         ;'\x00'
              81bc 0034  ld   $34
              81bd 00a0  ld   $a0
              81be 0014  ld   $14
              81bf 000e  ld   $0e
              81c0 000d  ld   $0d
              81c1 0049  ld   $49         ;'I'
              81c2 0046  ld   $46         ;'F'
              81c3 004c  ld   $4c         ;'L'
              81c4 002a  ld   $2a         ;'*'
              81c5 004d  ld   $4d         ;'M'
              81c6 002a  ld   $2a         ;'*'
              81c7 004e  ld   $4e         ;'N'
              81c8 003d  ld   $3d         ;'='
              81c9 0031  ld   $31         ;'1'
              81ca 0047  ld   $47         ;'G'
              81cb 004f  ld   $4f         ;'O'
              81cc 0054  ld   $54         ;'T'
              81cd 004f  ld   $4f         ;'O'
              81ce 0031  ld   $31         ;'1'
              81cf 0035  ld   $35         ;'5'
              81d0 0031  ld   $31         ;'1'
              81d1 0030  ld   $30         ;'0'
              81d2 0000  ld   $00         ;'\x00'
              81d3 0034  ld   $34
              81d4 00c0  ld   $c0
              81d5 000a  ld   $0a
              81d6 0016  ld   $16
              81d7 000d  ld   $0d
              81d8 0057  ld   $57         ;'W'
              81d9 003d  ld   $3d         ;'='
              81da 0057  ld   $57         ;'W'
              81db 002b  ld   $2b         ;'+'
              81dc 0031  ld   $31         ;'1'
              81dd 0030  ld   $30         ;'0'
              81de 0030  ld   $30         ;'0'
              81df 0000  ld   $00         ;'\x00'
              81e0 0034  ld   $34
              81e1 00e0  ld   $e0
              81e2 0013  ld   $13
              81e3 0020  ld   $20
              81e4 000d  ld   $0d
              81e5 0049  ld   $49         ;'I'
              81e6 0046  ld   $46         ;'F'
              81e7 0057  ld   $57         ;'W'
              81e8 003c  ld   $3c         ;'<'
              81e9 0036  ld   $36         ;'6'
              81ea 0035  ld   $35         ;'5'
              81eb 0030  ld   $30         ;'0'
              81ec 0030  ld   $30         ;'0'
              81ed 0047  ld   $47         ;'G'
              81ee 004f  ld   $4f         ;'O'
              81ef 0054  ld   $54         ;'T'
              81f0 004f  ld   $4f         ;'O'
              81f1 0033  ld   $33         ;'3'
              81f2 0033  ld   $33         ;'3'
              81f3 0033  ld   $33         ;'3'
              81f4 0030  ld   $30         ;'0'
              81f5 0000  ld   $00         ;'\x00'
              81f6 0035  ld   $35
              81f7 00a0  ld   $a0
              81f8 0010  ld   $10
              81f9 0052  ld   $52
              81fa 000d  ld   $0d
              81fb fe00  bra  ac          ;+-----------------------------------+
              81fc fcfd  bra  $81fd       ;|                                   |
              81fd 1418  ld   $18,y       ;| Trampoline for page $8100 lookups |
              81fe e006  jmp  y,$06       ;|                                   |
              81ff c218  st   [$18]       ;+-----------------------------------+
              8200 0049  ld   $49         ;'I'
              8201 0046  ld   $46         ;'F'
              8202 0055  ld   $55         ;'U'
              8203 003d  ld   $3d         ;'='
              8204 0030  ld   $30         ;'0'
              8205 0047  ld   $47         ;'G'
              8206 004f  ld   $4f         ;'O'
              8207 0054  ld   $54         ;'T'
              8208 004f  ld   $4f         ;'O'
              8209 0032  ld   $32         ;'2'
              820a 0030  ld   $30         ;'0'
              820b 0031  ld   $31         ;'1'
              820c 0030  ld   $30         ;'0'
              820d 0000  ld   $00         ;'\x00'
              820e 0035  ld   $35
              820f 00c0  ld   $c0
              8210 0006  ld   $06
              8211 00aa  ld   $aa
              8212 000f  ld   $0f
              8213 0049  ld   $49         ;'I'
              8214 003d  ld   $3d         ;'='
              8215 0031  ld   $31         ;'1'
              8216 0000  ld   $00         ;'\x00'
              8217 0035  ld   $35
              8218 00e0  ld   $e0
              8219 0007  ld   $07
              821a 00b4  ld   $b4
              821b 000f  ld   $0f
              821c 0054  ld   $54         ;'T'
              821d 003d  ld   $3d         ;'='
              821e 002d  ld   $2d         ;'-'
              821f 0031  ld   $31         ;'1'
              8220 0000  ld   $00         ;'\x00'
              8221 0036  ld   $36
              8222 00a0  ld   $a0
              8223 0006  ld   $06
              8224 00cc  ld   $cc
              8225 0010  ld   $10
              8226 0053  ld   $53         ;'S'
              8227 003d  ld   $3d         ;'='
              8228 0030  ld   $30         ;'0'
              8229 0000  ld   $00         ;'\x00'
              822a 0036  ld   $36
              822b 00c0  ld   $c0
              822c 0015  ld   $15
              822d 00d7  ld   $d7
              822e 0010  ld   $10
              822f 0049  ld   $49         ;'I'
              8230 0046  ld   $46         ;'F'
              8231 0041  ld   $41         ;'A'
              8232 0028  ld   $28         ;'('
              8233 0049  ld   $49         ;'I'
              8234 002b  ld   $2b         ;'+'
              8235 0036  ld   $36         ;'6'
              8236 0029  ld   $29         ;')'
              8237 003e  ld   $3e         ;'>'
              8238 0030  ld   $30         ;'0'
              8239 0047  ld   $47         ;'G'
              823a 004f  ld   $4f         ;'O'
              823b 0054  ld   $54         ;'T'
              823c 004f  ld   $4f         ;'O'
              823d 0034  ld   $34         ;'4'
              823e 0034  ld   $34         ;'4'
              823f 0038  ld   $38         ;'8'
              8240 0030  ld   $30         ;'0'
              8241 0000  ld   $00         ;'\x00'
              8242 0036  ld   $36
              8243 00e0  ld   $e0
              8244 0009  ld   $09
              8245 00e0  ld   $e0
              8246 0010  ld   $10
              8247 0057  ld   $57         ;'W'
              8248 003d  ld   $3d         ;'='
              8249 0036  ld   $36         ;'6'
              824a 0031  ld   $31         ;'1'
              824b 0030  ld   $30         ;'0'
              824c 0030  ld   $30         ;'0'
              824d 0000  ld   $00         ;'\x00'
              824e 0037  ld   $37
              824f 00a0  ld   $a0
              8250 0009  ld   $09
              8251 00ea  ld   $ea
              8252 0010  ld   $10
              8253 0047  ld   $47         ;'G'
              8254 004f  ld   $4f         ;'O'
              8255 0053  ld   $53         ;'S'
              8256 0055  ld   $55         ;'U'
              8257 0042  ld   $42         ;'B'
              8258 0057  ld   $57         ;'W'
              8259 0000  ld   $00         ;'\x00'
              825a 0037  ld   $37
              825b 00c0  ld   $c0
              825c 0010  ld   $10
              825d 00f4  ld   $f4
              825e 0010  ld   $10
              825f 0049  ld   $49         ;'I'
              8260 0046  ld   $46         ;'F'
              8261 004a  ld   $4a         ;'J'
              8262 003d  ld   $3d         ;'='
              8263 0030  ld   $30         ;'0'
              8264 0047  ld   $47         ;'G'
              8265 004f  ld   $4f         ;'O'
              8266 0054  ld   $54         ;'T'
              8267 004f  ld   $4f         ;'O'
              8268 0034  ld   $34         ;'4'
              8269 0034  ld   $34         ;'4'
              826a 0031  ld   $31         ;'1'
              826b 0030  ld   $30         ;'0'
              826c 0000  ld   $00         ;'\x00'
              826d 0037  ld   $37
              826e 00e0  ld   $e0
              826f 000a  ld   $0a
              8270 00fe  ld   $fe
              8271 0010  ld   $10
              8272 004a  ld   $4a         ;'J'
              8273 003d  ld   $3d         ;'='
              8274 004c  ld   $4c         ;'L'
              8275 002b  ld   $2b         ;'+'
              8276 004d  ld   $4d         ;'M'
              8277 002b  ld   $2b         ;'+'
              8278 004e  ld   $4e         ;'N'
              8279 0000  ld   $00         ;'\x00'
              827a 0038  ld   $38
              827b 00a0  ld   $a0
              827c 0010  ld   $10
              827d 0009  ld   $09
              827e 0011  ld   $11
              827f 0049  ld   $49         ;'I'
              8280 0046  ld   $46         ;'F'
              8281 004a  ld   $4a         ;'J'
              8282 003d  ld   $3d         ;'='
              8283 0034  ld   $34         ;'4'
              8284 0047  ld   $47         ;'G'
              8285 004f  ld   $4f         ;'O'
              8286 0054  ld   $54         ;'T'
              8287 004f  ld   $4f         ;'O'
              8288 0034  ld   $34         ;'4'
              8289 0034  ld   $34         ;'4'
              828a 0031  ld   $31         ;'1'
              828b 0030  ld   $30         ;'0'
              828c 0000  ld   $00         ;'\x00'
              828d 0038  ld   $38
              828e 00c0  ld   $c0
              828f 000e  ld   $0e
              8290 0013  ld   $13
              8291 0011  ld   $11
              8292 0049  ld   $49         ;'I'
              8293 0046  ld   $46         ;'F'
              8294 004a  ld   $4a         ;'J'
              8295 003d  ld   $3d         ;'='
              8296 0032  ld   $32         ;'2'
              8297 0053  ld   $53         ;'S'
              8298 003d  ld   $3d         ;'='
              8299 0053  ld   $53         ;'S'
              829a 002b  ld   $2b         ;'+'
              829b 0032  ld   $32         ;'2'
              829c 0030  ld   $30         ;'0'
              829d 0000  ld   $00         ;'\x00'
              829e 0038  ld   $38
              829f 00e0  ld   $e0
              82a0 000f  ld   $0f
              82a1 001d  ld   $1d
              82a2 0011  ld   $11
              82a3 0049  ld   $49         ;'I'
              82a4 0046  ld   $46         ;'F'
              82a5 004a  ld   $4a         ;'J'
              82a6 003d  ld   $3d         ;'='
              82a7 0036  ld   $36         ;'6'
              82a8 0053  ld   $53         ;'S'
              82a9 003d  ld   $3d         ;'='
              82aa 0053  ld   $53         ;'S'
              82ab 002b  ld   $2b         ;'+'
              82ac 0031  ld   $31         ;'1'
              82ad 0030  ld   $30         ;'0'
              82ae 0030  ld   $30         ;'0'
              82af 0000  ld   $00         ;'\x00'
              82b0 0039  ld   $39
              82b1 00a0  ld   $a0
              82b2 000d  ld   $0d
              82b3 0027  ld   $27
              82b4 0011  ld   $11
              82b5 0049  ld   $49         ;'I'
              82b6 0046  ld   $46         ;'F'
              82b7 004a  ld   $4a         ;'J'
              82b8 003d  ld   $3d         ;'='
              82b9 0030  ld   $30         ;'0'
              82ba 0053  ld   $53         ;'S'
              82bb 003d  ld   $3d         ;'='
              82bc 0053  ld   $53         ;'S'
              82bd 002b  ld   $2b         ;'+'
              82be 0032  ld   $32         ;'2'
              82bf 0000  ld   $00         ;'\x00'
              82c0 0039  ld   $39
              82c1 00c0  ld   $c0
              82c2 0008  ld   $08
              82c3 0030  ld   $30
              82c4 0011  ld   $11
              82c5 0053  ld   $53         ;'S'
              82c6 003d  ld   $3d         ;'='
              82c7 0053  ld   $53         ;'S'
              82c8 002b  ld   $2b         ;'+'
              82c9 004a  ld   $4a         ;'J'
              82ca 0000  ld   $00         ;'\x00'
              82cb 0039  ld   $39
              82cc 00e0  ld   $e0
              82cd 000a  ld   $0a
              82ce 003a  ld   $3a
              82cf 0011  ld   $11
              82d0 0057  ld   $57         ;'W'
              82d1 003d  ld   $3d         ;'='
              82d2 0057  ld   $57         ;'W'
              82d3 002b  ld   $2b         ;'+'
              82d4 0031  ld   $31         ;'1'
              82d5 0030  ld   $30         ;'0'
              82d6 0030  ld   $30         ;'0'
              82d7 0000  ld   $00         ;'\x00'
              82d8 003a  ld   $3a
              82d9 00a0  ld   $a0
              82da 0013  ld   $13
              82db 0044  ld   $44
              82dc 0011  ld   $11
              82dd 0049  ld   $49         ;'I'
              82de 0046  ld   $46         ;'F'
              82df 0057  ld   $57         ;'W'
              82e0 003c  ld   $3c         ;'<'
              82e1 0036  ld   $36         ;'6'
              82e2 0035  ld   $35         ;'5'
              82e3 0030  ld   $30         ;'0'
              82e4 0030  ld   $30         ;'0'
              82e5 0047  ld   $47         ;'G'
              82e6 004f  ld   $4f         ;'O'
              82e7 0054  ld   $54         ;'T'
              82e8 004f  ld   $4f         ;'O'
              82e9 0034  ld   $34         ;'4'
              82ea 0033  ld   $33         ;'3'
              82eb 0033  ld   $33         ;'3'
              82ec 0030  ld   $30         ;'0'
              82ed 0000  ld   $00         ;'\x00'
              82ee 003a  ld   $3a
              82ef 00c0  ld   $c0
              82f0 0010  ld   $10
              82f1 004f  ld   $4f
              82f2 0011  ld   $11
              82f3 0049  ld   $49         ;'I'
              82f4 0046  ld   $46         ;'F'
              82f5 0053  ld   $53         ;'S'
              82f6 003c  ld   $3c         ;'<'
              82f7 0054  ld   $54         ;'T'
              82f8 0047  ld   $47         ;'G'
              82f9 004f  ld   $4f         ;'O'
              82fa 0054  ld   $54         ;'T'
              82fb fe00  bra  ac          ;+-----------------------------------+
              82fc fcfd  bra  $82fd       ;|                                   |
              82fd 1418  ld   $18,y       ;| Trampoline for page $8200 lookups |
              82fe e006  jmp  y,$06       ;|                                   |
              82ff c218  st   [$18]       ;+-----------------------------------+
              8300 004f  ld   $4f         ;'O'
              8301 0034  ld   $34         ;'4'
              8302 0034  ld   $34         ;'4'
              8303 0037  ld   $37         ;'7'
              8304 0030  ld   $30         ;'0'
              8305 0000  ld   $00         ;'\x00'
              8306 003a  ld   $3a
              8307 00e0  ld   $e0
              8308 0006  ld   $06
              8309 0058  ld   $58
              830a 0011  ld   $11
              830b 0054  ld   $54         ;'T'
              830c 003d  ld   $3d         ;'='
              830d 0053  ld   $53         ;'S'
              830e 0000  ld   $00         ;'\x00'
              830f 003b  ld   $3b
              8310 00a0  ld   $a0
              8311 0006  ld   $06
              8312 0062  ld   $62
              8313 0011  ld   $11
              8314 0042  ld   $42         ;'B'
              8315 003d  ld   $3d         ;'='
              8316 0049  ld   $49         ;'I'
              8317 0000  ld   $00         ;'\x00'
              8318 003b  ld   $3b
              8319 00c0  ld   $c0
              831a 0008  ld   $08
              831b 0076  ld   $76
              831c 0011  ld   $11
              831d 003f  ld   $3f         ;'?'
              831e 0022  ld   $22         ;'"'
              831f 002e  ld   $2e         ;'.'
              8320 0022  ld   $22         ;'"'
              8321 003b  ld   $3b         ;';'
              8322 0000  ld   $00         ;'\x00'
              8323 003b  ld   $3b
              8324 00e0  ld   $e0
              8325 0008  ld   $08
              8326 0080  ld   $80
              8327 0011  ld   $11
              8328 0049  ld   $49         ;'I'
              8329 003d  ld   $3d         ;'='
              832a 0049  ld   $49         ;'I'
              832b 002b  ld   $2b         ;'+'
              832c 0031  ld   $31         ;'1'
              832d 0000  ld   $00         ;'\x00'
              832e 003c  ld   $3c
              832f 00a0  ld   $a0
              8330 0011  ld   $11
              8331 008a  ld   $8a
              8332 0011  ld   $11
              8333 0049  ld   $49         ;'I'
              8334 0046  ld   $46         ;'F'
              8335 0049  ld   $49         ;'I'
              8336 003c  ld   $3c         ;'<'
              8337 0031  ld   $31         ;'1'
              8338 0030  ld   $30         ;'0'
              8339 0047  ld   $47         ;'G'
              833a 004f  ld   $4f         ;'O'
              833b 0054  ld   $54         ;'T'
              833c 004f  ld   $4f         ;'O'
              833d 0034  ld   $34         ;'4'
              833e 0033  ld   $33         ;'3'
              833f 0030  ld   $30         ;'0'
              8340 0030  ld   $30         ;'0'
              8341 0000  ld   $00         ;'\x00'
              8342 003c  ld   $3c
              8343 00c0  ld   $c0
              8344 000f  ld   $0f
              8345 0094  ld   $94
              8346 0011  ld   $11
              8347 003f  ld   $3f         ;'?'
              8348 0022  ld   $22         ;'"'
              8349 0049  ld   $49         ;'I'
              834a 0020  ld   $20         ;' '
              834b 0050  ld   $50         ;'P'
              834c 004c  ld   $4c         ;'L'
              834d 0041  ld   $41         ;'A'
              834e 0059  ld   $59         ;'Y'
              834f 0020  ld   $20         ;' '
              8350 0022  ld   $22         ;'"'
              8351 003b  ld   $3b         ;';'
              8352 0042  ld   $42         ;'B'
              8353 0000  ld   $00         ;'\x00'
              8354 003c  ld   $3c
              8355 00e0  ld   $e0
              8356 0004  ld   $04
              8357 009e  ld   $9e
              8358 0011  ld   $11
              8359 003f  ld   $3f         ;'?'
              835a 0000  ld   $00         ;'\x00'
              835b 003d  ld   $3d
              835c 00a0  ld   $a0
              835d 000b  ld   $0b
              835e 00a9  ld   $a9
              835f 0011  ld   $11
              8360 0041  ld   $41         ;'A'
              8361 0028  ld   $28         ;'('
              8362 0042  ld   $42         ;'B'
              8363 002b  ld   $2b         ;'+'
              8364 0036  ld   $36         ;'6'
              8365 0029  ld   $29         ;')'
              8366 003d  ld   $3d         ;'='
              8367 0033  ld   $33         ;'3'
              8368 0000  ld   $00         ;'\x00'
              8369 003d  ld   $3d
              836a 00c0  ld   $c0
              836b 0008  ld   $08
              836c 00b2  ld   $b2
              836d 0011  ld   $11
              836e 0055  ld   $55         ;'U'
              836f 003d  ld   $3d         ;'='
              8370 0055  ld   $55         ;'U'
              8371 002d  ld   $2d         ;'-'
              8372 0031  ld   $31         ;'1'
              8373 0000  ld   $00         ;'\x00'
              8374 003d  ld   $3d
              8375 00e0  ld   $e0
              8376 0012  ld   $12
              8377 00bd  ld   $bd
              8378 0011  ld   $11
              8379 0049  ld   $49         ;'I'
              837a 0046  ld   $46         ;'F'
              837b 0054  ld   $54         ;'T'
              837c 003c  ld   $3c         ;'<'
              837d 0031  ld   $31         ;'1'
              837e 0030  ld   $30         ;'0'
              837f 0030  ld   $30         ;'0'
              8380 0047  ld   $47         ;'G'
              8381 004f  ld   $4f         ;'O'
              8382 0054  ld   $54         ;'T'
              8383 004f  ld   $4f         ;'O'
              8384 0032  ld   $32         ;'2'
              8385 0030  ld   $30         ;'0'
              8386 0031  ld   $31         ;'1'
              8387 0030  ld   $30         ;'0'
              8388 0000  ld   $00         ;'\x00'
              8389 003e  ld   $3e
              838a 00a0  ld   $a0
              838b 0006  ld   $06
              838c 00d0  ld   $d0
              838d 0011  ld   $11
              838e 0046  ld   $46         ;'F'
              838f 003d  ld   $3d         ;'='
              8390 0031  ld   $31         ;'1'
              8391 0000  ld   $00         ;'\x00'
              8392 003e  ld   $3e
              8393 00c0  ld   $c0
              8394 0006  ld   $06
              8395 00da  ld   $da
              8396 0011  ld   $11
              8397 005a  ld   $5a         ;'Z'
              8398 003d  ld   $3d         ;'='
              8399 0031  ld   $31         ;'1'
              839a 0000  ld   $00         ;'\x00'
              839b 003e  ld   $3e
              839c 00e0  ld   $e0
              839d 000b  ld   $0b
              839e 00e4  ld   $e4
              839f 0011  ld   $11
              83a0 0047  ld   $47         ;'G'
              83a1 004f  ld   $4f         ;'O'
              83a2 0054  ld   $54         ;'T'
              83a3 004f  ld   $4f         ;'O'
              83a4 0032  ld   $32         ;'2'
              83a5 0030  ld   $30         ;'0'
              83a6 0031  ld   $31         ;'1'
              83a7 0030  ld   $30         ;'0'
              83a8 0000  ld   $00         ;'\x00'
              83a9 003f  ld   $3f
              83aa 00a0  ld   $a0
              83ab 0010  ld   $10
              83ac 00d4  ld   $d4
              83ad 0017  ld   $17
              83ae 004a  ld   $4a         ;'J'
              83af 003d  ld   $3d         ;'='
              83b0 0028  ld   $28         ;'('
              83b1 0049  ld   $49         ;'I'
              83b2 002d  ld   $2d         ;'-'
              83b3 0031  ld   $31         ;'1'
              83b4 0029  ld   $29         ;')'
              83b5 002f  ld   $2f         ;'/'
              83b6 0033  ld   $33         ;'3'
              83b7 002a  ld   $2a         ;'*'
              83b8 0033  ld   $33         ;'3'
              83b9 002b  ld   $2b         ;'+'
              83ba 0038  ld   $38         ;'8'
              83bb 0000  ld   $00         ;'\x00'
              83bc 003f  ld   $3f
              83bd 00c0  ld   $c0
              83be 0006  ld   $06
              83bf 00de  ld   $de
              83c0 0017  ld   $17
              83c1 0044  ld   $44         ;'D'
              83c2 003d  ld   $3d         ;'='
              83c3 0031  ld   $31         ;'1'
              83c4 0000  ld   $00         ;'\x00'
              83c5 003f  ld   $3f
              83c6 00e0  ld   $e0
              83c7 000b  ld   $0b
              83c8 00e8  ld   $e8
              83c9 0017  ld   $17
              83ca 0047  ld   $47         ;'G'
              83cb 004f  ld   $4f         ;'O'
              83cc 0054  ld   $54         ;'T'
              83cd 004f  ld   $4f         ;'O'
              83ce 0036  ld   $36         ;'6'
              83cf 0035  ld   $35         ;'5'
              83d0 0030  ld   $30         ;'0'
              83d1 0030  ld   $30         ;'0'
              83d2 0000  ld   $00         ;'\x00'
              83d3 0040  ld   $40
              83d4 00a0  ld   $a0
              83d5 0012  ld   $12
              83d6 0038  ld   $38
              83d7 0018  ld   $18
              83d8 004a  ld   $4a         ;'J'
              83d9 003d  ld   $3d         ;'='
              83da 0049  ld   $49         ;'I'
              83db 002d  ld   $2d         ;'-'
              83dc 0028  ld   $28         ;'('
              83dd 0049  ld   $49         ;'I'
              83de 002d  ld   $2d         ;'-'
              83df 0031  ld   $31         ;'1'
              83e0 0029  ld   $29         ;')'
              83e1 002f  ld   $2f         ;'/'
              83e2 0033  ld   $33         ;'3'
              83e3 002a  ld   $2a         ;'*'
              83e4 0033  ld   $33         ;'3'
              83e5 002b  ld   $2b         ;'+'
              83e6 0039  ld   $39         ;'9'
              83e7 0000  ld   $00         ;'\x00'
              83e8 0040  ld   $40
              83e9 00c0  ld   $c0
              83ea 0006  ld   $06
              83eb 0042  ld   $42
              83ec 0018  ld   $18
              83ed 0044  ld   $44         ;'D'
              83ee 003d  ld   $3d         ;'='
              83ef 0033  ld   $33         ;'3'
              83f0 0000  ld   $00         ;'\x00'
              83f1 0040  ld   $40
              83f2 00e0  ld   $e0
              83f3 000b  ld   $0b
              83f4 004c  ld   $4c
              83f5 0018  ld   $18
              83f6 0047  ld   $47         ;'G'
              83f7 004f  ld   $4f         ;'O'
              83f8 0054  ld   $54         ;'T'
              83f9 004f  ld   $4f         ;'O'
              83fa 0036  ld   $36         ;'6'
              83fb fe00  bra  ac          ;+-----------------------------------+
              83fc fcfd  bra  $83fd       ;|                                   |
              83fd 1418  ld   $18,y       ;| Trampoline for page $8300 lookups |
              83fe e006  jmp  y,$06       ;|                                   |
              83ff c218  st   [$18]       ;+-----------------------------------+
              8400 0035  ld   $35         ;'5'
              8401 0030  ld   $30         ;'0'
              8402 0030  ld   $30         ;'0'
              8403 0000  ld   $00         ;'\x00'
              8404 0041  ld   $41
              8405 00a0  ld   $a0
              8406 0013  ld   $13
              8407 009c  ld   $9c
              8408 0018  ld   $18
              8409 0049  ld   $49         ;'I'
              840a 0046  ld   $46         ;'F'
              840b 0049  ld   $49         ;'I'
              840c 0025  ld   $25         ;'%'
              840d 0034  ld   $34         ;'4'
              840e 003c  ld   $3c         ;'<'
              840f 003e  ld   $3e         ;'>'
              8410 0031  ld   $31         ;'1'
              8411 0047  ld   $47         ;'G'
              8412 004f  ld   $4f         ;'O'
              8413 0054  ld   $54         ;'T'
              8414 004f  ld   $4f         ;'O'
              8415 0036  ld   $36         ;'6'
              8416 0034  ld   $34         ;'4'
              8417 0034  ld   $34         ;'4'
              8418 0030  ld   $30         ;'0'
              8419 0000  ld   $00         ;'\x00'
              841a 0041  ld   $41
              841b 00c0  ld   $c0
              841c 0006  ld   $06
              841d 00a6  ld   $a6
              841e 0018  ld   $18
              841f 0044  ld   $44         ;'D'
              8420 003d  ld   $3d         ;'='
              8421 0034  ld   $34         ;'4'
              8422 0000  ld   $00         ;'\x00'
              8423 0041  ld   $41
              8424 00e0  ld   $e0
              8425 0007  ld   $07
              8426 00ba  ld   $ba
              8427 0018  ld   $18
              8428 004a  ld   $4a         ;'J'
              8429 003d  ld   $3d         ;'='
              842a 0031  ld   $31         ;'1'
              842b 0031  ld   $31         ;'1'
              842c 0000  ld   $00         ;'\x00'
              842d 0042  ld   $42
              842e 00a0  ld   $a0
              842f 000b  ld   $0b
              8430 00c4  ld   $c4
              8431 0018  ld   $18
              8432 0047  ld   $47         ;'G'
              8433 004f  ld   $4f         ;'O'
              8434 0054  ld   $54         ;'T'
              8435 004f  ld   $4f         ;'O'
              8436 0036  ld   $36         ;'6'
              8437 0035  ld   $35         ;'5'
              8438 0030  ld   $30         ;'0'
              8439 0030  ld   $30         ;'0'
              843a 0000  ld   $00         ;'\x00'
              843b 0042  ld   $42
              843c 00c0  ld   $c0
              843d 0006  ld   $06
              843e 0000  ld   $00
              843f 0019  ld   $19
              8440 0044  ld   $44         ;'D'
              8441 003d  ld   $3d         ;'='
              8442 0032  ld   $32         ;'2'
              8443 0000  ld   $00         ;'\x00'
              8444 0042  ld   $42
              8445 00e0  ld   $e0
              8446 0011  ld   $11
              8447 000b  ld   $0b
              8448 0019  ld   $19
              8449 0049  ld   $49         ;'I'
              844a 0046  ld   $46         ;'F'
              844b 0049  ld   $49         ;'I'
              844c 003c  ld   $3c         ;'<'
              844d 003d  ld   $3d         ;'='
              844e 0031  ld   $31         ;'1'
              844f 0047  ld   $47         ;'G'
              8450 004f  ld   $4f         ;'O'
              8451 0054  ld   $54         ;'T'
              8452 004f  ld   $4f         ;'O'
              8453 0036  ld   $36         ;'6'
              8454 0034  ld   $34         ;'4'
              8455 0034  ld   $34         ;'4'
              8456 0030  ld   $30         ;'0'
              8457 0000  ld   $00         ;'\x00'
              8458 0043  ld   $43
              8459 00a0  ld   $a0
              845a 0011  ld   $11
              845b 000c  ld   $0c
              845c 0019  ld   $19
              845d 0049  ld   $49         ;'I'
              845e 0046  ld   $46         ;'F'
              845f 0049  ld   $49         ;'I'
              8460 003e  ld   $3e         ;'>'
              8461 003d  ld   $3d         ;'='
              8462 0039  ld   $39         ;'9'
              8463 0047  ld   $47         ;'G'
              8464 004f  ld   $4f         ;'O'
              8465 0054  ld   $54         ;'T'
              8466 004f  ld   $4f         ;'O'
              8467 0036  ld   $36         ;'6'
              8468 0034  ld   $34         ;'4'
              8469 0034  ld   $34         ;'4'
              846a 0030  ld   $30         ;'0'
              846b 0000  ld   $00         ;'\x00'
              846c 0043  ld   $43
              846d 00c0  ld   $c0
              846e 0012  ld   $12
              846f 000d  ld   $0d
              8470 0019  ld   $19
              8471 0049  ld   $49         ;'I'
              8472 0046  ld   $46         ;'F'
              8473 0049  ld   $49         ;'I'
              8474 0025  ld   $25         ;'%'
              8475 0032  ld   $32         ;'2'
              8476 003d  ld   $3d         ;'='
              8477 0031  ld   $31         ;'1'
              8478 0047  ld   $47         ;'G'
              8479 004f  ld   $4f         ;'O'
              847a 0054  ld   $54         ;'T'
              847b 004f  ld   $4f         ;'O'
              847c 0036  ld   $36         ;'6'
              847d 0033  ld   $33         ;'3'
              847e 0033  ld   $33         ;'3'
              847f 0030  ld   $30         ;'0'
              8480 0000  ld   $00         ;'\x00'
              8481 0043  ld   $43
              8482 00e0  ld   $e0
              8483 0006  ld   $06
              8484 0028  ld   $28
              8485 0019  ld   $19
              8486 004a  ld   $4a         ;'J'
              8487 003d  ld   $3d         ;'='
              8488 0030  ld   $30         ;'0'
              8489 0000  ld   $00         ;'\x00'
              848a 0044  ld   $44
              848b 00a0  ld   $a0
              848c 0009  ld   $09
              848d 0032  ld   $32
              848e 0019  ld   $19
              848f 0052  ld   $52         ;'R'
              8490 0045  ld   $45         ;'E'
              8491 0054  ld   $54         ;'T'
              8492 0055  ld   $55         ;'U'
              8493 0052  ld   $52         ;'R'
              8494 004e  ld   $4e         ;'N'
              8495 0000  ld   $00         ;'\x00'
              8496 0044  ld   $44
              8497 00c0  ld   $c0
              8498 000b  ld   $0b
              8499 0064  ld   $64
              849a 0019  ld   $19
              849b 004c  ld   $4c         ;'L'
              849c 003d  ld   $3d         ;'='
              849d 0041  ld   $41         ;'A'
              849e 0028  ld   $28         ;'('
              849f 004a  ld   $4a         ;'J'
              84a0 002d  ld   $2d         ;'-'
              84a1 0044  ld   $44         ;'D'
              84a2 0029  ld   $29         ;')'
              84a3 0000  ld   $00         ;'\x00'
              84a4 0044  ld   $44
              84a5 00e0  ld   $e0
              84a6 0009  ld   $09
              84a7 0066  ld   $66
              84a8 0019  ld   $19
              84a9 004d  ld   $4d         ;'M'
              84aa 003d  ld   $3d         ;'='
              84ab 0041  ld   $41         ;'A'
              84ac 0028  ld   $28         ;'('
              84ad 004a  ld   $4a         ;'J'
              84ae 0029  ld   $29         ;')'
              84af 0000  ld   $00         ;'\x00'
              84b0 0045  ld   $45
              84b1 00a0  ld   $a0
              84b2 000b  ld   $0b
              84b3 006e  ld   $6e
              84b4 0019  ld   $19
              84b5 004e  ld   $4e         ;'N'
              84b6 003d  ld   $3d         ;'='
              84b7 0041  ld   $41         ;'A'
              84b8 0028  ld   $28         ;'('
              84b9 004a  ld   $4a         ;'J'
              84ba 002b  ld   $2b         ;'+'
              84bb 0044  ld   $44         ;'D'
              84bc 0029  ld   $29         ;')'
              84bd 0000  ld   $00         ;'\x00'
              84be 0045  ld   $45
              84bf 00c0  ld   $c0
              84c0 0009  ld   $09
              84c1 0082  ld   $82
              84c2 0019  ld   $19
              84c3 0052  ld   $52         ;'R'
              84c4 0045  ld   $45         ;'E'
              84c5 0054  ld   $54         ;'T'
              84c6 0055  ld   $55         ;'U'
              84c7 0052  ld   $52         ;'R'
              84c8 004e  ld   $4e         ;'N'
              84c9 0000  ld   $00         ;'\x00'
              84ca 0045  ld   $45
              84cb 00e2  ld   $e2
              84cc 0004  ld   $04
              84cd 0052  ld   $52         ;'R'
              84ce 0055  ld   $55         ;'U'
              84cf 004e  ld   $4e         ;'N'
              84d0 0000  ld   $00         ;'\x00'
              84d1 001b  ld   $1b
              84d2 00a0  ld   $a0
              84d3 0002  ld   $02
              84d4 00e0  ld   $e0
              84d5 0045  ld   $45
              84d6 0000  ld   $00
              84d7 0000  ld   $00         ;End of Apps/TicTac/TicTac_v2.gtb, size 2007
                                          ;+-----------------------------------+
                                          ;| Apps/WozMon/WozMon_v2.gcl         |
                                          ;+-----------------------------------+
              84d8 dc54  st   $54,[y,x++] ;'T'
              84d9 dc69  st   $69,[y,x++] ;'i'
              84da dc63  st   $63,[y,x++] ;'c'
              84db dc54  st   $54,[y,x++] ;'T'
              84dc dc61  st   $61,[y,x++] ;'a'
              84dd dc63  st   $63,[y,x++] ;'c'
              84de dc00  st   $00,[y,x++] ;'\x00'
              84df dc00  st   $00,[y,x++] ;'\x00'
              84e0 00d9  ld   $d9
              84e1 c218  st   [$18]
              84e2 007c  ld   $7c
              84e3 14e1  ld   $e1,y
              84e4 e071  jmp  y,$71
              84e5 c219  st   [$19]
WozMon:       84e6 0002  ld   $02         ;| RAM segment address (high byte first)
              84e7 0000  ld   $00         ;|
              84e8 00e2  ld   $e2         ;| Length (1..256)
              84e9 00cd  ld   $cd         ;0200 DEF
              84ea 000a  ld   $0a
              84eb 002a  ld   $2a
              84ec 002a  ld   $2a
              84ed 0020  ld   $20
              84ee 0057  ld   $57
              84ef 006f  ld   $6f
              84f0 007a  ld   $7a
              84f1 004d  ld   $4d
              84f2 006f  ld   $6f
              84f3 006e  ld   $6e
              84f4 0000  ld   $00
              84f5 002b  ld   $2b         ;020c STW
              84f6 0030  ld   $30         ;020c 'tmp'
              84f7 0011  ld   $11         ;020e LDWI
              84f8 00df  ld   $df
              84f9 0001  ld   $01
              84fa 00f6  ld   $f6         ;0211 DEEK
              84fb fe00  bra  ac          ;+-----------------------------------+
              84fc fcfd  bra  $84fd       ;|                                   |
              84fd 1418  ld   $18,y       ;| Trampoline for page $8400 lookups |
              84fe e006  jmp  y,$06       ;|                                   |
              84ff c218  st   [$18]       ;+-----------------------------------+
              8500 002b  ld   $2b         ;0212 STW
              8501 0032  ld   $32         ;0212 'Pos'
              8502 00cd  ld   $cd         ;0214 DEF
              8503 0060  ld   $60
              8504 00e6  ld   $e6         ;0216 SUBI
              8505 0052  ld   $52
              8506 0035  ld   $35         ;0218 BCC
              8507 0053  ld   $53         ;0219 GE
              8508 0022  ld   $22
              8509 00e3  ld   $e3         ;021b ADDI
              850a 0032  ld   $32
              850b 002b  ld   $2b         ;021d STW
              850c 0034  ld   $34         ;021d 'i'
              850d 0011  ld   $11         ;021f LDWI
              850e 0000  ld   $00
              850f 0007  ld   $07
              8510 0090  ld   $90         ;0222 BRA
              8511 0027  ld   $27
              8512 002b  ld   $2b         ;0224 STW
              8513 0034  ld   $34         ;0224 'i'
              8514 0011  ld   $11         ;0226 LDWI
              8515 0000  ld   $00
              8516 0008  ld   $08
              8517 002b  ld   $2b         ;0229 STW
              8518 0036  ld   $36         ;0229 'k'
              8519 0021  ld   $21         ;022b LDW
              851a 0034  ld   $34         ;022b 'i'
              851b 00e9  ld   $e9         ;022d LSLW
              851c 00e9  ld   $e9         ;022e LSLW
              851d 0099  ld   $99         ;022f ADDW
              851e 0034  ld   $34         ;022f 'i'
              851f 0099  ld   $99         ;0231 ADDW
              8520 0036  ld   $36         ;0231 'k'
              8521 002b  ld   $2b         ;0233 STW
              8522 0036  ld   $36         ;0233 'k'
              8523 0011  ld   $11         ;0235 LDWI
              8524 00e1  ld   $e1
              8525 0004  ld   $04
              8526 002b  ld   $2b         ;0238 STW
              8527 0022  ld   $22
              8528 0021  ld   $21         ;023a LDW
              8529 002a  ld   $2a
              852a 002b  ld   $2b         ;023c STW
              852b 0024  ld   $24
              852c 0021  ld   $21         ;023e LDW
              852d 0032  ld   $32         ;023e 'Pos'
              852e 002b  ld   $2b         ;0240 STW
              852f 0028  ld   $28
              8530 00ec  ld   $ec         ;0242 STLW
              8531 00fe  ld   $fe
              8532 00e3  ld   $e3         ;0244 ADDI
              8533 0006  ld   $06
              8534 002b  ld   $2b         ;0246 STW
              8535 0032  ld   $32         ;0246 'Pos'
              8536 0059  ld   $59         ;0248 LDI
              8537 0005  ld   $05
              8538 002b  ld   $2b         ;024a STW
              8539 0034  ld   $34         ;024a 'i'
              853a 0021  ld   $21         ;024c LDW
              853b 0036  ld   $36         ;024c 'k'
              853c 007f  ld   $7f         ;024e LUP
              853d 0000  ld   $00
              853e 005e  ld   $5e         ;0250 ST
              853f 0026  ld   $26
              8540 00b4  ld   $b4         ;0252 SYS
              8541 00cc  ld   $cc
              8542 0093  ld   $93         ;0254 INC
              8543 0036  ld   $36         ;0254 'k'
              8544 0093  ld   $93         ;0256 INC
              8545 0028  ld   $28
              8546 0021  ld   $21         ;0258 LDW
              8547 0034  ld   $34         ;0258 'i'
              8548 00e6  ld   $e6         ;025a SUBI
              8549 0001  ld   $01
              854a 0035  ld   $35         ;025c BCC
              854b 004d  ld   $4d         ;025d GT
              854c 0048  ld   $48
              854d 00ee  ld   $ee         ;025f LDLW
              854e 00fe  ld   $fe
              854f 00ff  ld   $ff         ;0261 RET
              8550 002b  ld   $2b         ;0262 STW
              8551 0038  ld   $38         ;0262 'PrintChar'
              8552 00cd  ld   $cd         ;0264 DEF
              8553 00ad  ld   $ad
              8554 001a  ld   $1a         ;0266 LD
              8555 0032  ld   $32         ;0266 'Pos'
              8556 0035  ld   $35         ;0268 BCC
              8557 003f  ld   $3f         ;0269 EQ
              8558 00ac  ld   $ac
              8559 0011  ld   $11         ;026b LDWI
              855a 00e1  ld   $e1
              855b 0004  ld   $04
              855c 002b  ld   $2b         ;026e STW
              855d 0022  ld   $22
              855e 0011  ld   $11         ;0270 LDWI
              855f 0000  ld   $00
              8560 0008  ld   $08
              8561 005e  ld   $5e         ;0273 ST
              8562 0032  ld   $32         ;0273 'Pos'
              8563 0099  ld   $99         ;0275 ADDW
              8564 0032  ld   $32         ;0275 'Pos'
              8565 0035  ld   $35         ;0277 BCC
              8566 0053  ld   $53         ;0278 GE
              8567 007b  ld   $7b
              8568 0011  ld   $11         ;027a LDWI
              8569 0000  ld   $00
              856a 0008  ld   $08
              856b 002b  ld   $2b         ;027d STW
              856c 0032  ld   $32         ;027d 'Pos'
              856d 002b  ld   $2b         ;027f STW
              856e 0028  ld   $28
              856f 005e  ld   $5e         ;0281 ST
              8570 0026  ld   $26
              8571 00b4  ld   $b4         ;0283 SYS
              8572 00cc  ld   $cc
              8573 0093  ld   $93         ;0285 INC
              8574 0028  ld   $28
              8575 001a  ld   $1a         ;0287 LD
              8576 0028  ld   $28
              8577 008c  ld   $8c         ;0289 XORI
              8578 00a0  ld   $a0
              8579 0035  ld   $35         ;028b BCC
              857a 0072  ld   $72         ;028c NE
              857b 0081  ld   $81
              857c 0011  ld   $11         ;028e LDWI
              857d 00ee  ld   $ee
              857e 0001  ld   $01
              857f 002b  ld   $2b         ;0291 STW
              8580 0034  ld   $34         ;0291 'i'
              8581 0021  ld   $21         ;0293 LDW
              8582 0034  ld   $34         ;0293 'i'
              8583 00ad  ld   $ad         ;0295 PEEK
              8584 00e6  ld   $e6         ;0296 SUBI
              8585 0078  ld   $78
              8586 0035  ld   $35         ;0298 BCC
              8587 0053  ld   $53         ;0299 GE
              8588 009d  ld   $9d
              8589 008c  ld   $8c         ;029b XORI
              858a 0080  ld   $80
              858b 0090  ld   $90         ;029d BRA
              858c 009f  ld   $9f
              858d 008c  ld   $8c         ;029f XORI
              858e 0008  ld   $08
              858f 00f0  ld   $f0         ;02a1 POKE
              8590 0034  ld   $34         ;02a1 'i'
              8591 0021  ld   $21         ;02a3 LDW
              8592 0034  ld   $34         ;02a3 'i'
              8593 00e6  ld   $e6         ;02a5 SUBI
              8594 0002  ld   $02
              8595 002b  ld   $2b         ;02a7 STW
              8596 0034  ld   $34         ;02a7 'i'
              8597 008c  ld   $8c         ;02a9 XORI
              8598 00fe  ld   $fe
              8599 0035  ld   $35         ;02ab BCC
              859a 0072  ld   $72         ;02ac NE
              859b 0091  ld   $91
              859c 00ff  ld   $ff         ;02ae RET
              859d 002b  ld   $2b         ;02af STW
              859e 003a  ld   $3a         ;02af 'CNewline'
              859f 00cd  ld   $cd         ;02b1 DEF
              85a0 00d9  ld   $d9
              85a1 0075  ld   $75         ;02b3 PUSH
              85a2 002b  ld   $2b         ;02b4 STW
              85a3 0030  ld   $30         ;02b4 'tmp'
              85a4 0011  ld   $11         ;02b6 LDWI
              85a5 0052  ld   $52
              85a6 0006  ld   $06
              85a7 002b  ld   $2b         ;02b9 STW
              85a8 0022  ld   $22
              85a9 0021  ld   $21         ;02bb LDW
              85aa 0030  ld   $30         ;02bb 'tmp'
              85ab 00b4  ld   $b4         ;02bd SYS
              85ac 00f6  ld   $f6
              85ad 00e6  ld   $e6         ;02bf SUBI
              85ae 000a  ld   $0a
              85af 0035  ld   $35         ;02c1 BCC
              85b0 0050  ld   $50         ;02c2 LT
              85b1 00c4  ld   $c4
              85b2 00e3  ld   $e3         ;02c4 ADDI
              85b3 0007  ld   $07
              85b4 00e3  ld   $e3         ;02c6 ADDI
              85b5 003a  ld   $3a
              85b6 00cf  ld   $cf         ;02c8 CALL
              85b7 0038  ld   $38         ;02c8 'PrintChar'
              85b8 0021  ld   $21         ;02ca LDW
              85b9 0030  ld   $30         ;02ca 'tmp'
              85ba 0082  ld   $82         ;02cc ANDI
              85bb 000f  ld   $0f
              85bc 00e6  ld   $e6         ;02ce SUBI
              85bd 000a  ld   $0a
              85be 0035  ld   $35         ;02d0 BCC
              85bf 0050  ld   $50         ;02d1 LT
              85c0 00d3  ld   $d3
              85c1 00e3  ld   $e3         ;02d3 ADDI
              85c2 0007  ld   $07
              85c3 00e3  ld   $e3         ;02d5 ADDI
              85c4 003a  ld   $3a
              85c5 00cf  ld   $cf         ;02d7 CALL
              85c6 0038  ld   $38         ;02d7 'PrintChar'
              85c7 0063  ld   $63         ;02d9 POP
              85c8 00ff  ld   $ff         ;02da RET
              85c9 002b  ld   $2b         ;02db STW
              85ca 003c  ld   $3c         ;02db 'PrintByte'
              85cb 0011  ld   $11         ;02dd LDWI
              85cc 0000  ld   $00
              85cd 0003  ld   $03
              85ce 00cf  ld   $cf         ;02e0 CALL
              85cf 0018  ld   $18         ;02e0 vAC
              85d0 0003  ld   $03         ;| RAM segment address (high byte first)
              85d1 0000  ld   $00         ;|
              85d2 00f3  ld   $f3         ;| Length (1..256)
              85d3 00cd  ld   $cd         ;0300 DEF
              85d4 00d3  ld   $d3
              85d5 0075  ld   $75         ;0302 PUSH
              85d6 0059  ld   $59         ;0303 LDI
              85d7 0080  ld   $80
              85d8 002b  ld   $2b         ;0305 STW
              85d9 003e  ld   $3e         ;0305 'Buffer'
              85da 00cf  ld   $cf         ;0307 CALL
              85db 003a  ld   $3a         ;0307 'CNewline'
              85dc 0093  ld   $93         ;0309 INC
              85dd 003e  ld   $3e         ;0309 'Buffer'
              85de 0021  ld   $21         ;030b LDW
              85df 003e  ld   $3e         ;030b 'Buffer'
              85e0 00ad  ld   $ad         ;030d PEEK
              85e1 0035  ld   $35         ;030e BCC
              85e2 003f  ld   $3f         ;030f EQ
              85e3 00d1  ld   $d1
              85e4 00e6  ld   $e6         ;0311 SUBI
              85e5 002e  ld   $2e
              85e6 0035  ld   $35         ;0313 BCC
              85e7 0050  ld   $50         ;0314 LT
              85e8 0007  ld   $07
              85e9 0035  ld   $35         ;0316 BCC
              85ea 0072  ld   $72         ;0317 NE
              85eb 001d  ld   $1d
              85ec 0059  ld   $59         ;0319 LDI
              85ed 0001  ld   $01
              85ee 002b  ld   $2b         ;031b STW
              85ef 0040  ld   $40         ;031b 'Mode'
              85f0 0090  ld   $90         ;031d BRA
              85f1 0007  ld   $07
              85f2 00e6  ld   $e6         ;031f SUBI
              85f3 000c  ld   $0c
              85f4 0035  ld   $35         ;0321 BCC
              85f5 0072  ld   $72         ;0322 NE
              85f6 0028  ld   $28
              85f7 00e6  ld   $e6         ;0324 SUBI
              85f8 0001  ld   $01
              85f9 002b  ld   $2b         ;0326 STW
              85fa 0040  ld   $40         ;0326 'Mode'
              85fb fe00  bra  ac          ;+-----------------------------------+
              85fc fcfd  bra  $85fd       ;|                                   |
              85fd 1418  ld   $18,y       ;| Trampoline for page $8500 lookups |
              85fe e006  jmp  y,$06       ;|                                   |
              85ff c218  st   [$18]       ;+-----------------------------------+
              8600 0090  ld   $90         ;0328 BRA
              8601 0007  ld   $07
              8602 00e6  ld   $e6         ;032a SUBI
              8603 0018  ld   $18
              8604 0035  ld   $35         ;032c BCC
              8605 0072  ld   $72         ;032d NE
              8606 0031  ld   $31
              8607 00cf  ld   $cf         ;032f CALL
              8608 0042  ld   $42         ;032f 'Examine'
              8609 0090  ld   $90         ;0331 BRA
              860a 0007  ld   $07
              860b 0059  ld   $59         ;0333 LDI
              860c 0000  ld   $00
              860d 002b  ld   $2b         ;0335 STW
              860e 0030  ld   $30         ;0335 'tmp'
              860f 002b  ld   $2b         ;0337 STW
              8610 0044  ld   $44         ;0337 'Value'
              8611 00e9  ld   $e9         ;0339 LSLW
              8612 00e9  ld   $e9         ;033a LSLW
              8613 00e9  ld   $e9         ;033b LSLW
              8614 00e9  ld   $e9         ;033c LSLW
              8615 002b  ld   $2b         ;033d STW
              8616 0034  ld   $34         ;033d 'i'
              8617 0021  ld   $21         ;033f LDW
              8618 003e  ld   $3e         ;033f 'Buffer'
              8619 00ad  ld   $ad         ;0341 PEEK
              861a 0093  ld   $93         ;0342 INC
              861b 003e  ld   $3e         ;0342 'Buffer'
              861c 00e6  ld   $e6         ;0344 SUBI
              861d 0030  ld   $30
              861e 0035  ld   $35         ;0346 BCC
              861f 0050  ld   $50         ;0347 LT
              8620 0068  ld   $68
              8621 00e6  ld   $e6         ;0349 SUBI
              8622 000a  ld   $0a
              8623 0035  ld   $35         ;034b BCC
              8624 0053  ld   $53         ;034c GE
              8625 0054  ld   $54
              8626 002b  ld   $2b         ;034e STW
              8627 0030  ld   $30         ;034e 'tmp'
              8628 00e3  ld   $e3         ;0350 ADDI
              8629 000a  ld   $0a
              862a 0099  ld   $99         ;0352 ADDW
              862b 0034  ld   $34         ;0352 'i'
              862c 0090  ld   $90         ;0354 BRA
              862d 0035  ld   $35
              862e 00e6  ld   $e6         ;0356 SUBI
              862f 0006  ld   $06
              8630 0082  ld   $82         ;0358 ANDI
              8631 001f  ld   $1f
              8632 0035  ld   $35         ;035a BCC
              8633 0056  ld   $56         ;035b LE
              8634 0068  ld   $68
              8635 00e6  ld   $e6         ;035d SUBI
              8636 0007  ld   $07
              8637 0035  ld   $35         ;035f BCC
              8638 0053  ld   $53         ;0360 GE
              8639 0068  ld   $68
              863a 002b  ld   $2b         ;0362 STW
              863b 0030  ld   $30         ;0362 'tmp'
              863c 00e3  ld   $e3         ;0364 ADDI
              863d 0010  ld   $10
              863e 0099  ld   $99         ;0366 ADDW
              863f 0034  ld   $34         ;0366 'i'
              8640 0090  ld   $90         ;0368 BRA
              8641 0035  ld   $35
              8642 0021  ld   $21         ;036a LDW
              8643 0030  ld   $30         ;036a 'tmp'
              8644 0035  ld   $35         ;036c BCC
              8645 003f  ld   $3f         ;036d EQ
              8646 00cd  ld   $cd
              8647 0021  ld   $21         ;036f LDW
              8648 003e  ld   $3e         ;036f 'Buffer'
              8649 00e6  ld   $e6         ;0371 SUBI
              864a 0002  ld   $02
              864b 002b  ld   $2b         ;0373 STW
              864c 003e  ld   $3e         ;0373 'Buffer'
              864d 0021  ld   $21         ;0375 LDW
              864e 0040  ld   $40         ;0375 'Mode'
              864f 0035  ld   $35         ;0377 BCC
              8650 0053  ld   $53         ;0378 GE
              8651 0084  ld   $84
              8652 0021  ld   $21         ;037a LDW
              8653 0044  ld   $44         ;037a 'Value'
              8654 00f0  ld   $f0         ;037c POKE
              8655 0046  ld   $46         ;037c 'Store'
              8656 0021  ld   $21         ;037e LDW
              8657 0046  ld   $46         ;037e 'Store'
              8658 00e3  ld   $e3         ;0380 ADDI
              8659 0001  ld   $01
              865a 002b  ld   $2b         ;0382 STW
              865b 0046  ld   $46         ;0382 'Store'
              865c 0090  ld   $90         ;0384 BRA
              865d 0007  ld   $07
              865e 0035  ld   $35         ;0386 BCC
              865f 0072  ld   $72         ;0387 NE
              8660 0091  ld   $91
              8661 00cf  ld   $cf         ;0389 CALL
              8662 003a  ld   $3a         ;0389 'CNewline'
              8663 0021  ld   $21         ;038b LDW
              8664 0044  ld   $44         ;038b 'Value'
              8665 002b  ld   $2b         ;038d STW
              8666 0046  ld   $46         ;038d 'Store'
              8667 00e6  ld   $e6         ;038f SUBI
              8668 0001  ld   $01
              8669 002b  ld   $2b         ;0391 STW
              866a 0042  ld   $42         ;0391 'Examine'
              866b 0021  ld   $21         ;0393 LDW
              866c 0042  ld   $42         ;0393 'Examine'
              866d 00b8  ld   $b8         ;0395 SUBW
              866e 0044  ld   $44         ;0395 'Value'
              866f 0035  ld   $35         ;0397 BCC
              8670 0053  ld   $53         ;0398 GE
              8671 00c7  ld   $c7
              8672 0021  ld   $21         ;039a LDW
              8673 0042  ld   $42         ;039a 'Examine'
              8674 00e3  ld   $e3         ;039c ADDI
              8675 0001  ld   $01
              8676 002b  ld   $2b         ;039e STW
              8677 0042  ld   $42         ;039e 'Examine'
              8678 0082  ld   $82         ;03a0 ANDI
              8679 0007  ld   $07
              867a 0035  ld   $35         ;03a2 BCC
              867b 0072  ld   $72         ;03a3 NE
              867c 00a5  ld   $a5
              867d 00cf  ld   $cf         ;03a5 CALL
              867e 003a  ld   $3a         ;03a5 'CNewline'
              867f 001a  ld   $1a         ;03a7 LD
              8680 0032  ld   $32         ;03a7 'Pos'
              8681 0035  ld   $35         ;03a9 BCC
              8682 0072  ld   $72         ;03aa NE
              8683 00ba  ld   $ba
              8684 0059  ld   $59         ;03ac LDI
              8685 0002  ld   $02
              8686 005e  ld   $5e         ;03ae ST
              8687 0032  ld   $32         ;03ae 'Pos'
              8688 001a  ld   $1a         ;03b0 LD
              8689 0043  ld   $43         ;03b0 'Examine'+1
              868a 00cf  ld   $cf         ;03b2 CALL
              868b 003c  ld   $3c         ;03b2 'PrintByte'
              868c 001a  ld   $1a         ;03b4 LD
              868d 0042  ld   $42         ;03b4 'Examine'
              868e 00cf  ld   $cf         ;03b6 CALL
              868f 003c  ld   $3c         ;03b6 'PrintByte'
              8690 0059  ld   $59         ;03b8 LDI
              8691 003a  ld   $3a
              8692 00cf  ld   $cf         ;03ba CALL
              8693 0038  ld   $38         ;03ba 'PrintChar'
              8694 0021  ld   $21         ;03bc LDW
              8695 0032  ld   $32         ;03bc 'Pos'
              8696 00e3  ld   $e3         ;03be ADDI
              8697 0004  ld   $04
              8698 002b  ld   $2b         ;03c0 STW
              8699 0032  ld   $32         ;03c0 'Pos'
              869a 0021  ld   $21         ;03c2 LDW
              869b 0042  ld   $42         ;03c2 'Examine'
              869c 00ad  ld   $ad         ;03c4 PEEK
              869d 00cf  ld   $cf         ;03c5 CALL
              869e 003c  ld   $3c         ;03c5 'PrintByte'
              869f 0090  ld   $90         ;03c7 BRA
              86a0 0091  ld   $91
              86a1 0059  ld   $59         ;03c9 LDI
              86a2 0000  ld   $00
              86a3 002b  ld   $2b         ;03cb STW
              86a4 0040  ld   $40         ;03cb 'Mode'
              86a5 0090  ld   $90         ;03cd BRA
              86a6 0007  ld   $07
              86a7 0059  ld   $59         ;03cf LDI
              86a8 005c  ld   $5c
              86a9 00cf  ld   $cf         ;03d1 CALL
              86aa 0038  ld   $38         ;03d1 'PrintChar'
              86ab 0063  ld   $63         ;03d3 POP
              86ac 00ff  ld   $ff         ;03d4 RET
              86ad 002b  ld   $2b         ;03d5 STW
              86ae 0048  ld   $48         ;03d5 'ProcessBuffer'
              86af 0093  ld   $93         ;03d7 INC
              86b0 0032  ld   $32         ;03d7 'Pos'
              86b1 0011  ld   $11         ;03d9 LDWI
              86b2 0020  ld   $20
              86b3 000f  ld   $0f
              86b4 002b  ld   $2b         ;03dc STW
              86b5 002a  ld   $2a
              86b6 005e  ld   $5e         ;03de ST
              86b7 0024  ld   $24
              86b8 00cf  ld   $cf         ;03e0 CALL
              86b9 003a  ld   $3a         ;03e0 'CNewline'
              86ba 0059  ld   $59         ;03e2 LDI
              86bb 002a  ld   $2a
              86bc 00cf  ld   $cf         ;03e4 CALL
              86bd 0038  ld   $38         ;03e4 'PrintChar'
              86be 0021  ld   $21         ;03e6 LDW
              86bf 0030  ld   $30         ;03e6 'tmp'
              86c0 00ad  ld   $ad         ;03e8 PEEK
              86c1 0093  ld   $93         ;03e9 INC
              86c2 0030  ld   $30         ;03e9 'tmp'
              86c3 0035  ld   $35         ;03eb BCC
              86c4 0072  ld   $72         ;03ec NE
              86c5 00e2  ld   $e2
              86c6 0011  ld   $11         ;03ee LDWI
              86c7 0000  ld   $00
              86c8 0004  ld   $04
              86c9 00cf  ld   $cf         ;03f1 CALL
              86ca 0018  ld   $18         ;03f1 vAC
              86cb 0004  ld   $04         ;| RAM segment address (high byte first)
              86cc 0000  ld   $00         ;|
              86cd 0072  ld   $72         ;| Length (1..256)
              86ce 0059  ld   $59         ;0400 LDI
              86cf 0081  ld   $81
              86d0 002b  ld   $2b         ;0402 STW
              86d1 003e  ld   $3e         ;0402 'Buffer'
              86d2 00cf  ld   $cf         ;0404 CALL
              86d3 003a  ld   $3a         ;0404 'CNewline'
              86d4 0059  ld   $59         ;0406 LDI
              86d5 007f  ld   $7f
              86d6 005e  ld   $5e         ;0408 ST
              86d7 002b  ld   $2b
              86d8 00cf  ld   $cf         ;040a CALL
              86d9 0038  ld   $38         ;040a 'PrintChar'
              86da 002b  ld   $2b         ;040c STW
              86db 0032  ld   $32         ;040c 'Pos'
              86dc 001a  ld   $1a         ;040e LD
              86dd 000f  ld   $0f
              86de 002b  ld   $2b         ;0410 STW
              86df 0030  ld   $30         ;0410 'tmp'
              86e0 001a  ld   $1a         ;0412 LD
              86e1 000f  ld   $0f
              86e2 00f0  ld   $f0         ;0414 POKE
              86e3 003e  ld   $3e         ;0414 'Buffer'
              86e4 00fc  ld   $fc         ;0416 XORW
              86e5 0030  ld   $30         ;0416 'tmp'
              86e6 0035  ld   $35         ;0418 BCC
              86e7 0072  ld   $72         ;0419 NE
              86e8 001e  ld   $1e
              86e9 0021  ld   $21         ;041b LDW
              86ea 003e  ld   $3e         ;041b 'Buffer'
              86eb 00ad  ld   $ad         ;041d PEEK
              86ec 0090  ld   $90         ;041e BRA
              86ed 000e  ld   $0e
              86ee 0021  ld   $21         ;0420 LDW
              86ef 003e  ld   $3e         ;0420 'Buffer'
              86f0 00ad  ld   $ad         ;0422 PEEK
              86f1 008c  ld   $8c         ;0423 XORI
              86f2 000a  ld   $0a
              86f3 0035  ld   $35         ;0425 BCC
              86f4 003f  ld   $3f         ;0426 EQ
              86f5 0060  ld   $60
              86f6 008c  ld   $8c         ;0428 XORI
              86f7 0075  ld   $75
              86f8 0035  ld   $35         ;042a BCC
              86f9 0072  ld   $72         ;042b NE
              86fa 0042  ld   $42
              86fb fe00  bra  ac          ;+-----------------------------------+
              86fc fcfd  bra  $86fd       ;|                                   |
              86fd 1418  ld   $18,y       ;| Trampoline for page $8600 lookups |
              86fe e006  jmp  y,$06       ;|                                   |
              86ff c218  st   [$18]       ;+-----------------------------------+
              8700 0059  ld   $59         ;042d LDI
              8701 0020  ld   $20
              8702 00cf  ld   $cf         ;042f CALL
              8703 0038  ld   $38         ;042f 'PrintChar'
              8704 002b  ld   $2b         ;0431 STW
              8705 0032  ld   $32         ;0431 'Pos'
              8706 001a  ld   $1a         ;0433 LD
              8707 0032  ld   $32         ;0433 'Pos'
              8708 00e6  ld   $e6         ;0435 SUBI
              8709 0006  ld   $06
              870a 0035  ld   $35         ;0437 BCC
              870b 0050  ld   $50         ;0438 LT
              870c 0040  ld   $40
              870d 005e  ld   $5e         ;043a ST
              870e 0032  ld   $32         ;043a 'Pos'
              870f 0021  ld   $21         ;043c LDW
              8710 003e  ld   $3e         ;043c 'Buffer'
              8711 00e6  ld   $e6         ;043e SUBI
              8712 0001  ld   $01
              8713 002b  ld   $2b         ;0440 STW
              8714 003e  ld   $3e         ;0440 'Buffer'
              8715 0090  ld   $90         ;0442 BRA
              8716 0004  ld   $04
              8717 00e6  ld   $e6         ;0444 SUBI
              8718 0060  ld   $60
              8719 0035  ld   $35         ;0446 BCC
              871a 0053  ld   $53         ;0447 GE
              871b 0004  ld   $04
              871c 001a  ld   $1a         ;0449 LD
              871d 0032  ld   $32         ;0449 'Pos'
              871e 008c  ld   $8c         ;044b XORI
              871f 0096  ld   $96
              8720 0035  ld   $35         ;044d BCC
              8721 0072  ld   $72         ;044e NE
              8722 0057  ld   $57
              8723 0059  ld   $59         ;0450 LDI
              8724 005c  ld   $5c
              8725 00cf  ld   $cf         ;0452 CALL
              8726 0038  ld   $38         ;0452 'PrintChar'
              8727 0011  ld   $11         ;0454 LDWI
              8728 0000  ld   $00
              8729 0004  ld   $04
              872a 00cf  ld   $cf         ;0457 CALL
              872b 0018  ld   $18         ;0457 vAC
              872c 0021  ld   $21         ;0459 LDW
              872d 003e  ld   $3e         ;0459 'Buffer'
              872e 00ad  ld   $ad         ;045b PEEK
              872f 00cf  ld   $cf         ;045c CALL
              8730 0038  ld   $38         ;045c 'PrintChar'
              8731 0093  ld   $93         ;045e INC
              8732 003e  ld   $3e         ;045e 'Buffer'
              8733 0090  ld   $90         ;0460 BRA
              8734 0004  ld   $04
              8735 00f0  ld   $f0         ;0462 POKE
              8736 003e  ld   $3e         ;0462 'Buffer'
              8737 002b  ld   $2b         ;0464 STW
              8738 0040  ld   $40         ;0464 'Mode'
              8739 0059  ld   $59         ;0466 LDI
              873a 0020  ld   $20
              873b 00cf  ld   $cf         ;0468 CALL
              873c 0038  ld   $38         ;0468 'PrintChar'
              873d 0059  ld   $59         ;046a LDI
              873e 000f  ld   $0f
              873f 005e  ld   $5e         ;046c ST
              8740 002b  ld   $2b
              8741 00cf  ld   $cf         ;046e CALL
              8742 0048  ld   $48         ;046e 'ProcessBuffer'
              8743 0090  ld   $90         ;0470 BRA
              8744 00fe  ld   $fe
              8745 0000  ld   $00         ;End of Apps/WozMon/WozMon_v2.gcl, size 608
                                          ;+-----------------------------------+
                                          ;| Apps/Apple-1/Apple-1_v2.gt1       |
                                          ;+-----------------------------------+
              8746 dc57  st   $57,[y,x++] ;'W'
              8747 dc6f  st   $6f,[y,x++] ;'o'
              8748 dc7a  st   $7a,[y,x++] ;'z'
              8749 dc4d  st   $4d,[y,x++] ;'M'
              874a dc6f  st   $6f,[y,x++] ;'o'
              874b dc6e  st   $6e,[y,x++] ;'n'
              874c dc00  st   $00,[y,x++] ;'\x00'
              874d dc00  st   $00,[y,x++] ;'\x00'
              874e 00e6  ld   $e6
              874f c218  st   [$18]
              8750 0084  ld   $84
              8751 14e1  ld   $e1,y
              8752 e071  jmp  y,$71
              8753 c219  st   [$19]
Apple1:       8754 0002  ld   $02
              8755 0000  ld   $00
              8756 0054  ld   $54
              8757 001a  ld   $1a
              8758 0021  ld   $21
              8759 00e6  ld   $e6
              875a 0040  ld   $40
              875b 0035  ld   $35
              875c 0053  ld   $53
              875d 000b  ld   $0b
              875e 0021  ld   $21
              875f 000e  ld   $0e
              8760 00f3  ld   $f3
              8761 0017  ld   $17
              8762 0090  ld   $90
              8763 0005  ld   $05
              8764 0059  ld   $59
              8765 00a0  ld   $a0
              8766 002b  ld   $2b
              8767 0024  ld   $24
              8768 0011  ld   $11
              8769 0060  ld   $60
              876a 007e  ld   $7e
              876b 002b  ld   $2b
              876c 0026  ld   $26
              876d 0011  ld   $11
              876e 0003  ld   $03
              876f 000b  ld   $0b
              8770 002b  ld   $2b
              8771 0022  ld   $22
              8772 00b4  ld   $b4
              8773 00f3  ld   $f3
              8774 0011  ld   $11
              8775 00ee  ld   $ee
              8776 0001  ld   $01
              8777 002b  ld   $2b
              8778 007a  ld   $7a
              8779 0059  ld   $59
              877a 007e  ld   $7e
              877b 00f0  ld   $f0
              877c 007a  ld   $7a
              877d 001a  ld   $1a
              877e 007a  ld   $7a
              877f 00e6  ld   $e6
              8780 0002  ld   $02
              8781 005e  ld   $5e
              8782 007a  ld   $7a
              8783 0035  ld   $35
              8784 0053  ld   $53
              8785 0020  ld   $20
              8786 0011  ld   $11
              8787 0001  ld   $01
              8788 0001  ld   $01
              8789 002b  ld   $2b
              878a 007a  ld   $7a
              878b 0059  ld   $59
              878c 0060  ld   $60
              878d 00f0  ld   $f0
              878e 007a  ld   $7a
              878f 0011  ld   $11
              8790 00ff  ld   $ff
              8791 0010  ld   $10
              8792 002b  ld   $2b
              8793 007a  ld   $7a
              8794 0011  ld   $11
              8795 00f6  ld   $f6
              8796 0001  ld   $01
              8797 002b  ld   $2b
              8798 007c  ld   $7c
              8799 0011  ld   $11
              879a 0000  ld   $00
              879b 005e  ld   $5e
              879c 00f3  ld   $f3
              879d 007c  ld   $7c
              879e 0059  ld   $59
              879f 00fe  ld   $fe
              87a0 005e  ld   $5e
              87a1 000e  ld   $0e
              87a2 0011  ld   $11
              87a3 0000  ld   $00
              87a4 005f  ld   $5f
              87a5 002b  ld   $2b
              87a6 001a  ld   $1a
              87a7 0011  ld   $11
              87a8 00ac  ld   $ac
              87a9 005e  ld   $5e
              87aa 00ff  ld   $ff
              87ab 0003  ld   $03
              87ac 0000  ld   $00
              87ad 00cf  ld   $cf
              87ae 00a2  ld   $a2
              87af 0024  ld   $24
              87b0 00bd  ld   $bd
              87b1 0093  ld   $93
              87b2 0003  ld   $03
              87b3 0020  ld   $20
              87b4 00ef  ld   $ef
              87b5 00ff  ld   $ff
              87b6 00ca  ld   $ca
              87b7 00d0  ld   $d0
              87b8 00f7  ld   $f7
              87b9 0086  ld   $86
              87ba 00e2  ld   $e2
              87bb 00e6  ld   $e6
              87bc 00e3  ld   $e3
              87bd 00d0  ld   $d0
              87be 0002  ld   $02
              87bf 00e6  ld   $e6
              87c0 00e4  ld   $e4
              87c1 00ad  ld   $ad
              87c2 0011  ld   $11
              87c3 00d0  ld   $d0
              87c4 0010  ld   $10
              87c5 00f5  ld   $f5
              87c6 0020  ld   $20
              87c7 00c6  ld   $c6
              87c8 0003  ld   $03
              87c9 00e6  ld   $e6
              87ca 00e2  ld   $e2
              87cb 00a5  ld   $a5
              87cc 00e2  ld   $e2
              87cd 0029  ld   $29
              87ce 000f  ld   $0f
              87cf 00c9  ld   $c9
              87d0 000a  ld   $0a
              87d1 00b0  ld   $b0
              87d2 00f6  ld   $f6
              87d3 0020  ld   $20
              87d4 00c1  ld   $c1
              87d5 0003  ld   $03
              87d6 00a5  ld   $a5
              87d7 00e2  ld   $e2
              87d8 0020  ld   $20
              87d9 00dc  ld   $dc
              87da 00ff  ld   $ff
              87db 00a9  ld   $a9
              87dc 00a0  ld   $a0
              87dd 00a8  ld   $a8
              87de 0020  ld   $20
              87df 00ef  ld   $ef
              87e0 00ff  ld   $ff
              87e1 00a5  ld   $a5
              87e2 00e3  ld   $e3
              87e3 0085  ld   $85
              87e4 00e5  ld   $e5
              87e5 00a5  ld   $a5
              87e6 00e4  ld   $e4
              87e7 00a2  ld   $a2
              87e8 0005  ld   $05
              87e9 0094  ld   $94
              87ea 00e5  ld   $e5
              87eb 00a0  ld   $a0
              87ec 0003  ld   $03
              87ed 004a  ld   $4a
              87ee 0026  ld   $26
              87ef 00e5  ld   $e5
              87f0 0036  ld   $36
              87f1 00e5  ld   $e5
              87f2 0088  ld   $88
              87f3 00d0  ld   $d0
              87f4 00f8  ld   $f8
              87f5 00ca  ld   $ca
              87f6 00d0  ld   $d0
              87f7 00f1  ld   $f1
              87f8 0020  ld   $20
              87f9 00c6  ld   $c6
              87fa 0003  ld   $03
              87fb fe00  bra  ac          ;+-----------------------------------+
              87fc fcfd  bra  $87fd       ;|                                   |
              87fd 1418  ld   $18,y       ;| Trampoline for page $8700 lookups |
              87fe e006  jmp  y,$06       ;|                                   |
              87ff c218  st   [$18]       ;+-----------------------------------+
              8800 0020  ld   $20
              8801 00ef  ld   $ef
              8802 00ff  ld   $ff
              8803 0049  ld   $49
              8804 00b0  ld   $b0
              8805 00c9  ld   $c9
              8806 0008  ld   $08
              8807 00b0  ld   $b0
              8808 00cf  ld   $cf
              8809 0095  ld   $95
              880a 00ef  ld   $ef
              880b 00ca  ld   $ca
              880c 00e0  ld   $e0
              880d 00fb  ld   $fb
              880e 00d0  ld   $d0
              880f 00ed  ld   $ed
              8810 00a0  ld   $a0
              8811 00fb  ld   $fb
              8812 00a9  ld   $a9
              8813 00a0  ld   $a0
              8814 0020  ld   $20
              8815 00ef  ld   $ef
              8816 00ff  ld   $ff
              8817 00b5  ld   $b5
              8818 00f0  ld   $f0
              8819 00d5  ld   $d5
              881a 00eb  ld   $eb
              881b 00d0  ld   $d0
              881c 000d  ld   $0d
              881d 0094  ld   $94
              881e 00eb  ld   $eb
              881f 00a9  ld   $a9
              8820 00ab  ld   $ab
              8821 0095  ld   $95
              8822 00f0  ld   $f0
              8823 00c8  ld   $c8
              8824 00d0  ld   $d0
              8825 00ee  ld   $ee
              8826 00a2  ld   $a2
              8827 002d  ld   $2d
              8828 00d0  ld   $d0
              8829 008b  ld   $8b
              882a 00e8  ld   $e8
              882b 00d0  ld   $d0
              882c 00ea  ld   $ea
              882d 00a0  ld   $a0
              882e 00fb  ld   $fb
              882f 00b6  ld   $b6
              8830 00f0  ld   $f0
              8831 008a  ld   $8a
              8832 00a2  ld   $a2
              8833 00fb  ld   $fb
              8834 00d5  ld   $d5
              8835 00eb  ld   $eb
              8836 00d0  ld   $d0
              8837 0007  ld   $07
              8838 0094  ld   $94
              8839 00eb  ld   $eb
              883a 00a9  ld   $a9
              883b 00ad  ld   $ad
              883c 0020  ld   $20
              883d 00ef  ld   $ef
              883e 00ff  ld   $ff
              883f 00e8  ld   $e8
              8840 00d0  ld   $d0
              8841 00f2  ld   $f2
              8842 00c8  ld   $c8
              8843 00d0  ld   $d0
              8844 00ea  ld   $ea
              8845 00f0  ld   $f0
              8846 0087  ld   $87
              8847 00bf  ld   $bf
              8848 00d9  ld   $d9
              8849 00c4  ld   $c4
              884a 00c1  ld   $c1
              884b 00c5  ld   $c5
              884c 00d2  ld   $d2
              884d 008d  ld   $8d
              884e 008d  ld   $8d
              884f 00b7  ld   $b7
              8850 00ad  ld   $ad
              8851 00b0  ld   $b0
              8852 00a0  ld   $a0
              8853 00cd  ld   $cd
              8854 00cf  ld   $cf
              8855 00d2  ld   $d2
              8856 00c6  ld   $c6
              8857 00a0  ld   $a0
              8858 00d3  ld   $d3
              8859 00d4  ld   $d4
              885a 00c9  ld   $c9
              885b 00c7  ld   $c7
              885c 00c9  ld   $c9
              885d 00c4  ld   $c4
              885e 00a0  ld   $a0
              885f 00c5  ld   $c5
              8860 00d6  ld   $d6
              8861 00c9  ld   $c9
              8862 00c6  ld   $c6
              8863 00a0  ld   $a0
              8864 00d3  ld   $d3
              8865 00d3  ld   $d3
              8866 00c5  ld   $c5
              8867 00d5  ld   $d5
              8868 00c7  ld   $c7
              8869 008d  ld   $8d
              886a 008d  ld   $8d
              886b 00ce  ld   $ce
              886c 00c9  ld   $c9
              886d 00d7  ld   $d7
              886e 00a0  ld   $a0
              886f 00d5  ld   $d5
              8870 00cf  ld   $cf
              8871 00d9  ld   $d9
              8872 00a0  ld   $a0
              8873 00ab  ld   $ab
              8874 00a9  ld   $a9
              8875 008d  ld   $8d
              8876 004c  ld   $4c
              8877 00ef  ld   $ef
              8878 00ff  ld   $ff
              8879 00ad  ld   $ad
              887a 0011  ld   $11
              887b 00d0  ld   $d0
              887c 0010  ld   $10
              887d 00fb  ld   $fb
              887e 00ad  ld   $ad
              887f 0010  ld   $10
              8880 00d0  ld   $d0
              8881 0060  ld   $60
              8882 0004  ld   $04
              8883 0000  ld   $00
              8884 0000  ld   $00
              8885 00d8  ld   $d8
              8886 00a2  ld   $a2
              8887 00ff  ld   $ff
              8888 009a  ld   $9a
              8889 00a9  ld   $a9
              888a 002a  ld   $2a
              888b 0085  ld   $85
              888c 005a  ld   $5a
              888d 0020  ld   $20
              888e 0055  ld   $55
              888f 0005  ld   $05
              8890 00a9  ld   $a9
              8891 008b  ld   $8b
              8892 0085  ld   $85
              8893 0058  ld   $58
              8894 00a9  ld   $a9
              8895 0006  ld   $06
              8896 0085  ld   $85
              8897 0059  ld   $59
              8898 0020  ld   $20
              8899 00ad  ld   $ad
              889a 0004  ld   $04
              889b 0020  ld   $20
              889c 00cb  ld   $cb
              889d 0004  ld   $04
              889e 00d0  ld   $d0
              889f 000e  ld   $0e
              88a0 00a9  ld   $a9
              88a1 00be  ld   $be
              88a2 0085  ld   $85
              88a3 0058  ld   $58
              88a4 00a9  ld   $a9
              88a5 0006  ld   $06
              88a6 0085  ld   $85
              88a7 0059  ld   $59
              88a8 0020  ld   $20
              88a9 00ad  ld   $ad
              88aa 0004  ld   $04
              88ab 0020  ld   $20
              88ac 00e8  ld   $e8
              88ad 0004  ld   $04
              88ae 0020  ld   $20
              88af 001f  ld   $1f
              88b0 0006  ld   $06
              88b1 0020  ld   $20
              88b2 006a  ld   $6a
              88b3 0005  ld   $05
              88b4 0020  ld   $20
              88b5 00e8  ld   $e8
              88b6 0004  ld   $04
              88b7 0020  ld   $20
              88b8 00a8  ld   $a8
              88b9 0004  ld   $04
              88ba 0020  ld   $20
              88bb 0009  ld   $09
              88bc 0005  ld   $05
              88bd 0020  ld   $20
              88be 0027  ld   $27
              88bf 0005  ld   $05
              88c0 0020  ld   $20
              88c1 00bb  ld   $bb
              88c2 0004  ld   $04
              88c3 00c9  ld   $c9
              88c4 0051  ld   $51
              88c5 00d0  ld   $d0
              88c6 0003  ld   $03
              88c7 004c  ld   $4c
              88c8 009a  ld   $9a
              88c9 0004  ld   $04
              88ca 0020  ld   $20
              88cb 009e  ld   $9e
              88cc 0005  ld   $05
              88cd 00a5  ld   $a5
              88ce 0051  ld   $51
              88cf 00c9  ld   $c9
              88d0 0010  ld   $10
              88d1 00d0  ld   $d0
              88d2 000a  ld   $0a
              88d3 00c6  ld   $c6
              88d4 005d  ld   $5d
              88d5 00f0  ld   $f0
              88d6 00b6  ld   $b6
              88d7 0020  ld   $20
              88d8 0038  ld   $38
              88d9 0005  ld   $05
              88da 004c  ld   $4c
              88db 003b  ld   $3b
              88dc 0004  ld   $04
              88dd 0020  ld   $20
              88de 00e8  ld   $e8
              88df 0004  ld   $04
              88e0 0020  ld   $20
              88e1 00a8  ld   $a8
              88e2 0004  ld   $04
              88e3 0020  ld   $20
              88e4 000c  ld   $0c
              88e5 0006  ld   $06
              88e6 00f0  ld   $f0
              88e7 0003  ld   $03
              88e8 004c  ld   $4c
              88e9 0035  ld   $35
              88ea 0004  ld   $04
              88eb 0020  ld   $20
              88ec 0043  ld   $43
              88ed 0005  ld   $05
              88ee 00a9  ld   $a9
              88ef 008e  ld   $8e
              88f0 0085  ld   $85
              88f1 0058  ld   $58
              88f2 00a9  ld   $a9
              88f3 0007  ld   $07
              88f4 0085  ld   $85
              88f5 0059  ld   $59
              88f6 0020  ld   $20
              88f7 00ad  ld   $ad
              88f8 0004  ld   $04
              88f9 00a5  ld   $a5
              88fa 0055  ld   $55
              88fb fe00  bra  ac          ;+-----------------------------------+
              88fc fcfd  bra  $88fd       ;|                                   |
              88fd 1418  ld   $18,y       ;| Trampoline for page $8800 lookups |
              88fe e006  jmp  y,$06       ;|                                   |
              88ff c218  st   [$18]       ;+-----------------------------------+
              8900 0020  ld   $20
              8901 00ef  ld   $ef
              8902 00ff  ld   $ff
              8903 00a9  ld   $a9
              8904 00a3  ld   $a3
              8905 0085  ld   $85
              8906 0058  ld   $58
              8907 00a9  ld   $a9
              8908 0007  ld   $07
              8909 0085  ld   $85
              890a 0059  ld   $59
              890b 0020  ld   $20
              890c 00ad  ld   $ad
              890d 0004  ld   $04
              890e 0020  ld   $20
              890f 0027  ld   $27
              8910 0005  ld   $05
              8911 00a9  ld   $a9
              8912 00bb  ld   $bb
              8913 0085  ld   $85
              8914 0058  ld   $58
              8915 00a9  ld   $a9
              8916 0007  ld   $07
              8917 0085  ld   $85
              8918 0059  ld   $59
              8919 0020  ld   $20
              891a 00ad  ld   $ad
              891b 0004  ld   $04
              891c 0020  ld   $20
              891d 00cb  ld   $cb
              891e 0004  ld   $04
              891f 00d0  ld   $d0
              8920 0003  ld   $03
              8921 004c  ld   $4c
              8922 0029  ld   $29
              8923 0004  ld   $04
              8924 00a9  ld   $a9
              8925 00d0  ld   $d0
              8926 0085  ld   $85
              8927 0058  ld   $58
              8928 00a9  ld   $a9
              8929 0007  ld   $07
              892a 0085  ld   $85
              892b 0059  ld   $59
              892c 0020  ld   $20
              892d 00ad  ld   $ad
              892e 0004  ld   $04
              892f 004c  ld   $4c
              8930 0000  ld   $00
              8931 00c1  ld   $c1
              8932 00a9  ld   $a9
              8933 000d  ld   $0d
              8934 004c  ld   $4c
              8935 00ef  ld   $ef
              8936 00ff  ld   $ff
              8937 00a0  ld   $a0
              8938 0000  ld   $00
              8939 00b1  ld   $b1
              893a 0058  ld   $58
              893b 00f0  ld   $f0
              893c 0007  ld   $07
              893d 0020  ld   $20
              893e 00ef  ld   $ef
              893f 00ff  ld   $ff
              8940 00c8  ld   $c8
              8941 004c  ld   $4c
              8942 00af  ld   $af
              8943 0004  ld   $04
              8944 0060  ld   $60
              8945 0020  ld   $20
              8946 00de  ld   $de
              8947 0004  ld   $04
              8948 00ad  ld   $ad
              8949 0011  ld   $11
              894a 00d0  ld   $d0
              894b 0010  ld   $10
              894c 00f8  ld   $f8
              894d 00ad  ld   $ad
              894e 0010  ld   $10
              894f 00d0  ld   $d0
              8950 0029  ld   $29
              8951 007f  ld   $7f
              8952 004c  ld   $4c
              8953 00ef  ld   $ef
              8954 00ff  ld   $ff
              8955 0020  ld   $20
              8956 00bb  ld   $bb
              8957 0004  ld   $04
              8958 00c9  ld   $c9
              8959 004e  ld   $4e
              895a 00f0  ld   $f0
              895b 000a  ld   $0a
              895c 00c9  ld   $c9
              895d 0059  ld   $59
              895e 00f0  ld   $f0
              895f 0007  ld   $07
              8960 0020  ld   $20
              8961 0038  ld   $38
              8962 0005  ld   $05
              8963 004c  ld   $4c
              8964 00cb  ld   $cb
              8965 0004  ld   $04
              8966 00ba  ld   $ba
              8967 0060  ld   $60
              8968 00a5  ld   $a5
              8969 005a  ld   $5a
              896a 000a  ld   $0a
              896b 0090  ld   $90
              896c 0002  ld   $02
              896d 0049  ld   $49
              896e 00a9  ld   $a9
              896f 0085  ld   $85
              8970 005a  ld   $5a
              8971 0060  ld   $60
              8972 0020  ld   $20
              8973 00a8  ld   $a8
              8974 0004  ld   $04
              8975 0020  ld   $20
              8976 00a8  ld   $a8
              8977 0004  ld   $04
              8978 00a2  ld   $a2
              8979 0000  ld   $00
              897a 00a0  ld   $a0
              897b 0004  ld   $04
              897c 00b5  ld   $b5
              897d 0040  ld   $40
              897e 0020  ld   $20
              897f 00ef  ld   $ef
              8980 00ff  ld   $ff
              8981 0088  ld   $88
              8982 00d0  ld   $d0
              8983 0005  ld   $05
              8984 00a0  ld   $a0
              8985 0004  ld   $04
              8986 0020  ld   $20
              8987 00a8  ld   $a8
              8988 0004  ld   $04
              8989 00e8  ld   $e8
              898a 0005  ld   $05
              898b 0000  ld   $00
              898c 0000  ld   $00
              898d 00e0  ld   $e0
              898e 0010  ld   $10
              898f 00d0  ld   $d0
              8990 00ee  ld   $ee
              8991 00a9  ld   $a9
              8992 0008  ld   $08
              8993 0085  ld   $85
              8994 005d  ld   $5d
              8995 0060  ld   $60
              8996 00e6  ld   $e6
              8997 0056  ld   $56
              8998 00a5  ld   $a5
              8999 0056  ld   $56
              899a 0029  ld   $29
              899b 000f  ld   $0f
              899c 00c9  ld   $c9
              899d 000a  ld   $0a
              899e 00b0  ld   $b0
              899f 00f6  ld   $f6
              89a0 00a5  ld   $a5
              89a1 0056  ld   $56
              89a2 0038  ld   $38
              89a3 00e9  ld   $e9
              89a4 00a0  ld   $a0
              89a5 0090  ld   $90
              89a6 000c  ld   $0c
              89a7 0085  ld   $85
              89a8 0056  ld   $56
              89a9 00e6  ld   $e6
              89aa 0057  ld   $57
              89ab 00a5  ld   $a5
              89ac 0057  ld   $57
              89ad 0029  ld   $29
              89ae 000f  ld   $0f
              89af 00c9  ld   $c9
              89b0 000a  ld   $0a
              89b1 00b0  ld   $b0
              89b2 00f6  ld   $f6
              89b3 0060  ld   $60
              89b4 00a5  ld   $a5
              89b5 0057  ld   $57
              89b6 00f0  ld   $f0
              89b7 0003  ld   $03
              89b8 0020  ld   $20
              89b9 00dc  ld   $dc
              89ba 00ff  ld   $ff
              89bb 00a5  ld   $a5
              89bc 0056  ld   $56
              89bd 0020  ld   $20
              89be 00dc  ld   $dc
              89bf 00ff  ld   $ff
              89c0 00a9  ld   $a9
              89c1 0020  ld   $20
              89c2 004c  ld   $4c
              89c3 00ef  ld   $ef
              89c4 00ff  ld   $ff
              89c5 00a9  ld   $a9
              89c6 007a  ld   $7a
              89c7 0085  ld   $85
              89c8 0058  ld   $58
              89c9 00a9  ld   $a9
              89ca 0007  ld   $07
              89cb 0085  ld   $85
              89cc 0059  ld   $59
              89cd 004c  ld   $4c
              89ce 00ad  ld   $ad
              89cf 0004  ld   $04
              89d0 00a5  ld   $a5
              89d1 005a  ld   $5a
              89d2 0029  ld   $29
              89d3 0038  ld   $38
              89d4 00aa  ld   $aa
              89d5 00bd  ld   $bd
              89d6 0049  ld   $49
              89d7 0006  ld   $06
              89d8 00f0  ld   $f0
              89d9 0007  ld   $07
              89da 0020  ld   $20
              89db 00ef  ld   $ef
              89dc 00ff  ld   $ff
              89dd 00e8  ld   $e8
              89de 004c  ld   $4c
              89df 0048  ld   $48
              89e0 0005  ld   $05
              89e1 0060  ld   $60
              89e2 00a9  ld   $a9
              89e3 0020  ld   $20
              89e4 0085  ld   $85
              89e5 004f  ld   $4f
              89e6 00a9  ld   $a9
              89e7 000f  ld   $0f
              89e8 0085  ld   $85
              89e9 0052  ld   $52
              89ea 00a2  ld   $a2
              89eb 000f  ld   $0f
              89ec 00a0  ld   $a0
              89ed 004f  ld   $4f
              89ee 0098  ld   $98
              89ef 009d  ld   $9d
              89f0 003f  ld   $3f
              89f1 0000  ld   $00
              89f2 0088  ld   $88
              89f3 00ca  ld   $ca
              89f4 00d0  ld   $d0
              89f5 00f8  ld   $f8
              89f6 0060  ld   $60
              89f7 00a9  ld   $a9
              89f8 0000  ld   $00
              89f9 0085  ld   $85
              89fa 0056  ld   $56
              89fb fe00  bra  ac          ;+-----------------------------------+
              89fc fcfd  bra  $89fd       ;|                                   |
              89fd 1418  ld   $18,y       ;| Trampoline for page $8900 lookups |
              89fe e006  jmp  y,$06       ;|                                   |
              89ff c218  st   [$18]       ;+-----------------------------------+
              8a00 0085  ld   $85
              8a01 0057  ld   $57
              8a02 0085  ld   $85
              8a03 005c  ld   $5c
              8a04 00a6  ld   $a6
              8a05 0055  ld   $55
              8a06 00bd  ld   $bd
              8a07 0013  ld   $13
              8a08 0006  ld   $06
              8a09 0085  ld   $85
              8a0a 005b  ld   $5b
              8a0b 0020  ld   $20
              8a0c 00de  ld   $de
              8a0d 0004  ld   $04
              8a0e 00a5  ld   $a5
              8a0f 005a  ld   $5a
              8a10 0029  ld   $29
              8a11 000f  ld   $0f
              8a12 0018  ld   $18
              8a13 0069  ld   $69
              8a14 0041  ld   $41
              8a15 00c5  ld   $c5
              8a16 005c  ld   $5c
              8a17 00f0  ld   $f0
              8a18 00f2  ld   $f2
              8a19 0020  ld   $20
              8a1a 009e  ld   $9e
              8a1b 0005  ld   $05
              8a1c 00a5  ld   $a5
              8a1d 0051  ld   $51
              8a1e 00c9  ld   $c9
              8a1f 0010  ld   $10
              8a20 00f0  ld   $f0
              8a21 00e9  ld   $e9
              8a22 00a5  ld   $a5
              8a23 0050  ld   $50
              8a24 0085  ld   $85
              8a25 005c  ld   $5c
              8a26 00c6  ld   $c6
              8a27 005b  ld   $5b
              8a28 00d0  ld   $d0
              8a29 00e1  ld   $e1
              8a2a 0020  ld   $20
              8a2b 000c  ld   $0c
              8a2c 0006  ld   $06
              8a2d 00f0  ld   $f0
              8a2e 00cd  ld   $cd
              8a2f 0060  ld   $60
              8a30 0085  ld   $85
              8a31 0050  ld   $50
              8a32 00c9  ld   $c9
              8a33 0020  ld   $20
              8a34 00f0  ld   $f0
              8a35 003c  ld   $3c
              8a36 00a2  ld   $a2
              8a37 0000  ld   $00
              8a38 00b5  ld   $b5
              8a39 0040  ld   $40
              8a3a 00c5  ld   $c5
              8a3b 0050  ld   $50
              8a3c 00f0  ld   $f0
              8a3d 0008  ld   $08
              8a3e 00e8  ld   $e8
              8a3f 00e0  ld   $e0
              8a40 0010  ld   $10
              8a41 00d0  ld   $d0
              8a42 00f5  ld   $f5
              8a43 004c  ld   $4c
              8a44 00e0  ld   $e0
              8a45 0005  ld   $05
              8a46 0086  ld   $86
              8a47 0051  ld   $51
              8a48 008a  ld   $8a
              8a49 0029  ld   $29
              8a4a 000c  ld   $0c
              8a4b 0085  ld   $85
              8a4c 0053  ld   $53
              8a4d 00a5  ld   $a5
              8a4e 0052  ld   $52
              8a4f 0029  ld   $29
              8a50 000c  ld   $0c
              8a51 00c5  ld   $c5
              8a52 0053  ld   $53
              8a53 00d0  ld   $d0
              8a54 0010  ld   $10
              8a55 008a  ld   $8a
              8a56 0038  ld   $38
              8a57 00e5  ld   $e5
              8a58 0052  ld   $52
              8a59 0010  ld   $10
              8a5a 0005  ld   $05
              8a5b 00a9  ld   $a9
              8a5c 00ff  ld   $ff
              8a5d 004c  ld   $4c
              8a5e 00f2  ld   $f2
              8a5f 0005  ld   $05
              8a60 00a9  ld   $a9
              8a61 0001  ld   $01
              8a62 004c  ld   $4c
              8a63 00f2  ld   $f2
              8a64 0005  ld   $05
              8a65 008a  ld   $8a
              8a66 0029  ld   $29
              8a67 0003  ld   $03
              8a68 0085  ld   $85
              8a69 0053  ld   $53
              8a6a 00a5  ld   $a5
              8a6b 0052  ld   $52
              8a6c 0029  ld   $29
              8a6d 0003  ld   $03
              8a6e 00c5  ld   $c5
              8a6f 0053  ld   $53
              8a70 00f0  ld   $f0
              8a71 0005  ld   $05
              8a72 00a2  ld   $a2
              8a73 0010  ld   $10
              8a74 0086  ld   $86
              8a75 0051  ld   $51
              8a76 0060  ld   $60
              8a77 008a  ld   $8a
              8a78 0038  ld   $38
              8a79 00e5  ld   $e5
              8a7a 0052  ld   $52
              8a7b 0010  ld   $10
              8a7c 0005  ld   $05
              8a7d 00a9  ld   $a9
              8a7e 00fc  ld   $fc
              8a7f 004c  ld   $4c
              8a80 00f2  ld   $f2
              8a81 0005  ld   $05
              8a82 00a9  ld   $a9
              8a83 0004  ld   $04
              8a84 0085  ld   $85
              8a85 0054  ld   $54
              8a86 00a5  ld   $a5
              8a87 0052  ld   $52
              8a88 00aa  ld   $aa
              8a89 0018  ld   $18
              8a8a 0065  ld   $65
              8a8b 0054  ld   $54
              8a8c 00a8  ld   $a8
              8a8d 00b9  ld   $b9
              8a8e 0040  ld   $40
              8a8f 0000  ld   $00
              8a90 0095  ld   $95
              8a91 0040  ld   $40
              8a92 0006  ld   $06
              8a93 0000  ld   $00
              8a94 0000  ld   $00
              8a95 00a9  ld   $a9
              8a96 0020  ld   $20
              8a97 0099  ld   $99
              8a98 0040  ld   $40
              8a99 0000  ld   $00
              8a9a 0084  ld   $84
              8a9b 0052  ld   $52
              8a9c 00c4  ld   $c4
              8a9d 0051  ld   $51
              8a9e 00d0  ld   $d0
              8a9f 00e9  ld   $e9
              8aa0 0060  ld   $60
              8aa1 00a2  ld   $a2
              8aa2 000f  ld   $0f
              8aa3 00a9  ld   $a9
              8aa4 004f  ld   $4f
              8aa5 0085  ld   $85
              8aa6 0053  ld   $53
              8aa7 00bd  ld   $bd
              8aa8 003f  ld   $3f
              8aa9 0000  ld   $00
              8aaa 00c5  ld   $c5
              8aab 0053  ld   $53
              8aac 00d0  ld   $d0
              8aad 0005  ld   $05
              8aae 00c6  ld   $c6
              8aaf 0053  ld   $53
              8ab0 00ca  ld   $ca
              8ab1 00d0  ld   $d0
              8ab2 00f4  ld   $f4
              8ab3 0060  ld   $60
              8ab4 00a9  ld   $a9
              8ab5 0060  ld   $60
              8ab6 0085  ld   $85
              8ab7 0058  ld   $58
              8ab8 00a9  ld   $a9
              8ab9 0007  ld   $07
              8aba 0085  ld   $85
              8abb 0059  ld   $59
              8abc 0020  ld   $20
              8abd 00ad  ld   $ad
              8abe 0004  ld   $04
              8abf 0020  ld   $20
              8ac0 00bb  ld   $bb
              8ac1 0004  ld   $04
              8ac2 0085  ld   $85
              8ac3 0055  ld   $55
              8ac4 00c9  ld   $c9
              8ac5 0031  ld   $31
              8ac6 0010  ld   $10
              8ac7 0003  ld   $03
              8ac8 004c  ld   $4c
              8ac9 003e  ld   $3e
              8aca 0006  ld   $06
              8acb 00a9  ld   $a9
              8acc 0035  ld   $35
              8acd 0038  ld   $38
              8ace 00e5  ld   $e5
              8acf 0055  ld   $55
              8ad0 0030  ld   $30
              8ad1 0001  ld   $01
              8ad2 0060  ld   $60
              8ad3 0020  ld   $20
              8ad4 0038  ld   $38
              8ad5 0005  ld   $05
              8ad6 004c  ld   $4c
              8ad7 002a  ld   $2a
              8ad8 0006  ld   $06
              8ad9 0003  ld   $03
              8ada 0009  ld   $09
              8adb 0013  ld   $13
              8adc 0023  ld   $23
              8add 00ff  ld   $ff
              8ade 0048  ld   $48
              8adf 004f  ld   $4f
              8ae0 004f  ld   $4f
              8ae1 0052  ld   $52
              8ae2 0041  ld   $41
              8ae3 0059  ld   $59
              8ae4 0021  ld   $21
              8ae5 0000  ld   $00
              8ae6 0048  ld   $48
              8ae7 0055  ld   $55
              8ae8 005a  ld   $5a
              8ae9 005a  ld   $5a
              8aea 0041  ld   $41
              8aeb 0048  ld   $48
              8aec 0021  ld   $21
              8aed 0000  ld   $00
              8aee 0057  ld   $57
              8aef 004f  ld   $4f
              8af0 004f  ld   $4f
              8af1 0048  ld   $48
              8af2 004f  ld   $4f
              8af3 004f  ld   $4f
              8af4 0021  ld   $21
              8af5 0000  ld   $00
              8af6 0059  ld   $59
              8af7 0049  ld   $49
              8af8 0050  ld   $50
              8af9 0050  ld   $50
              8afa 0049  ld   $49
              8afb fe00  bra  ac          ;+-----------------------------------+
              8afc fcfd  bra  $8afd       ;|                                   |
              8afd 1418  ld   $18,y       ;| Trampoline for page $8a00 lookups |
              8afe e006  jmp  y,$06       ;|                                   |
              8aff c218  st   [$18]       ;+-----------------------------------+
              8b00 0045  ld   $45
              8b01 0021  ld   $21
              8b02 0000  ld   $00
              8b03 0053  ld   $53
              8b04 0057  ld   $57
              8b05 0045  ld   $45
              8b06 0045  ld   $45
              8b07 0054  ld   $54
              8b08 0021  ld   $21
              8b09 0000  ld   $00
              8b0a 0000  ld   $00
              8b0b 0043  ld   $43
              8b0c 004f  ld   $4f
              8b0d 004f  ld   $4f
              8b0e 004c  ld   $4c
              8b0f 0021  ld   $21
              8b10 0000  ld   $00
              8b11 0000  ld   $00
              8b12 0000  ld   $00
              8b13 004e  ld   $4e
              8b14 0049  ld   $49
              8b15 0043  ld   $43
              8b16 0045  ld   $45
              8b17 0021  ld   $21
              8b18 0000  ld   $00
              8b19 0000  ld   $00
              8b1a 0000  ld   $00
              8b1b 0047  ld   $47
              8b1c 0041  ld   $41
              8b1d 0044  ld   $44
              8b1e 005a  ld   $5a
              8b1f 004f  ld   $4f
              8b20 004f  ld   $4f
              8b21 004b  ld   $4b
              8b22 0053  ld   $53
              8b23 0021  ld   $21
              8b24 0000  ld   $00
              8b25 000d  ld   $0d
              8b26 000d  ld   $0d
              8b27 0031  ld   $31
              8b28 0035  ld   $35
              8b29 0020  ld   $20
              8b2a 0050  ld   $50
              8b2b 0055  ld   $55
              8b2c 005a  ld   $5a
              8b2d 005a  ld   $5a
              8b2e 004c  ld   $4c
              8b2f 0045  ld   $45
              8b30 0020  ld   $20
              8b31 002d  ld   $2d
              8b32 0020  ld   $20
              8b33 0042  ld   $42
              8b34 0059  ld   $59
              8b35 0020  ld   $20
              8b36 004a  ld   $4a
              8b37 0045  ld   $45
              8b38 0046  ld   $46
              8b39 0046  ld   $46
              8b3a 0020  ld   $20
              8b3b 004a  ld   $4a
              8b3c 0045  ld   $45
              8b3d 0054  ld   $54
              8b3e 0054  ld   $54
              8b3f 004f  ld   $4f
              8b40 004e  ld   $4e
              8b41 000d  ld   $0d
              8b42 000d  ld   $0d
              8b43 0049  ld   $49
              8b44 004e  ld   $4e
              8b45 0053  ld   $53
              8b46 0054  ld   $54
              8b47 0052  ld   $52
              8b48 0055  ld   $55
              8b49 0043  ld   $43
              8b4a 0054  ld   $54
              8b4b 0049  ld   $49
              8b4c 004f  ld   $4f
              8b4d 004e  ld   $4e
              8b4e 0053  ld   $53
              8b4f 0020  ld   $20
              8b50 0028  ld   $28
              8b51 0059  ld   $59
              8b52 002f  ld   $2f
              8b53 004e  ld   $4e
              8b54 0029  ld   $29
              8b55 003f  ld   $3f
              8b56 0020  ld   $20
              8b57 0000  ld   $00
              8b58 000d  ld   $0d
              8b59 000d  ld   $0d
              8b5a 0054  ld   $54
              8b5b 0059  ld   $59
              8b5c 0050  ld   $50
              8b5d 0045  ld   $45
              8b5e 0020  ld   $20
              8b5f 0041  ld   $41
              8b60 0020  ld   $20
              8b61 004c  ld   $4c
              8b62 0045  ld   $45
              8b63 0054  ld   $54
              8b64 0054  ld   $54
              8b65 0045  ld   $45
              8b66 0052  ld   $52
              8b67 0020  ld   $20
              8b68 004f  ld   $4f
              8b69 004e  ld   $4e
              8b6a 0020  ld   $20
              8b6b 0054  ld   $54
              8b6c 0048  ld   $48
              8b6d 0045  ld   $45
              8b6e 0020  ld   $20
              8b6f 0053  ld   $53
              8b70 0041  ld   $41
              8b71 004d  ld   $4d
              8b72 0045  ld   $45
              8b73 000d  ld   $0d
              8b74 0052  ld   $52
              8b75 004f  ld   $4f
              8b76 0057  ld   $57
              8b77 0020  ld   $20
              8b78 004f  ld   $4f
              8b79 0052  ld   $52
              8b7a 0020  ld   $20
              8b7b 0043  ld   $43
              8b7c 004f  ld   $4f
              8b7d 004c  ld   $4c
              8b7e 0055  ld   $55
              8b7f 004d  ld   $4d
              8b80 004e  ld   $4e
              8b81 0020  ld   $20
              8b82 0041  ld   $41
              8b83 0053  ld   $53
              8b84 0020  ld   $20
              8b85 0054  ld   $54
              8b86 0048  ld   $48
              8b87 0045  ld   $45
              8b88 0020  ld   $20
              8b89 0045  ld   $45
              8b8a 004d  ld   $4d
              8b8b 0050  ld   $50
              8b8c 0054  ld   $54
              8b8d 0059  ld   $59
              8b8e 000d  ld   $0d
              8b8f 0053  ld   $53
              8b90 0050  ld   $50
              8b91 0041  ld   $41
              8b92 0043  ld   $43
              8b93 0045  ld   $45
              8b94 0020  ld   $20
              8b95 0054  ld   $54
              8b96 004f  ld   $4f
              8b97 0020  ld   $20
              8b98 0053  ld   $53
              8b99 004c  ld   $4c
              8b9a 0007  ld   $07
              8b9b 0000  ld   $00
              8b9c 00d8  ld   $d8
              8b9d 0049  ld   $49
              8b9e 0044  ld   $44
              8b9f 0045  ld   $45
              8ba0 0020  ld   $20
              8ba1 0054  ld   $54
              8ba2 0048  ld   $48
              8ba3 0041  ld   $41
              8ba4 0054  ld   $54
              8ba5 0020  ld   $20
              8ba6 004c  ld   $4c
              8ba7 0045  ld   $45
              8ba8 0054  ld   $54
              8ba9 0054  ld   $54
              8baa 0045  ld   $45
              8bab 0052  ld   $52
              8bac 000d  ld   $0d
              8bad 0028  ld   $28
              8bae 0041  ld   $41
              8baf 004e  ld   $4e
              8bb0 0044  ld   $44
              8bb1 0020  ld   $20
              8bb2 0041  ld   $41
              8bb3 004e  ld   $4e
              8bb4 0059  ld   $59
              8bb5 0020  ld   $20
              8bb6 0042  ld   $42
              8bb7 0045  ld   $45
              8bb8 0054  ld   $54
              8bb9 0057  ld   $57
              8bba 0045  ld   $45
              8bbb 0045  ld   $45
              8bbc 004e  ld   $4e
              8bbd 0029  ld   $29
              8bbe 0020  ld   $20
              8bbf 0054  ld   $54
              8bc0 004f  ld   $4f
              8bc1 0057  ld   $57
              8bc2 0041  ld   $41
              8bc3 0052  ld   $52
              8bc4 0044  ld   $44
              8bc5 0053  ld   $53
              8bc6 000d  ld   $0d
              8bc7 0054  ld   $54
              8bc8 0048  ld   $48
              8bc9 0045  ld   $45
              8bca 0020  ld   $20
              8bcb 0053  ld   $53
              8bcc 0050  ld   $50
              8bcd 0041  ld   $41
              8bce 0043  ld   $43
              8bcf 0045  ld   $45
              8bd0 002e  ld   $2e
              8bd1 0020  ld   $20
              8bd2 0054  ld   $54
              8bd3 0059  ld   $59
              8bd4 0050  ld   $50
              8bd5 0045  ld   $45
              8bd6 0020  ld   $20
              8bd7 0051  ld   $51
              8bd8 0020  ld   $20
              8bd9 0054  ld   $54
              8bda 004f  ld   $4f
              8bdb 0020  ld   $20
              8bdc 0051  ld   $51
              8bdd 0055  ld   $55
              8bde 0049  ld   $49
              8bdf 0054  ld   $54
              8be0 002e  ld   $2e
              8be1 000d  ld   $0d
              8be2 0054  ld   $54
              8be3 0048  ld   $48
              8be4 0049  ld   $49
              8be5 0053  ld   $53
              8be6 0020  ld   $20
              8be7 0049  ld   $49
              8be8 0053  ld   $53
              8be9 0020  ld   $20
              8bea 0054  ld   $54
              8beb 0048  ld   $48
              8bec 0045  ld   $45
              8bed 0020  ld   $20
              8bee 0053  ld   $53
              8bef 004f  ld   $4f
              8bf0 004c  ld   $4c
              8bf1 0056  ld   $56
              8bf2 0045  ld   $45
              8bf3 0044  ld   $44
              8bf4 0020  ld   $20
              8bf5 0050  ld   $50
              8bf6 0055  ld   $55
              8bf7 005a  ld   $5a
              8bf8 005a  ld   $5a
              8bf9 004c  ld   $4c
              8bfa 0045  ld   $45
              8bfb fe00  bra  ac          ;+-----------------------------------+
              8bfc fcfd  bra  $8bfd       ;|                                   |
              8bfd 1418  ld   $18,y       ;| Trampoline for page $8b00 lookups |
              8bfe e006  jmp  y,$06       ;|                                   |
              8bff c218  st   [$18]       ;+-----------------------------------+
              8c00 003a  ld   $3a
              8c01 0000  ld   $00
              8c02 000d  ld   $0d
              8c03 0044  ld   $44
              8c04 0049  ld   $49
              8c05 0046  ld   $46
              8c06 0046  ld   $46
              8c07 0049  ld   $49
              8c08 0043  ld   $43
              8c09 0055  ld   $55
              8c0a 004c  ld   $4c
              8c0b 0054  ld   $54
              8c0c 0059  ld   $59
              8c0d 0020  ld   $20
              8c0e 004c  ld   $4c
              8c0f 0045  ld   $45
              8c10 0056  ld   $56
              8c11 0045  ld   $45
              8c12 004c  ld   $4c
              8c13 0020  ld   $20
              8c14 0028  ld   $28
              8c15 0031  ld   $31
              8c16 002d  ld   $2d
              8c17 0035  ld   $35
              8c18 0029  ld   $29
              8c19 003f  ld   $3f
              8c1a 0020  ld   $20
              8c1b 0000  ld   $00
              8c1c 000d  ld   $0d
              8c1d 0053  ld   $53
              8c1e 004f  ld   $4f
              8c1f 0052  ld   $52
              8c20 0052  ld   $52
              8c21 0059  ld   $59
              8c22 002e  ld   $2e
              8c23 0020  ld   $20
              8c24 0054  ld   $54
              8c25 0052  ld   $52
              8c26 0059  ld   $59
              8c27 0020  ld   $20
              8c28 0041  ld   $41
              8c29 0047  ld   $47
              8c2a 0041  ld   $41
              8c2b 0049  ld   $49
              8c2c 004e  ld   $4e
              8c2d 003a  ld   $3a
              8c2e 0020  ld   $20
              8c2f 0000  ld   $00
              8c30 0020  ld   $20
              8c31 0059  ld   $59
              8c32 004f  ld   $4f
              8c33 0055  ld   $55
              8c34 0020  ld   $20
              8c35 0053  ld   $53
              8c36 004f  ld   $4f
              8c37 004c  ld   $4c
              8c38 0056  ld   $56
              8c39 0045  ld   $45
              8c3a 0044  ld   $44
              8c3b 000d  ld   $0d
              8c3c 0041  ld   $41
              8c3d 0020  ld   $20
              8c3e 004c  ld   $4c
              8c3f 0045  ld   $45
              8c40 0056  ld   $56
              8c41 0045  ld   $45
              8c42 004c  ld   $4c
              8c43 0020  ld   $20
              8c44 0000  ld   $00
              8c45 0020  ld   $20
              8c46 0050  ld   $50
              8c47 0055  ld   $55
              8c48 005a  ld   $5a
              8c49 005a  ld   $5a
              8c4a 004c  ld   $4c
              8c4b 0045  ld   $45
              8c4c 0021  ld   $21
              8c4d 000d  ld   $0d
              8c4e 000d  ld   $0d
              8c4f 0054  ld   $54
              8c50 004f  ld   $4f
              8c51 0054  ld   $54
              8c52 0041  ld   $41
              8c53 004c  ld   $4c
              8c54 0020  ld   $20
              8c55 004d  ld   $4d
              8c56 004f  ld   $4f
              8c57 0056  ld   $56
              8c58 0045  ld   $45
              8c59 0053  ld   $53
              8c5a 003a  ld   $3a
              8c5b 0020  ld   $20
              8c5c 0000  ld   $00
              8c5d 000d  ld   $0d
              8c5e 000d  ld   $0d
              8c5f 0050  ld   $50
              8c60 004c  ld   $4c
              8c61 0041  ld   $41
              8c62 0059  ld   $59
              8c63 0020  ld   $20
              8c64 0041  ld   $41
              8c65 0047  ld   $47
              8c66 0041  ld   $41
              8c67 0049  ld   $49
              8c68 004e  ld   $4e
              8c69 0020  ld   $20
              8c6a 0028  ld   $28
              8c6b 0059  ld   $59
              8c6c 002f  ld   $2f
              8c6d 004e  ld   $4e
              8c6e 0029  ld   $29
              8c6f 003f  ld   $3f
              8c70 0020  ld   $20
              8c71 0000  ld   $00
              8c72 000d  ld   $0d
              8c73 000d  ld   $0d
              8c74 0042  ld   $42
              8c75 0059  ld   $59
              8c76 0045  ld   $45
              8c77 0021  ld   $21
              8c78 000d  ld   $0d
              8c79 0000  ld   $00
              8c7a 000b  ld   $0b
              8c7b 00e5  ld   $e5
              8c7c 001b  ld   $1b
              8c7d 0020  ld   $20
              8c7e 00ef  ld   $ef
              8c7f 00ff  ld   $ff
              8c80 00e8  ld   $e8
              8c81 00bd  ld   $bd
              8c82 00f1  ld   $f1
              8c83 000b  ld   $0b
              8c84 00d0  ld   $d0
              8c85 00f7  ld   $f7
              8c86 004c  ld   $4c
              8c87 009d  ld   $9d
              8c88 000c  ld   $0c
              8c89 000d  ld   $0d
              8c8a 0055  ld   $55
              8c8b 0053  ld   $53
              8c8c 0041  ld   $41
              8c8d 0047  ld   $47
              8c8e 0045  ld   $45
              8c8f 003a  ld   $3a
              8c90 000d  ld   $0d
              8c91 0020  ld   $20
              8c92 0021  ld   $21
              8c93 0038  ld   $38
              8c94 0030  ld   $30
              8c95 0030  ld   $30
              8c96 003a  ld   $3a
              8c97 0050  ld   $50
              8c98 000c  ld   $0c
              8c99 0000  ld   $00
              8c9a 008a  ld   $8a
              8c9b 0048  ld   $48
              8c9c 0041  ld   $41
              8c9d 0020  ld   $20
              8c9e 0020  ld   $20
              8c9f 0020  ld   $20
              8ca0 0020  ld   $20
              8ca1 0041  ld   $41
              8ca2 0053  ld   $53
              8ca3 0053  ld   $53
              8ca4 0045  ld   $45
              8ca5 004d  ld   $4d
              8ca6 0042  ld   $42
              8ca7 004c  ld   $4c
              8ca8 0045  ld   $45
              8ca9 0020  ld   $20
              8caa 0031  ld   $31
              8cab 0053  ld   $53
              8cac 0054  ld   $54
              8cad 000d  ld   $0d
              8cae 0020  ld   $20
              8caf 0021  ld   $21
              8cb0 0020  ld   $20
              8cb1 004c  ld   $4c
              8cb2 0044  ld   $44
              8cb3 0041  ld   $41
              8cb4 0020  ld   $20
              8cb5 0023  ld   $23
              8cb6 0031  ld   $31
              8cb7 0020  ld   $20
              8cb8 0020  ld   $20
              8cb9 0020  ld   $20
              8cba 0020  ld   $20
              8cbb 0041  ld   $41
              8cbc 0053  ld   $53
              8cbd 0053  ld   $53
              8cbe 0045  ld   $45
              8cbf 004d  ld   $4d
              8cc0 0042  ld   $42
              8cc1 004c  ld   $4c
              8cc2 0045  ld   $45
              8cc3 0020  ld   $20
              8cc4 004e  ld   $4e
              8cc5 0045  ld   $45
              8cc6 0058  ld   $58
              8cc7 0054  ld   $54
              8cc8 000d  ld   $0d
              8cc9 0020  ld   $20
              8cca 0021  ld   $21
              8ccb 0038  ld   $38
              8ccc 0030  ld   $30
              8ccd 0030  ld   $30
              8cce 004c  ld   $4c
              8ccf 0020  ld   $20
              8cd0 0020  ld   $20
              8cd1 0020  ld   $20
              * 7 times
              8cd6 0044  ld   $44
              8cd7 0049  ld   $49
              8cd8 0053  ld   $53
              8cd9 0041  ld   $41
              8cda 0053  ld   $53
              8cdb 0053  ld   $53
              8cdc 0045  ld   $45
              8cdd 004d  ld   $4d
              8cde 0042  ld   $42
              8cdf 004c  ld   $4c
              8ce0 0045  ld   $45
              8ce1 000d  ld   $0d
              8ce2 0020  ld   $20
              8ce3 0021  ld   $21
              8ce4 004c  ld   $4c
              8ce5 0020  ld   $20
              8ce6 0020  ld   $20
              8ce7 0020  ld   $20
              * 10 times
              8cef 004e  ld   $4e
              8cf0 0045  ld   $45
              8cf1 0058  ld   $58
              8cf2 0054  ld   $54
              8cf3 0020  ld   $20
              8cf4 0053  ld   $53
              8cf5 0043  ld   $43
              8cf6 0052  ld   $52
              8cf7 0045  ld   $45
              8cf8 0045  ld   $45
              8cf9 004e  ld   $4e
              8cfa 000d  ld   $0d
              8cfb fe00  bra  ac          ;+-----------------------------------+
              8cfc fcfd  bra  $8cfd       ;|                                   |
              8cfd 1418  ld   $18,y       ;| Trampoline for page $8c00 lookups |
              8cfe e006  jmp  y,$06       ;|                                   |
              8cff c218  st   [$18]       ;+-----------------------------------+
              8d00 0020  ld   $20
              8d01 0021  ld   $21
              8d02 0028  ld   $28
              8d03 0052  ld   $52
              8d04 0045  ld   $45
              8d05 0054  ld   $54
              8d06 0055  ld   $55
              8d07 0052  ld   $52
              8d08 004e  ld   $4e
              8d09 0029  ld   $29
              8d0a 0020  ld   $20
              8d0b 0020  ld   $20
              8d0c 0020  ld   $20
              8d0d 0045  ld   $45
              8d0e 0058  ld   $58
              8d0f 0049  ld   $49
              8d10 0054  ld   $54
              8d11 000d  ld   $0d
              8d12 0020  ld   $20
              8d13 0042  ld   $42
              8d14 0045  ld   $45
              8d15 0045  ld   $45
              8d16 0052  ld   $52
              8d17 0020  ld   $20
              8d18 0020  ld   $20
              8d19 0020  ld   $20
              * 8 times
              8d1f 0053  ld   $53
              8d20 004b  ld   $4b
              8d21 0049  ld   $49
              8d22 0050  ld   $50
              8d23 0020  ld   $20
              8d24 0055  ld   $55
              8d25 0053  ld   $53
              8d26 0041  ld   $41
              8d27 0047  ld   $47
              8d28 0045  ld   $45
              8d29 0000  ld   $00
              8d2a 000c  ld   $0c
              8d2b 008a  ld   $8a
              8d2c 0076  ld   $76
              8d2d 00a9  ld   $a9
              8d2e 000c  ld   $0c
              8d2f 0048  ld   $48
              8d30 0020  ld   $20
              8d31 00fd  ld   $fd
              8d32 000d  ld   $0d
              8d33 0020  ld   $20
              8d34 00f1  ld   $f1
              8d35 000e  ld   $0e
              8d36 0085  ld   $85
              8d37 0044  ld   $44
              8d38 0084  ld   $84
              8d39 0045  ld   $45
              8d3a 0068  ld   $68
              8d3b 0038  ld   $38
              8d3c 00e9  ld   $e9
              8d3d 0001  ld   $01
              8d3e 00d0  ld   $d0
              8d3f 00ef  ld   $ef
              8d40 0020  ld   $20
              8d41 0095  ld   $95
              8d42 000e  ld   $0e
              8d43 008a  ld   $8a
              8d44 00d0  ld   $d0
              8d45 0003  ld   $03
              8d46 004c  ld   $4c
              8d47 001f  ld   $1f
              8d48 00ff  ld   $ff
              8d49 00a0  ld   $a0
              8d4a 0000  ld   $00
              8d4b 0020  ld   $20
              8d4c 00c0  ld   $c0
              8d4d 000e  ld   $0e
              8d4e 0048  ld   $48
              8d4f 008a  ld   $8a
              8d50 00f0  ld   $f0
              8d51 0007  ld   $07
              8d52 00b5  ld   $b5
              8d53 0046  ld   $46
              8d54 0095  ld   $95
              8d55 0044  ld   $44
              8d56 00ca  ld   $ca
              8d57 0010  ld   $10
              8d58 00f9  ld   $f9
              8d59 0068  ld   $68
              8d5a 00c9  ld   $c9
              8d5b 0005  ld   $05
              8d5c 00f0  ld   $f0
              8d5d 00cf  ld   $cf
              8d5e 00c9  ld   $c9
              8d5f 0099  ld   $99
              8d60 00f0  ld   $f0
              8d61 0004  ld   $04
              8d62 00c9  ld   $c9
              8d63 0093  ld   $93
              8d64 00d0  ld   $d0
              8d65 0076  ld   $76
              8d66 00a9  ld   $a9
              8d67 0003  ld   $03
              8d68 0085  ld   $85
              8d69 0047  ld   $47
              8d6a 0020  ld   $20
              8d6b 00b2  ld   $b2
              8d6c 000e  ld   $0e
              8d6d 000a  ld   $0a
              8d6e 00e9  ld   $e9
              8d6f 00be  ld   $be
              8d70 00c5  ld   $c5
              8d71 00c2  ld   $c2
              8d72 0090  ld   $90
              8d73 0068  ld   $68
              8d74 000a  ld   $0a
              8d75 000a  ld   $0a
              8d76 00a2  ld   $a2
              8d77 0004  ld   $04
              8d78 000a  ld   $0a
              8d79 0026  ld   $26
              8d7a 004a  ld   $4a
              8d7b 0026  ld   $26
              8d7c 004b  ld   $4b
              8d7d 00ca  ld   $ca
              8d7e 0010  ld   $10
              8d7f 00f8  ld   $f8
              8d80 00c6  ld   $c6
              8d81 0047  ld   $47
              8d82 00f0  ld   $f0
              8d83 00f4  ld   $f4
              8d84 0010  ld   $10
              8d85 00e4  ld   $e4
              8d86 00a2  ld   $a2
              8d87 0005  ld   $05
              8d88 0020  ld   $20
              8d89 00b2  ld   $b2
              8d8a 000e  ld   $0e
              8d8b 0084  ld   $84
              8d8c 003a  ld   $3a
              8d8d 00dd  ld   $dd
              8d8e 0052  ld   $52
              8d8f 000f  ld   $0f
              8d90 00d0  ld   $d0
              8d91 0013  ld   $13
              8d92 0020  ld   $20
              8d93 00b2  ld   $b2
              8d94 000e  ld   $0e
              8d95 00dd  ld   $dd
              8d96 0058  ld   $58
              8d97 000f  ld   $0f
              8d98 00f0  ld   $f0
              8d99 000d  ld   $0d
              8d9a 00bd  ld   $bd
              8d9b 0058  ld   $58
              8d9c 000f  ld   $0f
              8d9d 00f0  ld   $f0
              8d9e 0007  ld   $07
              8d9f 00c9  ld   $c9
              8da0 00a4  ld   $a4
              8da1 00f0  ld   $f0
              8da2 0003  ld   $03
              8da3 000d  ld   $0d
              8da4 0000  ld   $00
              8da5 0000  ld   $00
              8da6 00a4  ld   $a4
              8da7 003a  ld   $3a
              8da8 0018  ld   $18
              8da9 0088  ld   $88
              8daa 0026  ld   $26
              8dab 004c  ld   $4c
              8dac 00e0  ld   $e0
              8dad 0003  ld   $03
              8dae 00d0  ld   $d0
              8daf 000d  ld   $0d
              8db0 0020  ld   $20
              8db1 00c0  ld   $c0
              8db2 000e  ld   $0e
              8db3 00a5  ld   $a5
              8db4 0049  ld   $49
              8db5 00f0  ld   $f0
              8db6 0001  ld   $01
              8db7 00e8  ld   $e8
              8db8 0086  ld   $86
              8db9 0038  ld   $38
              8dba 00a2  ld   $a2
              8dbb 0003  ld   $03
              8dbc 0088  ld   $88
              8dbd 0086  ld   $86
              8dbe 0047  ld   $47
              8dbf 00ca  ld   $ca
              8dc0 0010  ld   $10
              8dc1 00c9  ld   $c9
              8dc2 00a5  ld   $a5
              8dc3 004c  ld   $4c
              8dc4 000a  ld   $0a
              8dc5 000a  ld   $0a
              8dc6 0005  ld   $05
              8dc7 0038  ld   $38
              8dc8 00c9  ld   $c9
              8dc9 0020  ld   $20
              8dca 00b0  ld   $b0
              8dcb 0006  ld   $06
              8dcc 00a6  ld   $a6
              8dcd 0038  ld   $38
              8dce 00f0  ld   $f0
              8dcf 0002  ld   $02
              8dd0 0009  ld   $09
              8dd1 0080  ld   $80
              8dd2 0085  ld   $85
              8dd3 004c  ld   $4c
              8dd4 0084  ld   $84
              8dd5 003a  ld   $3a
              8dd6 00b9  ld   $b9
              8dd7 0000  ld   $00
              8dd8 0002  ld   $02
              8dd9 00c9  ld   $c9
              8dda 00bb  ld   $bb
              8ddb 00f0  ld   $f0
              8ddc 0004  ld   $04
              8ddd 00c9  ld   $c9
              8dde 008d  ld   $8d
              8ddf 00d0  ld   $d0
              8de0 002c  ld   $2c
              8de1 00a5  ld   $a5
              8de2 0047  ld   $47
              8de3 0020  ld   $20
              8de4 00b7  ld   $b7
              8de5 000d  ld   $0d
              8de6 00aa  ld   $aa
              8de7 00bd  ld   $bd
              8de8 009e  ld   $9e
              8de9 000f  ld   $0f
              8dea 00c5  ld   $c5
              8deb 004a  ld   $4a
              8dec 00d0  ld   $d0
              8ded 0013  ld   $13
              8dee 00bd  ld   $bd
              8def 005e  ld   $5e
              8df0 000f  ld   $0f
              8df1 00c5  ld   $c5
              8df2 004b  ld   $4b
              8df3 00d0  ld   $d0
              8df4 000c  ld   $0c
              8df5 00a5  ld   $a5
              8df6 004c  ld   $4c
              8df7 00a4  ld   $a4
              8df8 0040  ld   $40
              8df9 00c0  ld   $c0
              8dfa 009d  ld   $9d
              8dfb fe00  bra  ac          ;+-----------------------------------+
              8dfc fcfd  bra  $8dfd       ;|                                   |
              8dfd 1418  ld   $18,y       ;| Trampoline for page $8d00 lookups |
              8dfe e006  jmp  y,$06       ;|                                   |
              8dff c218  st   [$18]       ;+-----------------------------------+
              8e00 00f0  ld   $f0
              8e01 0020  ld   $20
              8e02 00c5  ld   $c5
              8e03 0040  ld   $40
              8e04 00f0  ld   $f0
              8e05 0037  ld   $37
              8e06 00c6  ld   $c6
              8e07 0047  ld   $47
              8e08 00d0  ld   $d0
              8e09 00dc  ld   $dc
              8e0a 00e6  ld   $e6
              8e0b 004c  ld   $4c
              8e0c 00c6  ld   $c6
              8e0d 0038  ld   $38
              8e0e 00f0  ld   $f0
              8e0f 00d6  ld   $d6
              8e10 00a4  ld   $a4
              8e11 003a  ld   $3a
              8e12 0098  ld   $98
              8e13 00aa  ld   $aa
              8e14 0020  ld   $20
              8e15 00bb  ld   $bb
              8e16 000e  ld   $0e
              8e17 0020  ld   $20
              8e18 0079  ld   $79
              8e19 000e  ld   $0e
              8e1a 00a9  ld   $a9
              8e1b 00de  ld   $de
              8e1c 0020  ld   $20
              8e1d 00ef  ld   $ef
              8e1e 00ff  ld   $ff
              8e1f 004c  ld   $4c
              8e20 009d  ld   $9d
              8e21 000c  ld   $0c
              8e22 00e9  ld   $e9
              8e23 0081  ld   $81
              8e24 004a  ld   $4a
              8e25 00d0  ld   $d0
              8e26 00e9  ld   $e9
              8e27 00a4  ld   $a4
              8e28 0049  ld   $49
              8e29 00a6  ld   $a6
              8e2a 0048  ld   $48
              8e2b 00d0  ld   $d0
              8e2c 0001  ld   $01
              8e2d 0088  ld   $88
              8e2e 00ca  ld   $ca
              8e2f 008a  ld   $8a
              8e30 0018  ld   $18
              8e31 00e5  ld   $e5
              8e32 0044  ld   $44
              8e33 0085  ld   $85
              8e34 0048  ld   $48
              8e35 0010  ld   $10
              8e36 0001  ld   $01
              8e37 00c8  ld   $c8
              8e38 0098  ld   $98
              8e39 00e5  ld   $e5
              8e3a 0045  ld   $45
              8e3b 00d0  ld   $d0
              8e3c 0043  ld   $43
              8e3d 00a4  ld   $a4
              8e3e 0041  ld   $41
              8e3f 00b9  ld   $b9
              8e40 0047  ld   $47
              8e41 0000  ld   $00
              8e42 0091  ld   $91
              8e43 0044  ld   $44
              8e44 0088  ld   $88
              8e45 0010  ld   $10
              8e46 00f8  ld   $f8
              8e47 00a9  ld   $a9
              8e48 0001  ld   $01
              8e49 004c  ld   $4c
              8e4a 008c  ld   $8c
              8e4b 000c  ld   $0c
              8e4c 00a6  ld   $a6
              8e4d 0044  ld   $44
              8e4e 00a4  ld   $a4
              8e4f 0045  ld   $45
              8e50 0020  ld   $20
              8e51 00bb  ld   $bb
              8e52 000e  ld   $0e
              8e53 0020  ld   $20
              8e54 006f  ld   $6f
              8e55 000e  ld   $0e
              8e56 00a0  ld   $a0
              8e57 0000  ld   $00
              8e58 00a9  ld   $a9
              8e59 00ad  ld   $ad
              8e5a 0020  ld   $20
              8e5b 00ef  ld   $ef
              8e5c 00ff  ld   $ff
              8e5d 0020  ld   $20
              8e5e 0077  ld   $77
              8e5f 000e  ld   $0e
              8e60 00a1  ld   $a1
              8e61 0044  ld   $44
              8e62 00a8  ld   $a8
              8e63 004a  ld   $4a
              8e64 0090  ld   $90
              8e65 000b  ld   $0b
              8e66 004a  ld   $4a
              8e67 00b0  ld   $b0
              8e68 0017  ld   $17
              8e69 00c9  ld   $c9
              8e6a 0022  ld   $22
              8e6b 00f0  ld   $f0
              8e6c 0013  ld   $13
              8e6d 0029  ld   $29
              8e6e 0007  ld   $07
              8e6f 0009  ld   $09
              8e70 0080  ld   $80
              8e71 004a  ld   $4a
              8e72 00aa  ld   $aa
              8e73 00bd  ld   $bd
              8e74 0000  ld   $00
              8e75 000f  ld   $0f
              8e76 00b0  ld   $b0
              8e77 0004  ld   $04
              8e78 004a  ld   $4a
              8e79 004a  ld   $4a
              8e7a 004a  ld   $4a
              8e7b 004a  ld   $4a
              8e7c 0029  ld   $29
              8e7d 000f  ld   $0f
              8e7e 00d0  ld   $d0
              8e7f 0004  ld   $04
              8e80 00a0  ld   $a0
              8e81 0080  ld   $80
              8e82 00a9  ld   $a9
              8e83 0000  ld   $00
              8e84 00aa  ld   $aa
              8e85 00bd  ld   $bd
              8e86 0044  ld   $44
              8e87 000f  ld   $0f
              8e88 0085  ld   $85
              8e89 0040  ld   $40
              8e8a 0029  ld   $29
              8e8b 0003  ld   $03
              8e8c 0085  ld   $85
              8e8d 0041  ld   $41
              8e8e 0098  ld   $98
              8e8f 0029  ld   $29
              8e90 008f  ld   $8f
              8e91 00aa  ld   $aa
              8e92 0098  ld   $98
              8e93 00a0  ld   $a0
              8e94 0003  ld   $03
              8e95 00e0  ld   $e0
              8e96 008a  ld   $8a
              8e97 00f0  ld   $f0
              8e98 000b  ld   $0b
              8e99 004a  ld   $4a
              8e9a 0090  ld   $90
              8e9b 0008  ld   $08
              8e9c 004a  ld   $4a
              8e9d 004a  ld   $4a
              8e9e 0009  ld   $09
              8e9f 0020  ld   $20
              8ea0 0088  ld   $88
              8ea1 00d0  ld   $d0
              8ea2 00fa  ld   $fa
              8ea3 00c8  ld   $c8
              8ea4 0088  ld   $88
              8ea5 00d0  ld   $d0
              8ea6 00f2  ld   $f2
              8ea7 0060  ld   $60
              8ea8 0020  ld   $20
              8ea9 00a1  ld   $a1
              8eaa 000d  ld   $0d
              8eab 000e  ld   $0e
              8eac 0000  ld   $00
              8ead 0000  ld   $00
              8eae 0048  ld   $48
              8eaf 00b1  ld   $b1
              8eb0 0044  ld   $44
              8eb1 0020  ld   $20
              8eb2 00dc  ld   $dc
              8eb3 00ff  ld   $ff
              8eb4 00a2  ld   $a2
              8eb5 0001  ld   $01
              8eb6 0020  ld   $20
              8eb7 0079  ld   $79
              8eb8 000e  ld   $0e
              8eb9 00c4  ld   $c4
              8eba 0041  ld   $41
              8ebb 00c8  ld   $c8
              8ebc 0090  ld   $90
              8ebd 00f1  ld   $f1
              8ebe 00a2  ld   $a2
              8ebf 0003  ld   $03
              8ec0 00c0  ld   $c0
              8ec1 0003  ld   $03
              8ec2 0090  ld   $90
              8ec3 00f2  ld   $f2
              8ec4 0068  ld   $68
              8ec5 00a8  ld   $a8
              8ec6 00b9  ld   $b9
              8ec7 005e  ld   $5e
              8ec8 000f  ld   $0f
              8ec9 0085  ld   $85
              8eca 0042  ld   $42
              8ecb 00b9  ld   $b9
              8ecc 009e  ld   $9e
              8ecd 000f  ld   $0f
              8ece 0085  ld   $85
              8ecf 0043  ld   $43
              8ed0 00a9  ld   $a9
              8ed1 0000  ld   $00
              8ed2 00a0  ld   $a0
              8ed3 0005  ld   $05
              8ed4 0006  ld   $06
              8ed5 0043  ld   $43
              8ed6 0026  ld   $26
              8ed7 0042  ld   $42
              8ed8 002a  ld   $2a
              8ed9 0088  ld   $88
              8eda 00d0  ld   $d0
              8edb 00f8  ld   $f8
              8edc 0069  ld   $69
              8edd 00bf  ld   $bf
              8ede 0020  ld   $20
              8edf 00ef  ld   $ef
              8ee0 00ff  ld   $ff
              8ee1 00ca  ld   $ca
              8ee2 00d0  ld   $d0
              8ee3 00ec  ld   $ec
              8ee4 0020  ld   $20
              8ee5 0077  ld   $77
              8ee6 000e  ld   $0e
              8ee7 00a2  ld   $a2
              8ee8 0006  ld   $06
              8ee9 00e0  ld   $e0
              8eea 0003  ld   $03
              8eeb 00d0  ld   $d0
              8eec 0012  ld   $12
              8eed 00a4  ld   $a4
              8eee 0041  ld   $41
              8eef 00f0  ld   $f0
              8ef0 000e  ld   $0e
              8ef1 00a5  ld   $a5
              8ef2 0040  ld   $40
              8ef3 00c9  ld   $c9
              8ef4 00e8  ld   $e8
              8ef5 00b1  ld   $b1
              8ef6 0044  ld   $44
              8ef7 00b0  ld   $b0
              8ef8 001c  ld   $1c
              8ef9 0020  ld   $20
              8efa 00dc  ld   $dc
              8efb fe00  bra  ac          ;+-----------------------------------+
              8efc fcfd  bra  $8efd       ;|                                   |
              8efd 1418  ld   $18,y       ;| Trampoline for page $8e00 lookups |
              8efe e006  jmp  y,$06       ;|                                   |
              8eff c218  st   [$18]       ;+-----------------------------------+
              8f00 00ff  ld   $ff
              8f01 0088  ld   $88
              8f02 00d0  ld   $d0
              8f03 00f2  ld   $f2
              8f04 0006  ld   $06
              8f05 0040  ld   $40
              8f06 0090  ld   $90
              8f07 000e  ld   $0e
              8f08 00bd  ld   $bd
              8f09 0051  ld   $51
              8f0a 000f  ld   $0f
              8f0b 0020  ld   $20
              8f0c 00ef  ld   $ef
              8f0d 00ff  ld   $ff
              8f0e 00bd  ld   $bd
              8f0f 0057  ld   $57
              8f10 000f  ld   $0f
              8f11 00f0  ld   $f0
              8f12 0003  ld   $03
              8f13 0020  ld   $20
              8f14 00ef  ld   $ef
              8f15 00ff  ld   $ff
              8f16 00ca  ld   $ca
              8f17 00d0  ld   $d0
              8f18 00d5  ld   $d5
              8f19 0060  ld   $60
              8f1a 0020  ld   $20
              8f1b 00f4  ld   $f4
              8f1c 000e  ld   $0e
              8f1d 00aa  ld   $aa
              8f1e 00e8  ld   $e8
              8f1f 00d0  ld   $d0
              8f20 0001  ld   $01
              8f21 00c8  ld   $c8
              8f22 0098  ld   $98
              8f23 0020  ld   $20
              8f24 00dc  ld   $dc
              8f25 00ff  ld   $ff
              8f26 008a  ld   $8a
              8f27 004c  ld   $4c
              8f28 00dc  ld   $dc
              8f29 00ff  ld   $ff
              8f2a 00a2  ld   $a2
              8f2b 0001  ld   $01
              8f2c 00a9  ld   $a9
              8f2d 00a0  ld   $a0
              8f2e 0020  ld   $20
              8f2f 00ef  ld   $ef
              8f30 00ff  ld   $ff
              8f31 00ca  ld   $ca
              8f32 00d0  ld   $d0
              8f33 00f8  ld   $f8
              8f34 0060  ld   $60
              8f35 00c9  ld   $c9
              8f36 009b  ld   $9b
              8f37 00f0  ld   $f0
              8f38 000a  ld   $0a
              8f39 0020  ld   $20
              8f3a 00ef  ld   $ef
              8f3b 00ff  ld   $ff
              8f3c 00c9  ld   $c9
              8f3d 00df  ld   $df
              8f3e 00f0  ld   $f0
              8f3f 0012  ld   $12
              8f40 00e8  ld   $e8
              8f41 0010  ld   $10
              8f42 0012  ld   $12
              8f43 00a9  ld   $a9
              8f44 00dc  ld   $dc
              8f45 0020  ld   $20
              8f46 00ef  ld   $ef
              8f47 00ff  ld   $ff
              8f48 0020  ld   $20
              8f49 00bb  ld   $bb
              8f4a 000e  ld   $0e
              8f4b 00a9  ld   $a9
              8f4c 00a1  ld   $a1
              8f4d 0020  ld   $20
              8f4e 00ef  ld   $ef
              8f4f 00ff  ld   $ff
              8f50 00a2  ld   $a2
              8f51 0001  ld   $01
              8f52 00ca  ld   $ca
              8f53 0030  ld   $30
              8f54 00f3  ld   $f3
              8f55 002c  ld   $2c
              8f56 0011  ld   $11
              8f57 00d0  ld   $d0
              8f58 0010  ld   $10
              8f59 00fb  ld   $fb
              8f5a 00ad  ld   $ad
              8f5b 0010  ld   $10
              8f5c 00d0  ld   $d0
              8f5d 009d  ld   $9d
              8f5e 0000  ld   $00
              8f5f 0002  ld   $02
              8f60 00c9  ld   $c9
              8f61 008d  ld   $8d
              8f62 00d0  ld   $d0
              8f63 00d1  ld   $d1
              8f64 0060  ld   $60
              8f65 00b9  ld   $b9
              8f66 0000  ld   $00
              8f67 0002  ld   $02
              8f68 00c8  ld   $c8
              8f69 00c9  ld   $c9
              8f6a 00a0  ld   $a0
              8f6b 00f0  ld   $f0
              8f6c 00f8  ld   $f8
              8f6d 0060  ld   $60
              8f6e 00a9  ld   $a9
              8f6f 008d  ld   $8d
              8f70 004c  ld   $4c
              8f71 00ef  ld   $ef
              8f72 00ff  ld   $ff
              8f73 00a2  ld   $a2
              8f74 0000  ld   $00
              8f75 0086  ld   $86
              8f76 0048  ld   $48
              8f77 0086  ld   $86
              8f78 0049  ld   $49
              8f79 00f0  ld   $f0
              8f7a 0015  ld   $15
              8f7b 00a2  ld   $a2
              8f7c 0003  ld   $03
              8f7d 000a  ld   $0a
              8f7e 000a  ld   $0a
              8f7f 000a  ld   $0a
              * 5 times
              8f82 0026  ld   $26
              8f83 0048  ld   $48
              8f84 0026  ld   $26
              8f85 0049  ld   $49
              8f86 00ca  ld   $ca
              8f87 0010  ld   $10
              8f88 00f8  ld   $f8
              8f89 00b5  ld   $b5
              8f8a 0049  ld   $49
              8f8b 0095  ld   $95
              8f8c 0047  ld   $47
              8f8d 00e8  ld   $e8
              8f8e 00f0  ld   $f0
              8f8f 00f9  ld   $f9
              8f90 00b9  ld   $b9
              8f91 0000  ld   $00
              8f92 0002  ld   $02
              8f93 00c8  ld   $c8
              8f94 0049  ld   $49
              8f95 00b0  ld   $b0
              8f96 00c9  ld   $c9
              8f97 000a  ld   $0a
              8f98 0090  ld   $90
              8f99 00e1  ld   $e1
              8f9a 0069  ld   $69
              8f9b 0088  ld   $88
              8f9c 00c9  ld   $c9
              8f9d 00fa  ld   $fa
              8f9e 00b0  ld   $b0
              8f9f 00db  ld   $db
              8fa0 0060  ld   $60
              8fa1 004c  ld   $4c
              8fa2 00e9  ld   $e9
              8fa3 000b  ld   $0b
              8fa4 00a5  ld   $a5
              8fa5 0041  ld   $41
              8fa6 0038  ld   $38
              8fa7 00a4  ld   $a4
              8fa8 0045  ld   $45
              8fa9 00aa  ld   $aa
              8faa 0010  ld   $10
              8fab 0001  ld   $01
              8fac 0088  ld   $88
              8fad 0065  ld   $65
              8fae 0044  ld   $44
              8faf 0090  ld   $90
              8fb0 0001  ld   $01
              8fb1 00c8  ld   $c8
              8fb2 0060  ld   $60
              8fb3 000f  ld   $0f
              8fb4 0000  ld   $00
              8fb5 00de  ld   $de
              8fb6 0040  ld   $40
              8fb7 0002  ld   $02
              8fb8 0045  ld   $45
              8fb9 0003  ld   $03
              8fba 00d0  ld   $d0
              8fbb 0008  ld   $08
              8fbc 0040  ld   $40
              8fbd 0009  ld   $09
              8fbe 0030  ld   $30
              8fbf 0022  ld   $22
              8fc0 0045  ld   $45
              8fc1 0033  ld   $33
              8fc2 00d0  ld   $d0
              8fc3 0008  ld   $08
              8fc4 0040  ld   $40
              8fc5 0009  ld   $09
              8fc6 0040  ld   $40
              8fc7 0002  ld   $02
              8fc8 0045  ld   $45
              8fc9 0033  ld   $33
              8fca 00d0  ld   $d0
              8fcb 0008  ld   $08
              8fcc 0040  ld   $40
              8fcd 0009  ld   $09
              8fce 0040  ld   $40
              8fcf 0002  ld   $02
              8fd0 0045  ld   $45
              8fd1 00b3  ld   $b3
              8fd2 00d0  ld   $d0
              8fd3 0008  ld   $08
              8fd4 0040  ld   $40
              8fd5 0009  ld   $09
              8fd6 0000  ld   $00
              8fd7 0022  ld   $22
              8fd8 0044  ld   $44
              8fd9 0033  ld   $33
              8fda 00d0  ld   $d0
              8fdb 008c  ld   $8c
              8fdc 0044  ld   $44
              8fdd 0000  ld   $00
              8fde 0011  ld   $11
              8fdf 0022  ld   $22
              8fe0 0044  ld   $44
              8fe1 0033  ld   $33
              8fe2 00d0  ld   $d0
              8fe3 008c  ld   $8c
              8fe4 0044  ld   $44
              8fe5 009a  ld   $9a
              8fe6 0010  ld   $10
              8fe7 0022  ld   $22
              8fe8 0044  ld   $44
              8fe9 0033  ld   $33
              8fea 00d0  ld   $d0
              8feb 0008  ld   $08
              8fec 0040  ld   $40
              8fed 0009  ld   $09
              8fee 0010  ld   $10
              8fef 0022  ld   $22
              8ff0 0044  ld   $44
              8ff1 0033  ld   $33
              8ff2 00d0  ld   $d0
              8ff3 0008  ld   $08
              8ff4 0040  ld   $40
              8ff5 0009  ld   $09
              8ff6 0062  ld   $62
              8ff7 0013  ld   $13
              8ff8 0078  ld   $78
              8ff9 00a9  ld   $a9
              8ffa 0000  ld   $00
              8ffb fe00  bra  ac          ;+-----------------------------------+
              8ffc fcfd  bra  $8ffd       ;|                                   |
              8ffd 1418  ld   $18,y       ;| Trampoline for page $8f00 lookups |
              8ffe e006  jmp  y,$06       ;|                                   |
              8fff c218  st   [$18]       ;+-----------------------------------+
              9000 0021  ld   $21
              9001 0081  ld   $81
              9002 0082  ld   $82
              9003 0000  ld   $00
              9004 0000  ld   $00
              9005 0059  ld   $59
              9006 004d  ld   $4d
              9007 0091  ld   $91
              9008 0092  ld   $92
              9009 0086  ld   $86
              900a 004a  ld   $4a
              900b 0085  ld   $85
              900c 009d  ld   $9d
              900d 00ac  ld   $ac
              900e 00a9  ld   $a9
              900f 00ac  ld   $ac
              9010 00a3  ld   $a3
              9011 00a8  ld   $a8
              9012 00a4  ld   $a4
              9013 00d9  ld   $d9
              9014 0000  ld   $00
              9015 00d8  ld   $d8
              9016 00a4  ld   $a4
              9017 00a4  ld   $a4
              9018 0000  ld   $00
              9019 001c  ld   $1c
              901a 008a  ld   $8a
              901b 001c  ld   $1c
              901c 0023  ld   $23
              901d 005d  ld   $5d
              901e 008b  ld   $8b
              901f 001b  ld   $1b
              9020 00a1  ld   $a1
              9021 009d  ld   $9d
              9022 008a  ld   $8a
              9023 001d  ld   $1d
              9024 0023  ld   $23
              9025 009d  ld   $9d
              9026 008b  ld   $8b
              9027 001d  ld   $1d
              9028 00a1  ld   $a1
              9029 0000  ld   $00
              902a 0029  ld   $29
              902b 0019  ld   $19
              902c 00ae  ld   $ae
              902d 0069  ld   $69
              902e 00a8  ld   $a8
              902f 0019  ld   $19
              9030 0023  ld   $23
              9031 0024  ld   $24
              9032 0053  ld   $53
              9033 001b  ld   $1b
              9034 0023  ld   $23
              9035 0024  ld   $24
              9036 0053  ld   $53
              9037 0019  ld   $19
              9038 00a1  ld   $a1
              9039 0000  ld   $00
              903a 001a  ld   $1a
              903b 005b  ld   $5b
              903c 005b  ld   $5b
              903d 00a5  ld   $a5
              903e 0069  ld   $69
              903f 0024  ld   $24
              9040 0024  ld   $24
              9041 00ae  ld   $ae
              9042 00ae  ld   $ae
              9043 00a8  ld   $a8
              9044 00ad  ld   $ad
              9045 0029  ld   $29
              9046 0000  ld   $00
              9047 007c  ld   $7c
              9048 0000  ld   $00
              9049 0015  ld   $15
              904a 009c  ld   $9c
              904b 006d  ld   $6d
              904c 009c  ld   $9c
              904d 00a5  ld   $a5
              904e 0069  ld   $69
              904f 0029  ld   $29
              9050 0053  ld   $53
              9051 0084  ld   $84
              9052 0013  ld   $13
              9053 0034  ld   $34
              9054 0011  ld   $11
              9055 00a5  ld   $a5
              9056 0069  ld   $69
              9057 0023  ld   $23
              9058 00a0  ld   $a0
              9059 00d8  ld   $d8
              905a 0062  ld   $62
              905b 005a  ld   $5a
              905c 0048  ld   $48
              905d 0026  ld   $26
              905e 0062  ld   $62
              905f 0094  ld   $94
              9060 0088  ld   $88
              9061 0054  ld   $54
              9062 0044  ld   $44
              9063 00c8  ld   $c8
              9064 0054  ld   $54
              9065 0068  ld   $68
              9066 0044  ld   $44
              9067 00e8  ld   $e8
              9068 0094  ld   $94
              9069 0000  ld   $00
              906a 00b4  ld   $b4
              906b 0008  ld   $08
              906c 0084  ld   $84
              906d 0074  ld   $74
              906e 00b4  ld   $b4
              906f 0028  ld   $28
              9070 006e  ld   $6e
              9071 0074  ld   $74
              9072 00f4  ld   $f4
              9073 00cc  ld   $cc
              9074 004a  ld   $4a
              9075 0072  ld   $72
              9076 00f2  ld   $f2
              9077 00a4  ld   $a4
              9078 008a  ld   $8a
              9079 0000  ld   $00
              907a 00aa  ld   $aa
              907b 00a2  ld   $a2
              907c 00a2  ld   $a2
              907d 0074  ld   $74
              907e 0074  ld   $74
              907f 0074  ld   $74
              9080 0072  ld   $72
              9081 0044  ld   $44
              9082 0068  ld   $68
              9083 00b2  ld   $b2
              9084 0032  ld   $32
              9085 00b2  ld   $b2
              9086 0000  ld   $00
              9087 0022  ld   $22
              9088 0026  ld   $26
              9089 001a  ld   $1a
              908a 001a  ld   $1a
              908b 0026  ld   $26
              908c 0026  ld   $26
              908d 0072  ld   $72
              908e 0072  ld   $72
              908f 0088  ld   $88
              9090 00c8  ld   $c8
              9091 00c4  ld   $c4
              9092 00ca  ld   $ca
              9093 0026  ld   $26
              9094 0048  ld   $48
              9095 0044  ld   $44
              9096 0044  ld   $44
              9097 00a2  ld   $a2
              9098 00c8  ld   $c8
              9099 005e  ld   $5e
              909a 0000  ld   $00
              909b 00e3  ld   $e3
              909c 0075  ld   $75
              909d 002b  ld   $2b
              909e 003e  ld   $3e
              909f 001a  ld   $1a
              90a0 003d  ld   $3d
              90a1 00fc  ld   $fc
              90a2 000f  ld   $0f
              90a3 0082  ld   $82
              90a4 00ff  ld   $ff
              90a5 0035  ld   $35
              90a6 003f  ld   $3f
              90a7 003b  ld   $3b
              90a8 0011  ld   $11
              90a9 0010  ld   $10
              90aa 00d0  ld   $d0
              90ab 002b  ld   $2b
              90ac 0030  ld   $30
              90ad 001a  ld   $1a
              90ae 000f  ld   $0f
              90af 005e  ld   $5e
              90b0 003d  ld   $3d
              90b1 008c  ld   $8c
              90b2 00ff  ld   $ff
              90b3 0035  ld   $35
              90b4 003f  ld   $3f
              90b5 003b  ld   $3b
              90b6 008c  ld   $8c
              90b7 00ff  ld   $ff
              90b8 00e6  ld   $e6
              90b9 0060  ld   $60
              90ba 0035  ld   $35
              90bb 0050  ld   $50
              90bc 0021  ld   $21
              90bd 00e6  ld   $e6
              90be 0020  ld   $20
              90bf 00e3  ld   $e3
              90c0 0060  ld   $60
              90c1 008c  ld   $8c
              90c2 000a  ld   $0a
              90c3 0035  ld   $35
              90c4 0072  ld   $72
              90c5 002a  ld   $2a
              90c6 0059  ld   $59
              90c7 0007  ld   $07
              90c8 008c  ld   $8c
              90c9 000a  ld   $0a
              90ca 008c  ld   $8c
              90cb 001a  ld   $1a
              90cc 0035  ld   $35
              90cd 0072  ld   $72
              90ce 0033  ld   $33
              90cf 00ec  ld   $ec
              90d0 0000  ld   $00
              90d1 008c  ld   $8c
              90d2 001a  ld   $1a
              90d3 0082  ld   $82
              90d4 007f  ld   $7f
              90d5 00e6  ld   $e6
              90d6 0080  ld   $80
              90d7 00f3  ld   $f3
              90d8 0030  ld   $30
              90d9 0011  ld   $11
              90da 0012  ld   $12
              90db 00d0  ld   $d0
              90dc 002b  ld   $2b
              90dd 0030  ld   $30
              90de 00ad  ld   $ad
              90df 0035  ld   $35
              90e0 003f  ld   $3f
              90e1 0075  ld   $75
              90e2 005e  ld   $5e
              90e3 003c  ld   $3c
              90e4 0088  ld   $88
              90e5 0080  ld   $80
              90e6 0085  ld   $85
              90e7 000f  ld   $0f
              90e8 005f  ld   $5f
              90e9 001a  ld   $1a
              90ea 001c  ld   $1c
              90eb 00e3  ld   $e3
              90ec 0002  ld   $02
              90ed 00f6  ld   $f6
              90ee 00e3  ld   $e3
              90ef 0042  ld   $42
              90f0 0035  ld   $35
              90f1 0072  ld   $72
              90f2 005b  ld   $5b
              90f3 0021  ld   $21
              90f4 007a  ld   $7a
              90f5 00e6  ld   $e6
              90f6 0002  ld   $02
              90f7 002b  ld   $2b
              90f8 007a  ld   $7a
              90f9 0059  ld   $59
              90fa 0000  ld   $00
              90fb fe00  bra  ac          ;+-----------------------------------+
              90fc fcfd  bra  $90fd       ;|                                   |
              90fd 1418  ld   $18,y       ;| Trampoline for page $9000 lookups |
              90fe e006  jmp  y,$06       ;|                                   |
              90ff c218  st   [$18]       ;+-----------------------------------+
              9100 00f0  ld   $f0
              9101 0030  ld   $30
              9102 0011  ld   $11
              9103 0010  ld   $10
              9104 00d0  ld   $d0
              9105 002b  ld   $2b
              9106 0030  ld   $30
              9107 00ad  ld   $ad
              9108 0035  ld   $35
              9109 003f  ld   $3f
              910a 006c  ld   $6c
              910b 00fc  ld   $fc
              910c 003c  ld   $3c
              910d 0082  ld   $82
              910e 007f  ld   $7f
              910f 0035  ld   $35
              9110 0072  ld   $72
              9111 0071  ld   $71
              9112 00f3  ld   $f3
              9113 0030  ld   $30
              9114 0059  ld   $59
              9115 001f  ld   $1f
              9116 005e  ld   $5e
              9117 003c  ld   $3c
              9118 001a  ld   $1a
              9119 003c  ld   $3c
              911a 00e6  ld   $e6
              911b 0001  ld   $01
              911c 0035  ld   $35
              911d 0053  ld   $53
              911e 0089  ld   $89
              911f 0059  ld   $59
              9120 00a0  ld   $a0
              9121 0085  ld   $85
              9122 000f  ld   $0f
              9123 005f  ld   $5f
              9124 0021  ld   $21
              9125 007a  ld   $7a
              9126 00e6  ld   $e6
              9127 0006  ld   $06
              9128 002b  ld   $2b
              9129 007a  ld   $7a
              912a 0059  ld   $59
              912b 001e  ld   $1e
              912c 005e  ld   $5e
              912d 003c  ld   $3c
              912e 008c  ld   $8c
              912f 0014  ld   $14
              9130 0035  ld   $35
              9131 0072  ld   $72
              9132 009b  ld   $9b
              9133 0059  ld   $59
              9134 00c0  ld   $c0
              9135 0085  ld   $85
              9136 000f  ld   $0f
              9137 005f  ld   $5f
              9138 0021  ld   $21
              9139 007a  ld   $7a
              913a 00e6  ld   $e6
              913b 0006  ld   $06
              913c 002b  ld   $2b
              913d 007a  ld   $7a
              913e 0011  ld   $11
              913f 0007  ld   $07
              9140 005f  ld   $5f
              9141 002b  ld   $2b
              9142 0030  ld   $30
              9143 0063  ld   $63
              9144 0059  ld   $59
              9145 00ff  ld   $ff
              9146 005e  ld   $5e
              9147 000e  ld   $0e
              9148 0011  ld   $11
              9149 0000  ld   $00
              914a 0004  ld   $04
              914b 007f  ld   $7f
              914c 003e  ld   $3e
              914d 0018  ld   $18
              914e 00a2  ld   $a2
              914f 0000  ld   $00
              9150 00a0  ld   $a0
              9151 000c  ld   $0c
              9152 00b9  ld   $b9
              9153 00ce  ld   $ce
              9154 005e  ld   $5e
              9155 0084  ld   $84
              9156 003a  ld   $3a
              9157 00a0  ld   $a0
              9158 0007  ld   $07
              9159 009d  ld   $9d
              915a 0000  ld   $00
              915b 0001  ld   $01
              915c 0069  ld   $69
              915d 0001  ld   $01
              915e 00e8  ld   $e8
              915f 00e8  ld   $e8
              9160 0088  ld   $88
              9161 00d0  ld   $d0
              9162 00f6  ld   $f6
              9163 00e8  ld   $e8
              9164 00e8  ld   $e8
              9165 00e8  ld   $e8
              9166 00e8  ld   $e8
              9167 00a4  ld   $a4
              9168 003a  ld   $3a
              9169 0088  ld   $88
              916a 0010  ld   $10
              916b 00e6  ld   $e6
              916c 004c  ld   $4c
              916d 0005  ld   $05
              916e 00c1  ld   $c1
              916f 0077  ld   $77
              9170 0070  ld   $70
              9171 0056  ld   $56
              9172 004f  ld   $4f
              9173 0048  ld   $48
              9174 0041  ld   $41
              9175 003a  ld   $3a
              9176 0033  ld   $33
              9177 002c  ld   $2c
              9178 0025  ld   $25
              9179 001e  ld   $1e
              917a 0017  ld   $17
              917b 0010  ld   $10
              917c 00d8  ld   $d8
              917d 0058  ld   $58
              917e 00a2  ld   $a2
              917f 00f7  ld   $f7
              9180 009a  ld   $9a
              9181 004c  ld   $4c
              9182 001a  ld   $1a
              9183 00ff  ld   $ff
              9184 005f  ld   $5f
              9185 0000  ld   $00
              9186 0000  ld   $00
              9187 002b  ld   $2b
              9188 001a  ld   $1a
              9189 0011  ld   $11
              918a 000c  ld   $0c
              918b 000b  ld   $0b
              918c 002b  ld   $2b
              918d 0022  ld   $22
              918e 00b4  ld   $b4
              918f 00e6  ld   $e6
              9190 0011  ld   $11
              9191 00fe  ld   $fe
              9192 00ff  ld   $ff
              9193 00f6  ld   $f6
              9194 0090  ld   $90
              9195 00fe  ld   $fe
              9196 002b  ld   $2b
              9197 007c  ld   $7c
              9198 00df  ld   $df
              9199 00fa  ld   $fa
              919a 0021  ld   $21
              919b 0024  ld   $24
              919c 00ec  ld   $ec
              919d 0000  ld   $00
              919e 0021  ld   $21
              919f 0026  ld   $26
              91a0 00ec  ld   $ec
              91a1 0002  ld   $02
              91a2 0021  ld   $21
              91a3 0028  ld   $28
              91a4 00ec  ld   $ec
              91a5 0004  ld   $04
              91a6 0011  ld   $11
              91a7 00e1  ld   $e1
              91a8 0004  ld   $04
              91a9 002b  ld   $2b
              91aa 0022  ld   $22
              91ab 0011  ld   $11
              91ac 0000  ld   $00
              91ad 003f  ld   $3f
              91ae 002b  ld   $2b
              91af 0024  ld   $24
              91b0 005e  ld   $5e
              91b1 0026  ld   $26
              91b2 0021  ld   $21
              91b3 007c  ld   $7c
              91b4 005e  ld   $5e
              91b5 0027  ld   $27
              91b6 008c  ld   $8c
              91b7 008d  ld   $8d
              91b8 0035  ld   $35
              91b9 003f  ld   $3f
              91ba 003b  ld   $3b
              91bb 001a  ld   $1a
              91bc 007a  ld   $7a
              91bd 00e6  ld   $e6
              91be 00fb  ld   $fb
              91bf 0035  ld   $35
              91c0 0056  ld   $56
              91c1 003b  ld   $3b
              91c2 0059  ld   $59
              91c3 0000  ld   $00
              91c4 0035  ld   $35
              91c5 0072  ld   $72
              91c6 0096  ld   $96
              91c7 0021  ld   $21
              91c8 007a  ld   $7a
              91c9 002b  ld   $2b
              91ca 0028  ld   $28
              91cb 0082  ld   $82
              91cc 00ff  ld   $ff
              91cd 00e6  ld   $e6
              91ce 00fb  ld   $fb
              91cf 0035  ld   $35
              91d0 004d  ld   $4d
              91d1 004c  ld   $4c
              91d2 0011  ld   $11
              91d3 00fb  ld   $fb
              91d4 00ff  ld   $ff
              91d5 00b4  ld   $b4
              91d6 00cb  ld   $cb
              91d7 0093  ld   $93
              91d8 0028  ld   $28
              91d9 00e3  ld   $e3
              91da 0001  ld   $01
              91db 0035  ld   $35
              91dc 0050  ld   $50
              91dd 004c  ld   $4c
              91de 0059  ld   $59
              91df 0061  ld   $61
              91e0 005e  ld   $5e
              91e1 007a  ld   $7a
              91e2 00e3  ld   $e3
              91e3 009f  ld   $9f
              91e4 002b  ld   $2b
              91e5 007c  ld   $7c
              91e6 00ad  ld   $ad
              91e7 005e  ld   $5e
              91e8 007b  ld   $7b
              91e9 0021  ld   $21
              91ea 007a  ld   $7a
              91eb 00e6  ld   $e6
              91ec 0002  ld   $02
              91ed 002b  ld   $2b
              91ee 0028  ld   $28
              91ef 0011  ld   $11
              91f0 0000  ld   $00
              91f1 0007  ld   $07
              91f2 0099  ld   $99
              91f3 0028  ld   $28
              91f4 00ad  ld   $ad
              91f5 0082  ld   $82
              91f6 0001  ld   $01
              91f7 005e  ld   $5e
              91f8 0026  ld   $26
              91f9 00b4  ld   $b4
              91fa 00cb  ld   $cb
              91fb fe00  bra  ac          ;+-----------------------------------+
              91fc fcfd  bra  $91fd       ;|                                   |
              91fd 1418  ld   $18,y       ;| Trampoline for page $9100 lookups |
              91fe e006  jmp  y,$06       ;|                                   |
              91ff c218  st   [$18]       ;+-----------------------------------+
              9200 0093  ld   $93
              9201 0028  ld   $28
              9202 001a  ld   $1a
              9203 0028  ld   $28
              9204 0035  ld   $35
              9205 0072  ld   $72
              9206 0066  ld   $66
              9207 0021  ld   $21
              9208 007c  ld   $7c
              9209 00e3  ld   $e3
              920a 0012  ld   $12
              920b 002b  ld   $2b
              920c 007e  ld   $7e
              920d 00ad  ld   $ad
              920e 005e  ld   $5e
              920f 0026  ld   $26
              9210 0021  ld   $21
              9211 007c  ld   $7c
              9212 00ad  ld   $ad
              9213 00f0  ld   $f0
              9214 007e  ld   $7e
              9215 001a  ld   $1a
              9216 0026  ld   $26
              9217 00f0  ld   $f0
              9218 007c  ld   $7c
              9219 0093  ld   $93
              921a 007c  ld   $7c
              921b 0093  ld   $93
              921c 007c  ld   $7c
              921d 001a  ld   $1a
              921e 007c  ld   $7c
              921f 008c  ld   $8c
              9220 00d8  ld   $d8
              9221 0035  ld   $35
              9222 0072  ld   $72
              9223 0079  ld   $79
              9224 001a  ld   $1a
              9225 0027  ld   $27
              9226 00e6  ld   $e6
              9227 00a0  ld   $a0
              9228 0035  ld   $35
              9229 0050  ld   $50
              922a 00ef  ld   $ef
              922b 00e6  ld   $e6
              922c 0040  ld   $40
              922d 0035  ld   $35
              922e 0050  ld   $50
              922f 00a4  ld   $a4
              9230 00e6  ld   $e6
              9231 0020  ld   $20
              9232 00e3  ld   $e3
              9233 000e  ld   $0e
              9234 0035  ld   $35
              9235 0053  ld   $53
              9236 00b2  ld   $b2
              9237 00e3  ld   $e3
              9238 0032  ld   $32
              9239 002b  ld   $2b
              923a 007c  ld   $7c
              923b 0011  ld   $11
              923c 0000  ld   $00
              923d 0007  ld   $07
              923e 0090  ld   $90
              923f 00b7  ld   $b7
              9240 002b  ld   $2b
              9241 007c  ld   $7c
              9242 0011  ld   $11
              9243 0000  ld   $00
              9244 0008  ld   $08
              9245 002b  ld   $2b
              9246 007e  ld   $7e
              9247 0021  ld   $21
              9248 007c  ld   $7c
              9249 00e9  ld   $e9
              924a 00e9  ld   $e9
              924b 0099  ld   $99
              924c 007c  ld   $7c
              924d 0099  ld   $99
              924e 007e  ld   $7e
              924f 002b  ld   $2b
              9250 007e  ld   $7e
              9251 0021  ld   $21
              9252 007a  ld   $7a
              9253 002b  ld   $2b
              9254 0028  ld   $28
              9255 00e3  ld   $e3
              9256 0006  ld   $06
              9257 002b  ld   $2b
              9258 007a  ld   $7a
              9259 0059  ld   $59
              925a 0005  ld   $05
              925b 002b  ld   $2b
              925c 007c  ld   $7c
              925d 0021  ld   $21
              925e 007e  ld   $7e
              925f 007f  ld   $7f
              9260 0000  ld   $00
              9261 0082  ld   $82
              9262 00fe  ld   $fe
              9263 005e  ld   $5e
              9264 0026  ld   $26
              9265 0011  ld   $11
              9266 0000  ld   $00
              9267 0007  ld   $07
              9268 0099  ld   $99
              9269 0028  ld   $28
              926a 00ad  ld   $ad
              926b 0035  ld   $35
              926c 003f  ld   $3f
              926d 00e2  ld   $e2
              926e 0093  ld   $93
              926f 0026  ld   $26
              9270 00b4  ld   $b4
              9271 00cb  ld   $cb
              9272 0093  ld   $93
              9273 007e  ld   $7e
              9274 0093  ld   $93
              9275 0028  ld   $28
              9276 0021  ld   $21
              9277 007c  ld   $7c
              9278 00e6  ld   $e6
              9279 0001  ld   $01
              927a 0035  ld   $35
              927b 004d  ld   $4d
              927c 00cd  ld   $cd
              927d 00ee  ld   $ee
              927e 0000  ld   $00
              927f 002b  ld   $2b
              9280 0024  ld   $24
              9281 00ee  ld   $ee
              9282 0002  ld   $02
              9283 002b  ld   $2b
              9284 0026  ld   $26
              9285 00ee  ld   $ee
              9286 0004  ld   $04
              9287 002b  ld   $2b
              9288 0028  ld   $28
              9289 00df  ld   $df
              928a 0006  ld   $06
              928b 00ff  ld   $ff
              928c 00c1  ld   $c1
              928d 0000  ld   $00
              928e 0058  ld   $58
              928f 00a9  ld   $a9
              9290 00aa  ld   $aa
              9291 0020  ld   $20
              9292 00ef  ld   $ef
              9293 00ff  ld   $ff
              9294 00ae  ld   $ae
              9295 0000  ld   $00
              9296 00c2  ld   $c2
              9297 00bd  ld   $bd
              9298 0000  ld   $00
              9299 00c2  ld   $c2
              929a 0020  ld   $20
              929b 00ef  ld   $ef
              929c 00ff  ld   $ff
              929d 00ca  ld   $ca
              929e 00d0  ld   $d0
              929f 00f7  ld   $f7
              92a0 00ae  ld   $ae
              92a1 0025  ld   $25
              92a2 00c1  ld   $c1
              92a3 00bd  ld   $bd
              92a4 0025  ld   $25
              92a5 00c1  ld   $c1
              92a6 0020  ld   $20
              92a7 00ef  ld   $ef
              92a8 00ff  ld   $ff
              92a9 00ca  ld   $ca
              92aa 00d0  ld   $d0
              92ab 00f7  ld   $f7
              92ac 002c  ld   $2c
              92ad 0012  ld   $12
              92ae 00d0  ld   $d0
              92af 0030  ld   $30
              92b0 00fb  ld   $fb
              92b1 004c  ld   $4c
              92b2 0000  ld   $00
              92b3 00ff  ld   $ff
              92b4 0032  ld   $32
              92b5 008d  ld   $8d
              92b6 00ce  ld   $ce
              92b7 00cf  ld   $cf
              92b8 00cd  ld   $cd
              92b9 00da  ld   $da
              92ba 00cf  ld   $cf
              92bb 00d7  ld   $d7
              92bc 00a0  ld   $a0
              92bd 00da  ld   $da
              92be 00ad  ld   $ad
              92bf 00cc  ld   $cc
              92c0 00d4  ld   $d4
              92c1 00c3  ld   $c3
              92c2 008d  ld   $8d
              92c3 00d4  ld   $d4
              92c4 00d2  ld   $d2
              92c5 00c1  ld   $c1
              92c6 00d4  ld   $d4
              92c7 00d3  ld   $d3
              92c8 00a0  ld   $a0
              92c9 00cd  ld   $cd
              92ca 00d2  ld   $d2
              92cb 00c1  ld   $c1
              92cc 00d7  ld   $d7
              92cd 00a0  ld   $a0
              92ce 00c3  ld   $c3
              92cf 00c9  ld   $c9
              92d0 00d3  ld   $d3
              92d1 00c1  ld   $c1
              92d2 00c2  ld   $c2
              92d3 00a0  ld   $a0
              92d4 00d2  ld   $d2
              92d5 00b3  ld   $b3
              92d6 00c2  ld   $c2
              92d7 00b2  ld   $b2
              92d8 00c5  ld   $c5
              92d9 008d  ld   $8d
              92da 00c3  ld   $c3
              92db 00c9  ld   $c9
              92dc 00d3  ld   $d3
              92dd 00c1  ld   $c1
              92de 00c2  ld   $c2
              92df 00a0  ld   $a0
              92e0 00d2  ld   $d2
              92e1 00c5  ld   $c5
              92e2 00c7  ld   $c7
              92e3 00c5  ld   $c5
              92e4 00d4  ld   $d4
              92e5 00ce  ld   $ce
              92e6 00c9  ld   $c9
              92e7 00c2  ld   $c2
              92e8 0000  ld   $00
              92e9 005b  ld   $5b
              92ea 005a  ld   $5a
              92eb 00a0  ld   $a0
              92ec 00d2  ld   $d2
              92ed 00b0  ld   $b0
              92ee 00b0  ld   $b0
              92ef 00b0  ld   $b0
              92f0 00c5  ld   $c5
              92f1 008d  ld   $8d
              92f2 00d5  ld   $d5
              92f3 00ce  ld   $ce
              92f4 00c5  ld   $c5
              92f5 00cd  ld   $cd
              92f6 00a0  ld   $a0
              92f7 00d2  ld   $d2
              92f8 00b0  ld   $b0
              92f9 00b0  ld   $b0
              92fa 00b1  ld   $b1
              92fb fe00  bra  ac          ;+-----------------------------------+
              92fc fcfd  bra  $92fd       ;|                                   |
              92fd 1418  ld   $18,y       ;| Trampoline for page $9200 lookups |
              92fe e006  jmp  y,$06       ;|                                   |
              92ff c218  st   [$18]       ;+-----------------------------------+
              9300 00c3  ld   $c3
              9301 008d  ld   $8d
              9302 00d2  ld   $d2
              9303 00c5  ld   $c5
              9304 00cc  ld   $cc
              9305 00c2  ld   $c2
              9306 00cd  ld   $cd
              9307 00c5  ld   $c5
              9308 00d3  ld   $d3
              9309 00d3  ld   $d3
              930a 00c1  ld   $c1
              930b 00ad  ld   $ad
              930c 00c9  ld   $c9
              930d 00ce  ld   $ce
              930e 00c9  ld   $c9
              930f 00cd  ld   $cd
              9310 00a0  ld   $a0
              9311 00a0  ld   $a0
              9312 00d2  ld   $d2
              9313 00c5  ld   $c5
              9314 00c5  ld   $c5
              9315 00c5  ld   $c5
              9316 008d  ld   $8d
              9317 00c5  ld   $c5
              9318 00cc  ld   $cc
              9319 00da  ld   $da
              931a 00da  ld   $da
              931b 00d5  ld   $d5
              931c 00d0  ld   $d0
              931d 00ad  ld   $ad
              931e 00b5  ld   $b5
              931f 00b1  ld   $b1
              9320 00a0  ld   $a0
              9321 00a0  ld   $a0
              9322 00d2  ld   $d2
              9323 00b0  ld   $b0
              9324 00b0  ld   $b0
              9325 00b4  ld   $b4
              9326 008d  ld   $8d
              9327 00c4  ld   $c4
              9328 00ce  ld   $ce
              9329 00c9  ld   $c9
              932a 00cd  ld   $cd
              932b 00d2  ld   $d2
              932c 00c5  ld   $c5
              932d 00d4  ld   $d4
              932e 00d3  ld   $d3
              932f 00c1  ld   $c1
              9330 00cd  ld   $cd
              9331 00a0  ld   $a0
              9332 00a0  ld   $a0
              9333 00d2  ld   $d2
              9334 00b0  ld   $b0
              9335 00b0  ld   $b0
              9336 00b3  ld   $b3
              9337 008d  ld   $8d
              9338 008d  ld   $8d
              9339 00cc  ld   $cc
              933a 00d4  ld   $d4
              933b 00d4  ld   $d4
              933c 00a0  ld   $a0
              933d 00ce  ld   $ce
              933e 00cf  ld   $cf
              933f 00a0  ld   $a0
              9340 00b1  ld   $b1
              9341 00ad  ld   $ad
              9342 00c5  ld   $c5
              9343 00cc  ld   $cc
              9344 00d0  ld   $d0
              9345 00d0  ld   $d0
              9346 00c1  ld   $c1
              9347 008d  ld   $8d
              9348 008d  ld   $8d
              9349 008d  ld   $8d
              934a 00d0  ld   $d0
              934b 0010  ld   $10
              934c 0004  ld   $04
              934d 0000  ld   $00
              934e 0000  ld   $00
              934f 0000  ld   $00
              9350 0000  ld   $00
              9351 00e0  ld   $e0
              9352 0000  ld   $00
              9353 0000  ld   $00
              9354 004c  ld   $4c
              9355 00b0  ld   $b0
              9356 00e2  ld   $e2
              9357 00ad  ld   $ad
              9358 0011  ld   $11
              9359 00d0  ld   $d0
              935a 0010  ld   $10
              935b 00fb  ld   $fb
              935c 00ad  ld   $ad
              935d 0010  ld   $10
              935e 00d0  ld   $d0
              935f 0060  ld   $60
              9360 008a  ld   $8a
              9361 0029  ld   $29
              9362 0020  ld   $20
              9363 00f0  ld   $f0
              9364 0023  ld   $23
              9365 00a9  ld   $a9
              9366 00a0  ld   $a0
              9367 0085  ld   $85
              9368 0044  ld   $44
              9369 004c  ld   $4c
              936a 00c9  ld   $c9
              936b 00e3  ld   $e3
              936c 00a9  ld   $a9
              936d 0020  ld   $20
              936e 00c5  ld   $c5
              936f 0081  ld   $81
              9370 00b0  ld   $b0
              9371 000c  ld   $0c
              9372 00a9  ld   $a9
              9373 008d  ld   $8d
              9374 00a0  ld   $a0
              9375 0007  ld   $07
              9376 0020  ld   $20
              9377 00c9  ld   $c9
              9378 00e3  ld   $e3
              9379 00a9  ld   $a9
              937a 00a0  ld   $a0
              937b 0088  ld   $88
              937c 00d0  ld   $d0
              937d 00f8  ld   $f8
              937e 00a0  ld   $a0
              937f 0000  ld   $00
              9380 00b1  ld   $b1
              9381 0042  ld   $42
              9382 00e6  ld   $e6
              9383 0042  ld   $42
              9384 00d0  ld   $d0
              9385 0002  ld   $02
              9386 00e6  ld   $e6
              9387 0043  ld   $43
              9388 0060  ld   $60
              9389 0020  ld   $20
              938a 0015  ld   $15
              938b 00e7  ld   $e7
              938c 0020  ld   $20
              938d 0076  ld   $76
              938e 00e5  ld   $e5
              938f 00a5  ld   $a5
              9390 0042  ld   $42
              9391 00c5  ld   $c5
              9392 0046  ld   $46
              9393 00a5  ld   $a5
              9394 0043  ld   $43
              9395 00e5  ld   $e5
              9396 0047  ld   $47
              9397 00b0  ld   $b0
              9398 00ef  ld   $ef
              9399 0020  ld   $20
              939a 006d  ld   $6d
              939b 00e0  ld   $e0
              939c 004c  ld   $4c
              939d 003b  ld   $3b
              939e 00e0  ld   $e0
              939f 00a5  ld   $a5
              93a0 00ca  ld   $ca
              93a1 0085  ld   $85
              93a2 0042  ld   $42
              93a3 00a5  ld   $a5
              93a4 00cb  ld   $cb
              93a5 0085  ld   $85
              93a6 0043  ld   $43
              93a7 00a5  ld   $a5
              93a8 004c  ld   $4c
              93a9 0085  ld   $85
              93aa 0046  ld   $46
              93ab 00a5  ld   $a5
              93ac 004d  ld   $4d
              93ad 0085  ld   $85
              93ae 0047  ld   $47
              93af 00d0  ld   $d0
              93b0 00de  ld   $de
              93b1 0020  ld   $20
              93b2 0015  ld   $15
              93b3 00e7  ld   $e7
              93b4 0020  ld   $20
              93b5 006d  ld   $6d
              93b6 00e5  ld   $e5
              93b7 00a5  ld   $a5
              93b8 0044  ld   $44
              93b9 0085  ld   $85
              93ba 0042  ld   $42
              93bb 00a5  ld   $a5
              93bc 0045  ld   $45
              93bd 0085  ld   $85
              93be 0043  ld   $43
              93bf 00b0  ld   $b0
              93c0 00c7  ld   $c7
              93c1 0086  ld   $86
              93c2 00d8  ld   $d8
              93c3 00a9  ld   $a9
              93c4 00a0  ld   $a0
              93c5 0085  ld   $85
              93c6 0082  ld   $82
              93c7 0020  ld   $20
              93c8 002a  ld   $2a
              93c9 00e0  ld   $e0
              93ca 0098  ld   $98
              93cb 0085  ld   $85
              93cc 0044  ld   $44
              93cd 0020  ld   $20
              93ce 002a  ld   $2a
              93cf 00e0  ld   $e0
              93d0 00aa  ld   $aa
              93d1 0020  ld   $20
              93d2 002a  ld   $2a
              93d3 00e0  ld   $e0
              93d4 0020  ld   $20
              93d5 001b  ld   $1b
              93d6 00e5  ld   $e5
              93d7 0020  ld   $20
              93d8 0018  ld   $18
              93d9 00e0  ld   $e0
              93da 0084  ld   $84
              93db 0082  ld   $82
              93dc 00aa  ld   $aa
              93dd 0010  ld   $10
              93de 0018  ld   $18
              93df 000a  ld   $0a
              93e0 0010  ld   $10
              93e1 00e9  ld   $e9
              93e2 00a5  ld   $a5
              93e3 0044  ld   $44
              93e4 00d0  ld   $d0
              93e5 0003  ld   $03
              93e6 0020  ld   $20
              93e7 0011  ld   $11
              93e8 00e0  ld   $e0
              93e9 008a  ld   $8a
              93ea 0020  ld   $20
              93eb 00c9  ld   $c9
              93ec 00e3  ld   $e3
              93ed 00a9  ld   $a9
              93ee 0025  ld   $25
              93ef 0020  ld   $20
              93f0 001a  ld   $1a
              93f1 00e0  ld   $e0
              93f2 00aa  ld   $aa
              93f3 0030  ld   $30
              93f4 00f5  ld   $f5
              93f5 0085  ld   $85
              93f6 0044  ld   $44
              93f7 00c9  ld   $c9
              93f8 0001  ld   $01
              93f9 00d0  ld   $d0
              93fa 0005  ld   $05
              93fb fe00  bra  ac          ;+-----------------------------------+
              93fc fcfd  bra  $93fd       ;|                                   |
              93fd 1418  ld   $18,y       ;| Trampoline for page $9300 lookups |
              93fe e006  jmp  y,$06       ;|                                   |
              93ff c218  st   [$18]       ;+-----------------------------------+
              9400 00a6  ld   $a6
              9401 00d8  ld   $d8
              9402 004c  ld   $4c
              9403 00cd  ld   $cd
              9404 00e3  ld   $e3
              9405 0048  ld   $48
              9406 0084  ld   $84
              9407 00ce  ld   $ce
              9408 00a2  ld   $a2
              9409 00ed  ld   $ed
              940a 0086  ld   $86
              940b 00cf  ld   $cf
              940c 00c9  ld   $c9
              940d 0051  ld   $51
              940e 0090  ld   $90
              940f 0004  ld   $04
              9410 00c6  ld   $c6
              9411 00cf  ld   $cf
              9412 00e9  ld   $e9
              9413 0050  ld   $50
              9414 0048  ld   $48
              9415 00b1  ld   $b1
              9416 00ce  ld   $ce
              9417 00aa  ld   $aa
              9418 0088  ld   $88
              9419 00b1  ld   $b1
              941a 00ce  ld   $ce
              941b 0010  ld   $10
              941c 00fa  ld   $fa
              941d 00e0  ld   $e0
              941e 00c0  ld   $c0
              941f 00b0  ld   $b0
              9420 0004  ld   $04
              9421 00e0  ld   $e0
              9422 0000  ld   $00
              9423 0030  ld   $30
              9424 00f2  ld   $f2
              9425 00aa  ld   $aa
              9426 0068  ld   $68
              9427 00e9  ld   $e9
              9428 0001  ld   $01
              9429 00d0  ld   $d0
              942a 00e9  ld   $e9
              942b 0024  ld   $24
              942c 0044  ld   $44
              942d 0030  ld   $30
              942e 0003  ld   $03
              942f 0020  ld   $20
              9430 00f8  ld   $f8
              9431 00ef  ld   $ef
              9432 00b1  ld   $b1
              9433 00ce  ld   $ce
              9434 0010  ld   $10
              9435 0010  ld   $10
              9436 00aa  ld   $aa
              9437 0029  ld   $29
              9438 003f  ld   $3f
              9439 0085  ld   $85
              943a 0044  ld   $44
              943b 0018  ld   $18
              943c 0069  ld   $69
              943d 00a0  ld   $a0
              943e 0020  ld   $20
              943f 00c9  ld   $c9
              9440 00e3  ld   $e3
              9441 0088  ld   $88
              9442 00e0  ld   $e0
              9443 00c0  ld   $c0
              9444 0090  ld   $90
              9445 00ec  ld   $ec
              9446 0020  ld   $20
              9447 000c  ld   $0c
              9448 00e0  ld   $e0
              9449 0068  ld   $68
              944a 00c9  ld   $c9
              944b 005d  ld   $5d
              944c 00f0  ld   $f0
              944d 00a4  ld   $a4
              944e 00c9  ld   $c9
              944f 0028  ld   $28
              9450 00d0  ld   $d0
              9451 008a  ld   $8a
              9452 00f0  ld   $f0
              9453 009e  ld   $9e
              9454 0020  ld   $20
              9455 0018  ld   $18
              9456 00e1  ld   $e1
              9457 0095  ld   $95
              9458 0050  ld   $50
              9459 00e1  ld   $e1
              945a 0000  ld   $00
              945b 0000  ld   $00
              945c 00d5  ld   $d5
              945d 0088  ld   $88
              945e 0090  ld   $90
              945f 0011  ld   $11
              9460 00a0  ld   $a0
              9461 002b  ld   $2b
              9462 004c  ld   $4c
              9463 00e0  ld   $e0
              9464 00e3  ld   $e3
              9465 0020  ld   $20
              9466 0034  ld   $34
              9467 00ee  ld   $ee
              9468 00d5  ld   $d5
              9469 0050  ld   $50
              946a 0090  ld   $90
              946b 00f4  ld   $f4
              946c 0020  ld   $20
              946d 00e4  ld   $e4
              946e 00ef  ld   $ef
              946f 0095  ld   $95
              9470 0088  ld   $88
              9471 004c  ld   $4c
              9472 0023  ld   $23
              9473 00e8  ld   $e8
              9474 0020  ld   $20
              9475 0034  ld   $34
              9476 00ee  ld   $ee
              9477 00f0  ld   $f0
              9478 00e7  ld   $e7
              9479 0038  ld   $38
              947a 00e9  ld   $e9
              947b 0001  ld   $01
              947c 0060  ld   $60
              947d 0020  ld   $20
              947e 0018  ld   $18
              947f 00e1  ld   $e1
              9480 0095  ld   $95
              9481 0050  ld   $50
              9482 0018  ld   $18
              9483 00f5  ld   $f5
              9484 0088  ld   $88
              9485 004c  ld   $4c
              9486 0002  ld   $02
              9487 00e1  ld   $e1
              9488 00a0  ld   $a0
              9489 0014  ld   $14
              948a 00d0  ld   $d0
              948b 00d6  ld   $d6
              948c 0020  ld   $20
              948d 0018  ld   $18
              948e 00e1  ld   $e1
              948f 00e8  ld   $e8
              9490 00b5  ld   $b5
              9491 0050  ld   $50
              9492 0085  ld   $85
              9493 00da  ld   $da
              9494 0065  ld   $65
              9495 00ce  ld   $ce
              9496 0048  ld   $48
              9497 00a8  ld   $a8
              9498 00b5  ld   $b5
              9499 0088  ld   $88
              949a 0085  ld   $85
              949b 00db  ld   $db
              949c 0065  ld   $65
              949d 00cf  ld   $cf
              949e 0048  ld   $48
              949f 00c4  ld   $c4
              94a0 00ca  ld   $ca
              94a1 00e5  ld   $e5
              94a2 00cb  ld   $cb
              94a3 00b0  ld   $b0
              94a4 00e3  ld   $e3
              94a5 00a5  ld   $a5
              94a6 00da  ld   $da
              94a7 0069  ld   $69
              94a8 00fe  ld   $fe
              94a9 0085  ld   $85
              94aa 00da  ld   $da
              94ab 00a9  ld   $a9
              94ac 00ff  ld   $ff
              94ad 00a8  ld   $a8
              94ae 0065  ld   $65
              94af 00db  ld   $db
              94b0 0085  ld   $85
              94b1 00db  ld   $db
              94b2 00c8  ld   $c8
              94b3 00b1  ld   $b1
              94b4 00da  ld   $da
              94b5 00d9  ld   $d9
              94b6 00cc  ld   $cc
              94b7 0000  ld   $00
              94b8 00d0  ld   $d0
              94b9 000f  ld   $0f
              94ba 0098  ld   $98
              94bb 00f0  ld   $f0
              94bc 00f5  ld   $f5
              94bd 0068  ld   $68
              94be 0091  ld   $91
              94bf 00da  ld   $da
              94c0 0099  ld   $99
              94c1 00cc  ld   $cc
              94c2 0000  ld   $00
              94c3 0088  ld   $88
              94c4 0010  ld   $10
              94c5 00f7  ld   $f7
              94c6 00e8  ld   $e8
              94c7 0060  ld   $60
              94c8 00ea  ld   $ea
              94c9 00a0  ld   $a0
              94ca 0080  ld   $80
              94cb 00d0  ld   $d0
              94cc 0095  ld   $95
              94cd 00a9  ld   $a9
              94ce 0000  ld   $00
              94cf 0020  ld   $20
              94d0 000a  ld   $0a
              94d1 00e7  ld   $e7
              94d2 00a0  ld   $a0
              94d3 0002  ld   $02
              94d4 0094  ld   $94
              94d5 0088  ld   $88
              94d6 0020  ld   $20
              94d7 000a  ld   $0a
              94d8 00e7  ld   $e7
              94d9 00a9  ld   $a9
              94da 00bf  ld   $bf
              94db 0020  ld   $20
              94dc 00c9  ld   $c9
              94dd 00e3  ld   $e3
              94de 00a0  ld   $a0
              94df 0000  ld   $00
              94e0 0020  ld   $20
              94e1 009e  ld   $9e
              94e2 00e2  ld   $e2
              94e3 0094  ld   $94
              94e4 0088  ld   $88
              94e5 00ea  ld   $ea
              94e6 00ea  ld   $ea
              94e7 00ea  ld   $ea
              94e8 00b5  ld   $b5
              94e9 0051  ld   $51
              94ea 0085  ld   $85
              94eb 00ce  ld   $ce
              94ec 00b5  ld   $b5
              94ed 0089  ld   $89
              94ee 0085  ld   $85
              94ef 00cf  ld   $cf
              94f0 00e8  ld   $e8
              94f1 00e8  ld   $e8
              94f2 0020  ld   $20
              94f3 00bc  ld   $bc
              94f4 00e1  ld   $e1
              94f5 00b5  ld   $b5
              94f6 004e  ld   $4e
              94f7 00d5  ld   $d5
              94f8 0086  ld   $86
              94f9 00b0  ld   $b0
              94fa 0015  ld   $15
              94fb fe00  bra  ac          ;+-----------------------------------+
              94fc fcfd  bra  $94fd       ;|                                   |
              94fd 1418  ld   $18,y       ;| Trampoline for page $9400 lookups |
              94fe e006  jmp  y,$06       ;|                                   |
              94ff c218  st   [$18]       ;+-----------------------------------+
              9500 00f6  ld   $f6
              9501 004e  ld   $4e
              9502 00a8  ld   $a8
              9503 00b1  ld   $b1
              9504 00ce  ld   $ce
              9505 00b4  ld   $b4
              9506 0050  ld   $50
              9507 00c4  ld   $c4
              9508 0044  ld   $44
              9509 0090  ld   $90
              950a 0004  ld   $04
              950b 00a0  ld   $a0
              950c 0083  ld   $83
              950d 00d0  ld   $d0
              950e 00c1  ld   $c1
              950f 0091  ld   $91
              9510 00da  ld   $da
              9511 00f6  ld   $f6
              9512 0050  ld   $50
              9513 0090  ld   $90
              9514 00e5  ld   $e5
              9515 00b4  ld   $b4
              9516 0050  ld   $50
              9517 008a  ld   $8a
              9518 0091  ld   $91
              9519 00da  ld   $da
              951a 00e8  ld   $e8
              951b 00e8  ld   $e8
              951c 0060  ld   $60
              951d 00b5  ld   $b5
              951e 0051  ld   $51
              951f 0085  ld   $85
              9520 00da  ld   $da
              9521 0038  ld   $38
              9522 00e9  ld   $e9
              9523 0002  ld   $02
              9524 0085  ld   $85
              9525 0044  ld   $44
              9526 00b5  ld   $b5
              9527 0089  ld   $89
              9528 0085  ld   $85
              9529 00db  ld   $db
              952a 00e9  ld   $e9
              952b 0000  ld   $00
              952c 0085  ld   $85
              952d 0045  ld   $45
              952e 00a0  ld   $a0
              952f 0000  ld   $00
              9530 00b1  ld   $b1
              9531 0044  ld   $44
              9532 0018  ld   $18
              9533 00e5  ld   $e5
              9534 00da  ld   $da
              9535 0085  ld   $85
              9536 0044  ld   $44
              9537 0060  ld   $60
              9538 00b5  ld   $b5
              9539 0053  ld   $53
              953a 0085  ld   $85
              953b 00ce  ld   $ce
              953c 00b5  ld   $b5
              953d 008b  ld   $8b
              953e 0085  ld   $85
              953f 00cf  ld   $cf
              9540 00b5  ld   $b5
              9541 0051  ld   $51
              9542 0085  ld   $85
              9543 00da  ld   $da
              9544 00b5  ld   $b5
              9545 0089  ld   $89
              9546 0085  ld   $85
              9547 00db  ld   $db
              9548 00e8  ld   $e8
              9549 00e8  ld   $e8
              954a 00e8  ld   $e8
              954b 00a0  ld   $a0
              954c 0000  ld   $00
              954d 0094  ld   $94
              954e 0088  ld   $88
              954f 0094  ld   $94
              9550 00a8  ld   $a8
              9551 00c8  ld   $c8
              9552 0094  ld   $94
              9553 0050  ld   $50
              9554 00b5  ld   $b5
              9555 004d  ld   $4d
              9556 00d5  ld   $d5
              9557 0085  ld   $85
              9558 0008  ld   $08
              9559 0048  ld   $48
              955a 00b5  ld   $b5
              955b 004f  ld   $4f
              955c 00d5  ld   $d5
              955d 0087  ld   $87
              955e 0090  ld   $90
              955f 0007  ld   $07
              9560 0068  ld   $68
              9561 00e2  ld   $e2
              9562 0000  ld   $00
              9563 0000  ld   $00
              9564 0028  ld   $28
              9565 00b0  ld   $b0
              9566 0002  ld   $02
              9567 0056  ld   $56
              9568 0050  ld   $50
              9569 0060  ld   $60
              956a 00a8  ld   $a8
              956b 00b1  ld   $b1
              956c 00ce  ld   $ce
              956d 0085  ld   $85
              956e 0044  ld   $44
              956f 0068  ld   $68
              9570 00a8  ld   $a8
              9571 0028  ld   $28
              9572 00b0  ld   $b0
              9573 00f3  ld   $f3
              9574 00b1  ld   $b1
              9575 00da  ld   $da
              9576 00c5  ld   $c5
              9577 0044  ld   $44
              9578 00d0  ld   $d0
              9579 00ed  ld   $ed
              957a 00f6  ld   $f6
              957b 004f  ld   $4f
              957c 00f6  ld   $f6
              957d 004d  ld   $4d
              957e 00b0  ld   $b0
              957f 00d7  ld   $d7
              9580 0020  ld   $20
              9581 00d7  ld   $d7
              9582 00e1  ld   $e1
              9583 004c  ld   $4c
              9584 0036  ld   $36
              9585 00e7  ld   $e7
              9586 0020  ld   $20
              9587 0054  ld   $54
              9588 00e2  ld   $e2
              9589 0006  ld   $06
              958a 00ce  ld   $ce
              958b 0026  ld   $26
              958c 00cf  ld   $cf
              958d 0090  ld   $90
              958e 000d  ld   $0d
              958f 0018  ld   $18
              9590 00a5  ld   $a5
              9591 0046  ld   $46
              9592 0065  ld   $65
              9593 00da  ld   $da
              9594 0085  ld   $85
              9595 0046  ld   $46
              9596 00a5  ld   $a5
              9597 0047  ld   $47
              9598 0065  ld   $65
              9599 00db  ld   $db
              959a 0085  ld   $85
              959b 0047  ld   $47
              959c 0088  ld   $88
              959d 00f0  ld   $f0
              959e 0009  ld   $09
              959f 0006  ld   $06
              95a0 0046  ld   $46
              95a1 0026  ld   $26
              95a2 0047  ld   $47
              95a3 0010  ld   $10
              95a4 00e4  ld   $e4
              95a5 004c  ld   $4c
              95a6 007e  ld   $7e
              95a7 00e7  ld   $e7
              95a8 00a5  ld   $a5
              95a9 0046  ld   $46
              95aa 0020  ld   $20
              95ab 0008  ld   $08
              95ac 00e7  ld   $e7
              95ad 00a5  ld   $a5
              95ae 0047  ld   $47
              95af 0095  ld   $95
              95b0 00a8  ld   $a8
              95b1 0006  ld   $06
              95b2 0045  ld   $45
              95b3 0090  ld   $90
              95b4 0028  ld   $28
              95b5 004c  ld   $4c
              95b6 006f  ld   $6f
              95b7 00e7  ld   $e7
              95b8 00a9  ld   $a9
              95b9 0055  ld   $55
              95ba 0085  ld   $85
              95bb 0045  ld   $45
              95bc 0020  ld   $20
              95bd 005b  ld   $5b
              95be 00e2  ld   $e2
              95bf 00a5  ld   $a5
              95c0 00ce  ld   $ce
              95c1 0085  ld   $85
              95c2 00da  ld   $da
              95c3 00a5  ld   $a5
              95c4 00cf  ld   $cf
              95c5 0085  ld   $85
              95c6 00db  ld   $db
              95c7 0020  ld   $20
              95c8 0015  ld   $15
              95c9 00e7  ld   $e7
              95ca 0084  ld   $84
              95cb 0046  ld   $46
              95cc 0084  ld   $84
              95cd 0047  ld   $47
              95ce 00a5  ld   $a5
              95cf 00cf  ld   $cf
              95d0 0010  ld   $10
              95d1 0009  ld   $09
              95d2 00ca  ld   $ca
              95d3 0006  ld   $06
              95d4 0045  ld   $45
              95d5 0020  ld   $20
              95d6 006f  ld   $6f
              95d7 00e7  ld   $e7
              95d8 0020  ld   $20
              95d9 0015  ld   $15
              95da 00e7  ld   $e7
              95db 00a0  ld   $a0
              95dc 0010  ld   $10
              95dd 0060  ld   $60
              95de 0020  ld   $20
              95df 006c  ld   $6c
              95e0 00ee  ld   $ee
              95e1 00f0  ld   $f0
              95e2 00c5  ld   $c5
              95e3 00ff  ld   $ff
              95e4 00c9  ld   $c9
              95e5 0084  ld   $84
              95e6 00d0  ld   $d0
              95e7 0002  ld   $02
              95e8 0046  ld   $46
              95e9 0078  ld   $78
              95ea 00c9  ld   $c9
              95eb 00df  ld   $df
              95ec 00f0  ld   $f0
              95ed 0011  ld   $11
              95ee 00c9  ld   $c9
              95ef 009b  ld   $9b
              95f0 00f0  ld   $f0
              95f1 0006  ld   $06
              95f2 0099  ld   $99
              95f3 0000  ld   $00
              95f4 0002  ld   $02
              95f5 00c8  ld   $c8
              95f6 0010  ld   $10
              95f7 000a  ld   $0a
              95f8 00a0  ld   $a0
              95f9 008b  ld   $8b
              95fa 0020  ld   $20
              95fb fe00  bra  ac          ;+-----------------------------------+
              95fc fcfd  bra  $95fd       ;|                                   |
              95fd 1418  ld   $18,y       ;| Trampoline for page $9500 lookups |
              95fe e006  jmp  y,$06       ;|                                   |
              95ff c218  st   [$18]       ;+-----------------------------------+
              9600 00c4  ld   $c4
              9601 00e3  ld   $e3
              9602 00a0  ld   $a0
              9603 0001  ld   $01
              9604 0088  ld   $88
              9605 0030  ld   $30
              9606 00f6  ld   $f6
              9607 0020  ld   $20
              9608 0003  ld   $03
              9609 00e0  ld   $e0
              960a 00ea  ld   $ea
              960b 00ea  ld   $ea
              960c 0020  ld   $20
              960d 00c9  ld   $c9
              960e 00e3  ld   $e3
              960f 00c9  ld   $c9
              9610 008d  ld   $8d
              9611 00d0  ld   $d0
              9612 00d6  ld   $d6
              9613 00a9  ld   $a9
              9614 00df  ld   $df
              9615 0099  ld   $99
              9616 0000  ld   $00
              9617 0002  ld   $02
              9618 0060  ld   $60
              9619 0020  ld   $20
              961a 00d3  ld   $d3
              961b 00ef  ld   $ef
              961c 0020  ld   $20
              961d 00cd  ld   $cd
              961e 00e3  ld   $e3
              961f 0046  ld   $46
              9620 00d9  ld   $d9
              9621 00a9  ld   $a9
              9622 00be  ld   $be
              9623 0020  ld   $20
              9624 00c9  ld   $c9
              9625 00e3  ld   $e3
              9626 00a0  ld   $a0
              9627 0000  ld   $00
              9628 0084  ld   $84
              9629 0082  ld   $82
              962a 0024  ld   $24
              962b 0078  ld   $78
              962c 0010  ld   $10
              962d 000c  ld   $0c
              962e 00a6  ld   $a6
              962f 0076  ld   $76
              9630 00a5  ld   $a5
              9631 0077  ld   $77
              9632 0020  ld   $20
              9633 001b  ld   $1b
              9634 00e5  ld   $e5
              9635 00a9  ld   $a9
              9636 00a0  ld   $a0
              9637 0020  ld   $20
              9638 00c9  ld   $c9
              9639 00e3  ld   $e3
              963a 00a2  ld   $a2
              963b 00ff  ld   $ff
              963c 009a  ld   $9a
              963d 0020  ld   $20
              963e 009e  ld   $9e
              963f 00e2  ld   $e2
              9640 0084  ld   $84
              9641 00e9  ld   $e9
              9642 008a  ld   $8a
              9643 0085  ld   $85
              9644 00c8  ld   $c8
              9645 00a2  ld   $a2
              9646 0018  ld   $18
              9647 0020  ld   $20
              9648 0091  ld   $91
              9649 00e4  ld   $e4
              964a 00a5  ld   $a5
              964b 00c8  ld   $c8
              964c 0069  ld   $69
              964d 0000  ld   $00
              964e 0085  ld   $85
              964f 00de  ld   $de
              9650 00a9  ld   $a9
              9651 0000  ld   $00
              9652 00aa  ld   $aa
              9653 0069  ld   $69
              9654 0002  ld   $02
              9655 0085  ld   $85
              9656 00df  ld   $df
              9657 00a1  ld   $a1
              9658 00de  ld   $de
              9659 0029  ld   $29
              965a 00f0  ld   $f0
              965b 00c9  ld   $c9
              965c 00b0  ld   $b0
              965d 00f0  ld   $f0
              965e 0003  ld   $03
              965f 004c  ld   $4c
              9660 0083  ld   $83
              9661 00e8  ld   $e8
              9662 00a0  ld   $a0
              9663 0002  ld   $02
              9664 00b1  ld   $b1
              9665 00de  ld   $de
              9666 0099  ld   $99
              9667 00cd  ld   $cd
              9668 0000  ld   $00
              9669 00e3  ld   $e3
              966a 0000  ld   $00
              966b 0000  ld   $00
              966c 0088  ld   $88
              966d 00d0  ld   $d0
              966e 00f8  ld   $f8
              966f 0020  ld   $20
              9670 008a  ld   $8a
              9671 00e3  ld   $e3
              9672 00a5  ld   $a5
              9673 00e9  ld   $e9
              9674 00e5  ld   $e5
              9675 00c8  ld   $c8
              9676 00c9  ld   $c9
              9677 0004  ld   $04
              9678 00f0  ld   $f0
              9679 00a8  ld   $a8
              967a 0091  ld   $91
              967b 00de  ld   $de
              967c 00a5  ld   $a5
              967d 00ca  ld   $ca
              967e 00f1  ld   $f1
              967f 00de  ld   $de
              9680 0085  ld   $85
              9681 0044  ld   $44
              9682 00a5  ld   $a5
              9683 00cb  ld   $cb
              9684 00e9  ld   $e9
              9685 0000  ld   $00
              9686 0085  ld   $85
              9687 0045  ld   $45
              9688 00a5  ld   $a5
              9689 0044  ld   $44
              968a 00c5  ld   $c5
              968b 00cc  ld   $cc
              968c 00a5  ld   $a5
              968d 0045  ld   $45
              968e 00e5  ld   $e5
              968f 00cd  ld   $cd
              9690 0090  ld   $90
              9691 0045  ld   $45
              9692 00a5  ld   $a5
              9693 00ca  ld   $ca
              9694 00f1  ld   $f1
              9695 00de  ld   $de
              9696 0085  ld   $85
              9697 0046  ld   $46
              9698 00a5  ld   $a5
              9699 00cb  ld   $cb
              969a 00e9  ld   $e9
              969b 0000  ld   $00
              969c 0085  ld   $85
              969d 0047  ld   $47
              969e 00b1  ld   $b1
              969f 00ca  ld   $ca
              96a0 0091  ld   $91
              96a1 0046  ld   $46
              96a2 00e6  ld   $e6
              96a3 00ca  ld   $ca
              96a4 00d0  ld   $d0
              96a5 0002  ld   $02
              96a6 00e6  ld   $e6
              96a7 00cb  ld   $cb
              96a8 00a5  ld   $a5
              96a9 0042  ld   $42
              96aa 00c5  ld   $c5
              96ab 00ca  ld   $ca
              96ac 00a5  ld   $a5
              96ad 0043  ld   $43
              96ae 00e5  ld   $e5
              96af 00cb  ld   $cb
              96b0 00b0  ld   $b0
              96b1 00e0  ld   $e0
              96b2 00b5  ld   $b5
              96b3 0044  ld   $44
              96b4 0095  ld   $95
              96b5 00ca  ld   $ca
              96b6 00ca  ld   $ca
              96b7 0010  ld   $10
              96b8 00f9  ld   $f9
              96b9 00b1  ld   $b1
              96ba 00de  ld   $de
              96bb 00a8  ld   $a8
              96bc 0088  ld   $88
              96bd 00b1  ld   $b1
              96be 00de  ld   $de
              96bf 0091  ld   $91
              96c0 0046  ld   $46
              96c1 0098  ld   $98
              96c2 00d0  ld   $d0
              96c3 00f8  ld   $f8
              96c4 0024  ld   $24
              96c5 0078  ld   $78
              96c6 0010  ld   $10
              96c7 0009  ld   $09
              96c8 00b5  ld   $b5
              96c9 0077  ld   $77
              96ca 0075  ld   $75
              96cb 0075  ld   $75
              96cc 0095  ld   $95
              96cd 0077  ld   $77
              96ce 00e8  ld   $e8
              96cf 00f0  ld   $f0
              96d0 00f7  ld   $f7
              96d1 0010  ld   $10
              96d2 007e  ld   $7e
              96d3 0000  ld   $00
              96d4 0000  ld   $00
              96d5 0000  ld   $00
              96d6 0000  ld   $00
              96d7 00a0  ld   $a0
              96d8 0014  ld   $14
              96d9 00d0  ld   $d0
              96da 0071  ld   $71
              96db 0020  ld   $20
              96dc 0015  ld   $15
              96dd 00e7  ld   $e7
              96de 00a5  ld   $a5
              96df 0042  ld   $42
              96e0 0085  ld   $85
              96e1 0046  ld   $46
              96e2 00a5  ld   $a5
              96e3 0043  ld   $43
              96e4 0085  ld   $85
              96e5 0047  ld   $47
              96e6 0020  ld   $20
              96e7 0075  ld   $75
              96e8 00e5  ld   $e5
              96e9 00a5  ld   $a5
              96ea 0042  ld   $42
              96eb 0085  ld   $85
              96ec 0044  ld   $44
              96ed 00a5  ld   $a5
              96ee 0043  ld   $43
              96ef 0085  ld   $85
              96f0 0045  ld   $45
              96f1 00d0  ld   $d0
              96f2 000e  ld   $0e
              96f3 0020  ld   $20
              96f4 0015  ld   $15
              96f5 00e7  ld   $e7
              96f6 0020  ld   $20
              96f7 006d  ld   $6d
              96f8 00e5  ld   $e5
              96f9 00a5  ld   $a5
              96fa 0046  ld   $46
              96fb fe00  bra  ac          ;+-----------------------------------+
              96fc fcfd  bra  $96fd       ;|                                   |
              96fd 1418  ld   $18,y       ;| Trampoline for page $9600 lookups |
              96fe e006  jmp  y,$06       ;|                                   |
              96ff c218  st   [$18]       ;+-----------------------------------+
              9700 0085  ld   $85
              9701 0042  ld   $42
              9702 00a5  ld   $a5
              9703 0047  ld   $47
              9704 0085  ld   $85
              9705 0043  ld   $43
              9706 00a0  ld   $a0
              9707 0000  ld   $00
              9708 00a5  ld   $a5
              9709 00ca  ld   $ca
              970a 00c5  ld   $c5
              970b 0044  ld   $44
              970c 00a5  ld   $a5
              970d 00cb  ld   $cb
              970e 00e5  ld   $e5
              970f 0045  ld   $45
              9710 00b0  ld   $b0
              9711 0016  ld   $16
              9712 00a5  ld   $a5
              9713 0044  ld   $44
              9714 00d0  ld   $d0
              9715 0002  ld   $02
              9716 00c6  ld   $c6
              9717 0045  ld   $45
              9718 00c6  ld   $c6
              9719 0044  ld   $44
              971a 00a5  ld   $a5
              971b 0046  ld   $46
              971c 00d0  ld   $d0
              971d 0002  ld   $02
              971e 00c6  ld   $c6
              971f 0047  ld   $47
              9720 00c6  ld   $c6
              9721 0046  ld   $46
              9722 00b1  ld   $b1
              9723 0044  ld   $44
              9724 0091  ld   $91
              9725 0046  ld   $46
              9726 0090  ld   $90
              9727 00e0  ld   $e0
              9728 00a5  ld   $a5
              9729 0046  ld   $46
              972a 0085  ld   $85
              972b 00ca  ld   $ca
              972c 00a5  ld   $a5
              972d 0047  ld   $47
              972e 0085  ld   $85
              972f 00cb  ld   $cb
              9730 0060  ld   $60
              9731 0020  ld   $20
              9732 00c9  ld   $c9
              9733 00e3  ld   $e3
              9734 00c8  ld   $c8
              9735 00b9  ld   $b9
              9736 0000  ld   $00
              9737 00eb  ld   $eb
              9738 0030  ld   $30
              9739 00f7  ld   $f7
              973a 00c9  ld   $c9
              973b 008d  ld   $8d
              973c 00d0  ld   $d0
              973d 0006  ld   $06
              973e 00a9  ld   $a9
              973f 0000  ld   $00
              9740 0085  ld   $85
              9741 0081  ld   $81
              9742 00a9  ld   $a9
              9743 008d  ld   $8d
              9744 00e6  ld   $e6
              9745 0081  ld   $81
              9746 004c  ld   $4c
              9747 00ef  ld   $ef
              9748 00ff  ld   $ff
              9749 00ea  ld   $ea
              974a 00ea  ld   $ea
              974b 00ea  ld   $ea
              * 6 times
              974f 00a0  ld   $a0
              9750 0006  ld   $06
              9751 0020  ld   $20
              9752 00d3  ld   $d3
              9753 00ee  ld   $ee
              9754 0024  ld   $24
              9755 00d9  ld   $d9
              9756 0030  ld   $30
              9757 0003  ld   $03
              9758 004c  ld   $4c
              9759 00b6  ld   $b6
              975a 00e2  ld   $e2
              975b 004c  ld   $4c
              975c 009a  ld   $9a
              975d 00eb  ld   $eb
              975e 002a  ld   $2a
              975f 0069  ld   $69
              9760 00a0  ld   $a0
              9761 00dd  ld   $dd
              9762 0000  ld   $00
              9763 0002  ld   $02
              9764 00d0  ld   $d0
              9765 0053  ld   $53
              9766 00b1  ld   $b1
              9767 0086  ld   $86
              9768 000a  ld   $0a
              9769 0030  ld   $30
              976a 0006  ld   $06
              976b 0088  ld   $88
              976c 00b1  ld   $b1
              976d 0086  ld   $86
              976e 0030  ld   $30
              976f 0029  ld   $29
              9770 00c8  ld   $c8
              9771 00e4  ld   $e4
              9772 0000  ld   $00
              9773 0000  ld   $00
              9774 0086  ld   $86
              9775 00c8  ld   $c8
              9776 0098  ld   $98
              9777 0048  ld   $48
              9778 00a2  ld   $a2
              9779 0000  ld   $00
              977a 00a1  ld   $a1
              977b 0086  ld   $86
              977c 00aa  ld   $aa
              977d 004a  ld   $4a
              977e 0049  ld   $49
              977f 0048  ld   $48
              9780 0011  ld   $11
              9781 0086  ld   $86
              9782 00c9  ld   $c9
              9783 00c0  ld   $c0
              9784 0090  ld   $90
              9785 0001  ld   $01
              9786 00e8  ld   $e8
              9787 00c8  ld   $c8
              9788 00d0  ld   $d0
              9789 00f3  ld   $f3
              978a 0068  ld   $68
              978b 00a8  ld   $a8
              978c 008a  ld   $8a
              978d 004c  ld   $4c
              978e 00c0  ld   $c0
              978f 00e4  ld   $e4
              9790 00e6  ld   $e6
              9791 00e9  ld   $e9
              9792 00a6  ld   $a6
              9793 00e9  ld   $e9
              9794 00f0  ld   $f0
              9795 00bc  ld   $bc
              9796 009d  ld   $9d
              9797 0000  ld   $00
              9798 0002  ld   $02
              9799 0060  ld   $60
              979a 00a6  ld   $a6
              979b 00c8  ld   $c8
              979c 00a9  ld   $a9
              979d 00a0  ld   $a0
              979e 00e8  ld   $e8
              979f 00dd  ld   $dd
              97a0 0000  ld   $00
              97a1 0002  ld   $02
              97a2 00b0  ld   $b0
              97a3 00fa  ld   $fa
              97a4 00b1  ld   $b1
              97a5 0086  ld   $86
              97a6 0029  ld   $29
              97a7 003f  ld   $3f
              97a8 004a  ld   $4a
              97a9 00d0  ld   $d0
              97aa 00b6  ld   $b6
              97ab 00bd  ld   $bd
              97ac 0000  ld   $00
              97ad 0002  ld   $02
              97ae 00b0  ld   $b0
              97af 0006  ld   $06
              97b0 0069  ld   $69
              97b1 003f  ld   $3f
              97b2 00c9  ld   $c9
              97b3 001a  ld   $1a
              97b4 0090  ld   $90
              97b5 006f  ld   $6f
              97b6 0069  ld   $69
              97b7 004f  ld   $4f
              97b8 00c9  ld   $c9
              97b9 000a  ld   $0a
              97ba 0090  ld   $90
              97bb 0069  ld   $69
              97bc 00a6  ld   $a6
              97bd 0085  ld   $85
              97be 00c8  ld   $c8
              97bf 00b1  ld   $b1
              97c0 0086  ld   $86
              97c1 0029  ld   $29
              97c2 00e0  ld   $e0
              97c3 00c9  ld   $c9
              97c4 0020  ld   $20
              97c5 00f0  ld   $f0
              97c6 007a  ld   $7a
              97c7 00b5  ld   $b5
              97c8 00b0  ld   $b0
              97c9 0085  ld   $85
              97ca 00c8  ld   $c8
              97cb 00b5  ld   $b5
              97cc 00d1  ld   $d1
              97cd 0085  ld   $85
              97ce 00e9  ld   $e9
              97cf 0088  ld   $88
              97d0 00b1  ld   $b1
              97d1 0086  ld   $86
              97d2 000a  ld   $0a
              97d3 0010  ld   $10
              97d4 00fa  ld   $fa
              97d5 0088  ld   $88
              97d6 00b0  ld   $b0
              97d7 0038  ld   $38
              97d8 000a  ld   $0a
              97d9 0030  ld   $30
              97da 0035  ld   $35
              97db 00b4  ld   $b4
              97dc 0058  ld   $58
              97dd 0084  ld   $84
              97de 0087  ld   $87
              97df 00b4  ld   $b4
              97e0 0090  ld   $90
              97e1 00e8  ld   $e8
              97e2 0010  ld   $10
              97e3 00da  ld   $da
              97e4 00f0  ld   $f0
              97e5 00b3  ld   $b3
              97e6 00c9  ld   $c9
              97e7 007e  ld   $7e
              97e8 00b0  ld   $b0
              97e9 0022  ld   $22
              97ea 00ca  ld   $ca
              97eb 0010  ld   $10
              97ec 0004  ld   $04
              97ed 00a0  ld   $a0
              97ee 0006  ld   $06
              97ef 0010  ld   $10
              97f0 0029  ld   $29
              97f1 0094  ld   $94
              97f2 0090  ld   $90
              97f3 00a4  ld   $a4
              97f4 0087  ld   $87
              97f5 0094  ld   $94
              97f6 0058  ld   $58
              97f7 00a4  ld   $a4
              97f8 00c8  ld   $c8
              97f9 0094  ld   $94
              97fa 00b0  ld   $b0
              97fb fe00  bra  ac          ;+-----------------------------------+
              97fc fcfd  bra  $97fd       ;|                                   |
              97fd 1418  ld   $18,y       ;| Trampoline for page $9700 lookups |
              97fe e006  jmp  y,$06       ;|                                   |
              97ff c218  st   [$18]       ;+-----------------------------------+
              9800 00a4  ld   $a4
              9801 00e9  ld   $e9
              9802 0094  ld   $94
              9803 00d1  ld   $d1
              9804 0029  ld   $29
              9805 001f  ld   $1f
              9806 00a8  ld   $a8
              9807 00b9  ld   $b9
              9808 0020  ld   $20
              9809 00ec  ld   $ec
              980a 000a  ld   $0a
              980b 00a8  ld   $a8
              980c 00a9  ld   $a9
              980d 0076  ld   $76
              980e 002a  ld   $2a
              980f 0085  ld   $85
              9810 0087  ld   $87
              9811 00d0  ld   $d0
              9812 0001  ld   $01
              9813 00c8  ld   $c8
              9814 00c8  ld   $c8
              9815 0086  ld   $86
              9816 0085  ld   $85
              9817 00b1  ld   $b1
              9818 0086  ld   $86
              9819 0030  ld   $30
              981a 0084  ld   $84
              981b 00d0  ld   $d0
              981c 0005  ld   $05
              981d 00a0  ld   $a0
              981e 000e  ld   $0e
              981f 004c  ld   $4c
              9820 00e0  ld   $e0
              9821 00e3  ld   $e3
              9822 00c9  ld   $c9
              9823 0003  ld   $03
              9824 00b0  ld   $b0
              9825 00c3  ld   $c3
              9826 004a  ld   $4a
              9827 00a6  ld   $a6
              9828 00c8  ld   $c8
              9829 00e8  ld   $e8
              982a 00bd  ld   $bd
              982b 0000  ld   $00
              982c 0002  ld   $02
              982d 0090  ld   $90
              982e 0004  ld   $04
              982f 00c9  ld   $c9
              9830 00a2  ld   $a2
              9831 00f0  ld   $f0
              9832 000a  ld   $0a
              9833 00c9  ld   $c9
              9834 00df  ld   $df
              9835 00f0  ld   $f0
              9836 0006  ld   $06
              9837 0086  ld   $86
              9838 00c8  ld   $c8
              9839 0020  ld   $20
              983a 001c  ld   $1c
              983b 00e4  ld   $e4
              983c 00c8  ld   $c8
              983d 0088  ld   $88
              983e 00a6  ld   $a6
              983f 0085  ld   $85
              9840 00b1  ld   $b1
              9841 0086  ld   $86
              9842 0088  ld   $88
              9843 000a  ld   $0a
              9844 0010  ld   $10
              9845 00cf  ld   $cf
              9846 00b4  ld   $b4
              9847 0058  ld   $58
              9848 0084  ld   $84
              9849 0087  ld   $87
              984a 00b4  ld   $b4
              984b 0090  ld   $90
              984c 00e8  ld   $e8
              984d 00b1  ld   $b1
              984e 0086  ld   $86
              984f 0029  ld   $29
              9850 009f  ld   $9f
              9851 00d0  ld   $d0
              9852 00ed  ld   $ed
              9853 0085  ld   $85
              9854 0072  ld   $72
              9855 0085  ld   $85
              9856 0073  ld   $73
              9857 0098  ld   $98
              9858 0048  ld   $48
              9859 0086  ld   $86
              985a 0085  ld   $85
              985b 00b4  ld   $b4
              985c 00d0  ld   $d0
              985d 0084  ld   $84
              985e 00c9  ld   $c9
              985f 0018  ld   $18
              9860 00a9  ld   $a9
              9861 000a  ld   $0a
              9862 0085  ld   $85
              9863 0079  ld   $79
              9864 00a2  ld   $a2
              9865 0000  ld   $00
              9866 00c8  ld   $c8
              9867 00b9  ld   $b9
              9868 0000  ld   $00
              9869 0002  ld   $02
              986a 0029  ld   $29
              986b 000f  ld   $0f
              986c 0065  ld   $65
              986d 0072  ld   $72
              986e 0048  ld   $48
              986f 008a  ld   $8a
              9870 0065  ld   $65
              9871 0073  ld   $73
              9872 0030  ld   $30
              9873 001c  ld   $1c
              9874 00aa  ld   $aa
              9875 0068  ld   $68
              9876 00c6  ld   $c6
              9877 0079  ld   $79
              9878 00d0  ld   $d0
              9879 00e5  ld   $e5
              987a 0000  ld   $00
              987b 0000  ld   $00
              987c 00f2  ld   $f2
              987d 0085  ld   $85
              987e 0072  ld   $72
              987f 0086  ld   $86
              9880 0073  ld   $73
              9881 00c4  ld   $c4
              9882 00e9  ld   $e9
              9883 00d0  ld   $d0
              9884 00de  ld   $de
              9885 00a4  ld   $a4
              9886 00c9  ld   $c9
              9887 00c8  ld   $c8
              9888 0084  ld   $84
              9889 00e9  ld   $e9
              988a 0020  ld   $20
              988b 001c  ld   $1c
              988c 00e4  ld   $e4
              988d 0068  ld   $68
              988e 00a8  ld   $a8
              988f 00a5  ld   $a5
              9890 0073  ld   $73
              9891 00b0  ld   $b0
              9892 00a9  ld   $a9
              9893 00a0  ld   $a0
              9894 0000  ld   $00
              9895 0010  ld   $10
              9896 008b  ld   $8b
              9897 0085  ld   $85
              9898 0073  ld   $73
              9899 0086  ld   $86
              989a 0072  ld   $72
              989b 00a2  ld   $a2
              989c 0004  ld   $04
              989d 0086  ld   $86
              989e 00c9  ld   $c9
              989f 00a9  ld   $a9
              98a0 00b0  ld   $b0
              98a1 0085  ld   $85
              98a2 0079  ld   $79
              98a3 00a5  ld   $a5
              98a4 0072  ld   $72
              98a5 00dd  ld   $dd
              98a6 0063  ld   $63
              98a7 00e5  ld   $e5
              98a8 00a5  ld   $a5
              98a9 0073  ld   $73
              98aa 00fd  ld   $fd
              98ab 0068  ld   $68
              98ac 00e5  ld   $e5
              98ad 0090  ld   $90
              98ae 000d  ld   $0d
              98af 0085  ld   $85
              98b0 0073  ld   $73
              98b1 00a5  ld   $a5
              98b2 0072  ld   $72
              98b3 00fd  ld   $fd
              98b4 0063  ld   $63
              98b5 00e5  ld   $e5
              98b6 0085  ld   $85
              98b7 0072  ld   $72
              98b8 00e6  ld   $e6
              98b9 0079  ld   $79
              98ba 00d0  ld   $d0
              98bb 00e7  ld   $e7
              98bc 00a5  ld   $a5
              98bd 0079  ld   $79
              98be 00e8  ld   $e8
              98bf 00ca  ld   $ca
              98c0 00f0  ld   $f0
              98c1 000e  ld   $0e
              98c2 00c9  ld   $c9
              98c3 00b0  ld   $b0
              98c4 00f0  ld   $f0
              98c5 0002  ld   $02
              98c6 0085  ld   $85
              98c7 00c9  ld   $c9
              98c8 0024  ld   $24
              98c9 00c9  ld   $c9
              98ca 0030  ld   $30
              98cb 0004  ld   $04
              98cc 00a5  ld   $a5
              98cd 0082  ld   $82
              98ce 00f0  ld   $f0
              98cf 000b  ld   $0b
              98d0 0020  ld   $20
              98d1 00c9  ld   $c9
              98d2 00e3  ld   $e3
              98d3 0024  ld   $24
              98d4 0078  ld   $78
              98d5 0010  ld   $10
              98d6 0004  ld   $04
              98d7 0099  ld   $99
              98d8 0000  ld   $00
              98d9 0002  ld   $02
              98da 00c8  ld   $c8
              98db 00ca  ld   $ca
              98dc 0010  ld   $10
              98dd 00c1  ld   $c1
              98de 0060  ld   $60
              98df 0001  ld   $01
              98e0 000a  ld   $0a
              98e1 0064  ld   $64
              98e2 00e8  ld   $e8
              98e3 0010  ld   $10
              98e4 0000  ld   $00
              98e5 0000  ld   $00
              98e6 0000  ld   $00
              98e7 0003  ld   $03
              98e8 0027  ld   $27
              98e9 00a5  ld   $a5
              98ea 00ca  ld   $ca
              98eb 0085  ld   $85
              98ec 0046  ld   $46
              98ed 00a5  ld   $a5
              98ee 00cb  ld   $cb
              98ef 0085  ld   $85
              98f0 0047  ld   $47
              98f1 00e8  ld   $e8
              98f2 00a5  ld   $a5
              98f3 0047  ld   $47
              98f4 0085  ld   $85
              98f5 0045  ld   $45
              98f6 00a5  ld   $a5
              98f7 0046  ld   $46
              98f8 0085  ld   $85
              98f9 0044  ld   $44
              98fa 00c5  ld   $c5
              98fb fe00  bra  ac          ;+-----------------------------------+
              98fc fcfd  bra  $98fd       ;|                                   |
              98fd 1418  ld   $18,y       ;| Trampoline for page $9800 lookups |
              98fe e006  jmp  y,$06       ;|                                   |
              98ff c218  st   [$18]       ;+-----------------------------------+
              9900 004c  ld   $4c
              9901 00a5  ld   $a5
              9902 0045  ld   $45
              9903 00e5  ld   $e5
              9904 004d  ld   $4d
              9905 00b0  ld   $b0
              9906 0026  ld   $26
              9907 00a0  ld   $a0
              9908 0001  ld   $01
              9909 00b1  ld   $b1
              990a 0044  ld   $44
              990b 00e5  ld   $e5
              990c 00ce  ld   $ce
              990d 00c8  ld   $c8
              990e 00b1  ld   $b1
              990f 0044  ld   $44
              9910 00e5  ld   $e5
              9911 00cf  ld   $cf
              9912 00b0  ld   $b0
              9913 0019  ld   $19
              9914 00a0  ld   $a0
              9915 0000  ld   $00
              9916 00a5  ld   $a5
              9917 0046  ld   $46
              9918 0071  ld   $71
              9919 0044  ld   $44
              991a 0085  ld   $85
              991b 0046  ld   $46
              991c 0090  ld   $90
              991d 0003  ld   $03
              991e 00e6  ld   $e6
              991f 0047  ld   $47
              9920 0018  ld   $18
              9921 00c8  ld   $c8
              9922 00a5  ld   $a5
              9923 00ce  ld   $ce
              9924 00f1  ld   $f1
              9925 0044  ld   $44
              9926 00c8  ld   $c8
              9927 00a5  ld   $a5
              9928 00cf  ld   $cf
              9929 00f1  ld   $f1
              992a 0044  ld   $44
              992b 00b0  ld   $b0
              992c 00ca  ld   $ca
              992d 0060  ld   $60
              992e 0046  ld   $46
              992f 0078  ld   $78
              9930 00a5  ld   $a5
              9931 004c  ld   $4c
              9932 0085  ld   $85
              9933 00ca  ld   $ca
              9934 00a5  ld   $a5
              9935 004d  ld   $4d
              9936 0085  ld   $85
              9937 00cb  ld   $cb
              9938 00a5  ld   $a5
              9939 004a  ld   $4a
              993a 0085  ld   $85
              993b 00cc  ld   $cc
              993c 00a5  ld   $a5
              993d 004b  ld   $4b
              993e 0085  ld   $85
              993f 00cd  ld   $cd
              9940 00a9  ld   $a9
              9941 0000  ld   $00
              9942 0085  ld   $85
              9943 0083  ld   $83
              9944 0085  ld   $85
              9945 0084  ld   $84
              9946 0085  ld   $85
              9947 0086  ld   $86
              9948 00a9  ld   $a9
              9949 0000  ld   $00
              994a 0085  ld   $85
              994b 001d  ld   $1d
              994c 0060  ld   $60
              994d 00a5  ld   $a5
              994e 00d0  ld   $d0
              994f 0069  ld   $69
              9950 0005  ld   $05
              9951 0085  ld   $85
              9952 00d2  ld   $d2
              9953 00a5  ld   $a5
              9954 00d1  ld   $d1
              9955 0069  ld   $69
              9956 0000  ld   $00
              9957 0085  ld   $85
              9958 00d3  ld   $d3
              9959 00a5  ld   $a5
              995a 00d2  ld   $d2
              995b 00c5  ld   $c5
              995c 00ca  ld   $ca
              995d 00a5  ld   $a5
              995e 00d3  ld   $d3
              995f 00e5  ld   $e5
              9960 00cb  ld   $cb
              9961 0090  ld   $90
              9962 0003  ld   $03
              9963 004c  ld   $4c
              9964 006b  ld   $6b
              9965 00e3  ld   $e3
              9966 00a5  ld   $a5
              9967 00ce  ld   $ce
              9968 0091  ld   $91
              9969 00d0  ld   $d0
              996a 00a5  ld   $a5
              996b 00cf  ld   $cf
              996c 00c8  ld   $c8
              996d 0091  ld   $91
              996e 00d0  ld   $d0
              996f 00a5  ld   $a5
              9970 00d2  ld   $d2
              9971 00c8  ld   $c8
              9972 0091  ld   $91
              9973 00d0  ld   $d0
              9974 00a5  ld   $a5
              9975 00d3  ld   $d3
              9976 00c8  ld   $c8
              9977 0091  ld   $91
              9978 00d0  ld   $d0
              9979 00a9  ld   $a9
              997a 0000  ld   $00
              997b 00c8  ld   $c8
              997c 0091  ld   $91
              997d 00d0  ld   $d0
              997e 00c8  ld   $c8
              997f 0091  ld   $91
              9980 00d0  ld   $d0
              9981 00e6  ld   $e6
              9982 0000  ld   $00
              9983 0000  ld   $00
              9984 00a5  ld   $a5
              9985 00d2  ld   $d2
              9986 0085  ld   $85
              9987 00cc  ld   $cc
              9988 00a5  ld   $a5
              9989 00d3  ld   $d3
              998a 0085  ld   $85
              998b 00cd  ld   $cd
              998c 00a5  ld   $a5
              998d 00d0  ld   $d0
              998e 0090  ld   $90
              998f 0043  ld   $43
              9990 0085  ld   $85
              9991 00ce  ld   $ce
              9992 0084  ld   $84
              9993 00cf  ld   $cf
              9994 0020  ld   $20
              9995 00ff  ld   $ff
              9996 00e6  ld   $e6
              9997 0030  ld   $30
              9998 000e  ld   $0e
              9999 00c9  ld   $c9
              999a 0040  ld   $40
              999b 00f0  ld   $f0
              999c 000a  ld   $0a
              999d 004c  ld   $4c
              999e 0028  ld   $28
              999f 00e6  ld   $e6
              99a0 0006  ld   $06
              99a1 00c9  ld   $c9
              99a2 0049  ld   $49
              99a3 00d0  ld   $d0
              99a4 0007  ld   $07
              99a5 00a9  ld   $a9
              99a6 0049  ld   $49
              99a7 0085  ld   $85
              99a8 00cf  ld   $cf
              99a9 0020  ld   $20
              99aa 00ff  ld   $ff
              99ab 00e6  ld   $e6
              99ac 00a5  ld   $a5
              99ad 004b  ld   $4b
              99ae 0085  ld   $85
              99af 00d1  ld   $d1
              99b0 00a5  ld   $a5
              99b1 004a  ld   $4a
              99b2 0085  ld   $85
              99b3 00d0  ld   $d0
              99b4 00c5  ld   $c5
              99b5 00cc  ld   $cc
              99b6 00a5  ld   $a5
              99b7 00d1  ld   $d1
              99b8 00e5  ld   $e5
              99b9 00cd  ld   $cd
              99ba 00b0  ld   $b0
              99bb 0094  ld   $94
              99bc 00b1  ld   $b1
              99bd 00d0  ld   $d0
              99be 00c8  ld   $c8
              99bf 00c5  ld   $c5
              99c0 00ce  ld   $ce
              99c1 00d0  ld   $d0
              99c2 0006  ld   $06
              99c3 00b1  ld   $b1
              99c4 00d0  ld   $d0
              99c5 00c5  ld   $c5
              99c6 00cf  ld   $cf
              99c7 00f0  ld   $f0
              99c8 000e  ld   $0e
              99c9 00c8  ld   $c8
              99ca 00b1  ld   $b1
              99cb 00d0  ld   $d0
              99cc 0048  ld   $48
              99cd 00c8  ld   $c8
              99ce 00b1  ld   $b1
              99cf 00d0  ld   $d0
              99d0 0085  ld   $85
              99d1 00d1  ld   $d1
              99d2 0068  ld   $68
              99d3 00a0  ld   $a0
              99d4 0000  ld   $00
              99d5 00f0  ld   $f0
              99d6 00db  ld   $db
              99d7 00a5  ld   $a5
              99d8 00d0  ld   $d0
              99d9 0069  ld   $69
              99da 0003  ld   $03
              99db 0020  ld   $20
              99dc 000a  ld   $0a
              99dd 00e7  ld   $e7
              99de 00a5  ld   $a5
              99df 00d1  ld   $d1
              99e0 0069  ld   $69
              99e1 0000  ld   $00
              99e2 0095  ld   $95
              99e3 0088  ld   $88
              99e4 00a5  ld   $a5
              99e5 00cf  ld   $cf
              99e6 00c9  ld   $c9
              99e7 0040  ld   $40
              99e8 00d0  ld   $d0
              99e9 001c  ld   $1c
              99ea 0088  ld   $88
              99eb 0098  ld   $98
              99ec 0020  ld   $20
              99ed 000a  ld   $0a
              99ee 00e7  ld   $e7
              99ef 0088  ld   $88
              99f0 0094  ld   $94
              99f1 0088  ld   $88
              99f2 00a0  ld   $a0
              99f3 0003  ld   $03
              99f4 00f6  ld   $f6
              99f5 0088  ld   $88
              99f6 00c8  ld   $c8
              99f7 00b1  ld   $b1
              99f8 00d0  ld   $d0
              99f9 0030  ld   $30
              99fa 00f9  ld   $f9
              99fb fe00  bra  ac          ;+-----------------------------------+
              99fc fcfd  bra  $99fd       ;|                                   |
              99fd 1418  ld   $18,y       ;| Trampoline for page $9900 lookups |
              99fe e006  jmp  y,$06       ;|                                   |
              99ff c218  st   [$18]       ;+-----------------------------------+
              9a00 0010  ld   $10
              9a01 0009  ld   $09
              9a02 00a9  ld   $a9
              9a03 0000  ld   $00
              9a04 0085  ld   $85
              9a05 00d4  ld   $d4
              9a06 0085  ld   $85
              9a07 00d5  ld   $d5
              9a08 00a2  ld   $a2
              9a09 0018  ld   $18
              9a0a 0048  ld   $48
              9a0b 00a0  ld   $a0
              9a0c 0000  ld   $00
              9a0d 00b1  ld   $b1
              9a0e 00de  ld   $de
              9a0f 0010  ld   $10
              9a10 0018  ld   $18
              9a11 000a  ld   $0a
              9a12 0030  ld   $30
              9a13 0081  ld   $81
              9a14 0020  ld   $20
              9a15 00ff  ld   $ff
              9a16 00e6  ld   $e6
              9a17 0020  ld   $20
              9a18 0008  ld   $08
              9a19 00e7  ld   $e7
              9a1a 0020  ld   $20
              9a1b 00ff  ld   $ff
              9a1c 00e6  ld   $e6
              9a1d 0095  ld   $95
              9a1e 00a8  ld   $a8
              9a1f 0024  ld   $24
              9a20 00d4  ld   $d4
              9a21 0010  ld   $10
              9a22 0001  ld   $01
              9a23 00ca  ld   $ca
              9a24 0020  ld   $20
              9a25 00ff  ld   $ff
              9a26 00e6  ld   $e6
              9a27 00b0  ld   $b0
              9a28 00e6  ld   $e6
              9a29 00c9  ld   $c9
              9a2a 0028  ld   $28
              9a2b 00d0  ld   $d0
              9a2c 001f  ld   $1f
              9a2d 00a5  ld   $a5
              9a2e 00de  ld   $de
              9a2f 0020  ld   $20
              9a30 000a  ld   $0a
              9a31 00e7  ld   $e7
              9a32 00a5  ld   $a5
              9a33 00df  ld   $df
              9a34 0095  ld   $95
              9a35 0088  ld   $88
              9a36 0024  ld   $24
              9a37 00d4  ld   $d4
              9a38 0030  ld   $30
              9a39 000b  ld   $0b
              9a3a 00a9  ld   $a9
              9a3b 0001  ld   $01
              9a3c 0020  ld   $20
              9a3d 000a  ld   $0a
              9a3e 00e7  ld   $e7
              9a3f 00a9  ld   $a9
              9a40 0000  ld   $00
              9a41 0095  ld   $95
              9a42 0088  ld   $88
              9a43 00f6  ld   $f6
              9a44 0088  ld   $88
              9a45 0020  ld   $20
              9a46 00ff  ld   $ff
              9a47 00e6  ld   $e6
              9a48 0030  ld   $30
              9a49 00f9  ld   $f9
              9a4a 00b0  ld   $b0
              9a4b 00d3  ld   $d3
              9a4c 0024  ld   $24
              9a4d 00d4  ld   $d4
              9a4e 0010  ld   $10
              9a4f 0006  ld   $06
              9a50 00c9  ld   $c9
              9a51 0004  ld   $04
              9a52 00b0  ld   $b0
              9a53 00d0  ld   $d0
              9a54 0046  ld   $46
              9a55 00d4  ld   $d4
              9a56 00a8  ld   $a8
              9a57 0085  ld   $85
              9a58 00d6  ld   $d6
              9a59 00b9  ld   $b9
              9a5a 0098  ld   $98
              9a5b 00e9  ld   $e9
              9a5c 0029  ld   $29
              9a5d 0055  ld   $55
              9a5e 000a  ld   $0a
              9a5f 0085  ld   $85
              9a60 00d7  ld   $d7
              9a61 0068  ld   $68
              9a62 00a8  ld   $a8
              9a63 00b9  ld   $b9
              9a64 0098  ld   $98
              9a65 00e9  ld   $e9
              9a66 0029  ld   $29
              9a67 00aa  ld   $aa
              9a68 00c5  ld   $c5
              9a69 00d7  ld   $d7
              9a6a 00b0  ld   $b0
              9a6b 0009  ld   $09
              9a6c 0098  ld   $98
              9a6d 0048  ld   $48
              9a6e 0020  ld   $20
              9a6f 00ff  ld   $ff
              9a70 00e6  ld   $e6
              9a71 00a5  ld   $a5
              9a72 00d6  ld   $d6
              9a73 0090  ld   $90
              9a74 0095  ld   $95
              9a75 00b9  ld   $b9
              9a76 0010  ld   $10
              9a77 00ea  ld   $ea
              9a78 0085  ld   $85
              9a79 00ce  ld   $ce
              9a7a 00b9  ld   $b9
              9a7b 0088  ld   $88
              9a7c 00ea  ld   $ea
              9a7d 0085  ld   $85
              9a7e 00cf  ld   $cf
              9a7f 0020  ld   $20
              9a80 00fc  ld   $fc
              9a81 00e6  ld   $e6
              9a82 004c  ld   $4c
              9a83 00d8  ld   $d8
              9a84 00e6  ld   $e6
              9a85 006c  ld   $6c
              9a86 00ce  ld   $ce
              9a87 0000  ld   $00
              9a88 00e6  ld   $e6
              9a89 00e7  ld   $e7
              9a8a 0000  ld   $00
              9a8b 0000  ld   $00
              9a8c 00de  ld   $de
              9a8d 00d0  ld   $d0
              9a8e 0002  ld   $02
              9a8f 00e6  ld   $e6
              9a90 00df  ld   $df
              9a91 00b1  ld   $b1
              9a92 00de  ld   $de
              9a93 0060  ld   $60
              9a94 0094  ld   $94
              9a95 0087  ld   $87
              9a96 00ca  ld   $ca
              9a97 0030  ld   $30
              9a98 0003  ld   $03
              9a99 0095  ld   $95
              9a9a 0050  ld   $50
              9a9b 0060  ld   $60
              9a9c 00a0  ld   $a0
              9a9d 0066  ld   $66
              9a9e 004c  ld   $4c
              9a9f 00e0  ld   $e0
              9aa0 00e3  ld   $e3
              9aa1 00a0  ld   $a0
              9aa2 0000  ld   $00
              9aa3 00b5  ld   $b5
              9aa4 0050  ld   $50
              9aa5 0085  ld   $85
              9aa6 00ce  ld   $ce
              9aa7 00b5  ld   $b5
              9aa8 00a8  ld   $a8
              9aa9 0085  ld   $85
              9aaa 00cf  ld   $cf
              9aab 00b5  ld   $b5
              9aac 0088  ld   $88
              9aad 00f0  ld   $f0
              9aae 000e  ld   $0e
              9aaf 0085  ld   $85
              9ab0 00cf  ld   $cf
              9ab1 00b1  ld   $b1
              9ab2 00ce  ld   $ce
              9ab3 0048  ld   $48
              9ab4 00c8  ld   $c8
              9ab5 00b1  ld   $b1
              9ab6 00ce  ld   $ce
              9ab7 0085  ld   $85
              9ab8 00cf  ld   $cf
              9ab9 0068  ld   $68
              9aba 0085  ld   $85
              9abb 00ce  ld   $ce
              9abc 0088  ld   $88
              9abd 00e8  ld   $e8
              9abe 0060  ld   $60
              9abf 0020  ld   $20
              9ac0 004a  ld   $4a
              9ac1 00e7  ld   $e7
              9ac2 0020  ld   $20
              9ac3 0015  ld   $15
              9ac4 00e7  ld   $e7
              9ac5 0098  ld   $98
              9ac6 0020  ld   $20
              9ac7 0008  ld   $08
              9ac8 00e7  ld   $e7
              9ac9 0095  ld   $95
              9aca 00a8  ld   $a8
              9acb 00c5  ld   $c5
              9acc 00ce  ld   $ce
              9acd 00d0  ld   $d0
              9ace 0006  ld   $06
              9acf 00c5  ld   $c5
              9ad0 00cf  ld   $cf
              9ad1 00d0  ld   $d0
              9ad2 0002  ld   $02
              9ad3 00f6  ld   $f6
              9ad4 0050  ld   $50
              9ad5 0060  ld   $60
              9ad6 0020  ld   $20
              9ad7 0082  ld   $82
              9ad8 00e7  ld   $e7
              9ad9 0020  ld   $20
              9ada 0059  ld   $59
              9adb 00e7  ld   $e7
              9adc 0020  ld   $20
              9add 0015  ld   $15
              9ade 00e7  ld   $e7
              9adf 0024  ld   $24
              9ae0 00cf  ld   $cf
              9ae1 0030  ld   $30
              9ae2 001b  ld   $1b
              9ae3 00ca  ld   $ca
              9ae4 0060  ld   $60
              9ae5 0020  ld   $20
              9ae6 0015  ld   $15
              9ae7 00e7  ld   $e7
              9ae8 00a5  ld   $a5
              9ae9 00cf  ld   $cf
              9aea 00d0  ld   $d0
              9aeb 0004  ld   $04
              9aec 00a5  ld   $a5
              9aed 00ce  ld   $ce
              9aee 00f0  ld   $f0
              9aef 00f3  ld   $f3
              9af0 00a9  ld   $a9
              9af1 00ff  ld   $ff
              9af2 0020  ld   $20
              9af3 0008  ld   $08
              9af4 00e7  ld   $e7
              9af5 0095  ld   $95
              9af6 00a8  ld   $a8
              9af7 0024  ld   $24
              9af8 00cf  ld   $cf
              9af9 0030  ld   $30
              9afa 00e9  ld   $e9
              9afb fe00  bra  ac          ;+-----------------------------------+
              9afc fcfd  bra  $9afd       ;|                                   |
              9afd 1418  ld   $18,y       ;| Trampoline for page $9a00 lookups |
              9afe e006  jmp  y,$06       ;|                                   |
              9aff c218  st   [$18]       ;+-----------------------------------+
              9b00 0020  ld   $20
              9b01 0015  ld   $15
              9b02 00e7  ld   $e7
              9b03 0098  ld   $98
              9b04 0038  ld   $38
              9b05 00e5  ld   $e5
              9b06 00ce  ld   $ce
              9b07 0020  ld   $20
              9b08 0008  ld   $08
              9b09 00e7  ld   $e7
              9b0a 0098  ld   $98
              9b0b 00e5  ld   $e5
              9b0c 00cf  ld   $cf
              9b0d 0050  ld   $50
              9b0e 0023  ld   $23
              9b0f 00a0  ld   $a0
              9b10 0000  ld   $00
              9b11 0010  ld   $10
              9b12 0090  ld   $90
              9b13 0020  ld   $20
              9b14 006f  ld   $6f
              9b15 00e7  ld   $e7
              9b16 0020  ld   $20
              9b17 0015  ld   $15
              9b18 00e7  ld   $e7
              9b19 00a5  ld   $a5
              9b1a 00ce  ld   $ce
              9b1b 0085  ld   $85
              9b1c 00da  ld   $da
              9b1d 00a5  ld   $a5
              9b1e 00cf  ld   $cf
              9b1f 0085  ld   $85
              9b20 00db  ld   $db
              9b21 0020  ld   $20
              9b22 0015  ld   $15
              9b23 00e7  ld   $e7
              9b24 0018  ld   $18
              9b25 00a5  ld   $a5
              9b26 00ce  ld   $ce
              9b27 0065  ld   $65
              9b28 00da  ld   $da
              9b29 0020  ld   $20
              9b2a 0008  ld   $08
              9b2b 00e7  ld   $e7
              9b2c 00a5  ld   $a5
              9b2d 00cf  ld   $cf
              9b2e 0065  ld   $65
              9b2f 00db  ld   $db
              9b30 0070  ld   $70
              9b31 00dd  ld   $dd
              9b32 0095  ld   $95
              9b33 00a8  ld   $a8
              9b34 0060  ld   $60
              9b35 0020  ld   $20
              9b36 0015  ld   $15
              9b37 00e7  ld   $e7
              9b38 00a4  ld   $a4
              9b39 00ce  ld   $ce
              9b3a 00f0  ld   $f0
              9b3b 0005  ld   $05
              9b3c 0088  ld   $88
              9b3d 00a5  ld   $a5
              9b3e 00cf  ld   $cf
              9b3f 00f0  ld   $f0
              9b40 000c  ld   $0c
              9b41 0060  ld   $60
              9b42 00a5  ld   $a5
              9b43 0081  ld   $81
              9b44 0009  ld   $09
              9b45 0007  ld   $07
              9b46 00a8  ld   $a8
              9b47 00c8  ld   $c8
              9b48 00a9  ld   $a9
              9b49 00a0  ld   $a0
              9b4a 0020  ld   $20
              9b4b 00c9  ld   $c9
              9b4c 00e3  ld   $e3
              9b4d 00c4  ld   $c4
              9b4e 0081  ld   $81
              9b4f 00b0  ld   $b0
              9b50 00f7  ld   $f7
              9b51 0060  ld   $60
              9b52 0020  ld   $20
              9b53 00b1  ld   $b1
              9b54 00e7  ld   $e7
              9b55 0020  ld   $20
              9b56 0015  ld   $15
              9b57 00e7  ld   $e7
              9b58 00a5  ld   $a5
              9b59 00cf  ld   $cf
              9b5a 0010  ld   $10
              9b5b 000a  ld   $0a
              9b5c 00a9  ld   $a9
              9b5d 00ad  ld   $ad
              9b5e 0020  ld   $20
              9b5f 00c9  ld   $c9
              9b60 00e3  ld   $e3
              9b61 0020  ld   $20
              9b62 0072  ld   $72
              9b63 00e7  ld   $e7
              9b64 0050  ld   $50
              9b65 00ef  ld   $ef
              9b66 0088  ld   $88
              9b67 0084  ld   $84
              9b68 00d5  ld   $d5
              9b69 0086  ld   $86
              9b6a 00cf  ld   $cf
              9b6b 00a6  ld   $a6
              9b6c 00ce  ld   $ce
              9b6d 0020  ld   $20
              9b6e 001b  ld   $1b
              9b6f 00e5  ld   $e5
              9b70 00a6  ld   $a6
              9b71 00cf  ld   $cf
              9b72 0060  ld   $60
              9b73 0020  ld   $20
              9b74 0015  ld   $15
              9b75 00e7  ld   $e7
              9b76 00a5  ld   $a5
              9b77 00ce  ld   $ce
              9b78 0085  ld   $85
              9b79 0076  ld   $76
              9b7a 00a5  ld   $a5
              9b7b 00cf  ld   $cf
              9b7c 0085  ld   $85
              9b7d 0077  ld   $77
              9b7e 0088  ld   $88
              9b7f 0084  ld   $84
              9b80 0078  ld   $78
              9b81 00c8  ld   $c8
              9b82 00a9  ld   $a9
              9b83 000a  ld   $0a
              9b84 0085  ld   $85
              9b85 0074  ld   $74
              9b86 0084  ld   $84
              9b87 0075  ld   $75
              9b88 0060  ld   $60
              9b89 0020  ld   $20
              9b8a 0015  ld   $15
              9b8b 00e7  ld   $e7
              9b8c 00a5  ld   $a5
              9b8d 00ce  ld   $ce
              9b8e 00a4  ld   $a4
              9b8f 00cf  ld   $cf
              9b90 0010  ld   $10
              9b91 00e8  ld   $e8
              9b92 0000  ld   $00
              9b93 0000  ld   $00
              9b94 00f2  ld   $f2
              9b95 0020  ld   $20
              9b96 0015  ld   $15
              9b97 00e7  ld   $e7
              9b98 00b5  ld   $b5
              9b99 0050  ld   $50
              9b9a 0085  ld   $85
              9b9b 00da  ld   $da
              9b9c 00b5  ld   $b5
              9b9d 0088  ld   $88
              9b9e 0085  ld   $85
              9b9f 00db  ld   $db
              9ba0 00a5  ld   $a5
              9ba1 00ce  ld   $ce
              9ba2 0091  ld   $91
              9ba3 00da  ld   $da
              9ba4 00c8  ld   $c8
              9ba5 00a5  ld   $a5
              9ba6 00cf  ld   $cf
              9ba7 0091  ld   $91
              9ba8 00da  ld   $da
              9ba9 00e8  ld   $e8
              9baa 0060  ld   $60
              9bab 0068  ld   $68
              9bac 0068  ld   $68
              9bad 0024  ld   $24
              9bae 00d5  ld   $d5
              9baf 0010  ld   $10
              9bb0 0005  ld   $05
              9bb1 0020  ld   $20
              9bb2 00cd  ld   $cd
              9bb3 00e3  ld   $e3
              9bb4 0046  ld   $46
              9bb5 00d5  ld   $d5
              9bb6 0060  ld   $60
              9bb7 00a0  ld   $a0
              9bb8 00ff  ld   $ff
              9bb9 0084  ld   $84
              9bba 00d7  ld   $d7
              9bbb 0060  ld   $60
              9bbc 0020  ld   $20
              9bbd 00cd  ld   $cd
              9bbe 00ef  ld   $ef
              9bbf 00f0  ld   $f0
              9bc0 0007  ld   $07
              9bc1 00a9  ld   $a9
              9bc2 0025  ld   $25
              9bc3 0085  ld   $85
              9bc4 00d6  ld   $d6
              9bc5 0088  ld   $88
              9bc6 0084  ld   $84
              9bc7 00d4  ld   $d4
              9bc8 00e8  ld   $e8
              9bc9 0060  ld   $60
              9bca 00a5  ld   $a5
              9bcb 00ca  ld   $ca
              9bcc 00a4  ld   $a4
              9bcd 00cb  ld   $cb
              9bce 00d0  ld   $d0
              9bcf 005a  ld   $5a
              9bd0 00a0  ld   $a0
              9bd1 0041  ld   $41
              9bd2 00a5  ld   $a5
              9bd3 0084  ld   $84
              9bd4 00c9  ld   $c9
              9bd5 0008  ld   $08
              9bd6 00b0  ld   $b0
              9bd7 005e  ld   $5e
              9bd8 00a8  ld   $a8
              9bd9 00e6  ld   $e6
              9bda 0084  ld   $84
              9bdb 00a5  ld   $a5
              9bdc 00de  ld   $de
              9bdd 0099  ld   $99
              9bde 0000  ld   $00
              9bdf 0011  ld   $11
              9be0 00a5  ld   $a5
              9be1 00df  ld   $df
              9be2 0099  ld   $99
              9be3 0008  ld   $08
              9be4 0011  ld   $11
              9be5 00a5  ld   $a5
              9be6 00dc  ld   $dc
              9be7 0099  ld   $99
              9be8 0010  ld   $10
              9be9 0011  ld   $11
              9bea 00a5  ld   $a5
              9beb 00dd  ld   $dd
              9bec 0099  ld   $99
              9bed 0018  ld   $18
              9bee 0011  ld   $11
              9bef 0020  ld   $20
              9bf0 0015  ld   $15
              9bf1 00e7  ld   $e7
              9bf2 0020  ld   $20
              9bf3 006d  ld   $6d
              9bf4 00e5  ld   $e5
              9bf5 0090  ld   $90
              9bf6 0004  ld   $04
              9bf7 00a0  ld   $a0
              9bf8 0037  ld   $37
              9bf9 00d0  ld   $d0
              9bfa 003b  ld   $3b
              9bfb fe00  bra  ac          ;+-----------------------------------+
              9bfc fcfd  bra  $9bfd       ;|                                   |
              9bfd 1418  ld   $18,y       ;| Trampoline for page $9b00 lookups |
              9bfe e006  jmp  y,$06       ;|                                   |
              9bff c218  st   [$18]       ;+-----------------------------------+
              9c00 00a5  ld   $a5
              9c01 0044  ld   $44
              9c02 00a4  ld   $a4
              9c03 0045  ld   $45
              9c04 0085  ld   $85
              9c05 00dc  ld   $dc
              9c06 0084  ld   $84
              9c07 00dd  ld   $dd
              9c08 002c  ld   $2c
              9c09 0011  ld   $11
              9c0a 00d0  ld   $d0
              9c0b 0030  ld   $30
              9c0c 004f  ld   $4f
              9c0d 0018  ld   $18
              9c0e 0069  ld   $69
              9c0f 0003  ld   $03
              9c10 0090  ld   $90
              9c11 0001  ld   $01
              9c12 00c8  ld   $c8
              9c13 00a2  ld   $a2
              9c14 00ff  ld   $ff
              9c15 0086  ld   $86
              9c16 00d9  ld   $d9
              9c17 009a  ld   $9a
              9c18 0085  ld   $85
              9c19 00de  ld   $de
              9c1a 0084  ld   $84
              9c1b 00df  ld   $df
              9c1c 0020  ld   $20
              9c1d 0079  ld   $79
              9c1e 00e6  ld   $e6
              9c1f 0024  ld   $24
              9c20 00d9  ld   $d9
              9c21 0010  ld   $10
              9c22 0049  ld   $49
              9c23 0018  ld   $18
              9c24 00a0  ld   $a0
              9c25 0000  ld   $00
              9c26 00a5  ld   $a5
              9c27 00dc  ld   $dc
              9c28 0071  ld   $71
              9c29 00dc  ld   $dc
              9c2a 00a4  ld   $a4
              9c2b 00dd  ld   $dd
              9c2c 0090  ld   $90
              9c2d 0001  ld   $01
              9c2e 00c8  ld   $c8
              9c2f 00c5  ld   $c5
              9c30 004c  ld   $4c
              9c31 00d0  ld   $d0
              9c32 00d1  ld   $d1
              9c33 00c4  ld   $c4
              9c34 004d  ld   $4d
              9c35 00d0  ld   $d0
              9c36 00cd  ld   $cd
              9c37 00a0  ld   $a0
              9c38 0034  ld   $34
              9c39 0046  ld   $46
              9c3a 00d9  ld   $d9
              9c3b 004c  ld   $4c
              9c3c 00e0  ld   $e0
              9c3d 00e3  ld   $e3
              9c3e 00a0  ld   $a0
              9c3f 004a  ld   $4a
              9c40 00a5  ld   $a5
              9c41 0084  ld   $84
              9c42 00f0  ld   $f0
              9c43 00f7  ld   $f7
              9c44 00c6  ld   $c6
              9c45 0084  ld   $84
              9c46 00a8  ld   $a8
              9c47 00b9  ld   $b9
              9c48 000f  ld   $0f
              9c49 0011  ld   $11
              9c4a 0085  ld   $85
              9c4b 00dc  ld   $dc
              9c4c 00b9  ld   $b9
              9c4d 0017  ld   $17
              9c4e 0011  ld   $11
              9c4f 0085  ld   $85
              9c50 00dd  ld   $dd
              9c51 00be  ld   $be
              9c52 0087  ld   $87
              9c53 0000  ld   $00
              9c54 00b9  ld   $b9
              9c55 0007  ld   $07
              9c56 0011  ld   $11
              9c57 00a8  ld   $a8
              9c58 008a  ld   $8a
              9c59 004c  ld   $4c
              9c5a 007a  ld   $7a
              9c5b 00e8  ld   $e8
              9c5c 00a0  ld   $a0
              9c5d 0063  ld   $63
              9c5e 0020  ld   $20
              9c5f 00c4  ld   $c4
              9c60 00e3  ld   $e3
              9c61 00a0  ld   $a0
              9c62 0001  ld   $01
              9c63 00b1  ld   $b1
              9c64 00dc  ld   $dc
              9c65 00aa  ld   $aa
              9c66 00c8  ld   $c8
              9c67 00b1  ld   $b1
              9c68 00dc  ld   $dc
              9c69 0020  ld   $20
              9c6a 001b  ld   $1b
              9c6b 00e5  ld   $e5
              9c6c 004c  ld   $4c
              9c6d 00b3  ld   $b3
              9c6e 00e2  ld   $e2
              9c6f 00c6  ld   $c6
              9c70 0083  ld   $83
              9c71 00a0  ld   $a0
              9c72 005b  ld   $5b
              9c73 00a5  ld   $a5
              9c74 0083  ld   $83
              9c75 00f0  ld   $f0
              9c76 00c4  ld   $c4
              9c77 00a8  ld   $a8
              9c78 00b5  ld   $b5
              9c79 0050  ld   $50
              9c7a 00d9  ld   $d9
              9c7b 00ff  ld   $ff
              9c7c 0011  ld   $11
              9c7d 00d0  ld   $d0
              9c7e 00f0  ld   $f0
              9c7f 00b5  ld   $b5
              9c80 0088  ld   $88
              9c81 00d9  ld   $d9
              9c82 0007  ld   $07
              9c83 0012  ld   $12
              9c84 00d0  ld   $d0
              9c85 00e9  ld   $e9
              9c86 00b9  ld   $b9
              9c87 000f  ld   $0f
              9c88 0012  ld   $12
              9c89 0085  ld   $85
              9c8a 00da  ld   $da
              9c8b 00b9  ld   $b9
              9c8c 0017  ld   $17
              9c8d 0012  ld   $12
              9c8e 0085  ld   $85
              9c8f 00db  ld   $db
              9c90 0020  ld   $20
              9c91 0015  ld   $15
              9c92 00e7  ld   $e7
              9c93 00ca  ld   $ca
              9c94 0020  ld   $20
              9c95 0093  ld   $93
              9c96 00e7  ld   $e7
              9c97 0020  ld   $20
              9c98 0001  ld   $01
              9c99 00e9  ld   $e9
              9c9a 0000  ld   $00
              9c9b 0000  ld   $00
              9c9c 00e8  ld   $e8
              9c9d 00ca  ld   $ca
              9c9e 00a4  ld   $a4
              9c9f 0083  ld   $83
              9ca0 00b9  ld   $b9
              9ca1 0047  ld   $47
              9ca2 0012  ld   $12
              9ca3 0095  ld   $95
              9ca4 00a7  ld   $a7
              9ca5 00b9  ld   $b9
              9ca6 003f  ld   $3f
              9ca7 0012  ld   $12
              9ca8 00a0  ld   $a0
              9ca9 0000  ld   $00
              9caa 0020  ld   $20
              9cab 0008  ld   $08
              9cac 00e7  ld   $e7
              9cad 0020  ld   $20
              9cae 0082  ld   $82
              9caf 00e7  ld   $e7
              9cb0 0020  ld   $20
              9cb1 0059  ld   $59
              9cb2 00e7  ld   $e7
              9cb3 0020  ld   $20
              9cb4 0015  ld   $15
              9cb5 00e7  ld   $e7
              9cb6 00a4  ld   $a4
              9cb7 0083  ld   $83
              9cb8 00a5  ld   $a5
              9cb9 00ce  ld   $ce
              9cba 00f0  ld   $f0
              9cbb 0005  ld   $05
              9cbc 0059  ld   $59
              9cbd 0017  ld   $17
              9cbe 0012  ld   $12
              9cbf 0010  ld   $10
              9cc0 0012  ld   $12
              9cc1 00b9  ld   $b9
              9cc2 001f  ld   $1f
              9cc3 0012  ld   $12
              9cc4 0085  ld   $85
              9cc5 00dc  ld   $dc
              9cc6 00b9  ld   $b9
              9cc7 0027  ld   $27
              9cc8 0012  ld   $12
              9cc9 0085  ld   $85
              9cca 00dd  ld   $dd
              9ccb 00be  ld   $be
              9ccc 002f  ld   $2f
              9ccd 0012  ld   $12
              9cce 00b9  ld   $b9
              9ccf 0037  ld   $37
              9cd0 0012  ld   $12
              9cd1 00d0  ld   $d0
              9cd2 0087  ld   $87
              9cd3 00c6  ld   $c6
              9cd4 0083  ld   $83
              9cd5 0060  ld   $60
              9cd6 00a0  ld   $a0
              9cd7 0054  ld   $54
              9cd8 00a5  ld   $a5
              9cd9 0083  ld   $83
              9cda 00c9  ld   $c9
              9cdb 0008  ld   $08
              9cdc 00f0  ld   $f0
              9cdd 009a  ld   $9a
              9cde 00e6  ld   $e6
              9cdf 0083  ld   $83
              9ce0 00a8  ld   $a8
              9ce1 00b5  ld   $b5
              9ce2 0050  ld   $50
              9ce3 0099  ld   $99
              9ce4 0000  ld   $00
              9ce5 0012  ld   $12
              9ce6 00b5  ld   $b5
              9ce7 0088  ld   $88
              9ce8 0099  ld   $99
              9ce9 0008  ld   $08
              9cea 0012  ld   $12
              9ceb 0060  ld   $60
              9cec 0020  ld   $20
              9ced 0015  ld   $15
              9cee 00e7  ld   $e7
              9cef 00a4  ld   $a4
              9cf0 0083  ld   $83
              9cf1 00a5  ld   $a5
              9cf2 00ce  ld   $ce
              9cf3 0099  ld   $99
              9cf4 003f  ld   $3f
              9cf5 0012  ld   $12
              9cf6 00a5  ld   $a5
              9cf7 00cf  ld   $cf
              9cf8 0099  ld   $99
              9cf9 0047  ld   $47
              9cfa 0012  ld   $12
              9cfb fe00  bra  ac          ;+-----------------------------------+
              9cfc fcfd  bra  $9cfd       ;|                                   |
              9cfd 1418  ld   $18,y       ;| Trampoline for page $9c00 lookups |
              9cfe e006  jmp  y,$06       ;|                                   |
              9cff c218  st   [$18]       ;+-----------------------------------+
              9d00 00a9  ld   $a9
              9d01 0001  ld   $01
              9d02 0099  ld   $99
              9d03 000f  ld   $0f
              9d04 0012  ld   $12
              9d05 00a9  ld   $a9
              9d06 0000  ld   $00
              9d07 0099  ld   $99
              9d08 0017  ld   $17
              9d09 0012  ld   $12
              9d0a 00a5  ld   $a5
              9d0b 00dc  ld   $dc
              9d0c 0099  ld   $99
              9d0d 001f  ld   $1f
              9d0e 0012  ld   $12
              9d0f 00a5  ld   $a5
              9d10 00dd  ld   $dd
              9d11 0099  ld   $99
              9d12 0027  ld   $27
              9d13 0012  ld   $12
              9d14 00a5  ld   $a5
              9d15 00de  ld   $de
              9d16 0099  ld   $99
              9d17 002f  ld   $2f
              9d18 0012  ld   $12
              9d19 00a5  ld   $a5
              9d1a 00df  ld   $df
              9d1b 0099  ld   $99
              9d1c 0037  ld   $37
              9d1d 0012  ld   $12
              9d1e 0060  ld   $60
              9d1f 0020  ld   $20
              9d20 0015  ld   $15
              9d21 00e7  ld   $e7
              9d22 00a4  ld   $a4
              9d23 0083  ld   $83
              9d24 00a5  ld   $a5
              9d25 00ce  ld   $ce
              9d26 0099  ld   $99
              9d27 000f  ld   $0f
              9d28 0012  ld   $12
              9d29 00a5  ld   $a5
              9d2a 00cf  ld   $cf
              9d2b 004c  ld   $4c
              9d2c 0066  ld   $66
              9d2d 00e9  ld   $e9
              9d2e 0000  ld   $00
              9d2f 0000  ld   $00
              9d30 0000  ld   $00
              * 14 times
              9d3c 00ab  ld   $ab
              9d3d 0003  ld   $03
              9d3e 0003  ld   $03
              9d3f 0003  ld   $03
              * 14 times
              9d4b 003f  ld   $3f
              9d4c 003f  ld   $3f
              9d4d 00c0  ld   $c0
              9d4e 00c0  ld   $c0
              9d4f 003c  ld   $3c
              9d50 003c  ld   $3c
              9d51 003c  ld   $3c
              * 7 times
              9d56 0030  ld   $30
              9d57 000f  ld   $0f
              9d58 00c0  ld   $c0
              9d59 00cc  ld   $cc
              9d5a 00ff  ld   $ff
              9d5b 0055  ld   $55
              9d5c 0000  ld   $00
              9d5d 00ab  ld   $ab
              9d5e 00ab  ld   $ab
              9d5f 0003  ld   $03
              9d60 0003  ld   $03
              9d61 00ff  ld   $ff
              9d62 00ff  ld   $ff
              9d63 0055  ld   $55
              9d64 00ff  ld   $ff
              9d65 00ff  ld   $ff
              9d66 0055  ld   $55
              9d67 00cf  ld   $cf
              9d68 00cf  ld   $cf
              9d69 00cf  ld   $cf
              * 5 times
              9d6c 00ff  ld   $ff
              9d6d 0055  ld   $55
              9d6e 00c3  ld   $c3
              9d6f 00c3  ld   $c3
              9d70 00c3  ld   $c3
              9d71 0055  ld   $55
              9d72 00f0  ld   $f0
              9d73 00f0  ld   $f0
              9d74 00cf  ld   $cf
              9d75 0056  ld   $56
              9d76 0056  ld   $56
              9d77 0056  ld   $56
              9d78 0055  ld   $55
              9d79 00ff  ld   $ff
              9d7a 00ff  ld   $ff
              9d7b 0055  ld   $55
              9d7c 0003  ld   $03
              9d7d 0003  ld   $03
              9d7e 0003  ld   $03
              * 7 times
              9d83 00ff  ld   $ff
              9d84 00ff  ld   $ff
              9d85 00ff  ld   $ff
              9d86 0003  ld   $03
              9d87 0003  ld   $03
              9d88 0003  ld   $03
              * 16 times
              9d96 0000  ld   $00
              9d97 00ab  ld   $ab
              9d98 0003  ld   $03
              9d99 0057  ld   $57
              9d9a 0003  ld   $03
              9d9b 0003  ld   $03
              9d9c 0003  ld   $03
              9d9d 0003  ld   $03
              9d9e 0007  ld   $07
              9d9f 0003  ld   $03
              9da0 0003  ld   $03
              9da1 00ea  ld   $ea
              9da2 0000  ld   $00
              9da3 0000  ld   $00
              9da4 0003  ld   $03
              9da5 0003  ld   $03
              9da6 0003  ld   $03
              * 10 times
              9dae 00aa  ld   $aa
              9daf 00ff  ld   $ff
              9db0 00ff  ld   $ff
              9db1 00ff  ld   $ff
              * 5 times
              9db4 0017  ld   $17
              9db5 00ff  ld   $ff
              9db6 00ff  ld   $ff
              9db7 0019  ld   $19
              9db8 005d  ld   $5d
              9db9 0035  ld   $35
              9dba 004b  ld   $4b
              9dbb 00f2  ld   $f2
              9dbc 00ec  ld   $ec
              9dbd 0087  ld   $87
              9dbe 006f  ld   $6f
              9dbf 00ad  ld   $ad
              9dc0 00b7  ld   $b7
              9dc1 00e2  ld   $e2
              9dc2 00f8  ld   $f8
              9dc3 0054  ld   $54
              9dc4 0080  ld   $80
              9dc5 0096  ld   $96
              9dc6 0085  ld   $85
              9dc7 0082  ld   $82
              9dc8 0022  ld   $22
              9dc9 0010  ld   $10
              9dca 0033  ld   $33
              9dcb 004a  ld   $4a
              9dcc 0013  ld   $13
              9dcd 0006  ld   $06
              9dce 000b  ld   $0b
              9dcf 004a  ld   $4a
              9dd0 0001  ld   $01
              9dd1 0040  ld   $40
              9dd2 0047  ld   $47
              9dd3 007a  ld   $7a
              9dd4 0000  ld   $00
              9dd5 00ff  ld   $ff
              9dd6 0023  ld   $23
              9dd7 0009  ld   $09
              9dd8 005b  ld   $5b
              9dd9 0016  ld   $16
              9dda 00b6  ld   $b6
              9ddb 00cb  ld   $cb
              9ddc 00ff  ld   $ff
              9ddd 00ff  ld   $ff
              9dde 00fb  ld   $fb
              9ddf 00ff  ld   $ff
              9de0 00ff  ld   $ff
              9de1 0024  ld   $24
              9de2 00f6  ld   $f6
              9de3 004e  ld   $4e
              9de4 0059  ld   $59
              9de5 0050  ld   $50
              9de6 0000  ld   $00
              9de7 00ff  ld   $ff
              9de8 0023  ld   $23
              9de9 00a3  ld   $a3
              9dea 006f  ld   $6f
              9deb 0036  ld   $36
              9dec 0023  ld   $23
              9ded 00d7  ld   $d7
              9dee 001c  ld   $1c
              9def 0022  ld   $22
              9df0 00c2  ld   $c2
              9df1 00ae  ld   $ae
              9df2 00ba  ld   $ba
              9df3 0023  ld   $23
              9df4 00ff  ld   $ff
              9df5 00ff  ld   $ff
              9df6 0021  ld   $21
              9df7 0030  ld   $30
              9df8 001e  ld   $1e
              9df9 0003  ld   $03
              9dfa 00c4  ld   $c4
              9dfb fe00  bra  ac          ;+-----------------------------------+
              9dfc fcfd  bra  $9dfd       ;|                                   |
              9dfd 1418  ld   $18,y       ;| Trampoline for page $9d00 lookups |
              9dfe e006  jmp  y,$06       ;|                                   |
              9dff c218  st   [$18]       ;+-----------------------------------+
              9e00 0020  ld   $20
              9e01 0000  ld   $00
              9e02 00c1  ld   $c1
              9e03 00ff  ld   $ff
              9e04 00ff  ld   $ff
              9e05 00ff  ld   $ff
              9e06 00a0  ld   $a0
              9e07 0030  ld   $30
              9e08 001e  ld   $1e
              9e09 00a4  ld   $a4
              9e0a 00d3  ld   $d3
              9e0b 00b6  ld   $b6
              9e0c 00bc  ld   $bc
              9e0d 00aa  ld   $aa
              9e0e 003a  ld   $3a
              9e0f 0001  ld   $01
              9e10 0050  ld   $50
              9e11 007e  ld   $7e
              9e12 00d8  ld   $d8
              9e13 00d8  ld   $d8
              9e14 00a5  ld   $a5
              9e15 003c  ld   $3c
              9e16 00ff  ld   $ff
              9e17 0016  ld   $16
              9e18 005b  ld   $5b
              9e19 0028  ld   $28
              9e1a 0003  ld   $03
              9e1b 00c4  ld   $c4
              9e1c 001d  ld   $1d
              9e1d 0000  ld   $00
              9e1e 000c  ld   $0c
              9e1f 004e  ld   $4e
              9e20 0000  ld   $00
              9e21 003e  ld   $3e
              9e22 0000  ld   $00
              9e23 00a6  ld   $a6
              9e24 00b0  ld   $b0
              9e25 0000  ld   $00
              9e26 00bc  ld   $bc
              9e27 00c6  ld   $c6
              9e28 0057  ld   $57
              9e29 008c  ld   $8c
              9e2a 0001  ld   $01
              9e2b 0027  ld   $27
              9e2c 00ff  ld   $ff
              9e2d 00ff  ld   $ff
              9e2e 00ff  ld   $ff
              * 5 times
              9e31 00e8  ld   $e8
              9e32 00ff  ld   $ff
              9e33 00ff  ld   $ff
              9e34 00e8  ld   $e8
              9e35 00e0  ld   $e0
              9e36 00e0  ld   $e0
              9e37 00e0  ld   $e0
              9e38 00ef  ld   $ef
              9e39 00ef  ld   $ef
              9e3a 00e3  ld   $e3
              9e3b 00e3  ld   $e3
              9e3c 00e5  ld   $e5
              9e3d 00e5  ld   $e5
              9e3e 00e7  ld   $e7
              9e3f 00e7  ld   $e7
              9e40 00ee  ld   $ee
              9e41 00ef  ld   $ef
              9e42 00ef  ld   $ef
              9e43 00e7  ld   $e7
              9e44 00e7  ld   $e7
              9e45 00e2  ld   $e2
              9e46 00ef  ld   $ef
              9e47 00e7  ld   $e7
              9e48 00e7  ld   $e7
              9e49 00ec  ld   $ec
              9e4a 00ec  ld   $ec
              9e4b 00ec  ld   $ec
              9e4c 00e7  ld   $e7
              9e4d 00ec  ld   $ec
              9e4e 00ec  ld   $ec
              9e4f 00ec  ld   $ec
              9e50 00e2  ld   $e2
              9e51 0000  ld   $00
              9e52 00ff  ld   $ff
              9e53 00e8  ld   $e8
              9e54 00e1  ld   $e1
              9e55 00e8  ld   $e8
              9e56 00e8  ld   $e8
              9e57 00ef  ld   $ef
              9e58 00eb  ld   $eb
              9e59 00ff  ld   $ff
              9e5a 00ff  ld   $ff
              9e5b 00e0  ld   $e0
              9e5c 00ff  ld   $ff
              9e5d 00ff  ld   $ff
              9e5e 00ef  ld   $ef
              9e5f 00ee  ld   $ee
              9e60 00ef  ld   $ef
              9e61 00e7  ld   $e7
              9e62 00e7  ld   $e7
              9e63 0000  ld   $00
              9e64 00ff  ld   $ff
              9e65 00e8  ld   $e8
              9e66 00e7  ld   $e7
              9e67 00e7  ld   $e7
              9e68 00e7  ld   $e7
              9e69 00e8  ld   $e8
              9e6a 00e1  ld   $e1
              9e6b 00e2  ld   $e2
              9e6c 00ee  ld   $ee
              9e6d 00ee  ld   $ee
              9e6e 00ee  ld   $ee
              9e6f 00ee  ld   $ee
              9e70 00e8  ld   $e8
              9e71 00ff  ld   $ff
              9e72 00ff  ld   $ff
              9e73 00e1  ld   $e1
              9e74 00e1  ld   $e1
              9e75 00ef  ld   $ef
              9e76 00ee  ld   $ee
              9e77 00e7  ld   $e7
              9e78 00e8  ld   $e8
              9e79 00ee  ld   $ee
              9e7a 00e7  ld   $e7
              9e7b 00ff  ld   $ff
              9e7c 00ff  ld   $ff
              9e7d 00ff  ld   $ff
              9e7e 00ee  ld   $ee
              9e7f 00e1  ld   $e1
              9e80 00ef  ld   $ef
              9e81 00e7  ld   $e7
              9e82 00e8  ld   $e8
              9e83 00ef  ld   $ef
              9e84 00ef  ld   $ef
              9e85 00eb  ld   $eb
              9e86 00e9  ld   $e9
              9e87 00e8  ld   $e8
              9e88 00e9  ld   $e9
              9e89 00e9  ld   $e9
              9e8a 00e8  ld   $e8
              9e8b 00e8  ld   $e8
              9e8c 00e8  ld   $e8
              9e8d 00e8  ld   $e8
              9e8e 00ff  ld   $ff
              9e8f 00e8  ld   $e8
              9e90 00e8  ld   $e8
              9e91 00e8  ld   $e8
              9e92 00ee  ld   $ee
              9e93 00e7  ld   $e7
              9e94 00e8  ld   $e8
              9e95 00ef  ld   $ef
              9e96 00ef  ld   $ef
              9e97 00ee  ld   $ee
              9e98 00ef  ld   $ef
              9e99 00ee  ld   $ee
              9e9a 00ef  ld   $ef
              9e9b 00ee  ld   $ee
              9e9c 00ee  ld   $ee
              9e9d 00ef  ld   $ef
              9e9e 00ee  ld   $ee
              9e9f 00ee  ld   $ee
              9ea0 00ee  ld   $ee
              9ea1 00e1  ld   $e1
              9ea2 00e8  ld   $e8
              9ea3 00e8  ld   $e8
              9ea4 00ff  ld   $ff
              9ea5 00ff  ld   $ff
              9ea6 00ff  ld   $ff
              * 5 times
              9ea9 00eb  ld   $eb
              9eaa 0000  ld   $00
              9eab 0000  ld   $00
              9eac 00be  ld   $be
              9ead 00b3  ld   $b3
              9eae 00b2  ld   $b2
              9eaf 00b7  ld   $b7
              9eb0 00b6  ld   $b6
              9eb1 0037  ld   $37
              9eb2 00d4  ld   $d4
              9eb3 00cf  ld   $cf
              9eb4 00cf  ld   $cf
              9eb5 00a0  ld   $a0
              9eb6 00cc  ld   $cc
              9eb7 00cf  ld   $cf
              9eb8 00ce  ld   $ce
              9eb9 0047  ld   $47
              9eba 00d3  ld   $d3
              9ebb 00d9  ld   $d9
              9ebc 00ce  ld   $ce
              9ebd 00d4  ld   $d4
              9ebe 00c1  ld   $c1
              9ebf 0058  ld   $58
              9ec0 00cd  ld   $cd
              9ec1 00c5  ld   $c5
              9ec2 00cd  ld   $cd
              9ec3 00a0  ld   $a0
              9ec4 00c6  ld   $c6
              9ec5 00d5  ld   $d5
              9ec6 00cc  ld   $cc
              9ec7 004c  ld   $4c
              9ec8 00d4  ld   $d4
              9ec9 00cf  ld   $cf
              9eca 00cf  ld   $cf
              9ecb 00a0  ld   $a0
              9ecc 00cd  ld   $cd
              9ecd 00c1  ld   $c1
              9ece 00ce  ld   $ce
              9ecf 00d9  ld   $d9
              9ed0 00a0  ld   $a0
              9ed1 00d0  ld   $d0
              9ed2 00c1  ld   $c1
              9ed3 00d2  ld   $d2
              9ed4 00c5  ld   $c5
              9ed5 00ce  ld   $ce
              9ed6 0053  ld   $53
              9ed7 00d3  ld   $d3
              9ed8 00d4  ld   $d4
              9ed9 00d2  ld   $d2
              9eda 00c9  ld   $c9
              9edb 00ce  ld   $ce
              9edc 0047  ld   $47
              9edd 00ce  ld   $ce
              9ede 00cf  ld   $cf
              9edf 00a0  ld   $a0
              9ee0 00c5  ld   $c5
              9ee1 00ce  ld   $ce
              9ee2 0044  ld   $44
              9ee3 00c2  ld   $c2
              9ee4 00c1  ld   $c1
              9ee5 00c4  ld   $c4
              9ee6 00a0  ld   $a0
              9ee7 00c2  ld   $c2
              9ee8 00d2  ld   $d2
              9ee9 00c1  ld   $c1
              9eea 00ce  ld   $ce
              9eeb 00c3  ld   $c3
              9eec 0048  ld   $48
              9eed 00be  ld   $be
              9eee 00b8  ld   $b8
              9eef 00a0  ld   $a0
              9ef0 00c7  ld   $c7
              9ef1 00cf  ld   $cf
              9ef2 00d3  ld   $d3
              9ef3 00d5  ld   $d5
              9ef4 00c2  ld   $c2
              9ef5 0053  ld   $53
              9ef6 00c2  ld   $c2
              9ef7 00c1  ld   $c1
              9ef8 00c4  ld   $c4
              9ef9 00a0  ld   $a0
              9efa 00d2  ld   $d2
              9efb fe00  bra  ac          ;+-----------------------------------+
              9efc fcfd  bra  $9efd       ;|                                   |
              9efd 1418  ld   $18,y       ;| Trampoline for page $9e00 lookups |
              9efe e006  jmp  y,$06       ;|                                   |
              9eff c218  st   [$18]       ;+-----------------------------------+
              9f00 00c5  ld   $c5
              9f01 00d4  ld   $d4
              9f02 00d5  ld   $d5
              9f03 00d2  ld   $d2
              9f04 004e  ld   $4e
              9f05 00be  ld   $be
              9f06 00b8  ld   $b8
              9f07 00a0  ld   $a0
              9f08 00c6  ld   $c6
              9f09 00cf  ld   $cf
              9f0a 00d2  ld   $d2
              9f0b 0053  ld   $53
              9f0c 00c2  ld   $c2
              9f0d 00c1  ld   $c1
              9f0e 00c4  ld   $c4
              9f0f 00a0  ld   $a0
              9f10 00ce  ld   $ce
              9f11 00c5  ld   $c5
              9f12 00d8  ld   $d8
              9f13 0054  ld   $54
              9f14 00d3  ld   $d3
              9f15 00d4  ld   $d4
              9f16 00cf  ld   $cf
              9f17 00d0  ld   $d0
              9f18 00d0  ld   $d0
              9f19 00c5  ld   $c5
              9f1a 00c4  ld   $c4
              9f1b 00a0  ld   $a0
              9f1c 00c1  ld   $c1
              9f1d 00d4  ld   $d4
              9f1e 0020  ld   $20
              9f1f 00aa  ld   $aa
              9f20 00aa  ld   $aa
              9f21 00aa  ld   $aa
              9f22 0020  ld   $20
              9f23 00a0  ld   $a0
              9f24 00c5  ld   $c5
              9f25 00d2  ld   $d2
              9f26 00d2  ld   $d2
              9f27 000d  ld   $0d
              9f28 00be  ld   $be
              9f29 00b2  ld   $b2
              9f2a 00b5  ld   $b5
              9f2b 0035  ld   $35
              9f2c 00d2  ld   $d2
              9f2d 00c1  ld   $c1
              9f2e 00ce  ld   $ce
              9f2f 00c7  ld   $c7
              9f30 0045  ld   $45
              9f31 00c4  ld   $c4
              9f32 00c9  ld   $c9
              9f33 004d  ld   $4d
              9f34 00d3  ld   $d3
              9f35 00d4  ld   $d4
              9f36 00d2  ld   $d2
              9f37 00a0  ld   $a0
              9f38 00cf  ld   $cf
              9f39 00d6  ld   $d6
              9f3a 00c6  ld   $c6
              9f3b 004c  ld   $4c
              9f3c 00dc  ld   $dc
              9f3d 000d  ld   $0d
              9f3e 00d2  ld   $d2
              9f3f 00c5  ld   $c5
              9f40 00d4  ld   $d4
              9f41 00d9  ld   $d9
              9f42 00d0  ld   $d0
              9f43 00c5  ld   $c5
              9f44 00a0  ld   $a0
              9f45 00cc  ld   $cc
              9f46 00c9  ld   $c9
              9f47 00ce  ld   $ce
              9f48 00c5  ld   $c5
              9f49 008d  ld   $8d
              9f4a 003f  ld   $3f
              9f4b 0046  ld   $46
              9f4c 00d9  ld   $d9
              9f4d 0090  ld   $90
              9f4e 0003  ld   $03
              9f4f 004c  ld   $4c
              9f50 00c3  ld   $c3
              9f51 00e8  ld   $e8
              9f52 00a6  ld   $a6
              9f53 00cf  ld   $cf
              9f54 009a  ld   $9a
              9f55 00a6  ld   $a6
              9f56 00ce  ld   $ce
              9f57 00a0  ld   $a0
              9f58 008d  ld   $8d
              9f59 00d0  ld   $d0
              9f5a 0002  ld   $02
              9f5b 00a0  ld   $a0
              9f5c 0099  ld   $99
              9f5d 0020  ld   $20
              9f5e 00c4  ld   $c4
              9f5f 00e3  ld   $e3
              9f60 0086  ld   $86
              9f61 00ce  ld   $ce
              9f62 00ba  ld   $ba
              9f63 0086  ld   $86
              9f64 00cf  ld   $cf
              9f65 00a0  ld   $a0
              9f66 00fe  ld   $fe
              9f67 0084  ld   $84
              9f68 00d9  ld   $d9
              9f69 00c8  ld   $c8
              9f6a 0084  ld   $84
              9f6b 00c8  ld   $c8
              9f6c 0020  ld   $20
              9f6d 0099  ld   $99
              9f6e 00e2  ld   $e2
              9f6f 0084  ld   $84
              9f70 00e9  ld   $e9
              9f71 00a2  ld   $a2
              9f72 0018  ld   $18
              9f73 00a9  ld   $a9
              9f74 0030  ld   $30
              9f75 0020  ld   $20
              9f76 0091  ld   $91
              9f77 00e4  ld   $e4
              9f78 00e6  ld   $e6
              9f79 00d9  ld   $d9
              9f7a 00a6  ld   $a6
              9f7b 00ce  ld   $ce
              9f7c 00a4  ld   $a4
              9f7d 00c8  ld   $c8
              9f7e 000a  ld   $0a
              9f7f 0085  ld   $85
              9f80 00ce  ld   $ce
              9f81 00c8  ld   $c8
              9f82 00b9  ld   $b9
              9f83 0000  ld   $00
              9f84 0002  ld   $02
              9f85 00c9  ld   $c9
              9f86 0074  ld   $74
              9f87 00f0  ld   $f0
              9f88 00d2  ld   $d2
              9f89 0049  ld   $49
              9f8a 00b0  ld   $b0
              9f8b 00c9  ld   $c9
              9f8c 000a  ld   $0a
              9f8d 00b0  ld   $b0
              9f8e 00f0  ld   $f0
              9f8f 00c8  ld   $c8
              9f90 00c8  ld   $c8
              9f91 0084  ld   $84
              9f92 00c8  ld   $c8
              9f93 00b9  ld   $b9
              9f94 0000  ld   $00
              9f95 0002  ld   $02
              9f96 0048  ld   $48
              9f97 00b9  ld   $b9
              9f98 00ff  ld   $ff
              9f99 0001  ld   $01
              9f9a 00a0  ld   $a0
              9f9b 0000  ld   $00
              9f9c 0020  ld   $20
              9f9d 0008  ld   $08
              9f9e 00e7  ld   $e7
              9f9f 0068  ld   $68
              9fa0 0095  ld   $95
              9fa1 00a8  ld   $a8
              9fa2 00a5  ld   $a5
              9fa3 00ce  ld   $ce
              9fa4 00c9  ld   $c9
              9fa5 00c7  ld   $c7
              9fa6 00d0  ld   $d0
              9fa7 0003  ld   $03
              9fa8 0020  ld   $20
              9fa9 006f  ld   $6f
              9faa 00e7  ld   $e7
              9fab 004c  ld   $4c
              9fac 0001  ld   $01
              9fad 00e8  ld   $e8
              9fae 00ff  ld   $ff
              9faf 00ff  ld   $ff
              9fb0 00ff  ld   $ff
              9fb1 00ec  ld   $ec
              9fb2 0000  ld   $00
              9fb3 0000  ld   $00
              9fb4 0050  ld   $50
              9fb5 0020  ld   $20
              9fb6 0013  ld   $13
              9fb7 00ec  ld   $ec
              9fb8 00d0  ld   $d0
              9fb9 0015  ld   $15
              9fba 0020  ld   $20
              9fbb 000b  ld   $0b
              9fbc 00ec  ld   $ec
              9fbd 00d0  ld   $d0
              9fbe 0010  ld   $10
              9fbf 0020  ld   $20
              9fc0 0082  ld   $82
              9fc1 00e7  ld   $e7
              9fc2 0020  ld   $20
              9fc3 006f  ld   $6f
              9fc4 00e7  ld   $e7
              9fc5 0050  ld   $50
              9fc6 0003  ld   $03
              9fc7 0020  ld   $20
              9fc8 0082  ld   $82
              9fc9 00e7  ld   $e7
              9fca 0020  ld   $20
              9fcb 0059  ld   $59
              9fcc 00e7  ld   $e7
              9fcd 0056  ld   $56
              9fce 0050  ld   $50
              9fcf 004c  ld   $4c
              9fd0 0036  ld   $36
              9fd1 00e7  ld   $e7
              9fd2 00ff  ld   $ff
              9fd3 00ff  ld   $ff
              9fd4 00c1  ld   $c1
              9fd5 00ff  ld   $ff
              9fd6 007f  ld   $7f
              9fd7 00d1  ld   $d1
              9fd8 00cc  ld   $cc
              9fd9 00c7  ld   $c7
              9fda 00cf  ld   $cf
              9fdb 00ce  ld   $ce
              9fdc 00c5  ld   $c5
              9fdd 009a  ld   $9a
              9fde 0098  ld   $98
              9fdf 008b  ld   $8b
              9fe0 0096  ld   $96
              9fe1 0095  ld   $95
              9fe2 0093  ld   $93
              9fe3 00bf  ld   $bf
              9fe4 00b2  ld   $b2
              9fe5 0032  ld   $32
              9fe6 002d  ld   $2d
              9fe7 002b  ld   $2b
              9fe8 00bc  ld   $bc
              9fe9 00b0  ld   $b0
              9fea 00ac  ld   $ac
              9feb 00be  ld   $be
              9fec 0035  ld   $35
              9fed 008e  ld   $8e
              9fee 0061  ld   $61
              9fef 00ff  ld   $ff
              9ff0 00ff  ld   $ff
              9ff1 00ff  ld   $ff
              9ff2 00dd  ld   $dd
              9ff3 00fb  ld   $fb
              9ff4 0020  ld   $20
              9ff5 00c9  ld   $c9
              9ff6 00ef  ld   $ef
              9ff7 0015  ld   $15
              9ff8 004f  ld   $4f
              9ff9 0010  ld   $10
              9ffa 0005  ld   $05
              9ffb fe00  bra  ac          ;+-----------------------------------+
              9ffc fcfd  bra  $9ffd       ;|                                   |
              9ffd 1418  ld   $18,y       ;| Trampoline for page $9f00 lookups |
              9ffe e006  jmp  y,$06       ;|                                   |
              9fff c218  st   [$18]       ;+-----------------------------------+
              a000 0020  ld   $20
              a001 00c9  ld   $c9
              a002 00ef  ld   $ef
              a003 0035  ld   $35
              a004 004f  ld   $4f
              a005 0095  ld   $95
              a006 0050  ld   $50
              a007 0010  ld   $10
              a008 00cb  ld   $cb
              a009 004c  ld   $4c
              a00a 00c9  ld   $c9
              a00b 00ef  ld   $ef
              a00c 0040  ld   $40
              a00d 0060  ld   $60
              a00e 008d  ld   $8d
              a00f 0060  ld   $60
              a010 008b  ld   $8b
              a011 0000  ld   $00
              a012 007e  ld   $7e
              a013 008c  ld   $8c
              a014 0033  ld   $33
              a015 0000  ld   $00
              a016 0000  ld   $00
              a017 0060  ld   $60
              a018 0003  ld   $03
              a019 00bf  ld   $bf
              a01a 0012  ld   $12
              a01b 0000  ld   $00
              a01c 0040  ld   $40
              a01d 0089  ld   $89
              a01e 00c9  ld   $c9
              a01f 0047  ld   $47
              a020 009d  ld   $9d
              a021 0017  ld   $17
              a022 0068  ld   $68
              a023 009d  ld   $9d
              a024 000a  ld   $0a
              a025 0000  ld   $00
              a026 0040  ld   $40
              a027 0060  ld   $60
              a028 008d  ld   $8d
              a029 0060  ld   $60
              a02a 008b  ld   $8b
              a02b 0000  ld   $00
              a02c 007e  ld   $7e
              a02d 008c  ld   $8c
              a02e 003c  ld   $3c
              a02f 0000  ld   $00
              a030 0000  ld   $00
              a031 0060  ld   $60
              a032 0003  ld   $03
              a033 00bf  ld   $bf
              a034 001b  ld   $1b
              a035 004b  ld   $4b
              a036 0067  ld   $67
              a037 00b4  ld   $b4
              a038 00a1  ld   $a1
              a039 0007  ld   $07
              a03a 008c  ld   $8c
              a03b 0007  ld   $07
              a03c 00ae  ld   $ae
              a03d 00a9  ld   $a9
              a03e 00ac  ld   $ac
              a03f 00a8  ld   $a8
              a040 0067  ld   $67
              a041 008c  ld   $8c
              a042 0007  ld   $07
              a043 00b4  ld   $b4
              a044 00af  ld   $af
              a045 00ac  ld   $ac
              a046 00b0  ld   $b0
              a047 0067  ld   $67
              a048 009d  ld   $9d
              a049 00b2  ld   $b2
              a04a 00af  ld   $af
              a04b 00ac  ld   $ac
              a04c 00af  ld   $af
              a04d 00a3  ld   $a3
              a04e 0067  ld   $67
              a04f 008c  ld   $8c
              a050 0007  ld   $07
              a051 00a5  ld   $a5
              a052 00ab  ld   $ab
              a053 00af  ld   $af
              a054 00b0  ld   $b0
              a055 00f4  ld   $f4
              a056 00ae  ld   $ae
              a057 00a9  ld   $a9
              a058 00b2  ld   $b2
              a059 00b0  ld   $b0
              a05a 007f  ld   $7f
              a05b 000e  ld   $0e
              a05c 0027  ld   $27
              a05d 00b4  ld   $b4
              a05e 00ae  ld   $ae
              a05f 00a9  ld   $a9
              a060 00b2  ld   $b2
              a061 00b0  ld   $b0
              a062 007f  ld   $7f
              a063 000e  ld   $0e
              a064 0028  ld   $28
              a065 00b4  ld   $b4
              a066 00ae  ld   $ae
              a067 00a9  ld   $a9
              a068 00b2  ld   $b2
              a069 00b0  ld   $b0
              a06a 0064  ld   $64
              a06b 0007  ld   $07
              a06c 00a6  ld   $a6
              a06d 00a9  ld   $a9
              a06e 0067  ld   $67
              a06f 00af  ld   $af
              a070 00b4  ld   $b4
              a071 00af  ld   $af
              a072 00a7  ld   $a7
              a073 0078  ld   $78
              a074 00b4  ld   $b4
              a075 00a5  ld   $a5
              a076 00ac  ld   $ac
              a077 0078  ld   $78
              a078 007f  ld   $7f
              a079 0002  ld   $02
              a07a 00ad  ld   $ad
              a07b 00a5  ld   $a5
              a07c 00b2  ld   $b2
              a07d 0067  ld   $67
              a07e 00a2  ld   $a2
              a07f 00b5  ld   $b5
              a080 00b3  ld   $b3
              a081 00af  ld   $af
              a082 00a7  ld   $a7
              a083 00ee  ld   $ee
              a084 00b2  ld   $b2
              a085 00b5  ld   $b5
              a086 00b4  ld   $b4
              a087 00a5  ld   $a5
              a088 00b2  ld   $b2
              a089 007e  ld   $7e
              a08a 008c  ld   $8c
              a08b 0039  ld   $39
              a08c 00b4  ld   $b4
              a08d 00b8  ld   $b8
              a08e 00a5  ld   $a5
              a08f 00ae  ld   $ae
              a090 0067  ld   $67
              a091 00b0  ld   $b0
              a092 00a5  ld   $a5
              a093 00b4  ld   $b4
              a094 00b3  ld   $b3
              a095 0027  ld   $27
              a096 00af  ld   $af
              a097 00b4  ld   $b4
              a098 0007  ld   $07
              a099 009d  ld   $9d
              a09a 0019  ld   $19
              a09b 00b2  ld   $b2
              a09c 00af  ld   $af
              a09d 00a6  ld   $a6
              a09e 007f  ld   $7f
              a09f 0005  ld   $05
              a0a0 0037  ld   $37
              a0a1 00b4  ld   $b4
              a0a2 00b5  ld   $b5
              a0a3 00b0  ld   $b0
              a0a4 00ae  ld   $ae
              a0a5 00a9  ld   $a9
              a0a6 007f  ld   $7f
              a0a7 0005  ld   $05
              a0a8 0028  ld   $28
              a0a9 00b4  ld   $b4
              a0aa 00b5  ld   $b5
              a0ab 00b0  ld   $b0
              a0ac 00ae  ld   $ae
              a0ad 00a9  ld   $a9
              a0ae 007f  ld   $7f
              a0af 0005  ld   $05
              a0b0 002a  ld   $2a
              a0b1 00b4  ld   $b4
              a0b2 00b5  ld   $b5
              a0b3 00b0  ld   $b0
              a0b4 00ae  ld   $ae
              a0b5 00a9  ld   $a9
              a0b6 00e4  ld   $e4
              a0b7 00ae  ld   $ae
              a0b8 00a5  ld   $a5
              a0b9 00ed  ld   $ed
              a0ba 0000  ld   $00
              a0bb 0000  ld   $00
              a0bc 0000  ld   $00
              a0bd 00ff  ld   $ff
              a0be 00ff  ld   $ff
              a0bf 0047  ld   $47
              a0c0 00a2  ld   $a2
              a0c1 00a1  ld   $a1
              a0c2 00b4  ld   $b4
              a0c3 007f  ld   $7f
              a0c4 000d  ld   $0d
              a0c5 0030  ld   $30
              a0c6 00ad  ld   $ad
              a0c7 00a9  ld   $a9
              a0c8 00a4  ld   $a4
              a0c9 007f  ld   $7f
              a0ca 000d  ld   $0d
              a0cb 0023  ld   $23
              a0cc 00ad  ld   $ad
              a0cd 00a9  ld   $a9
              a0ce 00a4  ld   $a4
              a0cf 0067  ld   $67
              a0d0 00ac  ld   $ac
              a0d1 00ac  ld   $ac
              a0d2 00a1  ld   $a1
              a0d3 00a3  ld   $a3
              a0d4 0000  ld   $00
              a0d5 0040  ld   $40
              a0d6 0080  ld   $80
              a0d7 00c0  ld   $c0
              a0d8 00c1  ld   $c1
              a0d9 0080  ld   $80
              a0da 0000  ld   $00
              a0db 0047  ld   $47
              a0dc 008c  ld   $8c
              a0dd 0068  ld   $68
              a0de 008c  ld   $8c
              a0df 00db  ld   $db
              a0e0 0067  ld   $67
              a0e1 009b  ld   $9b
              a0e2 0068  ld   $68
              a0e3 009b  ld   $9b
              a0e4 0050  ld   $50
              a0e5 008c  ld   $8c
              a0e6 0063  ld   $63
              a0e7 008c  ld   $8c
              a0e8 007f  ld   $7f
              a0e9 0001  ld   $01
              a0ea 0051  ld   $51
              a0eb 0007  ld   $07
              a0ec 0088  ld   $88
              a0ed 0029  ld   $29
              a0ee 0084  ld   $84
              a0ef 0080  ld   $80
              a0f0 00c4  ld   $c4
              a0f1 0080  ld   $80
              a0f2 0057  ld   $57
              a0f3 0071  ld   $71
              a0f4 0007  ld   $07
              a0f5 0088  ld   $88
              a0f6 0014  ld   $14
              a0f7 00ed  ld   $ed
              a0f8 00a5  ld   $a5
              a0f9 00ad  ld   $ad
              a0fa 00af  ld   $af
              a0fb fe00  bra  ac          ;+-----------------------------------+
              a0fc fcfd  bra  $a0fd       ;|                                   |
              a0fd 1418  ld   $18,y       ;| Trampoline for page $a000 lookups |
              a0fe e006  jmp  y,$06       ;|                                   |
              a0ff c218  st   [$18]       ;+-----------------------------------+
              a100 00ac  ld   $ac
              a101 00ed  ld   $ed
              a102 00a5  ld   $a5
              a103 00ad  ld   $ad
              a104 00a9  ld   $a9
              a105 00a8  ld   $a8
              a106 00f2  ld   $f2
              a107 00af  ld   $af
              a108 00ac  ld   $ac
              a109 00af  ld   $af
              a10a 00a3  ld   $a3
              a10b 0071  ld   $71
              a10c 0008  ld   $08
              a10d 0088  ld   $88
              a10e 00ae  ld   $ae
              a10f 00a5  ld   $a5
              a110 00ac  ld   $ac
              a111 0068  ld   $68
              a112 0083  ld   $83
              a113 0008  ld   $08
              a114 0068  ld   $68
              a115 009d  ld   $9d
              a116 0008  ld   $08
              a117 0071  ld   $71
              a118 0007  ld   $07
              a119 0088  ld   $88
              a11a 0060  ld   $60
              a11b 0076  ld   $76
              a11c 00b4  ld   $b4
              a11d 00af  ld   $af
              a11e 00ae  ld   $ae
              a11f 0076  ld   $76
              a120 008d  ld   $8d
              a121 0076  ld   $76
              a122 008b  ld   $8b
              a123 0051  ld   $51
              a124 0007  ld   $07
              a125 0088  ld   $88
              a126 0019  ld   $19
              a127 00b8  ld   $b8
              a128 00a4  ld   $a4
              a129 00ae  ld   $ae
              a12a 00b2  ld   $b2
              a12b 00f2  ld   $f2
              a12c 00b3  ld   $b3
              a12d 00b5  ld   $b5
              a12e 00f3  ld   $f3
              a12f 00a2  ld   $a2
              a130 00a1  ld   $a1
              a131 00ee  ld   $ee
              a132 00a7  ld   $a7
              a133 00b3  ld   $b3
              a134 00e4  ld   $e4
              a135 00ae  ld   $ae
              a136 00b2  ld   $b2
              a137 00eb  ld   $eb
              a138 00a5  ld   $a5
              a139 00a5  ld   $a5
              a13a 00b0  ld   $b0
              a13b 0051  ld   $51
              a13c 0007  ld   $07
              a13d 0088  ld   $88
              a13e 0039  ld   $39
              a13f 0081  ld   $81
              a140 00c1  ld   $c1
              a141 004f  ld   $4f
              a142 007f  ld   $7f
              a143 000f  ld   $0f
              a144 002f  ld   $2f
              a145 0000  ld   $00
              a146 0051  ld   $51
              a147 0006  ld   $06
              a148 0088  ld   $88
              a149 0029  ld   $29
              a14a 00c2  ld   $c2
              a14b 000c  ld   $0c
              a14c 0082  ld   $82
              a14d 0057  ld   $57
              a14e 008c  ld   $8c
              a14f 006a  ld   $6a
              a150 008c  ld   $8c
              a151 0042  ld   $42
              a152 00ae  ld   $ae
              a153 00a5  ld   $a5
              a154 00a8  ld   $a8
              a155 00b4  ld   $b4
              a156 0060  ld   $60
              a157 00ae  ld   $ae
              a158 00a5  ld   $a5
              a159 00a8  ld   $a8
              a15a 00b4  ld   $b4
              a15b 004f  ld   $4f
              a15c 007e  ld   $7e
              a15d 001e  ld   $1e
              a15e 0035  ld   $35
              a15f 008c  ld   $8c
              a160 0027  ld   $27
              a161 0051  ld   $51
              a162 0007  ld   $07
              a163 0088  ld   $88
              a164 0009  ld   $09
              a165 008b  ld   $8b
              a166 00fe  ld   $fe
              a167 00e4  ld   $e4
              a168 00af  ld   $af
              a169 00ad  ld   $ad
              a16a 00f2  ld   $f2
              a16b 00af  ld   $af
              a16c 00e4  ld   $e4
              a16d 00ae  ld   $ae
              a16e 00a1  ld   $a1
              a16f 00dc  ld   $dc
              a170 00de  ld   $de
              a171 009c  ld   $9c
              a172 00dd  ld   $dd
              a173 009c  ld   $9c
              a174 00de  ld   $de
              a175 00dd  ld   $dd
              a176 009e  ld   $9e
              a177 00c3  ld   $c3
              a178 00dd  ld   $dd
              a179 00cf  ld   $cf
              a17a 00ca  ld   $ca
              a17b 00cd  ld   $cd
              a17c 00cb  ld   $cb
              a17d 0000  ld   $00
              a17e 0047  ld   $47
              a17f 009d  ld   $9d
              a180 00ad  ld   $ad
              a181 00a5  ld   $a5
              a182 00ad  ld   $ad
              a183 00af  ld   $af
              a184 00ac  ld   $ac
              a185 0076  ld   $76
              a186 009d  ld   $9d
              a187 00ad  ld   $ad
              a188 00a5  ld   $a5
              a189 00ad  ld   $ad
              a18a 00a9  ld   $a9
              a18b 00a8  ld   $a8
              a18c 00e6  ld   $e6
              a18d 00a6  ld   $a6
              a18e 00af  ld   $af
              a18f 0060  ld   $60
              a190 008c  ld   $8c
              a191 0020  ld   $20
              a192 00af  ld   $af
              a193 00b4  ld   $b4
              a194 00b5  ld   $b5
              a195 00a1  ld   $a1
              a196 00f2  ld   $f2
              a197 00ac  ld   $ac
              a198 00a3  ld   $a3
              a199 00f2  ld   $f2
              a19a 00a3  ld   $a3
              a19b 00b3  ld   $b3
              a19c 0060  ld   $60
              a19d 008c  ld   $8c
              a19e 0020  ld   $20
              a19f 00ac  ld   $ac
              a1a0 00a5  ld   $a5
              a1a1 00a4  ld   $a4
              a1a2 00ee  ld   $ee
              a1a3 00b5  ld   $b5
              a1a4 00b2  ld   $b2
              a1a5 0060  ld   $60
              a1a6 00ae  ld   $ae
              a1a7 00b5  ld   $b5
              a1a8 00b2  ld   $b2
              a1a9 00f4  ld   $f4
              a1aa 00b3  ld   $b3
              a1ab 00a9  ld   $a9
              a1ac 00ac  ld   $ac
              a1ad 0060  ld   $60
              a1ae 008c  ld   $8c
              a1af 0020  ld   $20
              a1b0 00b4  ld   $b4
              a1b1 00b3  ld   $b3
              a1b2 00a9  ld   $a9
              a1b3 00ac  ld   $ac
              a1b4 007a  ld   $7a
              a1b5 007e  ld   $7e
              a1b6 009a  ld   $9a
              a1b7 0022  ld   $22
              a1b8 0020  ld   $20
              a1b9 0000  ld   $00
              a1ba 0060  ld   $60
              a1bb 0003  ld   $03
              a1bc 00bf  ld   $bf
              a1bd 0060  ld   $60
              a1be 0003  ld   $03
              a1bf 00bf  ld   $bf
              a1c0 001f  ld   $1f
              a1c1 00ee  ld   $ee
              a1c2 0000  ld   $00
              a1c3 0000  ld   $00
              a1c4 0020  ld   $20
              a1c5 00b1  ld   $b1
              a1c6 00e7  ld   $e7
              a1c7 00e8  ld   $e8
              a1c8 00e8  ld   $e8
              a1c9 00b5  ld   $b5
              a1ca 004f  ld   $4f
              a1cb 0085  ld   $85
              a1cc 00da  ld   $da
              a1cd 00b5  ld   $b5
              a1ce 0087  ld   $87
              a1cf 0085  ld   $85
              a1d0 00db  ld   $db
              a1d1 00b4  ld   $b4
              a1d2 004e  ld   $4e
              a1d3 0098  ld   $98
              a1d4 00d5  ld   $d5
              a1d5 0086  ld   $86
              a1d6 00b0  ld   $b0
              a1d7 0009  ld   $09
              a1d8 00b1  ld   $b1
              a1d9 00da  ld   $da
              a1da 0020  ld   $20
              a1db 00c9  ld   $c9
              a1dc 00e3  ld   $e3
              a1dd 00c8  ld   $c8
              a1de 004c  ld   $4c
              a1df 000f  ld   $0f
              a1e0 00ee  ld   $ee
              a1e1 00a9  ld   $a9
              a1e2 00ff  ld   $ff
              a1e3 0085  ld   $85
              a1e4 00d5  ld   $d5
              a1e5 0060  ld   $60
              a1e6 00e8  ld   $e8
              a1e7 00a9  ld   $a9
              a1e8 0000  ld   $00
              a1e9 0095  ld   $95
              a1ea 0088  ld   $88
              a1eb 0095  ld   $95
              a1ec 00a8  ld   $a8
              a1ed 00b5  ld   $b5
              a1ee 0087  ld   $87
              a1ef 0038  ld   $38
              a1f0 00f5  ld   $f5
              a1f1 004f  ld   $4f
              a1f2 0095  ld   $95
              a1f3 0050  ld   $50
              a1f4 004c  ld   $4c
              a1f5 0023  ld   $23
              a1f6 00e8  ld   $e8
              a1f7 00ff  ld   $ff
              a1f8 0020  ld   $20
              a1f9 0015  ld   $15
              a1fa 00e7  ld   $e7
              a1fb fe00  bra  ac          ;+-----------------------------------+
              a1fc fcfd  bra  $a1fd       ;|                                   |
              a1fd 1418  ld   $18,y       ;| Trampoline for page $a100 lookups |
              a1fe e006  jmp  y,$06       ;|                                   |
              a1ff c218  st   [$18]       ;+-----------------------------------+
              a200 00a5  ld   $a5
              a201 00cf  ld   $cf
              a202 00d0  ld   $d0
              a203 0028  ld   $28
              a204 00a5  ld   $a5
              a205 00ce  ld   $ce
              a206 0060  ld   $60
              a207 0020  ld   $20
              a208 0034  ld   $34
              a209 00ee  ld   $ee
              a20a 00a4  ld   $a4
              a20b 00c8  ld   $c8
              a20c 00c9  ld   $c9
              a20d 0030  ld   $30
              a20e 00b0  ld   $b0
              a20f 0021  ld   $21
              a210 00c0  ld   $c0
              a211 0028  ld   $28
              a212 00b0  ld   $b0
              a213 001d  ld   $1d
              a214 0060  ld   $60
              a215 00ea  ld   $ea
              a216 00ea  ld   $ea
              a217 0020  ld   $20
              a218 0034  ld   $34
              a219 00ee  ld   $ee
              a21a 0060  ld   $60
              a21b 00ea  ld   $ea
              a21c 008a  ld   $8a
              a21d 00a2  ld   $a2
              a21e 0001  ld   $01
              a21f 00b4  ld   $b4
              a220 00ce  ld   $ce
              a221 0094  ld   $94
              a222 004c  ld   $4c
              a223 00b4  ld   $b4
              a224 0048  ld   $48
              a225 0094  ld   $94
              a226 00ca  ld   $ca
              a227 00ca  ld   $ca
              a228 00f0  ld   $f0
              a229 00f5  ld   $f5
              a22a 00aa  ld   $aa
              a22b 0060  ld   $60
              a22c 00a0  ld   $a0
              a22d 0077  ld   $77
              a22e 004c  ld   $4c
              a22f 00e0  ld   $e0
              a230 00e3  ld   $e3
              a231 00a0  ld   $a0
              a232 007b  ld   $7b
              a233 00d0  ld   $d0
              a234 00f9  ld   $f9
              a235 0020  ld   $20
              a236 0054  ld   $54
              a237 00e2  ld   $e2
              a238 00a5  ld   $a5
              a239 00da  ld   $da
              a23a 00d0  ld   $d0
              a23b 0007  ld   $07
              a23c 00a5  ld   $a5
              a23d 00db  ld   $db
              a23e 00d0  ld   $d0
              a23f 0003  ld   $03
              a240 004c  ld   $4c
              a241 007e  ld   $7e
              a242 00e7  ld   $e7
              a243 0006  ld   $06
              a244 00ce  ld   $ce
              a245 0026  ld   $26
              a246 00cf  ld   $cf
              a247 0026  ld   $26
              a248 0046  ld   $46
              a249 0026  ld   $26
              a24a 0047  ld   $47
              a24b 00a5  ld   $a5
              a24c 0046  ld   $46
              a24d 00c5  ld   $c5
              a24e 00da  ld   $da
              a24f 00a5  ld   $a5
              a250 0047  ld   $47
              a251 00e5  ld   $e5
              a252 00db  ld   $db
              a253 0090  ld   $90
              a254 000a  ld   $0a
              a255 0085  ld   $85
              a256 0047  ld   $47
              a257 00a5  ld   $a5
              a258 0046  ld   $46
              a259 00e5  ld   $e5
              a25a 00da  ld   $da
              a25b 0085  ld   $85
              a25c 0046  ld   $46
              a25d 00e6  ld   $e6
              a25e 00ce  ld   $ce
              a25f 0088  ld   $88
              a260 00d0  ld   $d0
              a261 00e1  ld   $e1
              a262 0060  ld   $60
              a263 00ff  ld   $ff
              a264 00ff  ld   $ff
              a265 00ff  ld   $ff
              * 6 times
              a269 0020  ld   $20
              a26a 0015  ld   $15
              a26b 00e7  ld   $e7
              a26c 006c  ld   $6c
              a26d 00ce  ld   $ce
              a26e 0000  ld   $00
              a26f 00a5  ld   $a5
              a270 004c  ld   $4c
              a271 00d0  ld   $d0
              a272 0002  ld   $02
              a273 00c6  ld   $c6
              a274 004d  ld   $4d
              a275 00c6  ld   $c6
              a276 004c  ld   $4c
              a277 00a5  ld   $a5
              a278 0048  ld   $48
              a279 00d0  ld   $d0
              a27a 0002  ld   $02
              a27b 00c6  ld   $c6
              a27c 0049  ld   $49
              a27d 00c6  ld   $c6
              a27e 0048  ld   $48
              a27f 00a0  ld   $a0
              a280 0000  ld   $00
              a281 00b1  ld   $b1
              a282 004c  ld   $4c
              a283 0091  ld   $91
              a284 0048  ld   $48
              a285 00a5  ld   $a5
              a286 00ca  ld   $ca
              a287 00c5  ld   $c5
              a288 004c  ld   $4c
              a289 00a5  ld   $a5
              a28a 00cb  ld   $cb
              a28b 00e5  ld   $e5
              a28c 004d  ld   $4d
              a28d 0090  ld   $90
              a28e 00e0  ld   $e0
              a28f 004c  ld   $4c
              a290 0053  ld   $53
              a291 00ee  ld   $ee
              a292 00c9  ld   $c9
              a293 0028  ld   $28
              a294 00b0  ld   $b0
              a295 009b  ld   $9b
              a296 00a8  ld   $a8
              a297 00a5  ld   $a5
              a298 00c8  ld   $c8
              a299 0060  ld   $60
              a29a 00ea  ld   $ea
              a29b 00ea  ld   $ea
              a29c 0098  ld   $98
              a29d 00aa  ld   $aa
              a29e 00a0  ld   $a0
              a29f 006e  ld   $6e
              a2a0 0020  ld   $20
              a2a1 00c4  ld   $c4
              a2a2 00e3  ld   $e3
              a2a3 008a  ld   $8a
              a2a4 00a8  ld   $a8
              a2a5 0020  ld   $20
              a2a6 00c4  ld   $c4
              a2a7 00e3  ld   $e3
              a2a8 00a0  ld   $a0
              a2a9 0072  ld   $72
              a2aa 004c  ld   $4c
              a2ab 00c4  ld   $c4
              a2ac 00e3  ld   $e3
              a2ad 0020  ld   $20
              a2ae 0015  ld   $15
              a2af 00e7  ld   $e7
              a2b0 0006  ld   $06
              a2b1 00ce  ld   $ce
              a2b2 0026  ld   $26
              a2b3 00cf  ld   $cf
              a2b4 0030  ld   $30
              a2b5 00fa  ld   $fa
              a2b6 00b0  ld   $b0
              a2b7 00dc  ld   $dc
              a2b8 00d0  ld   $d0
              a2b9 0004  ld   $04
              a2ba 00c5  ld   $c5
              a2bb 00ce  ld   $ce
              a2bc 00b0  ld   $b0
              a2bd 00d6  ld   $d6
              a2be 0060  ld   $60
              a2bf 0020  ld   $20
              a2c0 0015  ld   $15
              a2c1 00e7  ld   $e7
              a2c2 00b1  ld   $b1
              a2c3 00ce  ld   $ce
              a2c4 0094  ld   $94
              a2c5 00a7  ld   $a7
              a2c6 004c  ld   $4c
              a2c7 0008  ld   $08
              a2c8 00e7  ld   $e7
              a2c9 00ef  ld   $ef
              a2ca 0000  ld   $00
              a2cb 0000  ld   $00
              a2cc 0020  ld   $20
              a2cd 0034  ld   $34
              a2ce 00ee  ld   $ee
              a2cf 00a5  ld   $a5
              a2d0 00ce  ld   $ce
              a2d1 0048  ld   $48
              a2d2 0020  ld   $20
              a2d3 0015  ld   $15
              a2d4 00e7  ld   $e7
              a2d5 0068  ld   $68
              a2d6 0091  ld   $91
              a2d7 00ce  ld   $ce
              a2d8 0060  ld   $60
              a2d9 00ff  ld   $ff
              a2da 00ff  ld   $ff
              a2db 00ff  ld   $ff
              a2dc 0020  ld   $20
              a2dd 006c  ld   $6c
              a2de 00ee  ld   $ee
              a2df 00a5  ld   $a5
              a2e0 00ce  ld   $ce
              a2e1 0085  ld   $85
              a2e2 0046  ld   $46
              a2e3 00a5  ld   $a5
              a2e4 00cf  ld   $cf
              a2e5 0085  ld   $85
              a2e6 0047  ld   $47
              a2e7 004c  ld   $4c
              a2e8 0044  ld   $44
              a2e9 00e2  ld   $e2
              a2ea 0020  ld   $20
              a2eb 00e4  ld   $e4
              a2ec 00ee  ld   $ee
              a2ed 004c  ld   $4c
              a2ee 0034  ld   $34
              a2ef 00e1  ld   $e1
              a2f0 0020  ld   $20
              a2f1 00e4  ld   $e4
              a2f2 00ee  ld   $ee
              a2f3 00b4  ld   $b4
              a2f4 0088  ld   $88
              a2f5 00b5  ld   $b5
              a2f6 0050  ld   $50
              a2f7 0069  ld   $69
              a2f8 00fe  ld   $fe
              a2f9 00b0  ld   $b0
              a2fa 0001  ld   $01
              a2fb fe00  bra  ac          ;+-----------------------------------+
              a2fc fcfd  bra  $a2fd       ;|                                   |
              a2fd 1418  ld   $18,y       ;| Trampoline for page $a200 lookups |
              a2fe e006  jmp  y,$06       ;|                                   |
              a2ff c218  st   [$18]       ;+-----------------------------------+
              a300 0088  ld   $88
              a301 0085  ld   $85
              a302 00da  ld   $da
              a303 0084  ld   $84
              a304 00db  ld   $db
              a305 0018  ld   $18
              a306 0065  ld   $65
              a307 00ce  ld   $ce
              a308 0095  ld   $95
              a309 0050  ld   $50
              a30a 0098  ld   $98
              a30b 0065  ld   $65
              a30c 00cf  ld   $cf
              a30d 0095  ld   $95
              a30e 0088  ld   $88
              a30f 00a0  ld   $a0
              a310 0000  ld   $00
              a311 00b5  ld   $b5
              a312 0050  ld   $50
              a313 00d1  ld   $d1
              a314 00da  ld   $da
              a315 00c8  ld   $c8
              a316 00b5  ld   $b5
              a317 0088  ld   $88
              a318 00f1  ld   $f1
              a319 00da  ld   $da
              a31a 00b0  ld   $b0
              a31b 0080  ld   $80
              a31c 004c  ld   $4c
              a31d 0023  ld   $23
              a31e 00e8  ld   $e8
              a31f 0020  ld   $20
              a320 0015  ld   $15
              a321 00e7  ld   $e7
              a322 00a5  ld   $a5
              a323 004e  ld   $4e
              a324 0020  ld   $20
              a325 0008  ld   $08
              a326 00e7  ld   $e7
              a327 00a5  ld   $a5
              a328 004f  ld   $4f
              a329 00d0  ld   $d0
              a32a 0004  ld   $04
              a32b 00c5  ld   $c5
              a32c 004e  ld   $4e
              a32d 0069  ld   $69
              a32e 0000  ld   $00
              a32f 0029  ld   $29
              a330 007f  ld   $7f
              a331 0085  ld   $85
              a332 004f  ld   $4f
              a333 0095  ld   $95
              a334 00a8  ld   $a8
              a335 00a0  ld   $a0
              a336 0011  ld   $11
              a337 00a5  ld   $a5
              a338 004f  ld   $4f
              a339 000a  ld   $0a
              a33a 0018  ld   $18
              a33b 0069  ld   $69
              a33c 0040  ld   $40
              a33d 000a  ld   $0a
              a33e 0026  ld   $26
              a33f 004e  ld   $4e
              a340 0026  ld   $26
              a341 004f  ld   $4f
              a342 0088  ld   $88
              a343 00d0  ld   $d0
              a344 00f2  ld   $f2
              a345 00a5  ld   $a5
              a346 00ce  ld   $ce
              a347 0020  ld   $20
              a348 0008  ld   $08
              a349 00e7  ld   $e7
              a34a 00a5  ld   $a5
              a34b 00cf  ld   $cf
              a34c 0095  ld   $95
              a34d 00a8  ld   $a8
              a34e 004c  ld   $4c
              a34f 007a  ld   $7a
              a350 00e2  ld   $e2
              a351 0020  ld   $20
              a352 0015  ld   $15
              a353 00e7  ld   $e7
              a354 00a4  ld   $a4
              a355 00ce  ld   $ce
              a356 00c4  ld   $c4
              a357 004c  ld   $4c
              a358 00a5  ld   $a5
              a359 00cf  ld   $cf
              a35a 00e5  ld   $e5
              a35b 004d  ld   $4d
              a35c 0090  ld   $90
              a35d 001f  ld   $1f
              a35e 0084  ld   $84
              a35f 0048  ld   $48
              a360 00a5  ld   $a5
              a361 00cf  ld   $cf
              a362 0085  ld   $85
              a363 0049  ld   $49
              a364 004c  ld   $4c
              a365 00b6  ld   $b6
              a366 00ee  ld   $ee
              a367 0020  ld   $20
              a368 0015  ld   $15
              a369 00e7  ld   $e7
              a36a 00a4  ld   $a4
              a36b 00ce  ld   $ce
              a36c 00c4  ld   $c4
              a36d 00ca  ld   $ca
              a36e 00a5  ld   $a5
              a36f 00cf  ld   $cf
              a370 00e5  ld   $e5
              a371 00cb  ld   $cb
              a372 00b0  ld   $b0
              a373 0009  ld   $09
              a374 0084  ld   $84
              a375 004a  ld   $4a
              a376 00a5  ld   $a5
              a377 00cf  ld   $cf
              a378 0085  ld   $85
              a379 004b  ld   $4b
              a37a 004c  ld   $4c
              a37b 00b7  ld   $b7
              a37c 00e5  ld   $e5
              a37d 004c  ld   $4c
              a37e 00cb  ld   $cb
              a37f 00ee  ld   $ee
              a380 00ea  ld   $ea
              a381 00ea  ld   $ea
              a382 00ea  ld   $ea
              a383 00ea  ld   $ea
              a384 0020  ld   $20
              a385 00c9  ld   $c9
              a386 00ef  ld   $ef
              a387 0020  ld   $20
              a388 0071  ld   $71
              a389 00e1  ld   $e1
              a38a 004c  ld   $4c
              a38b 00bf  ld   $bf
              a38c 00ef  ld   $ef
              a38d 0020  ld   $20
              a38e 0003  ld   $03
              a38f 00ee  ld   $ee
              a390 00a9  ld   $a9
              a391 00ff  ld   $ff
              a392 0085  ld   $85
              a393 00c8  ld   $c8
              a394 00a9  ld   $a9
              a395 0074  ld   $74
              a396 008d  ld   $8d
              a397 0000  ld   $00
              a398 0002  ld   $02
              a399 0060  ld   $60
              a39a 0020  ld   $20
              a39b 0036  ld   $36
              a39c 00e7  ld   $e7
              a39d 00e8  ld   $e8
              a39e 0020  ld   $20
              a39f 0036  ld   $36
              a3a0 00e7  ld   $e7
              a3a1 00b5  ld   $b5
              a3a2 0050  ld   $50
              a3a3 0060  ld   $60
              a3a4 00a9  ld   $a9
              a3a5 0000  ld   $00
              a3a6 0085  ld   $85
              a3a7 004a  ld   $4a
              a3a8 0085  ld   $85
              a3a9 004c  ld   $4c
              a3aa 00a9  ld   $a9
              a3ab 0008  ld   $08
              a3ac 0085  ld   $85
              a3ad 004b  ld   $4b
              a3ae 00a9  ld   $a9
              a3af 0010  ld   $10
              a3b0 0085  ld   $85
              a3b1 004d  ld   $4d
              a3b2 004c  ld   $4c
              a3b3 00ad  ld   $ad
              a3b4 00e5  ld   $e5
              a3b5 00d5  ld   $d5
              a3b6 0088  ld   $88
              a3b7 00d0  ld   $d0
              a3b8 0001  ld   $01
              a3b9 0018  ld   $18
              a3ba 004c  ld   $4c
              a3bb 0002  ld   $02
              a3bc 00e1  ld   $e1
              a3bd 0020  ld   $20
              a3be 00b7  ld   $b7
              a3bf 00e5  ld   $e5
              a3c0 004c  ld   $4c
              a3c1 0036  ld   $36
              a3c2 00e8  ld   $e8
              a3c3 0020  ld   $20
              a3c4 00b7  ld   $b7
              a3c5 00e5  ld   $e5
              a3c6 004c  ld   $4c
              a3c7 005b  ld   $5b
              a3c8 00e8  ld   $e8
              a3c9 00e0  ld   $e0
              a3ca 0080  ld   $80
              a3cb 00d0  ld   $d0
              a3cc 0001  ld   $01
              a3cd 0088  ld   $88
              a3ce 004c  ld   $4c
              a3cf 000c  ld   $0c
              a3d0 00e0  ld   $e0
              a3d1 00ff  ld   $ff
              a3d2 0000  ld   $00
              a3d3 0000  ld   $00
              a3d4 00d8  ld   $d8
              a3d5 0058  ld   $58
              a3d6 00a0  ld   $a0
              a3d7 007f  ld   $7f
              a3d8 008c  ld   $8c
              a3d9 0012  ld   $12
              a3da 00d0  ld   $d0
              a3db 00a9  ld   $a9
              a3dc 00a7  ld   $a7
              a3dd 008d  ld   $8d
              a3de 0011  ld   $11
              a3df 00d0  ld   $d0
              a3e0 008d  ld   $8d
              a3e1 0013  ld   $13
              a3e2 00d0  ld   $d0
              a3e3 00c9  ld   $c9
              a3e4 00df  ld   $df
              a3e5 00f0  ld   $f0
              a3e6 0013  ld   $13
              a3e7 00c9  ld   $c9
              a3e8 009b  ld   $9b
              a3e9 00f0  ld   $f0
              a3ea 0003  ld   $03
              a3eb 00c8  ld   $c8
              a3ec 0010  ld   $10
              a3ed 000f  ld   $0f
              a3ee 00a9  ld   $a9
              a3ef 00dc  ld   $dc
              a3f0 0020  ld   $20
              a3f1 00ef  ld   $ef
              a3f2 00ff  ld   $ff
              a3f3 00a9  ld   $a9
              a3f4 008d  ld   $8d
              a3f5 0020  ld   $20
              a3f6 00ef  ld   $ef
              a3f7 00ff  ld   $ff
              a3f8 00a0  ld   $a0
              a3f9 0001  ld   $01
              a3fa 0088  ld   $88
              a3fb fe00  bra  ac          ;+-----------------------------------+
              a3fc fcfd  bra  $a3fd       ;|                                   |
              a3fd 1418  ld   $18,y       ;| Trampoline for page $a300 lookups |
              a3fe e006  jmp  y,$06       ;|                                   |
              a3ff c218  st   [$18]       ;+-----------------------------------+
              a400 0030  ld   $30
              a401 00f6  ld   $f6
              a402 00ad  ld   $ad
              a403 0011  ld   $11
              a404 00d0  ld   $d0
              a405 0010  ld   $10
              a406 00fb  ld   $fb
              a407 00ad  ld   $ad
              a408 0010  ld   $10
              a409 00d0  ld   $d0
              a40a 0099  ld   $99
              a40b 0000  ld   $00
              a40c 0002  ld   $02
              a40d 0020  ld   $20
              a40e 00ef  ld   $ef
              a40f 00ff  ld   $ff
              a410 00c9  ld   $c9
              a411 008d  ld   $8d
              a412 00d0  ld   $d0
              a413 00d4  ld   $d4
              a414 00a0  ld   $a0
              a415 00ff  ld   $ff
              a416 00a9  ld   $a9
              a417 0000  ld   $00
              a418 00aa  ld   $aa
              a419 000a  ld   $0a
              a41a 0085  ld   $85
              a41b 003b  ld   $3b
              a41c 00c8  ld   $c8
              a41d 00b9  ld   $b9
              a41e 0000  ld   $00
              a41f 0002  ld   $02
              a420 00c9  ld   $c9
              a421 008d  ld   $8d
              a422 00f0  ld   $f0
              a423 00d4  ld   $d4
              a424 00c9  ld   $c9
              a425 00ae  ld   $ae
              a426 0090  ld   $90
              a427 00f4  ld   $f4
              a428 00f0  ld   $f0
              a429 00f0  ld   $f0
              a42a 00c9  ld   $c9
              a42b 00ba  ld   $ba
              a42c 00f0  ld   $f0
              a42d 00eb  ld   $eb
              a42e 00c9  ld   $c9
              a42f 00d2  ld   $d2
              a430 00f0  ld   $f0
              a431 003b  ld   $3b
              a432 0086  ld   $86
              a433 0038  ld   $38
              a434 0086  ld   $86
              a435 0039  ld   $39
              a436 0084  ld   $84
              a437 003a  ld   $3a
              a438 00b9  ld   $b9
              a439 0000  ld   $00
              a43a 0002  ld   $02
              a43b 0049  ld   $49
              a43c 00b0  ld   $b0
              a43d 00c9  ld   $c9
              a43e 000a  ld   $0a
              a43f 0090  ld   $90
              a440 0006  ld   $06
              a441 0069  ld   $69
              a442 0088  ld   $88
              a443 00c9  ld   $c9
              a444 00fa  ld   $fa
              a445 0090  ld   $90
              a446 0011  ld   $11
              a447 000a  ld   $0a
              a448 000a  ld   $0a
              a449 000a  ld   $0a
              a44a 000a  ld   $0a
              a44b 00a2  ld   $a2
              a44c 0004  ld   $04
              a44d 000a  ld   $0a
              a44e 0026  ld   $26
              a44f 0038  ld   $38
              a450 0026  ld   $26
              a451 0039  ld   $39
              a452 00ca  ld   $ca
              a453 00d0  ld   $d0
              a454 00f8  ld   $f8
              a455 00c8  ld   $c8
              a456 00d0  ld   $d0
              a457 00e0  ld   $e0
              a458 00c4  ld   $c4
              a459 003a  ld   $3a
              a45a 00f0  ld   $f0
              a45b 0097  ld   $97
              a45c 0024  ld   $24
              a45d 003b  ld   $3b
              a45e 0050  ld   $50
              a45f 0010  ld   $10
              a460 00a5  ld   $a5
              a461 0038  ld   $38
              a462 0081  ld   $81
              a463 0036  ld   $36
              a464 00e6  ld   $e6
              a465 0036  ld   $36
              a466 00d0  ld   $d0
              a467 00b5  ld   $b5
              a468 00e6  ld   $e6
              a469 0037  ld   $37
              a46a 004c  ld   $4c
              a46b 0044  ld   $44
              a46c 00ff  ld   $ff
              a46d 006c  ld   $6c
              a46e 0034  ld   $34
              a46f 0000  ld   $00
              a470 0030  ld   $30
              a471 002b  ld   $2b
              a472 00a2  ld   $a2
              a473 0002  ld   $02
              a474 00b5  ld   $b5
              a475 0037  ld   $37
              a476 0095  ld   $95
              a477 0035  ld   $35
              a478 0095  ld   $95
              a479 0033  ld   $33
              a47a 00ca  ld   $ca
              a47b 00d0  ld   $d0
              a47c 00f7  ld   $f7
              a47d 00d0  ld   $d0
              a47e 0014  ld   $14
              a47f 00a9  ld   $a9
              a480 008d  ld   $8d
              a481 0020  ld   $20
              a482 00ef  ld   $ef
              a483 00ff  ld   $ff
              a484 00a5  ld   $a5
              a485 0035  ld   $35
              a486 0020  ld   $20
              a487 00dc  ld   $dc
              a488 00ff  ld   $ff
              a489 00a5  ld   $a5
              a48a 0034  ld   $34
              a48b 0020  ld   $20
              a48c 00dc  ld   $dc
              a48d 00ff  ld   $ff
              a48e 00a9  ld   $a9
              a48f 00ba  ld   $ba
              a490 0020  ld   $20
              a491 00ef  ld   $ef
              a492 00ff  ld   $ff
              a493 00a9  ld   $a9
              a494 00a0  ld   $a0
              a495 0020  ld   $20
              a496 00ef  ld   $ef
              a497 00ff  ld   $ff
              a498 00a1  ld   $a1
              a499 0034  ld   $34
              a49a 0020  ld   $20
              a49b 00dc  ld   $dc
              a49c 00ff  ld   $ff
              a49d 0086  ld   $86
              a49e 003b  ld   $3b
              a49f 00a5  ld   $a5
              a4a0 0034  ld   $34
              a4a1 00c5  ld   $c5
              a4a2 0038  ld   $38
              a4a3 00a5  ld   $a5
              a4a4 0035  ld   $35
              a4a5 00e5  ld   $e5
              a4a6 0039  ld   $39
              a4a7 00b0  ld   $b0
              a4a8 00c1  ld   $c1
              a4a9 00e6  ld   $e6
              a4aa 0034  ld   $34
              a4ab 00d0  ld   $d0
              a4ac 0002  ld   $02
              a4ad 00e6  ld   $e6
              a4ae 0035  ld   $35
              a4af 00a5  ld   $a5
              a4b0 0034  ld   $34
              a4b1 0029  ld   $29
              a4b2 0007  ld   $07
              a4b3 0010  ld   $10
              a4b4 00c8  ld   $c8
              a4b5 0048  ld   $48
              a4b6 004a  ld   $4a
              a4b7 004a  ld   $4a
              a4b8 004a  ld   $4a
              a4b9 004a  ld   $4a
              a4ba 0020  ld   $20
              a4bb 00e5  ld   $e5
              a4bc 00ff  ld   $ff
              a4bd 0068  ld   $68
              a4be 0029  ld   $29
              a4bf 000f  ld   $0f
              a4c0 0009  ld   $09
              a4c1 00b0  ld   $b0
              a4c2 00c9  ld   $c9
              a4c3 00ba  ld   $ba
              a4c4 0090  ld   $90
              a4c5 0002  ld   $02
              a4c6 0069  ld   $69
              a4c7 0006  ld   $06
              a4c8 008d  ld   $8d
              a4c9 0012  ld   $12
              a4ca 00d0  ld   $d0
              a4cb 002c  ld   $2c
              a4cc 0012  ld   $12
              a4cd 00d0  ld   $d0
              a4ce 00d0  ld   $d0
              a4cf 00fb  ld   $fb
              a4d0 0060  ld   $60
              a4d1 0000  ld   $00
              a4d2 0000  ld   $00
              a4d3 0000  ld   $00
              * 5 times
              a4d6 00ff  ld   $ff
              a4d7 00db  ld   $db
              a4d8 005e  ld   $5e
              a4d9 0000  ld   $00
              a4da 0000  ld   $00         ;End of Apps/Apple-1/Apple-1_v2.gt1, size 7559
                                          ;+-----------------------------------+
                                          ;| Apps/MSBASIC/MSBASIC_v1.gt1       |
                                          ;+-----------------------------------+
              a4db dc41  st   $41,[y,x++] ;'A'
              a4dc dc70  st   $70,[y,x++] ;'p'
              a4dd dc70  st   $70,[y,x++] ;'p'
              a4de dc6c  st   $6c,[y,x++] ;'l'
              a4df dc65  st   $65,[y,x++] ;'e'
              a4e0 dc31  st   $31,[y,x++] ;'1'
              a4e1 dc00  st   $00,[y,x++] ;'\x00'
              a4e2 dc00  st   $00,[y,x++] ;'\x00'
              a4e3 0054  ld   $54
              a4e4 c218  st   [$18]
              a4e5 0087  ld   $87
              a4e6 14e1  ld   $e1,y
              a4e7 e071  jmp  y,$71
              a4e8 c219  st   [$19]
MSBASIC:      a4e9 0002  ld   $02
              a4ea 0000  ld   $00
              a4eb 0012  ld   $12
              a4ec 001a  ld   $1a
              a4ed 0021  ld   $21
              a4ee 00e6  ld   $e6
              a4ef 0038  ld   $38
              a4f0 0035  ld   $35
              a4f1 0053  ld   $53
              a4f2 000b  ld   $0b
              a4f3 0021  ld   $21
              a4f4 000e  ld   $0e
              a4f5 00f3  ld   $f3
              a4f6 0017  ld   $17
              a4f7 0090  ld   $90
              a4f8 0005  ld   $05
              a4f9 0011  ld   $11
              a4fa 0000  ld   $00
              a4fb fe00  bra  ac          ;+-----------------------------------+
              a4fc fcfd  bra  $a4fd       ;|                                   |
              a4fd 1418  ld   $18,y       ;| Trampoline for page $a400 lookups |
              a4fe e006  jmp  y,$06       ;|                                   |
              a4ff c218  st   [$18]       ;+-----------------------------------+
              a500 0024  ld   $24
              a501 00cf  ld   $cf
              a502 0018  ld   $18
              a503 0002  ld   $02
              a504 0018  ld   $18
              a505 00e8  ld   $e8
              a506 0027  ld   $27
              a507 0009  ld   $09
              a508 003e  ld   $3e
              a509 0008  ld   $08
              a50a 0090  ld   $90
              a50b 000d  ld   $0d
              a50c 00e6  ld   $e6
              a50d 0009  ld   $09
              a50e 0051  ld   $51
              a50f 000c  ld   $0c
              a510 00c5  ld   $c5
              a511 0010  ld   $10
              a512 007f  ld   $7f
              a513 000c  ld   $0c
              a514 0093  ld   $93
              a515 000a  ld   $0a
              a516 0093  ld   $93
              a517 0009  ld   $09
              a518 006b  ld   $6b
              a519 0009  ld   $09
              a51a 0016  ld   $16
              a51b 000a  ld   $0a
              a51c 0016  ld   $16
              a51d 0009  ld   $09
              a51e 0076  ld   $76
              a51f 0009  ld   $09
              a520 00c0  ld   $c0
              a521 0009  ld   $09
              a522 0029  ld   $29
              a523 000a  ld   $0a
              a524 0025  ld   $25
              a525 0009  ld   $09
              a526 0039  ld   $39
              a527 000a  ld   $0a
              a528 0071  ld   $71
              a529 0018  ld   $18
              a52a 00ff  ld   $ff
              a52b 0031  ld   $31
              a52c 00ff  ld   $ff
              a52d 002f  ld   $2f
              a52e 006d  ld   $6d
              a52f 000f  ld   $0f
              a530 00ee  ld   $ee
              a531 0013  ld   $13
              a532 0068  ld   $68
              a533 0018  ld   $18
              a534 0078  ld   $78
              a535 000b  ld   $0b
              a536 0051  ld   $51
              a537 0009  ld   $09
              a538 009b  ld   $9b
              a539 0007  ld   $07
              a53a 005d  ld   $5d
              a53b 0007  ld   $07
              a53c 003f  ld   $3f
              a53d 000c  ld   $0c
              a53e 0041  ld   $41
              a53f 0007  ld   $07
              a540 00b1  ld   $b1
              a541 001c  ld   $1c
              a542 0044  ld   $44
              a543 001d  ld   $1d
              a544 00d0  ld   $d0
              a545 001c  ld   $1c
              a546 0038  ld   $38
              a547 0000  ld   $00
              a548 00b8  ld   $b8
              a549 0013  ld   $13
              a54a 00d9  ld   $d9
              a54b 0013  ld   $13
              a54c 00ca  ld   $ca
              a54d 001f  ld   $1f
              a54e 00eb  ld   $eb
              a54f 0020  ld   $20
              a550 0062  ld   $62
              a551 001a  ld   $1a
              a552 0046  ld   $46
              a553 0020  ld   $20
              a554 0040  ld   $40
              a555 0021  ld   $21
              a556 0047  ld   $47
              a557 0021  ld   $21
              a558 0090  ld   $90
              a559 0021  ld   $21
              a55a 00fe  ld   $fe
              a55b 0021  ld   $21
              a55c 004a  ld   $4a
              a55d 0018  ld   $18
              a55e 00b8  ld   $b8
              a55f 0017  ld   $17
              a560 00a1  ld   $a1
              a561 0014  ld   $14
              a562 00e9  ld   $e9
              a563 0017  ld   $17
              a564 00c7  ld   $c7
              a565 0017  ld   $17
              a566 0028  ld   $28
              a567 0017  ld   $17
              a568 003c  ld   $3c
              a569 0017  ld   $17
              a56a 0068  ld   $68
              a56b 0017  ld   $17
              a56c 0073  ld   $73
              a56d 0017  ld   $17
              a56e 0079  ld   $79
              a56f 00e1  ld   $e1
              a570 0018  ld   $18
              a571 0079  ld   $79
              a572 0097  ld   $97
              a573 0018  ld   $18
              a574 007b  ld   $7b
              a575 00a2  ld   $a2
              a576 001a  ld   $1a
              a577 007b  ld   $7b
              a578 0089  ld   $89
              a579 001b  ld   $1b
              a57a 007f  ld   $7f
              a57b 00d3  ld   $d3
              a57c 001f  ld   $1f
              a57d 0050  ld   $50
              a57e 002d  ld   $2d
              a57f 0010  ld   $10
              a580 0046  ld   $46
              a581 002a  ld   $2a
              a582 0010  ld   $10
              a583 007d  ld   $7d
              a584 000c  ld   $0c
              a585 0020  ld   $20
              a586 005a  ld   $5a
              a587 0039  ld   $39
              a588 000f  ld   $0f
              a589 0064  ld   $64
              a58a 005a  ld   $5a
              a58b 0010  ld   $10
              a58c 0045  ld   $45
              a58d 004e  ld   $4e
              a58e 00c4  ld   $c4
              a58f 0046  ld   $46
              a590 004f  ld   $4f
              a591 00d2  ld   $d2
              a592 004e  ld   $4e
              a593 0045  ld   $45
              a594 0058  ld   $58
              a595 00d4  ld   $d4
              a596 0044  ld   $44
              a597 0041  ld   $41
              a598 0054  ld   $54
              a599 00c1  ld   $c1
              a59a 0049  ld   $49
              a59b 004e  ld   $4e
              a59c 0050  ld   $50
              a59d 0055  ld   $55
              a59e 00d4  ld   $d4
              a59f 0044  ld   $44
              a5a0 0049  ld   $49
              a5a1 00cd  ld   $cd
              a5a2 0052  ld   $52
              a5a3 0045  ld   $45
              a5a4 0041  ld   $41
              a5a5 00c4  ld   $c4
              a5a6 004c  ld   $4c
              a5a7 0045  ld   $45
              a5a8 00d4  ld   $d4
              a5a9 0047  ld   $47
              a5aa 004f  ld   $4f
              a5ab 0054  ld   $54
              a5ac 00cf  ld   $cf
              a5ad 0052  ld   $52
              a5ae 0055  ld   $55
              a5af 00ce  ld   $ce
              a5b0 0049  ld   $49
              a5b1 00c6  ld   $c6
              a5b2 0052  ld   $52
              a5b3 0045  ld   $45
              a5b4 0053  ld   $53
              a5b5 0054  ld   $54
              a5b6 004f  ld   $4f
              a5b7 0052  ld   $52
              a5b8 00c5  ld   $c5
              a5b9 0047  ld   $47
              a5ba 004f  ld   $4f
              a5bb 0053  ld   $53
              a5bc 0055  ld   $55
              a5bd 00c2  ld   $c2
              a5be 0052  ld   $52
              a5bf 0045  ld   $45
              a5c0 0054  ld   $54
              a5c1 0055  ld   $55
              a5c2 0052  ld   $52
              a5c3 00ce  ld   $ce
              a5c4 0052  ld   $52
              a5c5 0045  ld   $45
              a5c6 00cd  ld   $cd
              a5c7 0053  ld   $53
              a5c8 0054  ld   $54
              a5c9 004f  ld   $4f
              a5ca 00d0  ld   $d0
              a5cb 004f  ld   $4f
              a5cc 00ce  ld   $ce
              a5cd 0057  ld   $57
              a5ce 0041  ld   $41
              a5cf 0049  ld   $49
              a5d0 00d4  ld   $d4
              a5d1 004c  ld   $4c
              a5d2 004f  ld   $4f
              a5d3 0041  ld   $41
              a5d4 00c4  ld   $c4
              a5d5 0053  ld   $53
              a5d6 0041  ld   $41
              a5d7 0056  ld   $56
              a5d8 00c5  ld   $c5
              a5d9 0056  ld   $56
              a5da 0045  ld   $45
              a5db 0052  ld   $52
              a5dc 0049  ld   $49
              a5dd 0046  ld   $46
              a5de 00d9  ld   $d9
              a5df 0044  ld   $44
              a5e0 0045  ld   $45
              a5e1 00c6  ld   $c6
              a5e2 0050  ld   $50
              a5e3 004f  ld   $4f
              a5e4 004b  ld   $4b
              a5e5 00c5  ld   $c5
              a5e6 0050  ld   $50
              a5e7 0052  ld   $52
              a5e8 0049  ld   $49
              a5e9 004e  ld   $4e
              a5ea 00d4  ld   $d4
              a5eb 0043  ld   $43
              a5ec 004f  ld   $4f
              a5ed 004e  ld   $4e
              a5ee 0003  ld   $03
              a5ef 0000  ld   $00
              a5f0 0000  ld   $00
              a5f1 00d4  ld   $d4
              a5f2 004c  ld   $4c
              a5f3 0049  ld   $49
              a5f4 0053  ld   $53
              a5f5 00d4  ld   $d4
              a5f6 0043  ld   $43
              a5f7 004c  ld   $4c
              a5f8 00d2  ld   $d2
              a5f9 0047  ld   $47
              a5fa 0045  ld   $45
              a5fb fe00  bra  ac          ;+-----------------------------------+
              a5fc fcfd  bra  $a5fd       ;|                                   |
              a5fd 1418  ld   $18,y       ;| Trampoline for page $a500 lookups |
              a5fe e006  jmp  y,$06       ;|                                   |
              a5ff c218  st   [$18]       ;+-----------------------------------+
              a600 00d4  ld   $d4
              a601 004e  ld   $4e
              a602 0045  ld   $45
              a603 00d7  ld   $d7
              a604 0054  ld   $54
              a605 0041  ld   $41
              a606 0042  ld   $42
              a607 00a8  ld   $a8
              a608 0054  ld   $54
              a609 00cf  ld   $cf
              a60a 0046  ld   $46
              a60b 00ce  ld   $ce
              a60c 0053  ld   $53
              a60d 0050  ld   $50
              a60e 0043  ld   $43
              a60f 00a8  ld   $a8
              a610 0054  ld   $54
              a611 0048  ld   $48
              a612 0045  ld   $45
              a613 00ce  ld   $ce
              a614 004e  ld   $4e
              a615 004f  ld   $4f
              a616 00d4  ld   $d4
              a617 0053  ld   $53
              a618 0054  ld   $54
              a619 0045  ld   $45
              a61a 00d0  ld   $d0
              a61b 00ab  ld   $ab
              a61c 00ad  ld   $ad
              a61d 00aa  ld   $aa
              a61e 00af  ld   $af
              a61f 00de  ld   $de
              a620 0041  ld   $41
              a621 004e  ld   $4e
              a622 00c4  ld   $c4
              a623 004f  ld   $4f
              a624 00d2  ld   $d2
              a625 00be  ld   $be
              a626 00bd  ld   $bd
              a627 00bc  ld   $bc
              a628 0053  ld   $53
              a629 0047  ld   $47
              a62a 00ce  ld   $ce
              a62b 0049  ld   $49
              a62c 004e  ld   $4e
              a62d 00d4  ld   $d4
              a62e 0041  ld   $41
              a62f 0042  ld   $42
              a630 00d3  ld   $d3
              a631 0055  ld   $55
              a632 0053  ld   $53
              a633 00d2  ld   $d2
              a634 0046  ld   $46
              a635 0052  ld   $52
              a636 00c5  ld   $c5
              a637 0050  ld   $50
              a638 004f  ld   $4f
              a639 00d3  ld   $d3
              a63a 0053  ld   $53
              a63b 0051  ld   $51
              a63c 00d2  ld   $d2
              a63d 0052  ld   $52
              a63e 004e  ld   $4e
              a63f 00c4  ld   $c4
              a640 004c  ld   $4c
              a641 004f  ld   $4f
              a642 00c7  ld   $c7
              a643 0045  ld   $45
              a644 0058  ld   $58
              a645 00d0  ld   $d0
              a646 0043  ld   $43
              a647 004f  ld   $4f
              a648 00d3  ld   $d3
              a649 0053  ld   $53
              a64a 0049  ld   $49
              a64b 00ce  ld   $ce
              a64c 0054  ld   $54
              a64d 0041  ld   $41
              a64e 00ce  ld   $ce
              a64f 0041  ld   $41
              a650 0054  ld   $54
              a651 00ce  ld   $ce
              a652 0050  ld   $50
              a653 0045  ld   $45
              a654 0045  ld   $45
              a655 00cb  ld   $cb
              a656 004c  ld   $4c
              a657 0045  ld   $45
              a658 00ce  ld   $ce
              a659 0053  ld   $53
              a65a 0054  ld   $54
              a65b 0052  ld   $52
              a65c 00a4  ld   $a4
              a65d 0056  ld   $56
              a65e 0041  ld   $41
              a65f 00cc  ld   $cc
              a660 0041  ld   $41
              a661 0053  ld   $53
              a662 00c3  ld   $c3
              a663 0043  ld   $43
              a664 0048  ld   $48
              a665 0052  ld   $52
              a666 00a4  ld   $a4
              a667 004c  ld   $4c
              a668 0045  ld   $45
              a669 0046  ld   $46
              a66a 0054  ld   $54
              a66b 00a4  ld   $a4
              a66c 0052  ld   $52
              a66d 0049  ld   $49
              a66e 0047  ld   $47
              a66f 0048  ld   $48
              a670 0054  ld   $54
              a671 00a4  ld   $a4
              a672 004d  ld   $4d
              a673 0049  ld   $49
              a674 0044  ld   $44
              a675 00a4  ld   $a4
              a676 0047  ld   $47
              a677 00cf  ld   $cf
              a678 0000  ld   $00
              a679 004e  ld   $4e
              a67a 0045  ld   $45
              a67b 0058  ld   $58
              a67c 0054  ld   $54
              a67d 0020  ld   $20
              a67e 0057  ld   $57
              a67f 0049  ld   $49
              a680 0054  ld   $54
              a681 0048  ld   $48
              a682 004f  ld   $4f
              a683 0055  ld   $55
              a684 0054  ld   $54
              a685 0020  ld   $20
              a686 0046  ld   $46
              a687 004f  ld   $4f
              a688 00d2  ld   $d2
              a689 0053  ld   $53
              a68a 0059  ld   $59
              a68b 004e  ld   $4e
              a68c 0054  ld   $54
              a68d 0041  ld   $41
              a68e 00d8  ld   $d8
              a68f 0052  ld   $52
              a690 0045  ld   $45
              a691 0054  ld   $54
              a692 0055  ld   $55
              a693 0052  ld   $52
              a694 004e  ld   $4e
              a695 0020  ld   $20
              a696 0057  ld   $57
              a697 0049  ld   $49
              a698 0054  ld   $54
              a699 0048  ld   $48
              a69a 004f  ld   $4f
              a69b 0055  ld   $55
              a69c 0054  ld   $54
              a69d 0020  ld   $20
              a69e 0047  ld   $47
              a69f 004f  ld   $4f
              a6a0 0053  ld   $53
              a6a1 0055  ld   $55
              a6a2 00c2  ld   $c2
              a6a3 004f  ld   $4f
              a6a4 0055  ld   $55
              a6a5 0054  ld   $54
              a6a6 0020  ld   $20
              a6a7 004f  ld   $4f
              a6a8 0046  ld   $46
              a6a9 0020  ld   $20
              a6aa 0044  ld   $44
              a6ab 0041  ld   $41
              a6ac 0054  ld   $54
              a6ad 00c1  ld   $c1
              a6ae 0049  ld   $49
              a6af 004c  ld   $4c
              a6b0 004c  ld   $4c
              a6b1 0045  ld   $45
              a6b2 0047  ld   $47
              a6b3 0041  ld   $41
              a6b4 004c  ld   $4c
              a6b5 0020  ld   $20
              a6b6 0051  ld   $51
              a6b7 0055  ld   $55
              a6b8 0041  ld   $41
              a6b9 004e  ld   $4e
              a6ba 0054  ld   $54
              a6bb 0049  ld   $49
              a6bc 0054  ld   $54
              a6bd 00d9  ld   $d9
              a6be 004f  ld   $4f
              a6bf 0056  ld   $56
              a6c0 0045  ld   $45
              a6c1 0052  ld   $52
              a6c2 0046  ld   $46
              a6c3 004c  ld   $4c
              a6c4 004f  ld   $4f
              a6c5 00d7  ld   $d7
              a6c6 004f  ld   $4f
              a6c7 0055  ld   $55
              a6c8 0054  ld   $54
              a6c9 0020  ld   $20
              a6ca 004f  ld   $4f
              a6cb 0046  ld   $46
              a6cc 0020  ld   $20
              a6cd 004d  ld   $4d
              a6ce 0045  ld   $45
              a6cf 004d  ld   $4d
              a6d0 004f  ld   $4f
              a6d1 0052  ld   $52
              a6d2 00d9  ld   $d9
              a6d3 0055  ld   $55
              a6d4 004e  ld   $4e
              a6d5 0044  ld   $44
              a6d6 0045  ld   $45
              a6d7 0046  ld   $46
              a6d8 0027  ld   $27
              a6d9 0044  ld   $44
              a6da 0020  ld   $20
              a6db 0053  ld   $53
              a6dc 0054  ld   $54
              a6dd 0041  ld   $41
              a6de 0054  ld   $54
              a6df 0045  ld   $45
              a6e0 004d  ld   $4d
              a6e1 0045  ld   $45
              a6e2 004e  ld   $4e
              a6e3 00d4  ld   $d4
              a6e4 0042  ld   $42
              a6e5 0041  ld   $41
              a6e6 0044  ld   $44
              a6e7 0020  ld   $20
              a6e8 0053  ld   $53
              a6e9 0055  ld   $55
              a6ea 0042  ld   $42
              a6eb 0053  ld   $53
              a6ec 0043  ld   $43
              a6ed 0052  ld   $52
              a6ee 0049  ld   $49
              a6ef 0050  ld   $50
              a6f0 00d4  ld   $d4
              a6f1 0052  ld   $52
              a6f2 0045  ld   $45
              a6f3 0044  ld   $44
              a6f4 0049  ld   $49
              a6f5 004d  ld   $4d
              a6f6 0004  ld   $04
              a6f7 0000  ld   $00
              a6f8 0000  ld   $00
              a6f9 0027  ld   $27
              a6fa 0044  ld   $44
              a6fb fe00  bra  ac          ;+-----------------------------------+
              a6fc fcfd  bra  $a6fd       ;|                                   |
              a6fd 1418  ld   $18,y       ;| Trampoline for page $a600 lookups |
              a6fe e006  jmp  y,$06       ;|                                   |
              a6ff c218  st   [$18]       ;+-----------------------------------+
              a700 0020  ld   $20
              a701 0041  ld   $41
              a702 0052  ld   $52
              a703 0052  ld   $52
              a704 0041  ld   $41
              a705 00d9  ld   $d9
              a706 0044  ld   $44
              a707 0049  ld   $49
              a708 0056  ld   $56
              a709 0049  ld   $49
              a70a 0053  ld   $53
              a70b 0049  ld   $49
              a70c 004f  ld   $4f
              a70d 004e  ld   $4e
              a70e 0020  ld   $20
              a70f 0042  ld   $42
              a710 0059  ld   $59
              a711 0020  ld   $20
              a712 005a  ld   $5a
              a713 0045  ld   $45
              a714 0052  ld   $52
              a715 00cf  ld   $cf
              a716 0049  ld   $49
              a717 004c  ld   $4c
              a718 004c  ld   $4c
              a719 0045  ld   $45
              a71a 0047  ld   $47
              a71b 0041  ld   $41
              a71c 004c  ld   $4c
              a71d 0020  ld   $20
              a71e 0044  ld   $44
              a71f 0049  ld   $49
              a720 0052  ld   $52
              a721 0045  ld   $45
              a722 0043  ld   $43
              a723 00d4  ld   $d4
              a724 0054  ld   $54
              a725 0059  ld   $59
              a726 0050  ld   $50
              a727 0045  ld   $45
              a728 0020  ld   $20
              a729 004d  ld   $4d
              a72a 0049  ld   $49
              a72b 0053  ld   $53
              a72c 004d  ld   $4d
              a72d 0041  ld   $41
              a72e 0054  ld   $54
              a72f 0043  ld   $43
              a730 00c8  ld   $c8
              a731 0053  ld   $53
              a732 0054  ld   $54
              a733 0052  ld   $52
              a734 0049  ld   $49
              a735 004e  ld   $4e
              a736 0047  ld   $47
              a737 0020  ld   $20
              a738 0054  ld   $54
              a739 004f  ld   $4f
              a73a 004f  ld   $4f
              a73b 0020  ld   $20
              a73c 004c  ld   $4c
              a73d 004f  ld   $4f
              a73e 004e  ld   $4e
              a73f 00c7  ld   $c7
              a740 0046  ld   $46
              a741 004f  ld   $4f
              a742 0052  ld   $52
              a743 004d  ld   $4d
              a744 0055  ld   $55
              a745 004c  ld   $4c
              a746 0041  ld   $41
              a747 0020  ld   $20
              a748 0054  ld   $54
              a749 004f  ld   $4f
              a74a 004f  ld   $4f
              a74b 0020  ld   $20
              a74c 0043  ld   $43
              a74d 004f  ld   $4f
              a74e 004d  ld   $4d
              a74f 0050  ld   $50
              a750 004c  ld   $4c
              a751 0045  ld   $45
              a752 00d8  ld   $d8
              a753 0043  ld   $43
              a754 0041  ld   $41
              a755 004e  ld   $4e
              a756 0027  ld   $27
              a757 0054  ld   $54
              a758 0020  ld   $20
              a759 0043  ld   $43
              a75a 004f  ld   $4f
              a75b 004e  ld   $4e
              a75c 0054  ld   $54
              a75d 0049  ld   $49
              a75e 004e  ld   $4e
              a75f 0055  ld   $55
              a760 00c5  ld   $c5
              a761 0055  ld   $55
              a762 004e  ld   $4e
              a763 0044  ld   $44
              a764 0045  ld   $45
              a765 0046  ld   $46
              a766 0027  ld   $27
              a767 0044  ld   $44
              a768 0020  ld   $20
              a769 0046  ld   $46
              a76a 0055  ld   $55
              a76b 004e  ld   $4e
              a76c 0043  ld   $43
              a76d 0054  ld   $54
              a76e 0049  ld   $49
              a76f 004f  ld   $4f
              a770 00ce  ld   $ce
              a771 0020  ld   $20
              a772 0000  ld   $00
              a773 002e  ld   $2e
              a774 0038  ld   $38
              a775 004c  ld   $4c
              a776 00cc  ld   $cc
              a777 000f  ld   $0f
              a778 00a0  ld   $a0
              a779 001b  ld   $1b
              a77a 0018  ld   $18
              a77b 0088  ld   $88
              a77c 0069  ld   $69
              a77d 0006  ld   $06
              a77e 0090  ld   $90
              a77f 00fb  ld   $fb
              a780 0060  ld   $60
              a781 0020  ld   $20
              a782 0045  ld   $45
              a783 0052  ld   $52
              a784 0052  ld   $52
              a785 004f  ld   $4f
              a786 0052  ld   $52
              a787 0000  ld   $00
              a788 0020  ld   $20
              a789 0049  ld   $49
              a78a 004e  ld   $4e
              a78b 0020  ld   $20
              a78c 0000  ld   $00
              a78d 000d  ld   $0d
              a78e 000a  ld   $0a
              a78f 0052  ld   $52
              a790 0045  ld   $45
              a791 0041  ld   $41
              a792 0044  ld   $44
              a793 0059  ld   $59
              a794 002e  ld   $2e
              a795 000d  ld   $0d
              a796 000a  ld   $0a
              a797 0000  ld   $00
              a798 000d  ld   $0d
              a799 000a  ld   $0a
              a79a 0042  ld   $42
              a79b 0052  ld   $52
              a79c 0045  ld   $45
              a79d 0041  ld   $41
              a79e 004b  ld   $4b
              a79f 0000  ld   $00
              a7a0 00ba  ld   $ba
              a7a1 00e8  ld   $e8
              a7a2 00e8  ld   $e8
              a7a3 00e8  ld   $e8
              a7a4 00e8  ld   $e8
              a7a5 00b5  ld   $b5
              a7a6 0001  ld   $01
              a7a7 00c9  ld   $c9
              a7a8 0081  ld   $81
              a7a9 00d0  ld   $d0
              a7aa 001d  ld   $1d
              a7ab 00a5  ld   $a5
              a7ac 007c  ld   $7c
              a7ad 00d0  ld   $d0
              a7ae 0008  ld   $08
              a7af 00b5  ld   $b5
              a7b0 0002  ld   $02
              a7b1 0085  ld   $85
              a7b2 007b  ld   $7b
              a7b3 00b5  ld   $b5
              a7b4 0003  ld   $03
              a7b5 0085  ld   $85
              a7b6 007c  ld   $7c
              a7b7 00d5  ld   $d5
              a7b8 0003  ld   $03
              a7b9 00d0  ld   $d0
              a7ba 0006  ld   $06
              a7bb 00a5  ld   $a5
              a7bc 007b  ld   $7b
              a7bd 00d5  ld   $d5
              a7be 0002  ld   $02
              a7bf 00f0  ld   $f0
              a7c0 0007  ld   $07
              a7c1 008a  ld   $8a
              a7c2 0018  ld   $18
              a7c3 0069  ld   $69
              a7c4 0012  ld   $12
              a7c5 00aa  ld   $aa
              a7c6 00d0  ld   $d0
              a7c7 00dd  ld   $dd
              a7c8 0060  ld   $60
              a7c9 0020  ld   $20
              a7ca 001b  ld   $1b
              a7cb 0005  ld   $05
              a7cc 0085  ld   $85
              a7cd 0063  ld   $63
              a7ce 0084  ld   $84
              a7cf 0064  ld   $64
              a7d0 0038  ld   $38
              a7d1 00a5  ld   $a5
              a7d2 008d  ld   $8d
              a7d3 00e5  ld   $e5
              a7d4 0092  ld   $92
              a7d5 0085  ld   $85
              a7d6 0054  ld   $54
              a7d7 00a8  ld   $a8
              a7d8 00a5  ld   $a5
              a7d9 008e  ld   $8e
              a7da 00e5  ld   $e5
              a7db 0093  ld   $93
              a7dc 00aa  ld   $aa
              a7dd 00e8  ld   $e8
              a7de 0098  ld   $98
              a7df 00f0  ld   $f0
              a7e0 0023  ld   $23
              a7e1 00a5  ld   $a5
              a7e2 008d  ld   $8d
              a7e3 0038  ld   $38
              a7e4 00e5  ld   $e5
              a7e5 0054  ld   $54
              a7e6 0085  ld   $85
              a7e7 008d  ld   $8d
              a7e8 00b0  ld   $b0
              a7e9 0003  ld   $03
              a7ea 00c6  ld   $c6
              a7eb 008e  ld   $8e
              a7ec 0038  ld   $38
              a7ed 00a5  ld   $a5
              a7ee 008b  ld   $8b
              a7ef 00e5  ld   $e5
              a7f0 0054  ld   $54
              a7f1 0085  ld   $85
              a7f2 008b  ld   $8b
              a7f3 00b0  ld   $b0
              a7f4 0008  ld   $08
              a7f5 00c6  ld   $c6
              a7f6 008c  ld   $8c
              a7f7 0090  ld   $90
              a7f8 0004  ld   $04
              a7f9 00b1  ld   $b1
              a7fa 008d  ld   $8d
              a7fb fe00  bra  ac          ;+-----------------------------------+
              a7fc fcfd  bra  $a7fd       ;|                                   |
              a7fd 1418  ld   $18,y       ;| Trampoline for page $a700 lookups |
              a7fe e006  jmp  y,$06       ;|                                   |
              a7ff c218  st   [$18]       ;+-----------------------------------+
              a800 0091  ld   $91
              a801 008b  ld   $8b
              a802 0088  ld   $88
              a803 0005  ld   $05
              a804 0000  ld   $00
              a805 0000  ld   $00
              a806 00d0  ld   $d0
              a807 00f9  ld   $f9
              a808 00b1  ld   $b1
              a809 008d  ld   $8d
              a80a 0091  ld   $91
              a80b 008b  ld   $8b
              a80c 00c6  ld   $c6
              a80d 008e  ld   $8e
              a80e 00c6  ld   $c6
              a80f 008c  ld   $8c
              a810 00ca  ld   $ca
              a811 00d0  ld   $d0
              a812 00f2  ld   $f2
              a813 0060  ld   $60
              a814 000a  ld   $0a
              a815 0069  ld   $69
              a816 00b2  ld   $b2
              a817 00b0  ld   $b0
              a818 0035  ld   $35
              a819 0085  ld   $85
              a81a 0054  ld   $54
              a81b 00ba  ld   $ba
              a81c 00e4  ld   $e4
              a81d 0054  ld   $54
              a81e 0090  ld   $90
              a81f 002e  ld   $2e
              a820 0060  ld   $60
              a821 00c4  ld   $c4
              a822 0066  ld   $66
              a823 0090  ld   $90
              a824 0028  ld   $28
              a825 00d0  ld   $d0
              a826 0004  ld   $04
              a827 00c5  ld   $c5
              a828 0065  ld   $65
              a829 0090  ld   $90
              a82a 0022  ld   $22
              a82b 0048  ld   $48
              a82c 00a2  ld   $a2
              a82d 0009  ld   $09
              a82e 0098  ld   $98
              a82f 0048  ld   $48
              a830 00b5  ld   $b5
              a831 008a  ld   $8a
              a832 00ca  ld   $ca
              a833 0010  ld   $10
              a834 00fa  ld   $fa
              a835 0020  ld   $20
              a836 0062  ld   $62
              a837 0015  ld   $15
              a838 00a2  ld   $a2
              a839 00f7  ld   $f7
              a83a 0068  ld   $68
              a83b 0095  ld   $95
              a83c 0094  ld   $94
              a83d 00e8  ld   $e8
              a83e 0030  ld   $30
              a83f 00fa  ld   $fa
              a840 0068  ld   $68
              a841 00a8  ld   $a8
              a842 0068  ld   $68
              a843 00c4  ld   $c4
              a844 0066  ld   $66
              a845 0090  ld   $90
              a846 0006  ld   $06
              a847 00d0  ld   $d0
              a848 0005  ld   $05
              a849 00c5  ld   $c5
              a84a 0065  ld   $65
              a84b 00b0  ld   $b0
              a84c 0001  ld   $01
              a84d 0060  ld   $60
              a84e 00a2  ld   $a2
              a84f 004d  ld   $4d
              a850 0046  ld   $46
              a851 0045  ld   $45
              a852 0020  ld   $20
              a853 00ac  ld   $ac
              a854 000b  ld   $0b
              a855 0020  ld   $20
              a856 000f  ld   $0f
              a857 000c  ld   $0c
              a858 00bd  ld   $bd
              a859 0083  ld   $83
              a85a 0003  ld   $03
              a85b 0048  ld   $48
              a85c 0029  ld   $29
              a85d 007f  ld   $7f
              a85e 0020  ld   $20
              a85f 0011  ld   $11
              a860 000c  ld   $0c
              a861 00e8  ld   $e8
              a862 0068  ld   $68
              a863 0010  ld   $10
              a864 00f3  ld   $f3
              a865 0020  ld   $20
              a866 007a  ld   $7a
              a867 0007  ld   $07
              a868 00a9  ld   $a9
              a869 0083  ld   $83
              a86a 00a0  ld   $a0
              a86b 0004  ld   $04
              a86c 0020  ld   $20
              a86d 00ef  ld   $ef
              a86e 000b  ld   $0b
              a86f 00a4  ld   $a4
              a870 006c  ld   $6c
              a871 00c8  ld   $c8
              a872 00f0  ld   $f0
              a873 0003  ld   $03
              a874 0020  ld   $20
              a875 003a  ld   $3a
              a876 001e  ld   $1e
              a877 0046  ld   $46
              a878 0045  ld   $45
              a879 00a9  ld   $a9
              a87a 008f  ld   $8f
              a87b 00a0  ld   $a0
              a87c 0004  ld   $04
              a87d 0020  ld   $20
              a87e 00ef  ld   $ef
              a87f 000b  ld   $0b
              a880 0020  ld   $20
              a881 0057  ld   $57
              a882 0006  ld   $06
              a883 0086  ld   $86
              a884 00a6  ld   $a6
              a885 0084  ld   $84
              a886 00a7  ld   $a7
              a887 0020  ld   $20
              a888 006b  ld   $6b
              a889 0022  ld   $22
              a88a 00aa  ld   $aa
              a88b 00f0  ld   $f0
              a88c 00f3  ld   $f3
              a88d 00a2  ld   $a2
              a88e 00ff  ld   $ff
              a88f 0086  ld   $86
              a890 006c  ld   $6c
              a891 0090  ld   $90
              a892 0006  ld   $06
              a893 0020  ld   $20
              a894 007e  ld   $7e
              a895 0006  ld   $06
              a896 004c  ld   $4c
              a897 00de  ld   $de
              a898 0008  ld   $08
              a899 0020  ld   $20
              a89a 005a  ld   $5a
              a89b 000a  ld   $0a
              a89c 0020  ld   $20
              a89d 007e  ld   $7e
              a89e 0006  ld   $06
              a89f 0084  ld   $84
              a8a0 003d  ld   $3d
              a8a1 0020  ld   $20
              a8a2 0013  ld   $13
              a8a3 0007  ld   $07
              a8a4 0090  ld   $90
              a8a5 0044  ld   $44
              a8a6 00a0  ld   $a0
              a8a7 0001  ld   $01
              a8a8 00b1  ld   $b1
              a8a9 0092  ld   $92
              a8aa 0085  ld   $85
              a8ab 0055  ld   $55
              a8ac 00a5  ld   $a5
              a8ad 005f  ld   $5f
              a8ae 0085  ld   $85
              a8af 0054  ld   $54
              a8b0 00a5  ld   $a5
              a8b1 0093  ld   $93
              a8b2 0085  ld   $85
              a8b3 0057  ld   $57
              a8b4 00a5  ld   $a5
              a8b5 0092  ld   $92
              a8b6 0088  ld   $88
              a8b7 00f1  ld   $f1
              a8b8 0092  ld   $92
              a8b9 0018  ld   $18
              a8ba 0065  ld   $65
              a8bb 005f  ld   $5f
              a8bc 0085  ld   $85
              a8bd 005f  ld   $5f
              a8be 0085  ld   $85
              a8bf 0056  ld   $56
              a8c0 00a5  ld   $a5
              a8c1 0060  ld   $60
              a8c2 0069  ld   $69
              a8c3 00ff  ld   $ff
              a8c4 0085  ld   $85
              a8c5 0060  ld   $60
              a8c6 00e5  ld   $e5
              a8c7 0093  ld   $93
              a8c8 00aa  ld   $aa
              a8c9 0038  ld   $38
              a8ca 00a5  ld   $a5
              a8cb 0092  ld   $92
              a8cc 00e5  ld   $e5
              a8cd 005f  ld   $5f
              a8ce 00a8  ld   $a8
              a8cf 00b0  ld   $b0
              a8d0 0003  ld   $03
              a8d1 00e8  ld   $e8
              a8d2 00c6  ld   $c6
              a8d3 0057  ld   $57
              a8d4 0018  ld   $18
              a8d5 0065  ld   $65
              a8d6 0054  ld   $54
              a8d7 0090  ld   $90
              a8d8 0003  ld   $03
              a8d9 00c6  ld   $c6
              a8da 0055  ld   $55
              a8db 0018  ld   $18
              a8dc 00b1  ld   $b1
              a8dd 0054  ld   $54
              a8de 0091  ld   $91
              a8df 0056  ld   $56
              a8e0 00c8  ld   $c8
              a8e1 00d0  ld   $d0
              a8e2 00f9  ld   $f9
              a8e3 00e6  ld   $e6
              a8e4 0055  ld   $55
              a8e5 00e6  ld   $e6
              a8e6 0057  ld   $57
              a8e7 00ca  ld   $ca
              a8e8 00d0  ld   $d0
              a8e9 00f2  ld   $f2
              a8ea 0020  ld   $20
              a8eb 0059  ld   $59
              a8ec 0007  ld   $07
              a8ed 0020  ld   $20
              a8ee 002a  ld   $2a
              a8ef 0006  ld   $06
              a8f0 00ad  ld   $ad
              a8f1 0005  ld   $05
              a8f2 0024  ld   $24
              a8f3 00f0  ld   $f0
              a8f4 008b  ld   $8b
              a8f5 0018  ld   $18
              a8f6 00a5  ld   $a5
              a8f7 005f  ld   $5f
              a8f8 0085  ld   $85
              a8f9 008d  ld   $8d
              a8fa 0065  ld   $65
              a8fb fe00  bra  ac          ;+-----------------------------------+
              a8fc fcfd  bra  $a8fd       ;|                                   |
              a8fd 1418  ld   $18,y       ;| Trampoline for page $a800 lookups |
              a8fe e006  jmp  y,$06       ;|                                   |
              a8ff c218  st   [$18]       ;+-----------------------------------+
              a900 003d  ld   $3d
              a901 0085  ld   $85
              a902 008b  ld   $8b
              a903 00a4  ld   $a4
              a904 0060  ld   $60
              a905 0084  ld   $84
              a906 008e  ld   $8e
              a907 0090  ld   $90
              a908 0001  ld   $01
              a909 00c8  ld   $c8
              a90a 0084  ld   $84
              a90b 0006  ld   $06
              a90c 0000  ld   $00
              a90d 0000  ld   $00
              a90e 008c  ld   $8c
              a90f 0020  ld   $20
              a910 00cb  ld   $cb
              a911 0004  ld   $04
              a912 00a5  ld   $a5
              a913 0046  ld   $46
              a914 00a4  ld   $a4
              a915 0047  ld   $47
              a916 008d  ld   $8d
              a917 0003  ld   $03
              a918 0024  ld   $24
              a919 008c  ld   $8c
              a91a 0004  ld   $04
              a91b 0024  ld   $24
              a91c 00a5  ld   $a5
              a91d 0063  ld   $63
              a91e 00a4  ld   $a4
              a91f 0064  ld   $64
              a920 0085  ld   $85
              a921 005f  ld   $5f
              a922 0084  ld   $84
              a923 0060  ld   $60
              a924 00a4  ld   $a4
              a925 003d  ld   $3d
              a926 0088  ld   $88
              a927 00b9  ld   $b9
              a928 0001  ld   $01
              a929 0024  ld   $24
              a92a 0091  ld   $91
              a92b 0092  ld   $92
              a92c 0088  ld   $88
              a92d 0010  ld   $10
              a92e 00f8  ld   $f8
              a92f 0020  ld   $20
              a930 0059  ld   $59
              a931 0007  ld   $07
              a932 0020  ld   $20
              a933 002a  ld   $2a
              a934 0006  ld   $06
              a935 004c  ld   $4c
              a936 007a  ld   $7a
              a937 0005  ld   $05
              a938 00a5  ld   $a5
              a939 005d  ld   $5d
              a93a 00a4  ld   $a4
              a93b 005e  ld   $5e
              a93c 0085  ld   $85
              a93d 0054  ld   $54
              a93e 0084  ld   $84
              a93f 0055  ld   $55
              a940 0018  ld   $18
              a941 00a0  ld   $a0
              a942 0001  ld   $01
              a943 00b1  ld   $b1
              a944 0054  ld   $54
              a945 00f0  ld   $f0
              a946 001d  ld   $1d
              a947 00a0  ld   $a0
              a948 0004  ld   $04
              a949 00c8  ld   $c8
              a94a 00b1  ld   $b1
              a94b 0054  ld   $54
              a94c 00d0  ld   $d0
              a94d 00fb  ld   $fb
              a94e 00c8  ld   $c8
              a94f 0098  ld   $98
              a950 0065  ld   $65
              a951 0054  ld   $54
              a952 00aa  ld   $aa
              a953 00a0  ld   $a0
              a954 0000  ld   $00
              a955 0091  ld   $91
              a956 0054  ld   $54
              a957 00a5  ld   $a5
              a958 0055  ld   $55
              a959 0069  ld   $69
              a95a 0000  ld   $00
              a95b 00c8  ld   $c8
              a95c 0091  ld   $91
              a95d 0054  ld   $54
              a95e 0086  ld   $86
              a95f 0054  ld   $54
              a960 0085  ld   $85
              a961 0055  ld   $55
              a962 0090  ld   $90
              a963 00dd  ld   $dd
              a964 0060  ld   $60
              a965 00a2  ld   $a2
              a966 0000  ld   $00
              a967 0020  ld   $20
              a968 006e  ld   $6e
              a969 0006  ld   $06
              a96a 00c9  ld   $c9
              a96b 000d  ld   $0d
              a96c 00f0  ld   $f0
              a96d 000b  ld   $0b
              a96e 0020  ld   $20
              a96f 0000  ld   $00
              a970 002f  ld   $2f
              a971 00f0  ld   $f0
              a972 00f4  ld   $f4
              a973 009d  ld   $9d
              a974 0005  ld   $05
              a975 0024  ld   $24
              a976 00e8  ld   $e8
              a977 00d0  ld   $d0
              a978 00ee  ld   $ee
              a979 004c  ld   $4c
              a97a 00a3  ld   $a3
              a97b 000b  ld   $0b
              a97c 0020  ld   $20
              a97d 0000  ld   $00
              a97e 002c  ld   $2c
              a97f 00c9  ld   $c9
              a980 000f  ld   $0f
              a981 00d0  ld   $d0
              a982 0008  ld   $08
              a983 0048  ld   $48
              a984 00a5  ld   $a5
              a985 0045  ld   $45
              a986 0049  ld   $49
              a987 00ff  ld   $ff
              a988 0085  ld   $85
              a989 0045  ld   $45
              a98a 0068  ld   $68
              a98b 0060  ld   $60
              a98c 00a6  ld   $a6
              a98d 00a6  ld   $a6
              a98e 00a0  ld   $a0
              a98f 0004  ld   $04
              a990 0084  ld   $84
              a991 0041  ld   $41
              a992 00bd  ld   $bd
              a993 0000  ld   $00
              a994 0024  ld   $24
              a995 0010  ld   $10
              a996 0007  ld   $07
              a997 00c9  ld   $c9
              a998 00ff  ld   $ff
              a999 00f0  ld   $f0
              a99a 003e  ld   $3e
              a99b 00e8  ld   $e8
              a99c 00d0  ld   $d0
              a99d 00f4  ld   $f4
              a99e 00c9  ld   $c9
              a99f 0020  ld   $20
              a9a0 00f0  ld   $f0
              a9a1 0037  ld   $37
              a9a2 0085  ld   $85
              a9a3 003c  ld   $3c
              a9a4 00c9  ld   $c9
              a9a5 0022  ld   $22
              a9a6 00f0  ld   $f0
              a9a7 0056  ld   $56
              a9a8 0024  ld   $24
              a9a9 0041  ld   $41
              a9aa 0070  ld   $70
              a9ab 002d  ld   $2d
              a9ac 00c9  ld   $c9
              a9ad 003f  ld   $3f
              a9ae 00d0  ld   $d0
              a9af 0004  ld   $04
              a9b0 00a9  ld   $a9
              a9b1 0097  ld   $97
              a9b2 00d0  ld   $d0
              a9b3 0025  ld   $25
              a9b4 00c9  ld   $c9
              a9b5 0030  ld   $30
              a9b6 0090  ld   $90
              a9b7 0004  ld   $04
              a9b8 00c9  ld   $c9
              a9b9 003c  ld   $3c
              a9ba 0090  ld   $90
              a9bb 001d  ld   $1d
              a9bc 0084  ld   $84
              a9bd 00a4  ld   $a4
              a9be 00a0  ld   $a0
              a9bf 0000  ld   $00
              a9c0 0084  ld   $84
              a9c1 003d  ld   $3d
              a9c2 0088  ld   $88
              a9c3 0086  ld   $86
              a9c4 00a6  ld   $a6
              a9c5 00ca  ld   $ca
              a9c6 00c8  ld   $c8
              a9c7 00e8  ld   $e8
              a9c8 00bd  ld   $bd
              a9c9 0000  ld   $00
              a9ca 0024  ld   $24
              a9cb 0038  ld   $38
              a9cc 00f9  ld   $f9
              a9cd 009e  ld   $9e
              a9ce 0002  ld   $02
              a9cf 00f0  ld   $f0
              a9d0 00f5  ld   $f5
              a9d1 00c9  ld   $c9
              a9d2 0080  ld   $80
              a9d3 00d0  ld   $d0
              a9d4 0030  ld   $30
              a9d5 0005  ld   $05
              a9d6 003d  ld   $3d
              a9d7 00a4  ld   $a4
              a9d8 00a4  ld   $a4
              a9d9 00e8  ld   $e8
              a9da 00c8  ld   $c8
              a9db 0099  ld   $99
              a9dc 0000  ld   $00
              a9dd 0024  ld   $24
              a9de 00b9  ld   $b9
              a9df 0000  ld   $00
              a9e0 0024  ld   $24
              a9e1 00f0  ld   $f0
              a9e2 0036  ld   $36
              a9e3 0038  ld   $38
              a9e4 00e9  ld   $e9
              a9e5 003a  ld   $3a
              a9e6 00f0  ld   $f0
              a9e7 0004  ld   $04
              a9e8 00c9  ld   $c9
              a9e9 0049  ld   $49
              a9ea 00d0  ld   $d0
              a9eb 0002  ld   $02
              a9ec 0085  ld   $85
              a9ed 0041  ld   $41
              a9ee 0038  ld   $38
              a9ef 00e9  ld   $e9
              a9f0 0054  ld   $54
              a9f1 00d0  ld   $d0
              a9f2 009f  ld   $9f
              a9f3 0085  ld   $85
              a9f4 003c  ld   $3c
              a9f5 00bd  ld   $bd
              a9f6 0000  ld   $00
              a9f7 0024  ld   $24
              a9f8 00f0  ld   $f0
              a9f9 00df  ld   $df
              a9fa 00c5  ld   $c5
              a9fb fe00  bra  ac          ;+-----------------------------------+
              a9fc fcfd  bra  $a9fd       ;|                                   |
              a9fd 1418  ld   $18,y       ;| Trampoline for page $a900 lookups |
              a9fe e006  jmp  y,$06       ;|                                   |
              a9ff c218  st   [$18]       ;+-----------------------------------+
              aa00 003c  ld   $3c
              aa01 00f0  ld   $f0
              aa02 00db  ld   $db
              aa03 00c8  ld   $c8
              aa04 0099  ld   $99
              aa05 0000  ld   $00
              aa06 0024  ld   $24
              aa07 00e8  ld   $e8
              aa08 00d0  ld   $d0
              aa09 00f0  ld   $f0
              aa0a 00a6  ld   $a6
              aa0b 00a6  ld   $a6
              aa0c 00e6  ld   $e6
              aa0d 003d  ld   $3d
              aa0e 00c8  ld   $c8
              aa0f 00b9  ld   $b9
              aa10 009d  ld   $9d
              aa11 0002  ld   $02
              aa12 0010  ld   $10
              aa13 0007  ld   $07
              aa14 0000  ld   $00
              aa15 0000  ld   $00
              aa16 00fa  ld   $fa
              aa17 00b9  ld   $b9
              aa18 009e  ld   $9e
              aa19 0002  ld   $02
              aa1a 00d0  ld   $d0
              aa1b 00b4  ld   $b4
              aa1c 00bd  ld   $bd
              aa1d 0000  ld   $00
              aa1e 0024  ld   $24
              aa1f 0010  ld   $10
              aa20 00be  ld   $be
              aa21 0099  ld   $99
              aa22 0002  ld   $02
              aa23 0024  ld   $24
              aa24 00a9  ld   $a9
              aa25 0004  ld   $04
              aa26 0085  ld   $85
              aa27 00a6  ld   $a6
              aa28 0060  ld   $60
              aa29 00a5  ld   $a5
              aa2a 005d  ld   $5d
              aa2b 00a6  ld   $a6
              aa2c 005e  ld   $5e
              aa2d 00a0  ld   $a0
              aa2e 0001  ld   $01
              aa2f 0085  ld   $85
              aa30 0092  ld   $92
              aa31 0086  ld   $86
              aa32 0093  ld   $93
              aa33 00b1  ld   $b1
              aa34 0092  ld   $92
              aa35 00f0  ld   $f0
              aa36 001f  ld   $1f
              aa37 00c8  ld   $c8
              aa38 00c8  ld   $c8
              aa39 00a5  ld   $a5
              aa3a 0047  ld   $47
              aa3b 00d1  ld   $d1
              aa3c 0092  ld   $92
              aa3d 0090  ld   $90
              aa3e 0018  ld   $18
              aa3f 00f0  ld   $f0
              aa40 0003  ld   $03
              aa41 0088  ld   $88
              aa42 00d0  ld   $d0
              aa43 0009  ld   $09
              aa44 00a5  ld   $a5
              aa45 0046  ld   $46
              aa46 0088  ld   $88
              aa47 00d1  ld   $d1
              aa48 0092  ld   $92
              aa49 0090  ld   $90
              aa4a 000c  ld   $0c
              aa4b 00f0  ld   $f0
              aa4c 000a  ld   $0a
              aa4d 0088  ld   $88
              aa4e 00b1  ld   $b1
              aa4f 0092  ld   $92
              aa50 00aa  ld   $aa
              aa51 0088  ld   $88
              aa52 00b1  ld   $b1
              aa53 0092  ld   $92
              aa54 00b0  ld   $b0
              aa55 00d7  ld   $d7
              aa56 0018  ld   $18
              aa57 0060  ld   $60
              aa58 00d0  ld   $d0
              aa59 00fd  ld   $fd
              aa5a 00a9  ld   $a9
              aa5b 0000  ld   $00
              aa5c 00a8  ld   $a8
              aa5d 0091  ld   $91
              aa5e 005d  ld   $5d
              aa5f 00c8  ld   $c8
              aa60 0091  ld   $91
              aa61 005d  ld   $5d
              aa62 00a5  ld   $a5
              aa63 005d  ld   $5d
              aa64 0018  ld   $18
              aa65 0069  ld   $69
              aa66 0002  ld   $02
              aa67 0085  ld   $85
              aa68 005f  ld   $5f
              aa69 00a5  ld   $a5
              aa6a 005e  ld   $5e
              aa6b 0069  ld   $69
              aa6c 0000  ld   $00
              aa6d 0085  ld   $85
              aa6e 0060  ld   $60
              aa6f 0020  ld   $20
              aa70 008e  ld   $8e
              aa71 0007  ld   $07
              aa72 00a9  ld   $a9
              aa73 0000  ld   $00
              aa74 00d0  ld   $d0
              aa75 002d  ld   $2d
              aa76 00a5  ld   $a5
              aa77 0069  ld   $69
              aa78 00a4  ld   $a4
              aa79 006a  ld   $6a
              aa7a 0085  ld   $85
              aa7b 0065  ld   $65
              aa7c 0084  ld   $84
              aa7d 0066  ld   $66
              aa7e 0020  ld   $20
              aa7f 0000  ld   $00
              aa80 002e  ld   $2e
              aa81 00a5  ld   $a5
              aa82 005f  ld   $5f
              aa83 00a4  ld   $a4
              aa84 0060  ld   $60
              aa85 0085  ld   $85
              aa86 0061  ld   $61
              aa87 0084  ld   $84
              aa88 0062  ld   $62
              aa89 0085  ld   $85
              aa8a 0063  ld   $63
              aa8b 0084  ld   $84
              aa8c 0064  ld   $64
              aa8d 0020  ld   $20
              aa8e 0017  ld   $17
              aa8f 0009  ld   $09
              aa90 00a2  ld   $a2
              aa91 004b  ld   $4b
              aa92 0086  ld   $86
              aa93 0048  ld   $48
              aa94 0068  ld   $68
              aa95 00a8  ld   $a8
              aa96 0068  ld   $68
              aa97 00a2  ld   $a2
              aa98 00ff  ld   $ff
              aa99 009a  ld   $9a
              aa9a 0048  ld   $48
              aa9b 0098  ld   $98
              aa9c 0048  ld   $48
              aa9d 00a9  ld   $a9
              aa9e 0000  ld   $00
              aa9f 0085  ld   $85
              aaa0 0070  ld   $70
              aaa1 0085  ld   $85
              aaa2 0042  ld   $42
              aaa3 0060  ld   $60
              aaa4 0018  ld   $18
              aaa5 00a5  ld   $a5
              aaa6 005d  ld   $5d
              aaa7 0069  ld   $69
              aaa8 00ff  ld   $ff
              aaa9 0085  ld   $85
              aaaa 00a6  ld   $a6
              aaab 00a5  ld   $a5
              aaac 005e  ld   $5e
              aaad 0069  ld   $69
              aaae 00ff  ld   $ff
              aaaf 0085  ld   $85
              aab0 00a7  ld   $a7
              aab1 0060  ld   $60
              aab2 0090  ld   $90
              aab3 0006  ld   $06
              aab4 00f0  ld   $f0
              aab5 0004  ld   $04
              aab6 00c9  ld   $c9
              aab7 00a5  ld   $a5
              aab8 00d0  ld   $d0
              aab9 00e9  ld   $e9
              aaba 0020  ld   $20
              aabb 005a  ld   $5a
              aabc 000a  ld   $0a
              aabd 0020  ld   $20
              aabe 0013  ld   $13
              aabf 0007  ld   $07
              aac0 0020  ld   $20
              aac1 0071  ld   $71
              aac2 0022  ld   $22
              aac3 00f0  ld   $f0
              aac4 000c  ld   $0c
              aac5 00c9  ld   $c9
              aac6 00a5  ld   $a5
              aac7 00d0  ld   $d0
              aac8 008e  ld   $8e
              aac9 0020  ld   $20
              aaca 006b  ld   $6b
              aacb 0022  ld   $22
              aacc 0020  ld   $20
              aacd 005a  ld   $5a
              aace 000a  ld   $0a
              aacf 00d0  ld   $d0
              aad0 0086  ld   $86
              aad1 0068  ld   $68
              aad2 0068  ld   $68
              aad3 00a5  ld   $a5
              aad4 0046  ld   $46
              aad5 0005  ld   $05
              aad6 0047  ld   $47
              aad7 00d0  ld   $d0
              aad8 0006  ld   $06
              aad9 00a9  ld   $a9
              aada 00ff  ld   $ff
              aadb 0085  ld   $85
              aadc 0046  ld   $46
              aadd 0085  ld   $85
              aade 0047  ld   $47
              aadf 00a0  ld   $a0
              aae0 0001  ld   $01
              aae1 0084  ld   $84
              aae2 0041  ld   $41
              aae3 00b1  ld   $b1
              aae4 0092  ld   $92
              aae5 00f0  ld   $f0
              aae6 0043  ld   $43
              aae7 0020  ld   $20
              aae8 0000  ld   $00
              aae9 002d  ld   $2d
              aaea 0020  ld   $20
              aaeb 00ac  ld   $ac
              aaec 000b  ld   $0b
              aaed 00c8  ld   $c8
              aaee 00b1  ld   $b1
              aaef 0092  ld   $92
              aaf0 00aa  ld   $aa
              aaf1 00c8  ld   $c8
              aaf2 00b1  ld   $b1
              aaf3 0092  ld   $92
              aaf4 00c5  ld   $c5
              aaf5 0047  ld   $47
              aaf6 00d0  ld   $d0
              aaf7 0004  ld   $04
              aaf8 00e4  ld   $e4
              aaf9 0046  ld   $46
              aafa 00f0  ld   $f0
              aafb fe00  bra  ac          ;+-----------------------------------+
              aafc fcfd  bra  $aafd       ;|                                   |
              aafd 1418  ld   $18,y       ;| Trampoline for page $aa00 lookups |
              aafe e006  jmp  y,$06       ;|                                   |
              aaff c218  st   [$18]       ;+-----------------------------------+
              ab00 0002  ld   $02
              ab01 00b0  ld   $b0
              ab02 002c  ld   $2c
              ab03 0084  ld   $84
              ab04 007b  ld   $7b
              ab05 0020  ld   $20
              ab06 0045  ld   $45
              ab07 001e  ld   $1e
              ab08 00a9  ld   $a9
              ab09 0020  ld   $20
              ab0a 00a4  ld   $a4
              ab0b 007b  ld   $7b
              ab0c 0029  ld   $29
              ab0d 007f  ld   $7f
              ab0e 0020  ld   $20
              ab0f 0011  ld   $11
              ab10 000c  ld   $0c
              ab11 00c9  ld   $c9
              ab12 0022  ld   $22
              ab13 00d0  ld   $d0
              ab14 0006  ld   $06
              ab15 00a5  ld   $a5
              ab16 0041  ld   $41
              ab17 0049  ld   $49
              ab18 00ff  ld   $ff
              ab19 0085  ld   $85
              ab1a 0041  ld   $41
              ab1b 0008  ld   $08
              ab1c 0000  ld   $00
              ab1d 0000  ld   $00
              ab1e 00c8  ld   $c8
              ab1f 00f0  ld   $f0
              ab20 0011  ld   $11
              ab21 00b1  ld   $b1
              ab22 0092  ld   $92
              ab23 00d0  ld   $d0
              ab24 0010  ld   $10
              ab25 00a8  ld   $a8
              ab26 00b1  ld   $b1
              ab27 0092  ld   $92
              ab28 00aa  ld   $aa
              ab29 00c8  ld   $c8
              ab2a 00b1  ld   $b1
              ab2b 0092  ld   $92
              ab2c 0086  ld   $86
              ab2d 0092  ld   $92
              ab2e 0085  ld   $85
              ab2f 0093  ld   $93
              ab30 00d0  ld   $d0
              ab31 00b5  ld   $b5
              ab32 004c  ld   $4c
              ab33 0071  ld   $71
              ab34 0005  ld   $05
              ab35 0010  ld   $10
              ab36 00da  ld   $da
              ab37 00c9  ld   $c9
              ab38 00ff  ld   $ff
              ab39 00f0  ld   $f0
              ab3a 00d6  ld   $d6
              ab3b 0024  ld   $24
              ab3c 0041  ld   $41
              ab3d 0030  ld   $30
              ab3e 00d2  ld   $d2
              ab3f 0038  ld   $38
              ab40 00e9  ld   $e9
              ab41 007f  ld   $7f
              ab42 00aa  ld   $aa
              ab43 0084  ld   $84
              ab44 007b  ld   $7b
              ab45 00a0  ld   $a0
              ab46 00ff  ld   $ff
              ab47 00ca  ld   $ca
              ab48 00f0  ld   $f0
              ab49 0008  ld   $08
              ab4a 00c8  ld   $c8
              ab4b 00b9  ld   $b9
              ab4c 009e  ld   $9e
              ab4d 0002  ld   $02
              ab4e 0010  ld   $10
              ab4f 00fa  ld   $fa
              ab50 0030  ld   $30
              ab51 00f5  ld   $f5
              ab52 00c8  ld   $c8
              ab53 00b9  ld   $b9
              ab54 009e  ld   $9e
              ab55 0002  ld   $02
              ab56 0030  ld   $30
              ab57 00b5  ld   $b5
              ab58 0020  ld   $20
              ab59 0011  ld   $11
              ab5a 000c  ld   $0c
              ab5b 00d0  ld   $d0
              ab5c 00f5  ld   $f5
              ab5d 00a9  ld   $a9
              ab5e 0080  ld   $80
              ab5f 0085  ld   $85
              ab60 0042  ld   $42
              ab61 0020  ld   $20
              ab62 0094  ld   $94
              ab63 000a  ld   $0a
              ab64 0020  ld   $20
              ab65 00a2  ld   $a2
              ab66 0004  ld   $04
              ab67 00d0  ld   $d0
              ab68 0005  ld   $05
              ab69 008a  ld   $8a
              ab6a 0069  ld   $69
              ab6b 000f  ld   $0f
              ab6c 00aa  ld   $aa
              ab6d 009a  ld   $9a
              ab6e 0068  ld   $68
              ab6f 0068  ld   $68
              ab70 00a9  ld   $a9
              ab71 0009  ld   $09
              ab72 0020  ld   $20
              ab73 000e  ld   $0e
              ab74 0005  ld   $05
              ab75 0020  ld   $20
              ab76 00f5  ld   $f5
              ab77 0009  ld   $09
              ab78 0018  ld   $18
              ab79 0098  ld   $98
              ab7a 0065  ld   $65
              ab7b 00a6  ld   $a6
              ab7c 0048  ld   $48
              ab7d 00a5  ld   $a5
              ab7e 00a7  ld   $a7
              ab7f 0069  ld   $69
              ab80 0000  ld   $00
              ab81 0048  ld   $48
              ab82 00a5  ld   $a5
              ab83 006c  ld   $6c
              ab84 0048  ld   $48
              ab85 00a5  ld   $a5
              ab86 006b  ld   $6b
              ab87 0048  ld   $48
              ab88 00a9  ld   $a9
              ab89 009e  ld   $9e
              ab8a 0020  ld   $20
              ab8b 0065  ld   $65
              ab8c 000f  ld   $0f
              ab8d 0020  ld   $20
              ab8e 00f9  ld   $f9
              ab8f 000d  ld   $0d
              ab90 0020  ld   $20
              ab91 00f6  ld   $f6
              ab92 000d  ld   $0d
              ab93 00a5  ld   $a5
              ab94 0099  ld   $99
              ab95 0009  ld   $09
              ab96 007f  ld   $7f
              ab97 0025  ld   $25
              ab98 0095  ld   $95
              ab99 0085  ld   $85
              ab9a 0095  ld   $95
              ab9b 00a9  ld   $a9
              ab9c 0088  ld   $88
              ab9d 00a0  ld   $a0
              ab9e 0008  ld   $08
              ab9f 0085  ld   $85
              aba0 0054  ld   $54
              aba1 0084  ld   $84
              aba2 0055  ld   $55
              aba3 004c  ld   $4c
              aba4 00af  ld   $af
              aba5 000e  ld   $0e
              aba6 00a9  ld   $a9
              aba7 0034  ld   $34
              aba8 00a0  ld   $a0
              aba9 001a  ld   $1a
              abaa 0020  ld   $20
              abab 001a  ld   $1a
              abac 001c  ld   $1c
              abad 0020  ld   $20
              abae 0071  ld   $71
              abaf 0022  ld   $22
              abb0 00c9  ld   $c9
              abb1 00a3  ld   $a3
              abb2 00d0  ld   $d0
              abb3 0006  ld   $06
              abb4 0020  ld   $20
              abb5 006b  ld   $6b
              abb6 0022  ld   $22
              abb7 0020  ld   $20
              abb8 00f6  ld   $f6
              abb9 000d  ld   $0d
              abba 0020  ld   $20
              abbb 00a3  ld   $a3
              abbc 001c  ld   $1c
              abbd 0020  ld   $20
              abbe 00a4  ld   $a4
              abbf 000e  ld   $0e
              abc0 00a5  ld   $a5
              abc1 007c  ld   $7c
              abc2 0048  ld   $48
              abc3 00a5  ld   $a5
              abc4 007b  ld   $7b
              abc5 0048  ld   $48
              abc6 00a9  ld   $a9
              abc7 0081  ld   $81
              abc8 0048  ld   $48
              abc9 0020  ld   $20
              abca 0000  ld   $00
              abcb 002d  ld   $2d
              abcc 00a5  ld   $a5
              abcd 00a6  ld   $a6
              abce 00a4  ld   $a4
              abcf 00a7  ld   $a7
              abd0 00c0  ld   $c0
              abd1 0024  ld   $24
              abd2 00ea  ld   $ea
              abd3 00f0  ld   $f0
              abd4 0004  ld   $04
              abd5 0085  ld   $85
              abd6 006f  ld   $6f
              abd7 0084  ld   $84
              abd8 0070  ld   $70
              abd9 00a0  ld   $a0
              abda 0000  ld   $00
              abdb 00b1  ld   $b1
              abdc 00a6  ld   $a6
              abdd 00d0  ld   $d0
              abde 0040  ld   $40
              abdf 00a0  ld   $a0
              abe0 0002  ld   $02
              abe1 00b1  ld   $b1
              abe2 00a6  ld   $a6
              abe3 0018  ld   $18
              abe4 00d0  ld   $d0
              abe5 0003  ld   $03
              abe6 004c  ld   $4c
              abe7 0042  ld   $42
              abe8 0009  ld   $09
              abe9 00c8  ld   $c8
              abea 00b1  ld   $b1
              abeb 00a6  ld   $a6
              abec 0085  ld   $85
              abed 006b  ld   $6b
              abee 00c8  ld   $c8
              abef 00b1  ld   $b1
              abf0 00a6  ld   $a6
              abf1 0085  ld   $85
              abf2 006c  ld   $6c
              abf3 0098  ld   $98
              abf4 0065  ld   $65
              abf5 00a6  ld   $a6
              abf6 0085  ld   $85
              abf7 00a6  ld   $a6
              abf8 0090  ld   $90
              abf9 0002  ld   $02
              abfa 00e6  ld   $e6
              abfb fe00  bra  ac          ;+-----------------------------------+
              abfc fcfd  bra  $abfd       ;|                                   |
              abfd 1418  ld   $18,y       ;| Trampoline for page $ab00 lookups |
              abfe e006  jmp  y,$06       ;|                                   |
              abff c218  st   [$18]       ;+-----------------------------------+
              ac00 00a7  ld   $a7
              ac01 0020  ld   $20
              ac02 006b  ld   $6b
              ac03 0022  ld   $22
              ac04 0020  ld   $20
              ac05 00e7  ld   $e7
              ac06 0008  ld   $08
              ac07 004c  ld   $4c
              ac08 00ab  ld   $ab
              ac09 0008  ld   $08
              ac0a 00f0  ld   $f0
              ac0b 003c  ld   $3c
              ac0c 00e9  ld   $e9
              ac0d 0080  ld   $80
              ac0e 0090  ld   $90
              ac0f 0011  ld   $11
              ac10 00c9  ld   $c9
              ac11 001d  ld   $1d
              ac12 00b0  ld   $b0
              ac13 0017  ld   $17
              ac14 000a  ld   $0a
              ac15 00a8  ld   $a8
              ac16 00b9  ld   $b9
              ac17 0019  ld   $19
              ac18 0002  ld   $02
              ac19 0048  ld   $48
              ac1a 00b9  ld   $b9
              ac1b 0018  ld   $18
              ac1c 0002  ld   $02
              ac1d 0048  ld   $48
              ac1e 004c  ld   $4c
              ac1f 006b  ld   $6b
              ac20 0022  ld   $22
              ac21 004c  ld   $4c
              ac22 0094  ld   $94
              ac23 0009  ld   $09
              ac24 0000  ld   $00
              ac25 0000  ld   $00
              ac26 000a  ld   $0a
              ac27 00c9  ld   $c9
              ac28 003a  ld   $3a
              ac29 00f0  ld   $f0
              ac2a 00d9  ld   $d9
              ac2b 004c  ld   $4c
              ac2c 006e  ld   $6e
              ac2d 000f  ld   $0f
              ac2e 00c9  ld   $c9
              ac2f 0045  ld   $45
              ac30 00d0  ld   $d0
              ac31 00f9  ld   $f9
              ac32 0020  ld   $20
              ac33 006b  ld   $6b
              ac34 0022  ld   $22
              ac35 00a9  ld   $a9
              ac36 009e  ld   $9e
              ac37 0020  ld   $20
              ac38 0065  ld   $65
              ac39 000f  ld   $0f
              ac3a 004c  ld   $4c
              ac3b 0094  ld   $94
              ac3c 0009  ld   $09
              ac3d 0038  ld   $38
              ac3e 00a5  ld   $a5
              ac3f 005d  ld   $5d
              ac40 00e9  ld   $e9
              ac41 0001  ld   $01
              ac42 00a4  ld   $a4
              ac43 005e  ld   $5e
              ac44 00b0  ld   $b0
              ac45 0001  ld   $01
              ac46 0088  ld   $88
              ac47 0085  ld   $85
              ac48 0073  ld   $73
              ac49 0084  ld   $84
              ac4a 0074  ld   $74
              ac4b 0060  ld   $60
              ac4c 00b0  ld   $b0
              ac4d 0001  ld   $01
              ac4e 0018  ld   $18
              ac4f 00d0  ld   $d0
              ac50 0040  ld   $40
              ac51 00a5  ld   $a5
              ac52 00a6  ld   $a6
              ac53 00a4  ld   $a4
              ac54 00a7  ld   $a7
              ac55 00a6  ld   $a6
              ac56 006c  ld   $6c
              ac57 00e8  ld   $e8
              ac58 00f0  ld   $f0
              ac59 000c  ld   $0c
              ac5a 0085  ld   $85
              ac5b 006f  ld   $6f
              ac5c 0084  ld   $84
              ac5d 0070  ld   $70
              ac5e 00a5  ld   $a5
              ac5f 006b  ld   $6b
              ac60 00a4  ld   $a4
              ac61 006c  ld   $6c
              ac62 0085  ld   $85
              ac63 006d  ld   $6d
              ac64 0084  ld   $84
              ac65 006e  ld   $6e
              ac66 0068  ld   $68
              ac67 0068  ld   $68
              ac68 00a9  ld   $a9
              ac69 009a  ld   $9a
              ac6a 00a0  ld   $a0
              ac6b 0004  ld   $04
              ac6c 00a2  ld   $a2
              ac6d 0000  ld   $00
              ac6e 0086  ld   $86
              ac6f 0045  ld   $45
              ac70 0090  ld   $90
              ac71 0003  ld   $03
              ac72 004c  ld   $4c
              ac73 0066  ld   $66
              ac74 0005  ld   $05
              ac75 004c  ld   $4c
              ac76 0071  ld   $71
              ac77 0005  ld   $05
              ac78 00d0  ld   $d0
              ac79 0017  ld   $17
              ac7a 00a2  ld   $a2
              ac7b 00d2  ld   $d2
              ac7c 00a4  ld   $a4
              ac7d 0070  ld   $70
              ac7e 00d0  ld   $d0
              ac7f 0003  ld   $03
              ac80 004c  ld   $4c
              ac81 004a  ld   $4a
              ac82 0005  ld   $05
              ac83 00a5  ld   $a5
              ac84 006f  ld   $6f
              ac85 0085  ld   $85
              ac86 00a6  ld   $a6
              ac87 0084  ld   $84
              ac88 00a7  ld   $a7
              ac89 00a5  ld   $a5
              ac8a 006d  ld   $6d
              ac8b 00a4  ld   $a4
              ac8c 006e  ld   $6e
              ac8d 0085  ld   $85
              ac8e 006b  ld   $6b
              ac8f 0084  ld   $84
              ac90 006c  ld   $6c
              ac91 0060  ld   $60
              ac92 00d0  ld   $d0
              ac93 0003  ld   $03
              ac94 004c  ld   $4c
              ac95 0059  ld   $59
              ac96 0007  ld   $07
              ac97 0020  ld   $20
              ac98 0060  ld   $60
              ac99 0007  ld   $07
              ac9a 004c  ld   $4c
              ac9b 008b  ld   $8b
              ac9c 0009  ld   $09
              ac9d 00a9  ld   $a9
              ac9e 0003  ld   $03
              ac9f 0020  ld   $20
              aca0 000e  ld   $0e
              aca1 0005  ld   $05
              aca2 00a5  ld   $a5
              aca3 00a7  ld   $a7
              aca4 0048  ld   $48
              aca5 00a5  ld   $a5
              aca6 00a6  ld   $a6
              aca7 0048  ld   $48
              aca8 00a5  ld   $a5
              aca9 006c  ld   $6c
              acaa 0048  ld   $48
              acab 00a5  ld   $a5
              acac 006b  ld   $6b
              acad 0048  ld   $48
              acae 00a9  ld   $a9
              acaf 008c  ld   $8c
              acb0 0048  ld   $48
              acb1 0020  ld   $20
              acb2 0071  ld   $71
              acb3 0022  ld   $22
              acb4 0020  ld   $20
              acb5 0094  ld   $94
              acb6 0009  ld   $09
              acb7 004c  ld   $4c
              acb8 00ab  ld   $ab
              acb9 0008  ld   $08
              acba 0020  ld   $20
              acbb 005a  ld   $5a
              acbc 000a  ld   $0a
              acbd 0020  ld   $20
              acbe 00f8  ld   $f8
              acbf 0009  ld   $09
              acc0 00a5  ld   $a5
              acc1 006c  ld   $6c
              acc2 00c5  ld   $c5
              acc3 0047  ld   $47
              acc4 00b0  ld   $b0
              acc5 000b  ld   $0b
              acc6 0098  ld   $98
              acc7 0038  ld   $38
              acc8 0065  ld   $65
              acc9 00a6  ld   $a6
              acca 00a6  ld   $a6
              accb 00a7  ld   $a7
              accc 0090  ld   $90
              accd 0007  ld   $07
              acce 00e8  ld   $e8
              accf 00b0  ld   $b0
              acd0 0004  ld   $04
              acd1 00a5  ld   $a5
              acd2 005d  ld   $5d
              acd3 00a6  ld   $a6
              acd4 005e  ld   $5e
              acd5 0020  ld   $20
              acd6 0017  ld   $17
              acd7 0007  ld   $07
              acd8 0090  ld   $90
              acd9 001e  ld   $1e
              acda 00a5  ld   $a5
              acdb 0092  ld   $92
              acdc 00e9  ld   $e9
              acdd 0001  ld   $01
              acde 0085  ld   $85
              acdf 00a6  ld   $a6
              ace0 00a5  ld   $a5
              ace1 0093  ld   $93
              ace2 00e9  ld   $e9
              ace3 0000  ld   $00
              ace4 0085  ld   $85
              ace5 00a7  ld   $a7
              ace6 0060  ld   $60
              ace7 00d0  ld   $d0
              ace8 00fd  ld   $fd
              ace9 00a9  ld   $a9
              acea 00ff  ld   $ff
              aceb 0085  ld   $85
              acec 007c  ld   $7c
              aced 0020  ld   $20
              acee 00a2  ld   $a2
              acef 0004  ld   $04
              acf0 009a  ld   $9a
              acf1 00c9  ld   $c9
              acf2 008c  ld   $8c
              acf3 00f0  ld   $f0
              acf4 000b  ld   $0b
              acf5 00a2  ld   $a2
              acf6 0016  ld   $16
              acf7 002c  ld   $2c
              acf8 00a2  ld   $a2
              acf9 005a  ld   $5a
              acfa 004c  ld   $4c
              acfb fe00  bra  ac          ;+-----------------------------------+
              acfc fcfd  bra  $acfd       ;|                                   |
              acfd 1418  ld   $18,y       ;| Trampoline for page $ac00 lookups |
              acfe e006  jmp  y,$06       ;|                                   |
              acff c218  st   [$18]       ;+-----------------------------------+
              ad00 004a  ld   $4a
              ad01 0005  ld   $05
              ad02 004c  ld   $4c
              ad03 006e  ld   $6e
              ad04 000f  ld   $0f
              ad05 0068  ld   $68
              ad06 0068  ld   $68
              ad07 0085  ld   $85
              ad08 006b  ld   $6b
              ad09 0068  ld   $68
              ad0a 0085  ld   $85
              ad0b 006c  ld   $6c
              ad0c 0068  ld   $68
              ad0d 0085  ld   $85
              ad0e 00a6  ld   $a6
              ad0f 0068  ld   $68
              ad10 0085  ld   $85
              ad11 00a7  ld   $a7
              ad12 0020  ld   $20
              ad13 00f5  ld   $f5
              ad14 0009  ld   $09
              ad15 0098  ld   $98
              ad16 0018  ld   $18
              ad17 0065  ld   $65
              ad18 00a6  ld   $a6
              ad19 0085  ld   $85
              ad1a 00a6  ld   $a6
              ad1b 0090  ld   $90
              ad1c 0002  ld   $02
              ad1d 00e6  ld   $e6
              ad1e 00a7  ld   $a7
              ad1f 0060  ld   $60
              ad20 00a2  ld   $a2
              ad21 003a  ld   $3a
              ad22 002c  ld   $2c
              ad23 00a2  ld   $a2
              ad24 0000  ld   $00
              ad25 0086  ld   $86
              ad26 003b  ld   $3b
              ad27 00a0  ld   $a0
              ad28 0000  ld   $00
              ad29 0084  ld   $84
              ad2a 003c  ld   $3c
              ad2b 000a  ld   $0a
              ad2c 0000  ld   $00
              ad2d 0000  ld   $00
              ad2e 00a5  ld   $a5
              ad2f 003c  ld   $3c
              ad30 00a6  ld   $a6
              ad31 003b  ld   $3b
              ad32 0085  ld   $85
              ad33 003b  ld   $3b
              ad34 0086  ld   $86
              ad35 003c  ld   $3c
              ad36 00b1  ld   $b1
              ad37 00a6  ld   $a6
              ad38 00f0  ld   $f0
              ad39 00e8  ld   $e8
              ad3a 00c5  ld   $c5
              ad3b 003c  ld   $3c
              ad3c 00f0  ld   $f0
              ad3d 00e4  ld   $e4
              ad3e 00c8  ld   $c8
              ad3f 00c9  ld   $c9
              ad40 0022  ld   $22
              ad41 00d0  ld   $d0
              ad42 00f3  ld   $f3
              ad43 00f0  ld   $f0
              ad44 00e9  ld   $e9
              ad45 0020  ld   $20
              ad46 000a  ld   $0a
              ad47 000e  ld   $0e
              ad48 0020  ld   $20
              ad49 0071  ld   $71
              ad4a 0022  ld   $22
              ad4b 00c9  ld   $c9
              ad4c 0088  ld   $88
              ad4d 00f0  ld   $f0
              ad4e 0005  ld   $05
              ad4f 00a9  ld   $a9
              ad50 00a1  ld   $a1
              ad51 0020  ld   $20
              ad52 0065  ld   $65
              ad53 000f  ld   $0f
              ad54 00a5  ld   $a5
              ad55 0094  ld   $94
              ad56 00d0  ld   $d0
              ad57 0005  ld   $05
              ad58 0020  ld   $20
              ad59 00f8  ld   $f8
              ad5a 0009  ld   $09
              ad5b 00f0  ld   $f0
              ad5c 00bb  ld   $bb
              ad5d 0020  ld   $20
              ad5e 0071  ld   $71
              ad5f 0022  ld   $22
              ad60 00b0  ld   $b0
              ad61 0003  ld   $03
              ad62 004c  ld   $4c
              ad63 0094  ld   $94
              ad64 0009  ld   $09
              ad65 004c  ld   $4c
              ad66 00e7  ld   $e7
              ad67 0008  ld   $08
              ad68 0020  ld   $20
              ad69 00da  ld   $da
              ad6a 0017  ld   $17
              ad6b 0048  ld   $48
              ad6c 00c9  ld   $c9
              ad6d 008c  ld   $8c
              ad6e 00f0  ld   $f0
              ad6f 0004  ld   $04
              ad70 00c9  ld   $c9
              ad71 0088  ld   $88
              ad72 00d0  ld   $d0
              ad73 0091  ld   $91
              ad74 00c6  ld   $c6
              ad75 0098  ld   $98
              ad76 00d0  ld   $d0
              ad77 0004  ld   $04
              ad78 0068  ld   $68
              ad79 004c  ld   $4c
              ad7a 00e9  ld   $e9
              ad7b 0008  ld   $08
              ad7c 0020  ld   $20
              ad7d 006b  ld   $6b
              ad7e 0022  ld   $22
              ad7f 0020  ld   $20
              ad80 005a  ld   $5a
              ad81 000a  ld   $0a
              ad82 00c9  ld   $c9
              ad83 002c  ld   $2c
              ad84 00f0  ld   $f0
              ad85 00ee  ld   $ee
              ad86 0068  ld   $68
              ad87 0060  ld   $60
              ad88 00a2  ld   $a2
              ad89 0000  ld   $00
              ad8a 0086  ld   $86
              ad8b 0046  ld   $46
              ad8c 0086  ld   $86
              ad8d 0047  ld   $47
              ad8e 00b0  ld   $b0
              ad8f 00f7  ld   $f7
              ad90 00e9  ld   $e9
              ad91 002f  ld   $2f
              ad92 0085  ld   $85
              ad93 003b  ld   $3b
              ad94 00a5  ld   $a5
              ad95 0047  ld   $47
              ad96 0085  ld   $85
              ad97 0054  ld   $54
              ad98 00c9  ld   $c9
              ad99 0019  ld   $19
              ad9a 00b0  ld   $b0
              ad9b 00d4  ld   $d4
              ad9c 00a5  ld   $a5
              ad9d 0046  ld   $46
              ad9e 000a  ld   $0a
              ad9f 0026  ld   $26
              ada0 0054  ld   $54
              ada1 000a  ld   $0a
              ada2 0026  ld   $26
              ada3 0054  ld   $54
              ada4 0065  ld   $65
              ada5 0046  ld   $46
              ada6 0085  ld   $85
              ada7 0046  ld   $46
              ada8 00a5  ld   $a5
              ada9 0054  ld   $54
              adaa 0065  ld   $65
              adab 0047  ld   $47
              adac 0085  ld   $85
              adad 0047  ld   $47
              adae 0006  ld   $06
              adaf 0046  ld   $46
              adb0 0026  ld   $26
              adb1 0047  ld   $47
              adb2 00a5  ld   $a5
              adb3 0046  ld   $46
              adb4 0065  ld   $65
              adb5 003b  ld   $3b
              adb6 0085  ld   $85
              adb7 0046  ld   $46
              adb8 0090  ld   $90
              adb9 0002  ld   $02
              adba 00e6  ld   $e6
              adbb 0047  ld   $47
              adbc 0020  ld   $20
              adbd 006b  ld   $6b
              adbe 0022  ld   $22
              adbf 004c  ld   $4c
              adc0 0060  ld   $60
              adc1 000a  ld   $0a
              adc2 0020  ld   $20
              adc3 00d0  ld   $d0
              adc4 0010  ld   $10
              adc5 0085  ld   $85
              adc6 007b  ld   $7b
              adc7 0084  ld   $84
              adc8 007c  ld   $7c
              adc9 00a9  ld   $a9
              adca 00ac  ld   $ac
              adcb 0020  ld   $20
              adcc 0065  ld   $65
              adcd 000f  ld   $0f
              adce 00a5  ld   $a5
              adcf 0040  ld   $40
              add0 0048  ld   $48
              add1 00a5  ld   $a5
              add2 003f  ld   $3f
              add3 0048  ld   $48
              add4 0020  ld   $20
              add5 000a  ld   $0a
              add6 000e  ld   $0e
              add7 0068  ld   $68
              add8 002a  ld   $2a
              add9 0020  ld   $20
              adda 00fc  ld   $fc
              addb 000d  ld   $0d
              addc 00d0  ld   $d0
              addd 0018  ld   $18
              adde 0068  ld   $68
              addf 0010  ld   $10
              ade0 0012  ld   $12
              ade1 0020  ld   $20
              ade2 0093  ld   $93
              ade3 001c  ld   $1c
              ade4 0020  ld   $20
              ade5 00fd  ld   $fd
              ade6 0011  ld   $11
              ade7 00a0  ld   $a0
              ade8 0000  ld   $00
              ade9 00a5  ld   $a5
              adea 0097  ld   $97
              adeb 0091  ld   $91
              adec 007b  ld   $7b
              aded 00c8  ld   $c8
              adee 00a5  ld   $a5
              adef 0098  ld   $98
              adf0 0091  ld   $91
              adf1 007b  ld   $7b
              adf2 0060  ld   $60
              adf3 004c  ld   $4c
              adf4 0048  ld   $48
              adf5 001c  ld   $1c
              adf6 0068  ld   $68
              adf7 00a4  ld   $a4
              adf8 007c  ld   $7c
              adf9 00c0  ld   $c0
              adfa 001f  ld   $1f
              adfb fe00  bra  ac          ;+-----------------------------------+
              adfc fcfd  bra  $adfd       ;|                                   |
              adfd 1418  ld   $18,y       ;| Trampoline for page $ad00 lookups |
              adfe e006  jmp  y,$06       ;|                                   |
              adff c218  st   [$18]       ;+-----------------------------------+
              ae00 00d0  ld   $d0
              ae01 0050  ld   $50
              ae02 0020  ld   $20
              ae03 00e2  ld   $e2
              ae04 0016  ld   $16
              ae05 00c9  ld   $c9
              ae06 0006  ld   $06
              ae07 00d0  ld   $d0
              ae08 0041  ld   $41
              ae09 00a0  ld   $a0
              ae0a 0000  ld   $00
              ae0b 0084  ld   $84
              ae0c 0094  ld   $94
              ae0d 0084  ld   $84
              ae0e 0099  ld   $99
              ae0f 0084  ld   $84
              ae10 00a4  ld   $a4
              ae11 0020  ld   $20
              ae12 0010  ld   $10
              ae13 000b  ld   $0b
              ae14 0020  ld   $20
              ae15 005a  ld   $5a
              ae16 001b  ld   $1b
              ae17 00e6  ld   $e6
              ae18 00a4  ld   $a4
              ae19 00a4  ld   $a4
              ae1a 00a4  ld   $a4
              ae1b 0020  ld   $20
              ae1c 0010  ld   $10
              ae1d 000b  ld   $0b
              ae1e 0020  ld   $20
              ae1f 0084  ld   $84
              ae20 001c  ld   $1c
              ae21 00aa  ld   $aa
              ae22 00f0  ld   $f0
              ae23 0005  ld   $05
              ae24 00e8  ld   $e8
              ae25 008a  ld   $8a
              ae26 0020  ld   $20
              ae27 0065  ld   $65
              ae28 001b  ld   $1b
              ae29 00a4  ld   $a4
              ae2a 00a4  ld   $a4
              ae2b 00c8  ld   $c8
              ae2c 00c0  ld   $c0
              ae2d 0006  ld   $06
              ae2e 00d0  ld   $d0
              ae2f 00df  ld   $df
              ae30 0020  ld   $20
              ae31 005a  ld   $5a
              ae32 001b  ld   $1b
              ae33 000b  ld   $0b
              ae34 0000  ld   $00
              ae35 0000  ld   $00
              ae36 0020  ld   $20
              ae37 0013  ld   $13
              ae38 001d  ld   $1d
              ae39 00a2  ld   $a2
              ae3a 0002  ld   $02
              ae3b 0078  ld   $78
              ae3c 00b5  ld   $b5
              ae3d 0096  ld   $96
              ae3e 009d  ld   $9d
              ae3f 0000  ld   $00
              ae40 0002  ld   $02
              ae41 00ca  ld   $ca
              ae42 0010  ld   $10
              ae43 00f8  ld   $f8
              ae44 0058  ld   $58
              ae45 0060  ld   $60
              ae46 00b1  ld   $b1
              ae47 0054  ld   $54
              ae48 0020  ld   $20
              ae49 007d  ld   $7d
              ae4a 0022  ld   $22
              ae4b 0090  ld   $90
              ae4c 0003  ld   $03
              ae4d 004c  ld   $4c
              ae4e 0082  ld   $82
              ae4f 0012  ld   $12
              ae50 00e9  ld   $e9
              ae51 002f  ld   $2f
              ae52 004c  ld   $4c
              ae53 00f6  ld   $f6
              ae54 001d  ld   $1d
              ae55 00a0  ld   $a0
              ae56 0002  ld   $02
              ae57 00b1  ld   $b1
              ae58 0097  ld   $97
              ae59 00c5  ld   $c5
              ae5a 0066  ld   $66
              ae5b 0090  ld   $90
              ae5c 0017  ld   $17
              ae5d 00d0  ld   $d0
              ae5e 0007  ld   $07
              ae5f 0088  ld   $88
              ae60 00b1  ld   $b1
              ae61 0097  ld   $97
              ae62 00c5  ld   $c5
              ae63 0065  ld   $65
              ae64 0090  ld   $90
              ae65 000e  ld   $0e
              ae66 00a4  ld   $a4
              ae67 0098  ld   $98
              ae68 00c4  ld   $c4
              ae69 0060  ld   $60
              ae6a 0090  ld   $90
              ae6b 0008  ld   $08
              ae6c 00d0  ld   $d0
              ae6d 000d  ld   $0d
              ae6e 00a5  ld   $a5
              ae6f 0097  ld   $97
              ae70 00c5  ld   $c5
              ae71 005f  ld   $5f
              ae72 00b0  ld   $b0
              ae73 0007  ld   $07
              ae74 00a5  ld   $a5
              ae75 0097  ld   $97
              ae76 00a4  ld   $a4
              ae77 0098  ld   $98
              ae78 004c  ld   $4c
              ae79 005b  ld   $5b
              ae7a 000b  ld   $0b
              ae7b 00a0  ld   $a0
              ae7c 0000  ld   $00
              ae7d 00b1  ld   $b1
              ae7e 0097  ld   $97
              ae7f 0020  ld   $20
              ae80 00b1  ld   $b1
              ae81 0014  ld   $14
              ae82 00a5  ld   $a5
              ae83 0083  ld   $83
              ae84 00a4  ld   $a4
              ae85 0084  ld   $84
              ae86 0085  ld   $85
              ae87 00a2  ld   $a2
              ae88 0084  ld   $84
              ae89 00a3  ld   $a3
              ae8a 0020  ld   $20
              ae8b 00b6  ld   $b6
              ae8c 0016  ld   $16
              ae8d 00a9  ld   $a9
              ae8e 0094  ld   $94
              ae8f 00a0  ld   $a0
              ae90 0000  ld   $00
              ae91 0085  ld   $85
              ae92 0083  ld   $83
              ae93 0084  ld   $84
              ae94 0084  ld   $84
              ae95 0020  ld   $20
              ae96 0017  ld   $17
              ae97 0017  ld   $17
              ae98 00a0  ld   $a0
              ae99 0000  ld   $00
              ae9a 00b1  ld   $b1
              ae9b 0083  ld   $83
              ae9c 0091  ld   $91
              ae9d 007b  ld   $7b
              ae9e 00c8  ld   $c8
              ae9f 00b1  ld   $b1
              aea0 0083  ld   $83
              aea1 0091  ld   $91
              aea2 007b  ld   $7b
              aea3 00c8  ld   $c8
              aea4 00b1  ld   $b1
              aea5 0083  ld   $83
              aea6 0091  ld   $91
              aea7 007b  ld   $7b
              aea8 0060  ld   $60
              aea9 0020  ld   $20
              aeaa 00f2  ld   $f2
              aeab 000b  ld   $0b
              aeac 0020  ld   $20
              aead 0071  ld   $71
              aeae 0022  ld   $22
              aeaf 00f0  ld   $f0
              aeb0 0031  ld   $31
              aeb1 00f0  ld   $f0
              aeb2 003b  ld   $3b
              aeb3 00c9  ld   $c9
              aeb4 009d  ld   $9d
              aeb5 00f0  ld   $f0
              aeb6 0049  ld   $49
              aeb7 00c9  ld   $c9
              aeb8 00a0  ld   $a0
              aeb9 0018  ld   $18
              aeba 00f0  ld   $f0
              aebb 0044  ld   $44
              aebc 00c9  ld   $c9
              aebd 002c  ld   $2c
              aebe 00f0  ld   $f0
              aebf 002f  ld   $2f
              aec0 00c9  ld   $c9
              aec1 003b  ld   $3b
              aec2 00f0  ld   $f0
              aec3 0056  ld   $56
              aec4 0020  ld   $20
              aec5 000a  ld   $0a
              aec6 000e  ld   $0e
              aec7 0024  ld   $24
              aec8 003f  ld   $3f
              aec9 0030  ld   $30
              aeca 00de  ld   $de
              aecb 0020  ld   $20
              aecc 0055  ld   $55
              aecd 001e  ld   $1e
              aece 0020  ld   $20
              aecf 00c3  ld   $c3
              aed0 0014  ld   $14
              aed1 0020  ld   $20
              aed2 00f2  ld   $f2
              aed3 000b  ld   $0b
              aed4 0020  ld   $20
              aed5 000c  ld   $0c
              aed6 000c  ld   $0c
              aed7 00d0  ld   $d0
              aed8 00d3  ld   $d3
              aed9 00a9  ld   $a9
              aeda 0000  ld   $00
              aedb 009d  ld   $9d
              aedc 0005  ld   $05
              aedd 0024  ld   $24
              aede 00a2  ld   $a2
              aedf 0004  ld   $04
              aee0 00a0  ld   $a0
              aee1 0024  ld   $24
              aee2 00a9  ld   $a9
              aee3 000d  ld   $0d
              aee4 0020  ld   $20
              aee5 0011  ld   $11
              aee6 000c  ld   $0c
              aee7 00a9  ld   $a9
              aee8 000a  ld   $0a
              aee9 0020  ld   $20
              aeea 0011  ld   $11
              aeeb 000c  ld   $0c
              aeec 0049  ld   $49
              aeed 00ff  ld   $ff
              aeee 0060  ld   $60
              aeef 00a5  ld   $a5
              aef0 0030  ld   $30
              aef1 0020  ld   $20
              aef2 007a  ld   $7a
              aef3 0004  ld   $04
              aef4 0098  ld   $98
              aef5 0038  ld   $38
              aef6 00e9  ld   $e9
              aef7 000a  ld   $0a
              aef8 00b0  ld   $b0
              aef9 00fc  ld   $fc
              aefa 0049  ld   $49
              aefb fe00  bra  ac          ;+-----------------------------------+
              aefc fcfd  bra  $aefd       ;|                                   |
              aefd 1418  ld   $18,y       ;| Trampoline for page $ae00 lookups |
              aefe e006  jmp  y,$06       ;|                                   |
              aeff c218  st   [$18]       ;+-----------------------------------+
              af00 00ff  ld   $ff
              af01 0069  ld   $69
              af02 0001  ld   $01
              af03 00d0  ld   $d0
              af04 0015  ld   $15
              af05 0008  ld   $08
              af06 0020  ld   $20
              af07 00d7  ld   $d7
              af08 0017  ld   $17
              af09 00c9  ld   $c9
              af0a 0029  ld   $29
              af0b 00d0  ld   $d0
              af0c 005b  ld   $5b
              af0d 0028  ld   $28
              af0e 0090  ld   $90
              af0f 000b  ld   $0b
              af10 00a5  ld   $a5
              af11 0030  ld   $30
              af12 0020  ld   $20
              af13 007a  ld   $7a
              af14 0004  ld   $04
              af15 008a  ld   $8a
              af16 00e5  ld   $e5
              af17 002b  ld   $2b
              af18 0090  ld   $90
              af19 0005  ld   $05
              af1a 00aa  ld   $aa
              af1b 00e8  ld   $e8
              af1c 00ca  ld   $ca
              af1d 00d0  ld   $d0
              af1e 0006  ld   $06
              af1f 0020  ld   $20
              af20 006b  ld   $6b
              af21 0022  ld   $22
              af22 004c  ld   $4c
              af23 007b  ld   $7b
              af24 000b  ld   $0b
              af25 0020  ld   $20
              af26 000c  ld   $0c
              af27 000c  ld   $0c
              af28 00d0  ld   $d0
              af29 00f2  ld   $f2
              af2a 0020  ld   $20
              af2b 00c3  ld   $c3
              af2c 0014  ld   $14
              af2d 0020  ld   $20
              af2e 00e2  ld   $e2
              af2f 0016  ld   $16
              af30 00aa  ld   $aa
              af31 00a0  ld   $a0
              af32 0000  ld   $00
              af33 00e8  ld   $e8
              af34 00ca  ld   $ca
              af35 00f0  ld   $f0
              af36 00bc  ld   $bc
              af37 00b1  ld   $b1
              af38 0054  ld   $54
              af39 0020  ld   $20
              af3a 0011  ld   $11
              af3b 000c  ld   $0c
              af3c 0000  ld   $00
              af3d 0000  ld   $00
              af3e 000c  ld   $0c
              af3f 00c8  ld   $c8
              af40 00c9  ld   $c9
              af41 000d  ld   $0d
              af42 00d0  ld   $d0
              af43 00f3  ld   $f3
              af44 0020  ld   $20
              af45 00b6  ld   $b6
              af46 000b  ld   $0b
              af47 004c  ld   $4c
              af48 00f9  ld   $f9
              af49 000b  ld   $0b
              af4a 00a9  ld   $a9
              af4b 0020  ld   $20
              af4c 002c  ld   $2c
              af4d 00a9  ld   $a9
              af4e 003f  ld   $3f
              af4f 0024  ld   $24
              af50 0045  ld   $45
              af51 0030  ld   $30
              af52 0003  ld   $03
              af53 0020  ld   $20
              af54 0000  ld   $00
              af55 002b  ld   $2b
              af56 0029  ld   $29
              af57 00ff  ld   $ff
              af58 0060  ld   $60
              af59 00a5  ld   $a5
              af5a 0043  ld   $43
              af5b 00f0  ld   $f0
              af5c 0011  ld   $11
              af5d 0030  ld   $30
              af5e 0004  ld   $04
              af5f 00a0  ld   $a0
              af60 00ff  ld   $ff
              af61 00d0  ld   $d0
              af62 0004  ld   $04
              af63 00a5  ld   $a5
              af64 0071  ld   $71
              af65 00a4  ld   $a4
              af66 0072  ld   $72
              af67 0085  ld   $85
              af68 006b  ld   $6b
              af69 0084  ld   $84
              af6a 006c  ld   $6c
              af6b 004c  ld   $4c
              af6c 006e  ld   $6e
              af6d 000f  ld   $0f
              af6e 00a9  ld   $a9
              af6f 007e  ld   $7e
              af70 00a0  ld   $a0
              af71 000d  ld   $0d
              af72 0020  ld   $20
              af73 00ef  ld   $ef
              af74 000b  ld   $0b
              af75 00a5  ld   $a5
              af76 006f  ld   $6f
              af77 00a4  ld   $a4
              af78 0070  ld   $70
              af79 0085  ld   $85
              af7a 00a6  ld   $a6
              af7b 0084  ld   $84
              af7c 00a7  ld   $a7
              af7d 0060  ld   $60
              af7e 0020  ld   $20
              af7f 00e2  ld   $e2
              af80 0013  ld   $13
              af81 00a2  ld   $a2
              af82 0006  ld   $06
              af83 00a0  ld   $a0
              af84 0024  ld   $24
              af85 00a9  ld   $a9
              af86 0000  ld   $00
              af87 008d  ld   $8d
              af88 0006  ld   $06
              af89 0024  ld   $24
              af8a 00a9  ld   $a9
              af8b 0040  ld   $40
              af8c 0020  ld   $20
              af8d 0089  ld   $89
              af8e 000c  ld   $0c
              af8f 0060  ld   $60
              af90 0046  ld   $46
              af91 0045  ld   $45
              af92 00c9  ld   $c9
              af93 0022  ld   $22
              af94 00d0  ld   $d0
              af95 000b  ld   $0b
              af96 0020  ld   $20
              af97 0023  ld   $23
              af98 000f  ld   $0f
              af99 00a9  ld   $a9
              af9a 003b  ld   $3b
              af9b 0020  ld   $20
              af9c 0065  ld   $65
              af9d 000f  ld   $0f
              af9e 0020  ld   $20
              af9f 00f2  ld   $f2
              afa0 000b  ld   $0b
              afa1 0020  ld   $20
              afa2 00e2  ld   $e2
              afa3 0013  ld   $13
              afa4 00a9  ld   $a9
              afa5 002c  ld   $2c
              afa6 008d  ld   $8d
              afa7 0004  ld   $04
              afa8 0024  ld   $24
              afa9 0020  ld   $20
              afaa 0077  ld   $77
              afab 000c  ld   $0c
              afac 00ad  ld   $ad
              afad 0005  ld   $05
              afae 0024  ld   $24
              afaf 00d0  ld   $d0
              afb0 0014  ld   $14
              afb1 0018  ld   $18
              afb2 004c  ld   $4c
              afb3 0038  ld   $38
              afb4 0009  ld   $09
              afb5 0020  ld   $20
              afb6 000f  ld   $0f
              afb7 000c  ld   $0c
              afb8 0020  ld   $20
              afb9 000c  ld   $0c
              afba 000c  ld   $0c
              afbb 004c  ld   $4c
              afbc 0057  ld   $57
              afbd 0006  ld   $06
              afbe 00a6  ld   $a6
              afbf 0073  ld   $73
              afc0 00a4  ld   $a4
              afc1 0074  ld   $74
              afc2 00a9  ld   $a9
              afc3 0098  ld   $98
              afc4 002c  ld   $2c
              afc5 00a9  ld   $a9
              afc6 0000  ld   $00
              afc7 0085  ld   $85
              afc8 0043  ld   $43
              afc9 0086  ld   $86
              afca 0075  ld   $75
              afcb 0084  ld   $84
              afcc 0076  ld   $76
              afcd 0020  ld   $20
              afce 00d0  ld   $d0
              afcf 0010  ld   $10
              afd0 0085  ld   $85
              afd1 007b  ld   $7b
              afd2 0084  ld   $84
              afd3 007c  ld   $7c
              afd4 00a5  ld   $a5
              afd5 00a6  ld   $a6
              afd6 00a4  ld   $a4
              afd7 00a7  ld   $a7
              afd8 0085  ld   $85
              afd9 007d  ld   $7d
              afda 0084  ld   $84
              afdb 007e  ld   $7e
              afdc 00a6  ld   $a6
              afdd 0075  ld   $75
              afde 00a4  ld   $a4
              afdf 0076  ld   $76
              afe0 0086  ld   $86
              afe1 00a6  ld   $a6
              afe2 0084  ld   $84
              afe3 00a7  ld   $a7
              afe4 0020  ld   $20
              afe5 0071  ld   $71
              afe6 0022  ld   $22
              afe7 00d0  ld   $d0
              afe8 001c  ld   $1c
              afe9 0024  ld   $24
              afea 0043  ld   $43
              afeb 0050  ld   $50
              afec 000c  ld   $0c
              afed 0020  ld   $20
              afee 0000  ld   $00
              afef 002c  ld   $2c
              aff0 008d  ld   $8d
              aff1 0005  ld   $05
              aff2 0024  ld   $24
              aff3 00a2  ld   $a2
              aff4 0004  ld   $04
              aff5 00a0  ld   $a0
              aff6 0024  ld   $24
              aff7 00d0  ld   $d0
              aff8 0008  ld   $08
              aff9 0030  ld   $30
              affa 0071  ld   $71
              affb fe00  bra  ac          ;+-----------------------------------+
              affc fcfd  bra  $affd       ;|                                   |
              affd 1418  ld   $18,y       ;| Trampoline for page $af00 lookups |
              affe e006  jmp  y,$06       ;|                                   |
              afff c218  st   [$18]       ;+-----------------------------------+
              b000 0020  ld   $20
              b001 000f  ld   $0f
              b002 000c  ld   $0c
              b003 0020  ld   $20
              b004 0077  ld   $77
              b005 000c  ld   $0c
              b006 0086  ld   $86
              b007 00a6  ld   $a6
              b008 0084  ld   $84
              b009 00a7  ld   $a7
              b00a 0020  ld   $20
              b00b 006b  ld   $6b
              b00c 0022  ld   $22
              b00d 0024  ld   $24
              b00e 003f  ld   $3f
              b00f 0010  ld   $10
              b010 0031  ld   $31
              b011 0024  ld   $24
              b012 0043  ld   $43
              b013 0050  ld   $50
              b014 0009  ld   $09
              b015 00e8  ld   $e8
              b016 0086  ld   $86
              b017 00a6  ld   $a6
              b018 00a9  ld   $a9
              b019 0000  ld   $00
              b01a 0085  ld   $85
              b01b 003b  ld   $3b
              b01c 00f0  ld   $f0
              b01d 000c  ld   $0c
              b01e 0085  ld   $85
              b01f 003b  ld   $3b
              b020 00c9  ld   $c9
              b021 0022  ld   $22
              b022 00f0  ld   $f0
              b023 0007  ld   $07
              b024 00a9  ld   $a9
              b025 003a  ld   $3a
              b026 0085  ld   $85
              b027 003b  ld   $3b
              b028 00a9  ld   $a9
              b029 002c  ld   $2c
              b02a 0018  ld   $18
              b02b 0085  ld   $85
              b02c 003c  ld   $3c
              b02d 00a5  ld   $a5
              b02e 00a6  ld   $a6
              b02f 00a4  ld   $a4
              b030 00a7  ld   $a7
              b031 0069  ld   $69
              b032 0000  ld   $00
              b033 0090  ld   $90
              b034 0001  ld   $01
              b035 00c8  ld   $c8
              b036 0020  ld   $20
              b037 00c9  ld   $c9
              b038 0014  ld   $14
              b039 0020  ld   $20
              b03a 001f  ld   $1f
              b03b 0018  ld   $18
              b03c 0020  ld   $20
              b03d 00c9  ld   $c9
              b03e 000a  ld   $0a
              b03f 004c  ld   $4c
              b040 0007  ld   $07
              b041 000d  ld   $0d
              b042 0020  ld   $20
              b043 000d  ld   $0d
              b044 0000  ld   $00
              b045 0000  ld   $00
              b046 006b  ld   $6b
              b047 001d  ld   $1d
              b048 00a5  ld   $a5
              b049 0040  ld   $40
              b04a 0020  ld   $20
              b04b 00b1  ld   $b1
              b04c 000a  ld   $0a
              b04d 0020  ld   $20
              b04e 0071  ld   $71
              b04f 0022  ld   $22
              b050 00f0  ld   $f0
              b051 0007  ld   $07
              b052 00c9  ld   $c9
              b053 002c  ld   $2c
              b054 00f0  ld   $f0
              b055 0003  ld   $03
              b056 004c  ld   $4c
              b057 001b  ld   $1b
              b058 000c  ld   $0c
              b059 00a5  ld   $a5
              b05a 00a6  ld   $a6
              b05b 00a4  ld   $a4
              b05c 00a7  ld   $a7
              b05d 0085  ld   $85
              b05e 0075  ld   $75
              b05f 0084  ld   $84
              b060 0076  ld   $76
              b061 00a5  ld   $a5
              b062 007d  ld   $7d
              b063 00a4  ld   $a4
              b064 007e  ld   $7e
              b065 0085  ld   $85
              b066 00a6  ld   $a6
              b067 0084  ld   $84
              b068 00a7  ld   $a7
              b069 0020  ld   $20
              b06a 0071  ld   $71
              b06b 0022  ld   $22
              b06c 00f0  ld   $f0
              b06d 002c  ld   $2c
              b06e 0020  ld   $20
              b06f 0063  ld   $63
              b070 000f  ld   $0f
              b071 004c  ld   $4c
              b072 008f  ld   $8f
              b073 000c  ld   $0c
              b074 0020  ld   $20
              b075 00f5  ld   $f5
              b076 0009  ld   $09
              b077 00c8  ld   $c8
              b078 00aa  ld   $aa
              b079 00d0  ld   $d0
              b07a 0012  ld   $12
              b07b 00a2  ld   $a2
              b07c 002a  ld   $2a
              b07d 00c8  ld   $c8
              b07e 00b1  ld   $b1
              b07f 00a6  ld   $a6
              b080 00f0  ld   $f0
              b081 0069  ld   $69
              b082 00c8  ld   $c8
              b083 00b1  ld   $b1
              b084 00a6  ld   $a6
              b085 0085  ld   $85
              b086 0071  ld   $71
              b087 00c8  ld   $c8
              b088 00b1  ld   $b1
              b089 00a6  ld   $a6
              b08a 00c8  ld   $c8
              b08b 0085  ld   $85
              b08c 0072  ld   $72
              b08d 00b1  ld   $b1
              b08e 00a6  ld   $a6
              b08f 00aa  ld   $aa
              b090 0020  ld   $20
              b091 00ea  ld   $ea
              b092 0009  ld   $09
              b093 00e0  ld   $e0
              b094 0083  ld   $83
              b095 00d0  ld   $d0
              b096 00dd  ld   $dd
              b097 004c  ld   $4c
              b098 00c7  ld   $c7
              b099 000c  ld   $0c
              b09a 00a5  ld   $a5
              b09b 0075  ld   $75
              b09c 00a4  ld   $a4
              b09d 0076  ld   $76
              b09e 00a6  ld   $a6
              b09f 0043  ld   $43
              b0a0 0010  ld   $10
              b0a1 0003  ld   $03
              b0a2 004c  ld   $4c
              b0a3 0021  ld   $21
              b0a4 0009  ld   $09
              b0a5 00a0  ld   $a0
              b0a6 0000  ld   $00
              b0a7 00b1  ld   $b1
              b0a8 0075  ld   $75
              b0a9 00f0  ld   $f0
              b0aa 0007  ld   $07
              b0ab 00a9  ld   $a9
              b0ac 006d  ld   $6d
              b0ad 00a0  ld   $a0
              b0ae 000d  ld   $0d
              b0af 004c  ld   $4c
              b0b0 00ef  ld   $ef
              b0b1 000b  ld   $0b
              b0b2 0060  ld   $60
              b0b3 003f  ld   $3f
              b0b4 0045  ld   $45
              b0b5 0058  ld   $58
              b0b6 0054  ld   $54
              b0b7 0052  ld   $52
              b0b8 0041  ld   $41
              b0b9 0020  ld   $20
              b0ba 0049  ld   $49
              b0bb 0047  ld   $47
              b0bc 004e  ld   $4e
              b0bd 004f  ld   $4f
              b0be 0052  ld   $52
              b0bf 0045  ld   $45
              b0c0 0044  ld   $44
              b0c1 000d  ld   $0d
              b0c2 000a  ld   $0a
              b0c3 0000  ld   $00
              b0c4 003f  ld   $3f
              b0c5 0052  ld   $52
              b0c6 0045  ld   $45
              b0c7 0044  ld   $44
              b0c8 004f  ld   $4f
              b0c9 0020  ld   $20
              b0ca 0046  ld   $46
              b0cb 0052  ld   $52
              b0cc 004f  ld   $4f
              b0cd 004d  ld   $4d
              b0ce 0020  ld   $20
              b0cf 0053  ld   $53
              b0d0 0054  ld   $54
              b0d1 0041  ld   $41
              b0d2 0052  ld   $52
              b0d3 0054  ld   $54
              b0d4 000d  ld   $0d
              b0d5 000a  ld   $0a
              b0d6 0000  ld   $00
              b0d7 00d0  ld   $d0
              b0d8 0004  ld   $04
              b0d9 00a0  ld   $a0
              b0da 0000  ld   $00
              b0db 00f0  ld   $f0
              b0dc 0003  ld   $03
              b0dd 0020  ld   $20
              b0de 00d0  ld   $d0
              b0df 0010  ld   $10
              b0e0 0085  ld   $85
              b0e1 007b  ld   $7b
              b0e2 0084  ld   $84
              b0e3 007c  ld   $7c
              b0e4 0020  ld   $20
              b0e5 00a2  ld   $a2
              b0e6 0004  ld   $04
              b0e7 00f0  ld   $f0
              b0e8 0004  ld   $04
              b0e9 00a2  ld   $a2
              b0ea 0000  ld   $00
              b0eb 00f0  ld   $f0
              b0ec 0060  ld   $60
              b0ed 009a  ld   $9a
              b0ee 008a  ld   $8a
              b0ef 0018  ld   $18
              b0f0 0069  ld   $69
              b0f1 0004  ld   $04
              b0f2 0048  ld   $48
              b0f3 0069  ld   $69
              b0f4 0006  ld   $06
              b0f5 0085  ld   $85
              b0f6 0056  ld   $56
              b0f7 0068  ld   $68
              b0f8 00a0  ld   $a0
              b0f9 0000  ld   $00
              b0fa 0020  ld   $20
              b0fb fe00  bra  ac          ;+-----------------------------------+
              b0fc fcfd  bra  $b0fd       ;|                                   |
              b0fd 1418  ld   $18,y       ;| Trampoline for page $b000 lookups |
              b0fe e006  jmp  y,$06       ;|                                   |
              b0ff c218  st   [$18]       ;+-----------------------------------+
              b100 001a  ld   $1a
              b101 001c  ld   $1c
              b102 00ba  ld   $ba
              b103 00b5  ld   $b5
              b104 0009  ld   $09
              b105 0085  ld   $85
              b106 0099  ld   $99
              b107 00a5  ld   $a5
              b108 007b  ld   $7b
              b109 00a4  ld   $a4
              b10a 007c  ld   $7c
              b10b 0020  ld   $20
              b10c 00df  ld   $df
              b10d 0018  ld   $18
              b10e 0020  ld   $20
              b10f 0048  ld   $48
              b110 001c  ld   $1c
              b111 00a0  ld   $a0
              b112 0000  ld   $00
              b113 0020  ld   $20
              b114 00d5  ld   $d5
              b115 001c  ld   $1c
              b116 00ba  ld   $ba
              b117 0038  ld   $38
              b118 00f5  ld   $f5
              b119 0009  ld   $09
              b11a 00f0  ld   $f0
              b11b 0013  ld   $13
              b11c 00b5  ld   $b5
              b11d 000f  ld   $0f
              b11e 0085  ld   $85
              b11f 006b  ld   $6b
              b120 00b5  ld   $b5
              b121 0010  ld   $10
              b122 0085  ld   $85
              b123 006c  ld   $6c
              b124 00b5  ld   $b5
              b125 0012  ld   $12
              b126 0085  ld   $85
              b127 00a6  ld   $a6
              b128 00b5  ld   $b5
              b129 0011  ld   $11
              b12a 0085  ld   $85
              b12b 00a7  ld   $a7
              b12c 004c  ld   $4c
              b12d 00ab  ld   $ab
              b12e 0008  ld   $08
              b12f 008a  ld   $8a
              b130 0069  ld   $69
              b131 0011  ld   $11
              b132 00aa  ld   $aa
              b133 009a  ld   $9a
              b134 0020  ld   $20
              b135 0071  ld   $71
              b136 0022  ld   $22
              b137 00c9  ld   $c9
              b138 002c  ld   $2c
              b139 00d0  ld   $d0
              b13a 00f1  ld   $f1
              b13b 0020  ld   $20
              b13c 006b  ld   $6b
              b13d 0022  ld   $22
              b13e 0020  ld   $20
              b13f 0097  ld   $97
              b140 000d  ld   $0d
              b141 0020  ld   $20
              b142 000a  ld   $0a
              b143 000e  ld   $0e
              b144 0018  ld   $18
              b145 0024  ld   $24
              b146 0038  ld   $38
              b147 0024  ld   $24
              b148 003f  ld   $3f
              b149 0030  ld   $30
              b14a 0003  ld   $03
              b14b 000e  ld   $0e
              b14c 0000  ld   $00
              b14d 0000  ld   $00
              b14e 00b0  ld   $b0
              b14f 0003  ld   $03
              b150 0060  ld   $60
              b151 00b0  ld   $b0
              b152 00fd  ld   $fd
              b153 00a2  ld   $a2
              b154 00a3  ld   $a3
              b155 004c  ld   $4c
              b156 004a  ld   $4a
              b157 0005  ld   $05
              b158 00a6  ld   $a6
              b159 00a6  ld   $a6
              b15a 00d0  ld   $d0
              b15b 0002  ld   $02
              b15c 00c6  ld   $c6
              b15d 00a7  ld   $a7
              b15e 00c6  ld   $c6
              b15f 00a6  ld   $a6
              b160 00a2  ld   $a2
              b161 0000  ld   $00
              b162 0024  ld   $24
              b163 0048  ld   $48
              b164 008a  ld   $8a
              b165 0048  ld   $48
              b166 00a9  ld   $a9
              b167 0001  ld   $01
              b168 0020  ld   $20
              b169 000e  ld   $0e
              b16a 0005  ld   $05
              b16b 0020  ld   $20
              b16c 00ef  ld   $ef
              b16d 000e  ld   $0e
              b16e 00a9  ld   $a9
              b16f 0000  ld   $00
              b170 0085  ld   $85
              b171 007f  ld   $7f
              b172 0020  ld   $20
              b173 0071  ld   $71
              b174 0022  ld   $22
              b175 0038  ld   $38
              b176 00e9  ld   $e9
              b177 00ab  ld   $ab
              b178 0090  ld   $90
              b179 0017  ld   $17
              b17a 00c9  ld   $c9
              b17b 0003  ld   $03
              b17c 00b0  ld   $b0
              b17d 0013  ld   $13
              b17e 00c9  ld   $c9
              b17f 0001  ld   $01
              b180 002a  ld   $2a
              b181 0049  ld   $49
              b182 0001  ld   $01
              b183 0045  ld   $45
              b184 007f  ld   $7f
              b185 00c5  ld   $c5
              b186 007f  ld   $7f
              b187 0090  ld   $90
              b188 0061  ld   $61
              b189 0085  ld   $85
              b18a 007f  ld   $7f
              b18b 0020  ld   $20
              b18c 006b  ld   $6b
              b18d 0022  ld   $22
              b18e 004c  ld   $4c
              b18f 0027  ld   $27
              b190 000e  ld   $0e
              b191 00a6  ld   $a6
              b192 007f  ld   $7f
              b193 00d0  ld   $d0
              b194 002c  ld   $2c
              b195 00b0  ld   $b0
              b196 007b  ld   $7b
              b197 0069  ld   $69
              b198 0007  ld   $07
              b199 0090  ld   $90
              b19a 0077  ld   $77
              b19b 0065  ld   $65
              b19c 003f  ld   $3f
              b19d 00d0  ld   $d0
              b19e 0003  ld   $03
              b19f 004c  ld   $4c
              b1a0 0079  ld   $79
              b1a1 0016  ld   $16
              b1a2 0069  ld   $69
              b1a3 00ff  ld   $ff
              b1a4 0085  ld   $85
              b1a5 0054  ld   $54
              b1a6 000a  ld   $0a
              b1a7 0065  ld   $65
              b1a8 0054  ld   $54
              b1a9 00a8  ld   $a8
              b1aa 0068  ld   $68
              b1ab 00d9  ld   $d9
              b1ac 0080  ld   $80
              b1ad 0002  ld   $02
              b1ae 00b0  ld   $b0
              b1af 0067  ld   $67
              b1b0 0020  ld   $20
              b1b1 00f9  ld   $f9
              b1b2 000d  ld   $0d
              b1b3 0048  ld   $48
              b1b4 0020  ld   $20
              b1b5 008c  ld   $8c
              b1b6 000e  ld   $0e
              b1b7 0068  ld   $68
              b1b8 00a4  ld   $a4
              b1b9 007d  ld   $7d
              b1ba 0010  ld   $10
              b1bb 0017  ld   $17
              b1bc 00aa  ld   $aa
              b1bd 00f0  ld   $f0
              b1be 0056  ld   $56
              b1bf 00d0  ld   $d0
              b1c0 005f  ld   $5f
              b1c1 0046  ld   $46
              b1c2 003f  ld   $3f
              b1c3 008a  ld   $8a
              b1c4 002a  ld   $2a
              b1c5 00a6  ld   $a6
              b1c6 00a6  ld   $a6
              b1c7 00d0  ld   $d0
              b1c8 0002  ld   $02
              b1c9 00c6  ld   $c6
              b1ca 00a7  ld   $a7
              b1cb 00c6  ld   $c6
              b1cc 00a6  ld   $a6
              b1cd 00a0  ld   $a0
              b1ce 001b  ld   $1b
              b1cf 0085  ld   $85
              b1d0 007f  ld   $7f
              b1d1 00d0  ld   $d0
              b1d2 00d7  ld   $d7
              b1d3 00d9  ld   $d9
              b1d4 0080  ld   $80
              b1d5 0002  ld   $02
              b1d6 00b0  ld   $b0
              b1d7 0048  ld   $48
              b1d8 0090  ld   $90
              b1d9 00d9  ld   $d9
              b1da 00b9  ld   $b9
              b1db 0082  ld   $82
              b1dc 0002  ld   $02
              b1dd 0048  ld   $48
              b1de 00b9  ld   $b9
              b1df 0081  ld   $81
              b1e0 0002  ld   $02
              b1e1 0048  ld   $48
              b1e2 0020  ld   $20
              b1e3 009f  ld   $9f
              b1e4 000e  ld   $0e
              b1e5 00a5  ld   $a5
              b1e6 007f  ld   $7f
              b1e7 004c  ld   $4c
              b1e8 0015  ld   $15
              b1e9 000e  ld   $0e
              b1ea 004c  ld   $4c
              b1eb 006e  ld   $6e
              b1ec 000f  ld   $0f
              b1ed 00a5  ld   $a5
              b1ee 0099  ld   $99
              b1ef 00be  ld   $be
              b1f0 0080  ld   $80
              b1f1 0002  ld   $02
              b1f2 00a8  ld   $a8
              b1f3 0068  ld   $68
              b1f4 0085  ld   $85
              b1f5 0054  ld   $54
              b1f6 00e6  ld   $e6
              b1f7 0054  ld   $54
              b1f8 0068  ld   $68
              b1f9 0085  ld   $85
              b1fa 0055  ld   $55
              b1fb fe00  bra  ac          ;+-----------------------------------+
              b1fc fcfd  bra  $b1fd       ;|                                   |
              b1fd 1418  ld   $18,y       ;| Trampoline for page $b100 lookups |
              b1fe e006  jmp  y,$06       ;|                                   |
              b1ff c218  st   [$18]       ;+-----------------------------------+
              b200 0098  ld   $98
              b201 0048  ld   $48
              b202 0020  ld   $20
              b203 0093  ld   $93
              b204 001c  ld   $1c
              b205 00a5  ld   $a5
              b206 0098  ld   $98
              b207 0048  ld   $48
              b208 00a5  ld   $a5
              b209 0097  ld   $97
              b20a 0048  ld   $48
              b20b 00a5  ld   $a5
              b20c 0096  ld   $96
              b20d 0048  ld   $48
              b20e 00a5  ld   $a5
              b20f 0095  ld   $95
              b210 0048  ld   $48
              b211 00a5  ld   $a5
              b212 0094  ld   $94
              b213 0048  ld   $48
              b214 006c  ld   $6c
              b215 0054  ld   $54
              b216 0000  ld   $00
              b217 00a0  ld   $a0
              b218 00ff  ld   $ff
              b219 0068  ld   $68
              b21a 00f0  ld   $f0
              b21b 0023  ld   $23
              b21c 00c9  ld   $c9
              b21d 0064  ld   $64
              b21e 00f0  ld   $f0
              b21f 0003  ld   $03
              b220 0020  ld   $20
              b221 00f9  ld   $f9
              b222 000d  ld   $0d
              b223 0084  ld   $84
              b224 007d  ld   $7d
              b225 0068  ld   $68
              b226 004a  ld   $4a
              b227 0085  ld   $85
              b228 0044  ld   $44
              b229 0068  ld   $68
              b22a 0085  ld   $85
              b22b 009c  ld   $9c
              b22c 0068  ld   $68
              b22d 0085  ld   $85
              b22e 009d  ld   $9d
              b22f 0068  ld   $68
              b230 0085  ld   $85
              b231 009e  ld   $9e
              b232 0068  ld   $68
              b233 0085  ld   $85
              b234 009f  ld   $9f
              b235 0068  ld   $68
              b236 0085  ld   $85
              b237 00a0  ld   $a0
              b238 0068  ld   $68
              b239 0085  ld   $85
              b23a 00a1  ld   $a1
              b23b 0045  ld   $45
              b23c 0099  ld   $99
              b23d 0085  ld   $85
              b23e 00a2  ld   $a2
              b23f 00a5  ld   $a5
              b240 0094  ld   $94
              b241 0060  ld   $60
              b242 00a9  ld   $a9
              b243 0000  ld   $00
              b244 0085  ld   $85
              b245 003f  ld   $3f
              b246 0020  ld   $20
              b247 006b  ld   $6b
              b248 0022  ld   $22
              b249 00b0  ld   $b0
              b24a 0003  ld   $03
              b24b 004c  ld   $4c
              b24c 006b  ld   $6b
              b24d 001d  ld   $1d
              b24e 0020  ld   $20
              b24f 005a  ld   $5a
              b250 0011  ld   $11
              b251 00b0  ld   $b0
              b252 007a  ld   $7a
              b253 000f  ld   $0f
              b254 0000  ld   $00
              b255 0000  ld   $00
              b256 00c9  ld   $c9
              b257 00ff  ld   $ff
              b258 00d0  ld   $d0
              b259 000f  ld   $0f
              b25a 00a9  ld   $a9
              b25b 000e  ld   $0e
              b25c 00a0  ld   $a0
              b25d 000f  ld   $0f
              b25e 0020  ld   $20
              b25f 001a  ld   $1a
              b260 001c  ld   $1c
              b261 004c  ld   $4c
              b262 006b  ld   $6b
              b263 0022  ld   $22
              b264 0082  ld   $82
              b265 0049  ld   $49
              b266 000f  ld   $0f
              b267 00da  ld   $da
              b268 00a1  ld   $a1
              b269 00c9  ld   $c9
              b26a 002e  ld   $2e
              b26b 00f0  ld   $f0
              b26c 00e1  ld   $e1
              b26d 00c9  ld   $c9
              b26e 00a5  ld   $a5
              b26f 00f0  ld   $f0
              b270 0058  ld   $58
              b271 00c9  ld   $c9
              b272 00a4  ld   $a4
              b273 00f0  ld   $f0
              b274 00d4  ld   $d4
              b275 00c9  ld   $c9
              b276 0022  ld   $22
              b277 00d0  ld   $d0
              b278 000f  ld   $0f
              b279 00a5  ld   $a5
              b27a 00a6  ld   $a6
              b27b 00a4  ld   $a4
              b27c 00a7  ld   $a7
              b27d 0069  ld   $69
              b27e 0000  ld   $00
              b27f 0090  ld   $90
              b280 0001  ld   $01
              b281 00c8  ld   $c8
              b282 0020  ld   $20
              b283 00c3  ld   $c3
              b284 0014  ld   $14
              b285 004c  ld   $4c
              b286 001f  ld   $1f
              b287 0018  ld   $18
              b288 00c9  ld   $c9
              b289 00a2  ld   $a2
              b28a 00d0  ld   $d0
              b28b 0013  ld   $13
              b28c 00a0  ld   $a0
              b28d 0018  ld   $18
              b28e 00d0  ld   $d0
              b28f 003b  ld   $3b
              b290 0020  ld   $20
              b291 00fd  ld   $fd
              b292 0011  ld   $11
              b293 00a5  ld   $a5
              b294 0098  ld   $98
              b295 0049  ld   $49
              b296 00ff  ld   $ff
              b297 00a8  ld   $a8
              b298 00a5  ld   $a5
              b299 0097  ld   $97
              b29a 0049  ld   $49
              b29b 00ff  ld   $ff
              b29c 004c  ld   $4c
              b29d 00cc  ld   $cc
              b29e 0013  ld   $13
              b29f 00c9  ld   $c9
              b2a0 009f  ld   $9f
              b2a1 00d0  ld   $d0
              b2a2 0003  ld   $03
              b2a3 004c  ld   $4c
              b2a4 0030  ld   $30
              b2a5 0014  ld   $14
              b2a6 00c9  ld   $c9
              b2a7 00ae  ld   $ae
              b2a8 0090  ld   $90
              b2a9 0003  ld   $03
              b2aa 004c  ld   $4c
              b2ab 00ec  ld   $ec
              b2ac 000f  ld   $0f
              b2ad 0020  ld   $20
              b2ae 0060  ld   $60
              b2af 000f  ld   $0f
              b2b0 0020  ld   $20
              b2b1 000a  ld   $0a
              b2b2 000e  ld   $0e
              b2b3 00a9  ld   $a9
              b2b4 0029  ld   $29
              b2b5 002c  ld   $2c
              b2b6 00a9  ld   $a9
              b2b7 0028  ld   $28
              b2b8 002c  ld   $2c
              b2b9 00a9  ld   $a9
              b2ba 002c  ld   $2c
              b2bb 00a0  ld   $a0
              b2bc 0000  ld   $00
              b2bd 00d1  ld   $d1
              b2be 00a6  ld   $a6
              b2bf 00d0  ld   $d0
              b2c0 0003  ld   $03
              b2c1 004c  ld   $4c
              b2c2 006b  ld   $6b
              b2c3 0022  ld   $22
              b2c4 00a2  ld   $a2
              b2c5 0010  ld   $10
              b2c6 004c  ld   $4c
              b2c7 004a  ld   $4a
              b2c8 0005  ld   $05
              b2c9 00a0  ld   $a0
              b2ca 0015  ld   $15
              b2cb 0068  ld   $68
              b2cc 0068  ld   $68
              b2cd 004c  ld   $4c
              b2ce 0066  ld   $66
              b2cf 000e  ld   $0e
              b2d0 0020  ld   $20
              b2d1 00d0  ld   $d0
              b2d2 0010  ld   $10
              b2d3 0085  ld   $85
              b2d4 0097  ld   $97
              b2d5 0084  ld   $84
              b2d6 0098  ld   $98
              b2d7 00a5  ld   $a5
              b2d8 0077  ld   $77
              b2d9 00a4  ld   $a4
              b2da 0078  ld   $78
              b2db 00a6  ld   $a6
              b2dc 003f  ld   $3f
              b2dd 00f0  ld   $f0
              b2de 0021  ld   $21
              b2df 00a2  ld   $a2
              b2e0 0000  ld   $00
              b2e1 0086  ld   $86
              b2e2 00a3  ld   $a3
              b2e3 00c9  ld   $c9
              b2e4 0054  ld   $54
              b2e5 00d0  ld   $d0
              b2e6 0018  ld   $18
              b2e7 00c0  ld   $c0
              b2e8 00c9  ld   $c9
              b2e9 00d0  ld   $d0
              b2ea 0014  ld   $14
              b2eb 0020  ld   $20
              b2ec 0073  ld   $73
              b2ed 0004  ld   $04
              b2ee 0084  ld   $84
              b2ef 0091  ld   $91
              b2f0 0088  ld   $88
              b2f1 0084  ld   $84
              b2f2 00a4  ld   $a4
              b2f3 00a0  ld   $a0
              b2f4 0006  ld   $06
              b2f5 0084  ld   $84
              b2f6 0090  ld   $90
              b2f7 00a0  ld   $a0
              b2f8 0024  ld   $24
              b2f9 0020  ld   $20
              b2fa 00e0  ld   $e0
              b2fb fe00  bra  ac          ;+-----------------------------------+
              b2fc fcfd  bra  $b2fd       ;|                                   |
              b2fd 1418  ld   $18,y       ;| Trampoline for page $b200 lookups |
              b2fe e006  jmp  y,$06       ;|                                   |
              b2ff c218  st   [$18]       ;+-----------------------------------+
              b300 001e  ld   $1e
              b301 004c  ld   $4c
              b302 00ab  ld   $ab
              b303 0014  ld   $14
              b304 0060  ld   $60
              b305 00a6  ld   $a6
              b306 0040  ld   $40
              b307 0010  ld   $10
              b308 000d  ld   $0d
              b309 00a0  ld   $a0
              b30a 0000  ld   $00
              b30b 00b1  ld   $b1
              b30c 0097  ld   $97
              b30d 00aa  ld   $aa
              b30e 00c8  ld   $c8
              b30f 00b1  ld   $b1
              b310 0097  ld   $97
              b311 00a8  ld   $a8
              b312 008a  ld   $8a
              b313 004c  ld   $4c
              b314 00cc  ld   $cc
              b315 0013  ld   $13
              b316 00c9  ld   $c9
              b317 0054  ld   $54
              b318 00d0  ld   $d0
              b319 0019  ld   $19
              b31a 00c0  ld   $c0
              b31b 0049  ld   $49
              b31c 00d0  ld   $d0
              b31d 0022  ld   $22
              b31e 0020  ld   $20
              b31f 0073  ld   $73
              b320 0004  ld   $04
              b321 0098  ld   $98
              b322 00a2  ld   $a2
              b323 00a0  ld   $a0
              b324 004c  ld   $4c
              b325 00c7  ld   $c7
              b326 001c  ld   $1c
              b327 00a9  ld   $a9
              b328 00fe  ld   $fe
              b329 00a0  ld   $a0
              b32a 0001  ld   $01
              b32b 0078  ld   $78
              b32c 0020  ld   $20
              b32d 001a  ld   $1a
              b32e 001c  ld   $1c
              b32f 0058  ld   $58
              b330 0084  ld   $84
              b331 0095  ld   $95
              b332 0060  ld   $60
              b333 00c9  ld   $c9
              b334 0053  ld   $53
              b335 00d0  ld   $d0
              b336 0009  ld   $09
              b337 00c0  ld   $c0
              b338 0054  ld   $54
              b339 00d0  ld   $d0
              b33a 0005  ld   $05
              b33b 00a5  ld   $a5
              b33c 0019  ld   $19
              b33d 004c  ld   $4c
              b33e 00b4  ld   $b4
              b33f 001c  ld   $1c
              b340 00a5  ld   $a5
              b341 0097  ld   $97
              b342 00a4  ld   $a4
              b343 0098  ld   $98
              b344 004c  ld   $4c
              b345 001a  ld   $1a
              b346 001c  ld   $1c
              b347 000a  ld   $0a
              b348 0048  ld   $48
              b349 00aa  ld   $aa
              b34a 0020  ld   $20
              b34b 006b  ld   $6b
              b34c 0022  ld   $22
              b34d 00e0  ld   $e0
              b34e 0083  ld   $83
              b34f 0090  ld   $90
              b350 0020  ld   $20
              b351 0020  ld   $20
              b352 0060  ld   $60
              b353 000f  ld   $0f
              b354 0020  ld   $20
              b355 000a  ld   $0a
              b356 000e  ld   $0e
              b357 0020  ld   $20
              b358 0063  ld   $63
              b359 000f  ld   $0f
              b35a 0020  ld   $20
              b35b 0010  ld   $10
              b35c 0000  ld   $00
              b35d 0000  ld   $00
              b35e 00fb  ld   $fb
              b35f 000d  ld   $0d
              b360 0068  ld   $68
              b361 00aa  ld   $aa
              b362 00a5  ld   $a5
              b363 0098  ld   $98
              b364 0048  ld   $48
              b365 00a5  ld   $a5
              b366 0097  ld   $97
              b367 0048  ld   $48
              b368 008a  ld   $8a
              b369 0048  ld   $48
              b36a 0020  ld   $20
              b36b 00da  ld   $da
              b36c 0017  ld   $17
              b36d 0068  ld   $68
              b36e 00a8  ld   $a8
              b36f 008a  ld   $8a
              b370 0048  ld   $48
              b371 004c  ld   $4c
              b372 001b  ld   $1b
              b373 0010  ld   $10
              b374 0020  ld   $20
              b375 0057  ld   $57
              b376 000f  ld   $0f
              b377 0068  ld   $68
              b378 00a8  ld   $a8
              b379 00b9  ld   $b9
              b37a 00f6  ld   $f6
              b37b 0001  ld   $01
              b37c 0085  ld   $85
              b37d 0088  ld   $88
              b37e 00b9  ld   $b9
              b37f 00f7  ld   $f7
              b380 0001  ld   $01
              b381 0085  ld   $85
              b382 0089  ld   $89
              b383 0020  ld   $20
              b384 0087  ld   $87
              b385 0000  ld   $00
              b386 004c  ld   $4c
              b387 00f9  ld   $f9
              b388 000d  ld   $0d
              b389 00a0  ld   $a0
              b38a 00ff  ld   $ff
              b38b 002c  ld   $2c
              b38c 00a0  ld   $a0
              b38d 0000  ld   $00
              b38e 0084  ld   $84
              b38f 003d  ld   $3d
              b390 0020  ld   $20
              b391 00fd  ld   $fd
              b392 0011  ld   $11
              b393 00a5  ld   $a5
              b394 0097  ld   $97
              b395 0045  ld   $45
              b396 003d  ld   $3d
              b397 0085  ld   $85
              b398 003b  ld   $3b
              b399 00a5  ld   $a5
              b39a 0098  ld   $98
              b39b 0045  ld   $45
              b39c 003d  ld   $3d
              b39d 0085  ld   $85
              b39e 003c  ld   $3c
              b39f 0020  ld   $20
              b3a0 0074  ld   $74
              b3a1 001c  ld   $1c
              b3a2 0020  ld   $20
              b3a3 00fd  ld   $fd
              b3a4 0011  ld   $11
              b3a5 00a5  ld   $a5
              b3a6 0098  ld   $98
              b3a7 0045  ld   $45
              b3a8 003d  ld   $3d
              b3a9 0025  ld   $25
              b3aa 003c  ld   $3c
              b3ab 0045  ld   $45
              b3ac 003d  ld   $3d
              b3ad 00a8  ld   $a8
              b3ae 00a5  ld   $a5
              b3af 0097  ld   $97
              b3b0 0045  ld   $45
              b3b1 003d  ld   $3d
              b3b2 0025  ld   $25
              b3b3 003b  ld   $3b
              b3b4 0045  ld   $45
              b3b5 003d  ld   $3d
              b3b6 004c  ld   $4c
              b3b7 00cc  ld   $cc
              b3b8 0013  ld   $13
              b3b9 0020  ld   $20
              b3ba 00fc  ld   $fc
              b3bb 000d  ld   $0d
              b3bc 00b0  ld   $b0
              b3bd 0013  ld   $13
              b3be 00a5  ld   $a5
              b3bf 00a1  ld   $a1
              b3c0 0009  ld   $09
              b3c1 007f  ld   $7f
              b3c2 0025  ld   $25
              b3c3 009d  ld   $9d
              b3c4 0085  ld   $85
              b3c5 009d  ld   $9d
              b3c6 00a9  ld   $a9
              b3c7 009c  ld   $9c
              b3c8 00a0  ld   $a0
              b3c9 0000  ld   $00
              b3ca 0020  ld   $20
              b3cb 00d3  ld   $d3
              b3cc 001c  ld   $1c
              b3cd 00aa  ld   $aa
              b3ce 004c  ld   $4c
              b3cf 00a6  ld   $a6
              b3d0 0010  ld   $10
              b3d1 00a9  ld   $a9
              b3d2 0000  ld   $00
              b3d3 0085  ld   $85
              b3d4 003f  ld   $3f
              b3d5 00c6  ld   $c6
              b3d6 007f  ld   $7f
              b3d7 0020  ld   $20
              b3d8 00e2  ld   $e2
              b3d9 0016  ld   $16
              b3da 0085  ld   $85
              b3db 0094  ld   $94
              b3dc 0086  ld   $86
              b3dd 0095  ld   $95
              b3de 0084  ld   $84
              b3df 0096  ld   $96
              b3e0 00a5  ld   $a5
              b3e1 009f  ld   $9f
              b3e2 00a4  ld   $a4
              b3e3 00a0  ld   $a0
              b3e4 0020  ld   $20
              b3e5 00e6  ld   $e6
              b3e6 0016  ld   $16
              b3e7 0086  ld   $86
              b3e8 009f  ld   $9f
              b3e9 0084  ld   $84
              b3ea 00a0  ld   $a0
              b3eb 00aa  ld   $aa
              b3ec 0038  ld   $38
              b3ed 00e5  ld   $e5
              b3ee 0094  ld   $94
              b3ef 00f0  ld   $f0
              b3f0 0008  ld   $08
              b3f1 00a9  ld   $a9
              b3f2 0001  ld   $01
              b3f3 0090  ld   $90
              b3f4 0004  ld   $04
              b3f5 00a6  ld   $a6
              b3f6 0094  ld   $94
              b3f7 00a9  ld   $a9
              b3f8 00ff  ld   $ff
              b3f9 0085  ld   $85
              b3fa 0099  ld   $99
              b3fb fe00  bra  ac          ;+-----------------------------------+
              b3fc fcfd  bra  $b3fd       ;|                                   |
              b3fd 1418  ld   $18,y       ;| Trampoline for page $b300 lookups |
              b3fe e006  jmp  y,$06       ;|                                   |
              b3ff c218  st   [$18]       ;+-----------------------------------+
              b400 00a0  ld   $a0
              b401 00ff  ld   $ff
              b402 00e8  ld   $e8
              b403 00c8  ld   $c8
              b404 00ca  ld   $ca
              b405 00d0  ld   $d0
              b406 0007  ld   $07
              b407 00a6  ld   $a6
              b408 0099  ld   $99
              b409 0030  ld   $30
              b40a 000f  ld   $0f
              b40b 0018  ld   $18
              b40c 0090  ld   $90
              b40d 000c  ld   $0c
              b40e 00b1  ld   $b1
              b40f 009f  ld   $9f
              b410 00d1  ld   $d1
              b411 0095  ld   $95
              b412 00f0  ld   $f0
              b413 00ef  ld   $ef
              b414 00a2  ld   $a2
              b415 00ff  ld   $ff
              b416 00b0  ld   $b0
              b417 0002  ld   $02
              b418 00a2  ld   $a2
              b419 0001  ld   $01
              b41a 00e8  ld   $e8
              b41b 008a  ld   $8a
              b41c 002a  ld   $2a
              b41d 0025  ld   $25
              b41e 0044  ld   $44
              b41f 00f0  ld   $f0
              b420 0002  ld   $02
              b421 00a9  ld   $a9
              b422 00ff  ld   $ff
              b423 004c  ld   $4c
              b424 00b4  ld   $b4
              b425 001c  ld   $1c
              b426 0020  ld   $20
              b427 0063  ld   $63
              b428 000f  ld   $0f
              b429 00aa  ld   $aa
              b42a 0020  ld   $20
              b42b 00d5  ld   $d5
              b42c 0010  ld   $10
              b42d 0020  ld   $20
              b42e 0071  ld   $71
              b42f 0022  ld   $22
              b430 00d0  ld   $d0
              b431 00f4  ld   $f4
              b432 0060  ld   $60
              b433 00a2  ld   $a2
              b434 0000  ld   $00
              b435 0020  ld   $20
              b436 0071  ld   $71
              b437 0022  ld   $22
              b438 0086  ld   $86
              b439 003e  ld   $3e
              b43a 0085  ld   $85
              b43b 0077  ld   $77
              b43c 0020  ld   $20
              b43d 0071  ld   $71
              b43e 0022  ld   $22
              b43f 0020  ld   $20
              b440 005a  ld   $5a
              b441 0011  ld   $11
              b442 00b0  ld   $b0
              b443 0003  ld   $03
              b444 004c  ld   $4c
              b445 006e  ld   $6e
              b446 000f  ld   $0f
              b447 00a2  ld   $a2
              b448 0000  ld   $00
              b449 0086  ld   $86
              b44a 003f  ld   $3f
              b44b 0086  ld   $86
              b44c 0040  ld   $40
              b44d 0020  ld   $20
              b44e 006b  ld   $6b
              b44f 0022  ld   $22
              b450 0090  ld   $90
              b451 0005  ld   $05
              b452 0020  ld   $20
              b453 005a  ld   $5a
              b454 0011  ld   $11
              b455 0090  ld   $90
              b456 000b  ld   $0b
              b457 00aa  ld   $aa
              b458 0020  ld   $20
              b459 006b  ld   $6b
              b45a 0022  ld   $22
              b45b 0090  ld   $90
              b45c 00fb  ld   $fb
              b45d 0020  ld   $20
              b45e 005a  ld   $5a
              b45f 0011  ld   $11
              b460 00b0  ld   $b0
              b461 00f6  ld   $f6
              b462 00c9  ld   $c9
              b463 0011  ld   $11
              b464 0000  ld   $00
              b465 0000  ld   $00
              b466 0024  ld   $24
              b467 00d0  ld   $d0
              b468 0006  ld   $06
              b469 00a9  ld   $a9
              b46a 00ff  ld   $ff
              b46b 0085  ld   $85
              b46c 003f  ld   $3f
              b46d 00d0  ld   $d0
              b46e 0010  ld   $10
              b46f 00c9  ld   $c9
              b470 0025  ld   $25
              b471 00d0  ld   $d0
              b472 0013  ld   $13
              b473 00a5  ld   $a5
              b474 0042  ld   $42
              b475 00d0  ld   $d0
              b476 00d0  ld   $d0
              b477 00a9  ld   $a9
              b478 0080  ld   $80
              b479 0085  ld   $85
              b47a 0040  ld   $40
              b47b 0005  ld   $05
              b47c 0077  ld   $77
              b47d 0085  ld   $85
              b47e 0077  ld   $77
              b47f 008a  ld   $8a
              b480 0009  ld   $09
              b481 0080  ld   $80
              b482 00aa  ld   $aa
              b483 0020  ld   $20
              b484 006b  ld   $6b
              b485 0022  ld   $22
              b486 0086  ld   $86
              b487 0078  ld   $78
              b488 0038  ld   $38
              b489 0005  ld   $05
              b48a 0042  ld   $42
              b48b 00e9  ld   $e9
              b48c 0028  ld   $28
              b48d 00d0  ld   $d0
              b48e 0003  ld   $03
              b48f 004c  ld   $4c
              b490 000f  ld   $0f
              b491 0012  ld   $12
              b492 00a9  ld   $a9
              b493 0000  ld   $00
              b494 0085  ld   $85
              b495 0042  ld   $42
              b496 00a5  ld   $a5
              b497 005f  ld   $5f
              b498 00a6  ld   $a6
              b499 0060  ld   $60
              b49a 00a0  ld   $a0
              b49b 0000  ld   $00
              b49c 0086  ld   $86
              b49d 0093  ld   $93
              b49e 0085  ld   $85
              b49f 0092  ld   $92
              b4a0 00e4  ld   $e4
              b4a1 0062  ld   $62
              b4a2 00d0  ld   $d0
              b4a3 0004  ld   $04
              b4a4 00c5  ld   $c5
              b4a5 0061  ld   $61
              b4a6 00f0  ld   $f0
              b4a7 0022  ld   $22
              b4a8 00a5  ld   $a5
              b4a9 0077  ld   $77
              b4aa 00d1  ld   $d1
              b4ab 0092  ld   $92
              b4ac 00d0  ld   $d0
              b4ad 0008  ld   $08
              b4ae 00a5  ld   $a5
              b4af 0078  ld   $78
              b4b0 00c8  ld   $c8
              b4b1 00d1  ld   $d1
              b4b2 0092  ld   $92
              b4b3 00f0  ld   $f0
              b4b4 007d  ld   $7d
              b4b5 0088  ld   $88
              b4b6 0018  ld   $18
              b4b7 00a5  ld   $a5
              b4b8 0092  ld   $92
              b4b9 0069  ld   $69
              b4ba 0007  ld   $07
              b4bb 0090  ld   $90
              b4bc 00e1  ld   $e1
              b4bd 00e8  ld   $e8
              b4be 00d0  ld   $d0
              b4bf 00dc  ld   $dc
              b4c0 00c9  ld   $c9
              b4c1 0041  ld   $41
              b4c2 0090  ld   $90
              b4c3 0005  ld   $05
              b4c4 00e9  ld   $e9
              b4c5 005b  ld   $5b
              b4c6 0038  ld   $38
              b4c7 00e9  ld   $e9
              b4c8 00a5  ld   $a5
              b4c9 0060  ld   $60
              b4ca 0068  ld   $68
              b4cb 0048  ld   $48
              b4cc 00c9  ld   $c9
              b4cd 007c  ld   $7c
              b4ce 00d0  ld   $d0
              b4cf 0005  ld   $05
              b4d0 00a9  ld   $a9
              b4d1 008b  ld   $8b
              b4d2 00a0  ld   $a0
              b4d3 001f  ld   $1f
              b4d4 0060  ld   $60
              b4d5 00a5  ld   $a5
              b4d6 0077  ld   $77
              b4d7 00a4  ld   $a4
              b4d8 0078  ld   $78
              b4d9 00c9  ld   $c9
              b4da 0054  ld   $54
              b4db 00d0  ld   $d0
              b4dc 000b  ld   $0b
              b4dd 00c0  ld   $c0
              b4de 00c9  ld   $c9
              b4df 00f0  ld   $f0
              b4e0 00ef  ld   $ef
              b4e1 00c0  ld   $c0
              b4e2 0049  ld   $49
              b4e3 00d0  ld   $d0
              b4e4 0003  ld   $03
              b4e5 004c  ld   $4c
              b4e6 006e  ld   $6e
              b4e7 000f  ld   $0f
              b4e8 00c9  ld   $c9
              b4e9 0053  ld   $53
              b4ea 00d0  ld   $d0
              b4eb 0004  ld   $04
              b4ec 00c0  ld   $c0
              b4ed 0054  ld   $54
              b4ee 00f0  ld   $f0
              b4ef 00f5  ld   $f5
              b4f0 00a5  ld   $a5
              b4f1 0061  ld   $61
              b4f2 00a4  ld   $a4
              b4f3 0062  ld   $62
              b4f4 0085  ld   $85
              b4f5 0092  ld   $92
              b4f6 0084  ld   $84
              b4f7 0093  ld   $93
              b4f8 00a5  ld   $a5
              b4f9 0063  ld   $63
              b4fa 00a4  ld   $a4
              b4fb fe00  bra  ac          ;+-----------------------------------+
              b4fc fcfd  bra  $b4fd       ;|                                   |
              b4fd 1418  ld   $18,y       ;| Trampoline for page $b400 lookups |
              b4fe e006  jmp  y,$06       ;|                                   |
              b4ff c218  st   [$18]       ;+-----------------------------------+
              b500 0064  ld   $64
              b501 0085  ld   $85
              b502 008d  ld   $8d
              b503 0084  ld   $84
              b504 008e  ld   $8e
              b505 0018  ld   $18
              b506 0069  ld   $69
              b507 0007  ld   $07
              b508 0090  ld   $90
              b509 0001  ld   $01
              b50a 00c8  ld   $c8
              b50b 0085  ld   $85
              b50c 008b  ld   $8b
              b50d 0084  ld   $84
              b50e 008c  ld   $8c
              b50f 0020  ld   $20
              b510 00cb  ld   $cb
              b511 0004  ld   $04
              b512 00a5  ld   $a5
              b513 008b  ld   $8b
              b514 00a4  ld   $a4
              b515 008c  ld   $8c
              b516 00c8  ld   $c8
              b517 0085  ld   $85
              b518 0061  ld   $61
              b519 0084  ld   $84
              b51a 0062  ld   $62
              b51b 00a0  ld   $a0
              b51c 0000  ld   $00
              b51d 00a5  ld   $a5
              b51e 0077  ld   $77
              b51f 0091  ld   $91
              b520 0092  ld   $92
              b521 00c8  ld   $c8
              b522 00a5  ld   $a5
              b523 0078  ld   $78
              b524 0091  ld   $91
              b525 0092  ld   $92
              b526 00a9  ld   $a9
              b527 0000  ld   $00
              b528 00c8  ld   $c8
              b529 0091  ld   $91
              b52a 0092  ld   $92
              b52b 00c8  ld   $c8
              b52c 0091  ld   $91
              b52d 0092  ld   $92
              b52e 00c8  ld   $c8
              b52f 0091  ld   $91
              b530 0092  ld   $92
              b531 00c8  ld   $c8
              b532 0091  ld   $91
              b533 0092  ld   $92
              b534 00c8  ld   $c8
              b535 0091  ld   $91
              b536 0092  ld   $92
              b537 00a5  ld   $a5
              b538 0092  ld   $92
              b539 0018  ld   $18
              b53a 0069  ld   $69
              b53b 0002  ld   $02
              b53c 00a4  ld   $a4
              b53d 0093  ld   $93
              b53e 0090  ld   $90
              b53f 0001  ld   $01
              b540 00c8  ld   $c8
              b541 0085  ld   $85
              b542 0079  ld   $79
              b543 0084  ld   $84
              b544 007a  ld   $7a
              b545 0060  ld   $60
              b546 00a5  ld   $a5
              b547 003d  ld   $3d
              b548 000a  ld   $0a
              b549 0069  ld   $69
              b54a 0005  ld   $05
              b54b 0065  ld   $65
              b54c 0092  ld   $92
              b54d 00a4  ld   $a4
              b54e 0093  ld   $93
              b54f 0090  ld   $90
              b550 0001  ld   $01
              b551 00c8  ld   $c8
              b552 0085  ld   $85
              b553 008b  ld   $8b
              b554 0084  ld   $84
              b555 008c  ld   $8c
              b556 0060  ld   $60
              b557 0090  ld   $90
              b558 0080  ld   $80
              b559 0000  ld   $00
              b55a 0000  ld   $00
              b55b 0020  ld   $20
              b55c 006b  ld   $6b
              b55d 0022  ld   $22
              b55e 0020  ld   $20
              b55f 000a  ld   $0a
              b560 000e  ld   $0e
              b561 0020  ld   $20
              b562 00f9  ld   $f9
              b563 000d  ld   $0d
              b564 00a5  ld   $a5
              b565 0099  ld   $99
              b566 0030  ld   $30
              b567 000d  ld   $0d
              b568 00a5  ld   $a5
              b569 0094  ld   $94
              b56a 00c9  ld   $c9
              b56b 0012  ld   $12
              b56c 0000  ld   $00
              b56d 0000  ld   $00
              b56e 0090  ld   $90
              b56f 0090  ld   $90
              b570 0009  ld   $09
              b571 00a9  ld   $a9
              b572 00ec  ld   $ec
              b573 00a0  ld   $a0
              b574 0011  ld   $11
              b575 0020  ld   $20
              b576 00d3  ld   $d3
              b577 001c  ld   $1c
              b578 00d0  ld   $d0
              b579 0076  ld   $76
              b57a 004c  ld   $4c
              b57b 0013  ld   $13
              b57c 001d  ld   $1d
              b57d 00a5  ld   $a5
              b57e 003e  ld   $3e
              b57f 0005  ld   $05
              b580 0040  ld   $40
              b581 0048  ld   $48
              b582 00a5  ld   $a5
              b583 003f  ld   $3f
              b584 0048  ld   $48
              b585 00a0  ld   $a0
              b586 0000  ld   $00
              b587 0098  ld   $98
              b588 0048  ld   $48
              b589 00a5  ld   $a5
              b58a 0078  ld   $78
              b58b 0048  ld   $48
              b58c 00a5  ld   $a5
              b58d 0077  ld   $77
              b58e 0048  ld   $48
              b58f 0020  ld   $20
              b590 00f0  ld   $f0
              b591 0011  ld   $11
              b592 0068  ld   $68
              b593 0085  ld   $85
              b594 0077  ld   $77
              b595 0068  ld   $68
              b596 0085  ld   $85
              b597 0078  ld   $78
              b598 0068  ld   $68
              b599 00a8  ld   $a8
              b59a 00ba  ld   $ba
              b59b 00b5  ld   $b5
              b59c 0002  ld   $02
              b59d 0048  ld   $48
              b59e 00b5  ld   $b5
              b59f 0001  ld   $01
              b5a0 0048  ld   $48
              b5a1 00a5  ld   $a5
              b5a2 0097  ld   $97
              b5a3 0095  ld   $95
              b5a4 0002  ld   $02
              b5a5 00a5  ld   $a5
              b5a6 0098  ld   $98
              b5a7 0095  ld   $95
              b5a8 0001  ld   $01
              b5a9 00c8  ld   $c8
              b5aa 0020  ld   $20
              b5ab 0071  ld   $71
              b5ac 0022  ld   $22
              b5ad 00c9  ld   $c9
              b5ae 002c  ld   $2c
              b5af 00f0  ld   $f0
              b5b0 00d6  ld   $d6
              b5b1 0084  ld   $84
              b5b2 003d  ld   $3d
              b5b3 0020  ld   $20
              b5b4 005d  ld   $5d
              b5b5 000f  ld   $0f
              b5b6 0068  ld   $68
              b5b7 0085  ld   $85
              b5b8 003f  ld   $3f
              b5b9 0068  ld   $68
              b5ba 0085  ld   $85
              b5bb 0040  ld   $40
              b5bc 0029  ld   $29
              b5bd 007f  ld   $7f
              b5be 0085  ld   $85
              b5bf 003e  ld   $3e
              b5c0 00a6  ld   $a6
              b5c1 0061  ld   $61
              b5c2 00a5  ld   $a5
              b5c3 0062  ld   $62
              b5c4 0086  ld   $86
              b5c5 0092  ld   $92
              b5c6 0085  ld   $85
              b5c7 0093  ld   $93
              b5c8 00c5  ld   $c5
              b5c9 0064  ld   $64
              b5ca 00d0  ld   $d0
              b5cb 0004  ld   $04
              b5cc 00e4  ld   $e4
              b5cd 0063  ld   $63
              b5ce 00f0  ld   $f0
              b5cf 0039  ld   $39
              b5d0 00a0  ld   $a0
              b5d1 0000  ld   $00
              b5d2 00b1  ld   $b1
              b5d3 0092  ld   $92
              b5d4 00c8  ld   $c8
              b5d5 00c5  ld   $c5
              b5d6 0077  ld   $77
              b5d7 00d0  ld   $d0
              b5d8 0006  ld   $06
              b5d9 00a5  ld   $a5
              b5da 0078  ld   $78
              b5db 00d1  ld   $d1
              b5dc 0092  ld   $92
              b5dd 00f0  ld   $f0
              b5de 0016  ld   $16
              b5df 00c8  ld   $c8
              b5e0 00b1  ld   $b1
              b5e1 0092  ld   $92
              b5e2 0018  ld   $18
              b5e3 0065  ld   $65
              b5e4 0092  ld   $92
              b5e5 00aa  ld   $aa
              b5e6 00c8  ld   $c8
              b5e7 00b1  ld   $b1
              b5e8 0092  ld   $92
              b5e9 0065  ld   $65
              b5ea 0093  ld   $93
              b5eb 0090  ld   $90
              b5ec 00d7  ld   $d7
              b5ed 00a2  ld   $a2
              b5ee 006b  ld   $6b
              b5ef 002c  ld   $2c
              b5f0 00a2  ld   $a2
              b5f1 0035  ld   $35
              b5f2 004c  ld   $4c
              b5f3 004a  ld   $4a
              b5f4 0005  ld   $05
              b5f5 00a2  ld   $a2
              b5f6 0078  ld   $78
              b5f7 00a5  ld   $a5
              b5f8 003e  ld   $3e
              b5f9 00d0  ld   $d0
              b5fa 00f7  ld   $f7
              b5fb fe00  bra  ac          ;+-----------------------------------+
              b5fc fcfd  bra  $b5fd       ;|                                   |
              b5fd 1418  ld   $18,y       ;| Trampoline for page $b500 lookups |
              b5fe e006  jmp  y,$06       ;|                                   |
              b5ff c218  st   [$18]       ;+-----------------------------------+
              b600 0020  ld   $20
              b601 00db  ld   $db
              b602 0011  ld   $11
              b603 00a5  ld   $a5
              b604 003d  ld   $3d
              b605 00a0  ld   $a0
              b606 0004  ld   $04
              b607 00d1  ld   $d1
              b608 0092  ld   $92
              b609 00d0  ld   $d0
              b60a 00e7  ld   $e7
              b60b 004c  ld   $4c
              b60c 0025  ld   $25
              b60d 0013  ld   $13
              b60e 0020  ld   $20
              b60f 00db  ld   $db
              b610 0011  ld   $11
              b611 0020  ld   $20
              b612 001b  ld   $1b
              b613 0005  ld   $05
              b614 00a9  ld   $a9
              b615 0000  ld   $00
              b616 00a8  ld   $a8
              b617 0085  ld   $85
              b618 00a5  ld   $a5
              b619 00a2  ld   $a2
              b61a 0005  ld   $05
              b61b 00a5  ld   $a5
              b61c 0077  ld   $77
              b61d 0091  ld   $91
              b61e 0092  ld   $92
              b61f 0010  ld   $10
              b620 0001  ld   $01
              b621 00ca  ld   $ca
              b622 00c8  ld   $c8
              b623 00a5  ld   $a5
              b624 0078  ld   $78
              b625 0091  ld   $91
              b626 0092  ld   $92
              b627 0010  ld   $10
              b628 0002  ld   $02
              b629 00ca  ld   $ca
              b62a 00ca  ld   $ca
              b62b 0086  ld   $86
              b62c 00a4  ld   $a4
              b62d 00a5  ld   $a5
              b62e 003d  ld   $3d
              b62f 00c8  ld   $c8
              b630 00c8  ld   $c8
              b631 00c8  ld   $c8
              b632 0091  ld   $91
              b633 0092  ld   $92
              b634 00a2  ld   $a2
              b635 000b  ld   $0b
              b636 00a9  ld   $a9
              b637 0000  ld   $00
              b638 0024  ld   $24
              b639 003e  ld   $3e
              b63a 0050  ld   $50
              b63b 0008  ld   $08
              b63c 0068  ld   $68
              b63d 0018  ld   $18
              b63e 0069  ld   $69
              b63f 0001  ld   $01
              b640 00aa  ld   $aa
              b641 0068  ld   $68
              b642 0069  ld   $69
              b643 0000  ld   $00
              b644 00c8  ld   $c8
              b645 0091  ld   $91
              b646 0092  ld   $92
              b647 00c8  ld   $c8
              b648 008a  ld   $8a
              b649 0091  ld   $91
              b64a 0092  ld   $92
              b64b 0020  ld   $20
              b64c 0087  ld   $87
              b64d 0013  ld   $13
              b64e 0086  ld   $86
              b64f 00a4  ld   $a4
              b650 0085  ld   $85
              b651 00a5  ld   $a5
              b652 00a4  ld   $a4
              b653 0054  ld   $54
              b654 00c6  ld   $c6
              b655 003d  ld   $3d
              b656 00d0  ld   $d0
              b657 00dc  ld   $dc
              b658 0065  ld   $65
              b659 008c  ld   $8c
              b65a 00b0  ld   $b0
              b65b 005d  ld   $5d
              b65c 0085  ld   $85
              b65d 008c  ld   $8c
              b65e 00a8  ld   $a8
              b65f 008a  ld   $8a
              b660 0065  ld   $65
              b661 008b  ld   $8b
              b662 0090  ld   $90
              b663 0003  ld   $03
              b664 00c8  ld   $c8
              b665 00f0  ld   $f0
              b666 0052  ld   $52
              b667 0020  ld   $20
              b668 001b  ld   $1b
              b669 0005  ld   $05
              b66a 0085  ld   $85
              b66b 0063  ld   $63
              b66c 0084  ld   $84
              b66d 0064  ld   $64
              b66e 00a9  ld   $a9
              b66f 0000  ld   $00
              b670 00e6  ld   $e6
              b671 00a5  ld   $a5
              b672 00a4  ld   $a4
              b673 0013  ld   $13
              b674 0000  ld   $00
              b675 0000  ld   $00
              b676 00a4  ld   $a4
              b677 00f0  ld   $f0
              b678 0005  ld   $05
              b679 0088  ld   $88
              b67a 0091  ld   $91
              b67b 008b  ld   $8b
              b67c 00d0  ld   $d0
              b67d 00fb  ld   $fb
              b67e 00c6  ld   $c6
              b67f 008c  ld   $8c
              b680 00c6  ld   $c6
              b681 00a5  ld   $a5
              b682 00d0  ld   $d0
              b683 00f5  ld   $f5
              b684 00e6  ld   $e6
              b685 008c  ld   $8c
              b686 0038  ld   $38
              b687 00a5  ld   $a5
              b688 0063  ld   $63
              b689 00e5  ld   $e5
              b68a 0092  ld   $92
              b68b 00a0  ld   $a0
              b68c 0002  ld   $02
              b68d 0091  ld   $91
              b68e 0092  ld   $92
              b68f 00a5  ld   $a5
              b690 0064  ld   $64
              b691 00c8  ld   $c8
              b692 00e5  ld   $e5
              b693 0093  ld   $93
              b694 0091  ld   $91
              b695 0092  ld   $92
              b696 00a5  ld   $a5
              b697 003e  ld   $3e
              b698 00d0  ld   $d0
              b699 0062  ld   $62
              b69a 00c8  ld   $c8
              b69b 00b1  ld   $b1
              b69c 0092  ld   $92
              b69d 0085  ld   $85
              b69e 003d  ld   $3d
              b69f 00a9  ld   $a9
              b6a0 0000  ld   $00
              b6a1 0085  ld   $85
              b6a2 00a4  ld   $a4
              b6a3 0085  ld   $85
              b6a4 00a5  ld   $a5
              b6a5 00c8  ld   $c8
              b6a6 0068  ld   $68
              b6a7 00aa  ld   $aa
              b6a8 0085  ld   $85
              b6a9 0097  ld   $97
              b6aa 0068  ld   $68
              b6ab 0085  ld   $85
              b6ac 0098  ld   $98
              b6ad 00d1  ld   $d1
              b6ae 0092  ld   $92
              b6af 0090  ld   $90
              b6b0 000e  ld   $0e
              b6b1 00d0  ld   $d0
              b6b2 0006  ld   $06
              b6b3 00c8  ld   $c8
              b6b4 008a  ld   $8a
              b6b5 00d1  ld   $d1
              b6b6 0092  ld   $92
              b6b7 0090  ld   $90
              b6b8 0007  ld   $07
              b6b9 004c  ld   $4c
              b6ba 007f  ld   $7f
              b6bb 0012  ld   $12
              b6bc 004c  ld   $4c
              b6bd 0048  ld   $48
              b6be 0005  ld   $05
              b6bf 00c8  ld   $c8
              b6c0 00a5  ld   $a5
              b6c1 00a5  ld   $a5
              b6c2 0005  ld   $05
              b6c3 00a4  ld   $a4
              b6c4 0018  ld   $18
              b6c5 00f0  ld   $f0
              b6c6 000a  ld   $0a
              b6c7 0020  ld   $20
              b6c8 0087  ld   $87
              b6c9 0013  ld   $13
              b6ca 008a  ld   $8a
              b6cb 0065  ld   $65
              b6cc 0097  ld   $97
              b6cd 00aa  ld   $aa
              b6ce 0098  ld   $98
              b6cf 00a4  ld   $a4
              b6d0 0054  ld   $54
              b6d1 0065  ld   $65
              b6d2 0098  ld   $98
              b6d3 0086  ld   $86
              b6d4 00a4  ld   $a4
              b6d5 00c6  ld   $c6
              b6d6 003d  ld   $3d
              b6d7 00d0  ld   $d0
              b6d8 00ca  ld   $ca
              b6d9 0085  ld   $85
              b6da 00a5  ld   $a5
              b6db 00a2  ld   $a2
              b6dc 0005  ld   $05
              b6dd 00a5  ld   $a5
              b6de 0077  ld   $77
              b6df 0010  ld   $10
              b6e0 0001  ld   $01
              b6e1 00ca  ld   $ca
              b6e2 00a5  ld   $a5
              b6e3 0078  ld   $78
              b6e4 0010  ld   $10
              b6e5 0002  ld   $02
              b6e6 00ca  ld   $ca
              b6e7 00ca  ld   $ca
              b6e8 0086  ld   $86
              b6e9 005a  ld   $5a
              b6ea 00a9  ld   $a9
              b6eb 0000  ld   $00
              b6ec 0020  ld   $20
              b6ed 0090  ld   $90
              b6ee 0013  ld   $13
              b6ef 008a  ld   $8a
              b6f0 0065  ld   $65
              b6f1 008b  ld   $8b
              b6f2 0085  ld   $85
              b6f3 0079  ld   $79
              b6f4 0098  ld   $98
              b6f5 0065  ld   $65
              b6f6 008c  ld   $8c
              b6f7 0085  ld   $85
              b6f8 007a  ld   $7a
              b6f9 00a8  ld   $a8
              b6fa 00a5  ld   $a5
              b6fb fe00  bra  ac          ;+-----------------------------------+
              b6fc fcfd  bra  $b6fd       ;|                                   |
              b6fd 1418  ld   $18,y       ;| Trampoline for page $b600 lookups |
              b6fe e006  jmp  y,$06       ;|                                   |
              b6ff c218  st   [$18]       ;+-----------------------------------+
              b700 0079  ld   $79
              b701 0060  ld   $60
              b702 0084  ld   $84
              b703 0054  ld   $54
              b704 00b1  ld   $b1
              b705 0092  ld   $92
              b706 0085  ld   $85
              b707 005a  ld   $5a
              b708 0088  ld   $88
              b709 00b1  ld   $b1
              b70a 0092  ld   $92
              b70b 0085  ld   $85
              b70c 005b  ld   $5b
              b70d 00a9  ld   $a9
              b70e 0010  ld   $10
              b70f 0085  ld   $85
              b710 0090  ld   $90
              b711 00a2  ld   $a2
              b712 0000  ld   $00
              b713 00a0  ld   $a0
              b714 0000  ld   $00
              b715 008a  ld   $8a
              b716 000a  ld   $0a
              b717 00aa  ld   $aa
              b718 0098  ld   $98
              b719 002a  ld   $2a
              b71a 00a8  ld   $a8
              b71b 00b0  ld   $b0
              b71c 00a4  ld   $a4
              b71d 0006  ld   $06
              b71e 00a4  ld   $a4
              b71f 0026  ld   $26
              b720 00a5  ld   $a5
              b721 0090  ld   $90
              b722 000b  ld   $0b
              b723 0018  ld   $18
              b724 008a  ld   $8a
              b725 0065  ld   $65
              b726 005a  ld   $5a
              b727 00aa  ld   $aa
              b728 0098  ld   $98
              b729 0065  ld   $65
              b72a 005b  ld   $5b
              b72b 00a8  ld   $a8
              b72c 00b0  ld   $b0
              b72d 0093  ld   $93
              b72e 00c6  ld   $c6
              b72f 0090  ld   $90
              b730 00d0  ld   $d0
              b731 00e3  ld   $e3
              b732 0060  ld   $60
              b733 00a5  ld   $a5
              b734 003f  ld   $3f
              b735 00f0  ld   $f0
              b736 0003  ld   $03
              b737 0020  ld   $20
              b738 00e2  ld   $e2
              b739 0016  ld   $16
              b73a 0020  ld   $20
              b73b 0062  ld   $62
              b73c 0015  ld   $15
              b73d 0038  ld   $38
              b73e 00a5  ld   $a5
              b73f 0065  ld   $65
              b740 00e5  ld   $e5
              b741 0063  ld   $63
              b742 00a8  ld   $a8
              b743 00a5  ld   $a5
              b744 0066  ld   $66
              b745 00e5  ld   $e5
              b746 0064  ld   $64
              b747 00a2  ld   $a2
              b748 0000  ld   $00
              b749 0086  ld   $86
              b74a 003f  ld   $3f
              b74b 0085  ld   $85
              b74c 0095  ld   $95
              b74d 0084  ld   $84
              b74e 0096  ld   $96
              b74f 00a2  ld   $a2
              b750 0090  ld   $90
              b751 004c  ld   $4c
              b752 00bc  ld   $bc
              b753 001c  ld   $1c
              b754 00a5  ld   $a5
              b755 0030  ld   $30
              b756 0020  ld   $20
              b757 007a  ld   $7a
              b758 0004  ld   $04
              b759 00a9  ld   $a9
              b75a 0000  ld   $00
              b75b 00f0  ld   $f0
              b75c 00ea  ld   $ea
              b75d 00a6  ld   $a6
              b75e 006c  ld   $6c
              b75f 00e8  ld   $e8
              b760 00d0  ld   $d0
              b761 009f  ld   $9f
              b762 00a2  ld   $a2
              b763 0095  ld   $95
              b764 002c  ld   $2c
              b765 00a2  ld   $a2
              b766 00e0  ld   $e0
              b767 004c  ld   $4c
              b768 004a  ld   $4a
              b769 0005  ld   $05
              b76a 0020  ld   $20
              b76b 001d  ld   $1d
              b76c 0014  ld   $14
              b76d 0020  ld   $20
              b76e 00e2  ld   $e2
              b76f 0013  ld   $13
              b770 0020  ld   $20
              b771 0060  ld   $60
              b772 000f  ld   $0f
              b773 00a9  ld   $a9
              b774 0080  ld   $80
              b775 0085  ld   $85
              b776 0042  ld   $42
              b777 0020  ld   $20
              b778 00d0  ld   $d0
              b779 0010  ld   $10
              b77a 0020  ld   $20
              b77b 0014  ld   $14
              b77c 0000  ld   $00
              b77d 0000  ld   $00
              b77e 00f9  ld   $f9
              b77f 000d  ld   $0d
              b780 0020  ld   $20
              b781 005d  ld   $5d
              b782 000f  ld   $0f
              b783 00a9  ld   $a9
              b784 00ac  ld   $ac
              b785 0020  ld   $20
              b786 0065  ld   $65
              b787 000f  ld   $0f
              b788 0048  ld   $48
              b789 00a5  ld   $a5
              b78a 007a  ld   $7a
              b78b 0048  ld   $48
              b78c 00a5  ld   $a5
              b78d 0079  ld   $79
              b78e 0048  ld   $48
              b78f 00a5  ld   $a5
              b790 00a7  ld   $a7
              b791 0048  ld   $48
              b792 00a5  ld   $a5
              b793 00a6  ld   $a6
              b794 0048  ld   $48
              b795 0020  ld   $20
              b796 00e7  ld   $e7
              b797 0009  ld   $09
              b798 004c  ld   $4c
              b799 008b  ld   $8b
              b79a 0014  ld   $14
              b79b 00a9  ld   $a9
              b79c 009f  ld   $9f
              b79d 0020  ld   $20
              b79e 0065  ld   $65
              b79f 000f  ld   $0f
              b7a0 0009  ld   $09
              b7a1 0080  ld   $80
              b7a2 0085  ld   $85
              b7a3 0042  ld   $42
              b7a4 0020  ld   $20
              b7a5 00d7  ld   $d7
              b7a6 0010  ld   $10
              b7a7 0085  ld   $85
              b7a8 0081  ld   $81
              b7a9 0084  ld   $84
              b7aa 0082  ld   $82
              b7ab 004c  ld   $4c
              b7ac 00f9  ld   $f9
              b7ad 000d  ld   $0d
              b7ae 0020  ld   $20
              b7af 001d  ld   $1d
              b7b0 0014  ld   $14
              b7b1 00a5  ld   $a5
              b7b2 0082  ld   $82
              b7b3 0048  ld   $48
              b7b4 00a5  ld   $a5
              b7b5 0081  ld   $81
              b7b6 0048  ld   $48
              b7b7 0020  ld   $20
              b7b8 0057  ld   $57
              b7b9 000f  ld   $0f
              b7ba 0020  ld   $20
              b7bb 00f9  ld   $f9
              b7bc 000d  ld   $0d
              b7bd 0068  ld   $68
              b7be 0085  ld   $85
              b7bf 0081  ld   $81
              b7c0 0068  ld   $68
              b7c1 0085  ld   $85
              b7c2 0082  ld   $82
              b7c3 00a0  ld   $a0
              b7c4 0002  ld   $02
              b7c5 00b1  ld   $b1
              b7c6 0081  ld   $81
              b7c7 0085  ld   $85
              b7c8 0079  ld   $79
              b7c9 00aa  ld   $aa
              b7ca 00c8  ld   $c8
              b7cb 00b1  ld   $b1
              b7cc 0081  ld   $81
              b7cd 00f0  ld   $f0
              b7ce 0099  ld   $99
              b7cf 0085  ld   $85
              b7d0 007a  ld   $7a
              b7d1 00c8  ld   $c8
              b7d2 00b1  ld   $b1
              b7d3 0079  ld   $79
              b7d4 0048  ld   $48
              b7d5 0088  ld   $88
              b7d6 0010  ld   $10
              b7d7 00fa  ld   $fa
              b7d8 00a4  ld   $a4
              b7d9 007a  ld   $7a
              b7da 0020  ld   $20
              b7db 004c  ld   $4c
              b7dc 001c  ld   $1c
              b7dd 00a5  ld   $a5
              b7de 00a7  ld   $a7
              b7df 0048  ld   $48
              b7e0 00a5  ld   $a5
              b7e1 00a6  ld   $a6
              b7e2 0048  ld   $48
              b7e3 00b1  ld   $b1
              b7e4 0081  ld   $81
              b7e5 0085  ld   $85
              b7e6 00a6  ld   $a6
              b7e7 00c8  ld   $c8
              b7e8 00b1  ld   $b1
              b7e9 0081  ld   $81
              b7ea 0085  ld   $85
              b7eb 00a7  ld   $a7
              b7ec 00a5  ld   $a5
              b7ed 007a  ld   $7a
              b7ee 0048  ld   $48
              b7ef 00a5  ld   $a5
              b7f0 0079  ld   $79
              b7f1 0048  ld   $48
              b7f2 0020  ld   $20
              b7f3 00f6  ld   $f6
              b7f4 000d  ld   $0d
              b7f5 0068  ld   $68
              b7f6 0085  ld   $85
              b7f7 0081  ld   $81
              b7f8 0068  ld   $68
              b7f9 0085  ld   $85
              b7fa 0082  ld   $82
              b7fb fe00  bra  ac          ;+-----------------------------------+
              b7fc fcfd  bra  $b7fd       ;|                                   |
              b7fd 1418  ld   $18,y       ;| Trampoline for page $b700 lookups |
              b7fe e006  jmp  y,$06       ;|                                   |
              b7ff c218  st   [$18]       ;+-----------------------------------+
              b800 0020  ld   $20
              b801 0071  ld   $71
              b802 0022  ld   $22
              b803 00f0  ld   $f0
              b804 0003  ld   $03
              b805 004c  ld   $4c
              b806 006e  ld   $6e
              b807 000f  ld   $0f
              b808 0068  ld   $68
              b809 0085  ld   $85
              b80a 00a6  ld   $a6
              b80b 0068  ld   $68
              b80c 0085  ld   $85
              b80d 00a7  ld   $a7
              b80e 00a0  ld   $a0
              b80f 0000  ld   $00
              b810 0068  ld   $68
              b811 0091  ld   $91
              b812 0081  ld   $81
              b813 0068  ld   $68
              b814 00c8  ld   $c8
              b815 0091  ld   $91
              b816 0081  ld   $81
              b817 0068  ld   $68
              b818 00c8  ld   $c8
              b819 0091  ld   $91
              b81a 0081  ld   $81
              b81b 0068  ld   $68
              b81c 00c8  ld   $c8
              b81d 0091  ld   $91
              b81e 0081  ld   $81
              b81f 0068  ld   $68
              b820 00c8  ld   $c8
              b821 0091  ld   $91
              b822 0081  ld   $81
              b823 0060  ld   $60
              b824 0020  ld   $20
              b825 00f9  ld   $f9
              b826 000d  ld   $0d
              b827 00a0  ld   $a0
              b828 0000  ld   $00
              b829 0020  ld   $20
              b82a 0057  ld   $57
              b82b 001e  ld   $1e
              b82c 0068  ld   $68
              b82d 0068  ld   $68
              b82e 00a9  ld   $a9
              b82f 0004  ld   $04
              b830 00a0  ld   $a0
              b831 0002  ld   $02
              b832 00d0  ld   $d0
              b833 0012  ld   $12
              b834 00a6  ld   $a6
              b835 0097  ld   $97
              b836 00a4  ld   $a4
              b837 0098  ld   $98
              b838 0086  ld   $86
              b839 0083  ld   $83
              b83a 0084  ld   $84
              b83b 0084  ld   $84
              b83c 0020  ld   $20
              b83d 0030  ld   $30
              b83e 0015  ld   $15
              b83f 0086  ld   $86
              b840 0095  ld   $95
              b841 0084  ld   $84
              b842 0096  ld   $96
              b843 0085  ld   $85
              b844 0094  ld   $94
              b845 0060  ld   $60
              b846 00a2  ld   $a2
              b847 0022  ld   $22
              b848 0086  ld   $86
              b849 003b  ld   $3b
              b84a 0086  ld   $86
              b84b 003c  ld   $3c
              b84c 0085  ld   $85
              b84d 00a2  ld   $a2
              b84e 0084  ld   $84
              b84f 00a3  ld   $a3
              b850 0085  ld   $85
              b851 0095  ld   $95
              b852 0084  ld   $84
              b853 0096  ld   $96
              b854 00a0  ld   $a0
              b855 00ff  ld   $ff
              b856 00c8  ld   $c8
              b857 00b1  ld   $b1
              b858 00a2  ld   $a2
              b859 00f0  ld   $f0
              b85a 000c  ld   $0c
              b85b 00c5  ld   $c5
              b85c 003b  ld   $3b
              b85d 00f0  ld   $f0
              b85e 0004  ld   $04
              b85f 00c5  ld   $c5
              b860 003c  ld   $3c
              b861 00d0  ld   $d0
              b862 00f3  ld   $f3
              b863 00c9  ld   $c9
              b864 0022  ld   $22
              b865 00f0  ld   $f0
              b866 0001  ld   $01
              b867 0018  ld   $18
              b868 0084  ld   $84
              b869 0094  ld   $94
              b86a 0098  ld   $98
              b86b 0065  ld   $65
              b86c 00a2  ld   $a2
              b86d 0085  ld   $85
              b86e 00a4  ld   $a4
              b86f 00a6  ld   $a6
              b870 00a3  ld   $a3
              b871 0090  ld   $90
              b872 0001  ld   $01
              b873 00e8  ld   $e8
              b874 0086  ld   $86
              b875 00a5  ld   $a5
              b876 00a5  ld   $a5
              b877 00a3  ld   $a3
              b878 00f0  ld   $f0
              b879 0004  ld   $04
              b87a 00c9  ld   $c9
              b87b 0024  ld   $24
              b87c 00d0  ld   $d0
              b87d 000b  ld   $0b
              b87e 0098  ld   $98
              b87f 0020  ld   $20
              b880 00b1  ld   $b1
              b881 0014  ld   $14
              b882 00a6  ld   $a6
              b883 0015  ld   $15
              b884 0000  ld   $00
              b885 0000  ld   $00
              b886 00a2  ld   $a2
              b887 00a4  ld   $a4
              b888 00a3  ld   $a3
              b889 0020  ld   $20
              b88a 00c4  ld   $c4
              b88b 0016  ld   $16
              b88c 00a6  ld   $a6
              b88d 0048  ld   $48
              b88e 00e0  ld   $e0
              b88f 0054  ld   $54
              b890 00d0  ld   $d0
              b891 0005  ld   $05
              b892 00a2  ld   $a2
              b893 00bf  ld   $bf
              b894 004c  ld   $4c
              b895 004a  ld   $4a
              b896 0005  ld   $05
              b897 00a5  ld   $a5
              b898 0094  ld   $94
              b899 0095  ld   $95
              b89a 0000  ld   $00
              b89b 00a5  ld   $a5
              b89c 0095  ld   $95
              b89d 0095  ld   $95
              b89e 0001  ld   $01
              b89f 00a5  ld   $a5
              b8a0 0096  ld   $96
              b8a1 0095  ld   $95
              b8a2 0002  ld   $02
              b8a3 00a0  ld   $a0
              b8a4 0000  ld   $00
              b8a5 0086  ld   $86
              b8a6 0097  ld   $97
              b8a7 0084  ld   $84
              b8a8 0098  ld   $98
              b8a9 0084  ld   $84
              b8aa 00a3  ld   $a3
              b8ab 0088  ld   $88
              b8ac 0084  ld   $84
              b8ad 003f  ld   $3f
              b8ae 0086  ld   $86
              b8af 0049  ld   $49
              b8b0 00e8  ld   $e8
              b8b1 00e8  ld   $e8
              b8b2 00e8  ld   $e8
              b8b3 0086  ld   $86
              b8b4 0048  ld   $48
              b8b5 0060  ld   $60
              b8b6 0046  ld   $46
              b8b7 0041  ld   $41
              b8b8 0048  ld   $48
              b8b9 0049  ld   $49
              b8ba 00ff  ld   $ff
              b8bb 0038  ld   $38
              b8bc 0065  ld   $65
              b8bd 0065  ld   $65
              b8be 00a4  ld   $a4
              b8bf 0066  ld   $66
              b8c0 00b0  ld   $b0
              b8c1 0001  ld   $01
              b8c2 0088  ld   $88
              b8c3 00c4  ld   $c4
              b8c4 0064  ld   $64
              b8c5 0090  ld   $90
              b8c6 0011  ld   $11
              b8c7 00d0  ld   $d0
              b8c8 0004  ld   $04
              b8c9 00c5  ld   $c5
              b8ca 0063  ld   $63
              b8cb 0090  ld   $90
              b8cc 000b  ld   $0b
              b8cd 0085  ld   $85
              b8ce 0065  ld   $65
              b8cf 0084  ld   $84
              b8d0 0066  ld   $66
              b8d1 0085  ld   $85
              b8d2 0067  ld   $67
              b8d3 0084  ld   $84
              b8d4 0068  ld   $68
              b8d5 00aa  ld   $aa
              b8d6 0068  ld   $68
              b8d7 0060  ld   $60
              b8d8 00a2  ld   $a2
              b8d9 004d  ld   $4d
              b8da 00a5  ld   $a5
              b8db 0041  ld   $41
              b8dc 0030  ld   $30
              b8dd 00b6  ld   $b6
              b8de 0020  ld   $20
              b8df 0062  ld   $62
              b8e0 0015  ld   $15
              b8e1 00a9  ld   $a9
              b8e2 0080  ld   $80
              b8e3 0085  ld   $85
              b8e4 0041  ld   $41
              b8e5 0068  ld   $68
              b8e6 00d0  ld   $d0
              b8e7 00d0  ld   $d0
              b8e8 00a6  ld   $a6
              b8e9 0069  ld   $69
              b8ea 00a5  ld   $a5
              b8eb 006a  ld   $6a
              b8ec 0086  ld   $86
              b8ed 0065  ld   $65
              b8ee 0085  ld   $85
              b8ef 0066  ld   $66
              b8f0 00a0  ld   $a0
              b8f1 0000  ld   $00
              b8f2 0084  ld   $84
              b8f3 0082  ld   $82
              b8f4 0084  ld   $84
              b8f5 0081  ld   $81
              b8f6 00a5  ld   $a5
              b8f7 0063  ld   $63
              b8f8 00a6  ld   $a6
              b8f9 0064  ld   $64
              b8fa 0085  ld   $85
              b8fb fe00  bra  ac          ;+-----------------------------------+
              b8fc fcfd  bra  $b8fd       ;|                                   |
              b8fd 1418  ld   $18,y       ;| Trampoline for page $b800 lookups |
              b8fe e006  jmp  y,$06       ;|                                   |
              b8ff c218  st   [$18]       ;+-----------------------------------+
              b900 0092  ld   $92
              b901 0086  ld   $86
              b902 0093  ld   $93
              b903 00a9  ld   $a9
              b904 004b  ld   $4b
              b905 00a2  ld   $a2
              b906 0000  ld   $00
              b907 0085  ld   $85
              b908 0054  ld   $54
              b909 0086  ld   $86
              b90a 0055  ld   $55
              b90b 00c5  ld   $c5
              b90c 0048  ld   $48
              b90d 00f0  ld   $f0
              b90e 0005  ld   $05
              b90f 0020  ld   $20
              b910 0003  ld   $03
              b911 0016  ld   $16
              b912 00f0  ld   $f0
              b913 00f7  ld   $f7
              b914 00a9  ld   $a9
              b915 0007  ld   $07
              b916 0085  ld   $85
              b917 0086  ld   $86
              b918 00a5  ld   $a5
              b919 005f  ld   $5f
              b91a 00a6  ld   $a6
              b91b 0060  ld   $60
              b91c 0085  ld   $85
              b91d 0054  ld   $54
              b91e 0086  ld   $86
              b91f 0055  ld   $55
              b920 00e4  ld   $e4
              b921 0062  ld   $62
              b922 00d0  ld   $d0
              b923 0004  ld   $04
              b924 00c5  ld   $c5
              b925 0061  ld   $61
              b926 00f0  ld   $f0
              b927 0005  ld   $05
              b928 0020  ld   $20
              b929 00f9  ld   $f9
              b92a 0015  ld   $15
              b92b 00f0  ld   $f0
              b92c 00f3  ld   $f3
              b92d 0085  ld   $85
              b92e 008b  ld   $8b
              b92f 0086  ld   $86
              b930 008c  ld   $8c
              b931 00a9  ld   $a9
              b932 0003  ld   $03
              b933 0085  ld   $85
              b934 0086  ld   $86
              b935 00a5  ld   $a5
              b936 008b  ld   $8b
              b937 00a6  ld   $a6
              b938 008c  ld   $8c
              b939 00e4  ld   $e4
              b93a 0064  ld   $64
              b93b 00d0  ld   $d0
              b93c 0007  ld   $07
              b93d 00c5  ld   $c5
              b93e 0063  ld   $63
              b93f 00d0  ld   $d0
              b940 0003  ld   $03
              b941 004c  ld   $4c
              b942 0042  ld   $42
              b943 0016  ld   $16
              b944 0085  ld   $85
              b945 0054  ld   $54
              b946 0086  ld   $86
              b947 0055  ld   $55
              b948 00a0  ld   $a0
              b949 0000  ld   $00
              b94a 00b1  ld   $b1
              b94b 0054  ld   $54
              b94c 00aa  ld   $aa
              b94d 00c8  ld   $c8
              b94e 00b1  ld   $b1
              b94f 0054  ld   $54
              b950 0008  ld   $08
              b951 00c8  ld   $c8
              b952 00b1  ld   $b1
              b953 0054  ld   $54
              b954 0065  ld   $65
              b955 008b  ld   $8b
              b956 0085  ld   $85
              b957 008b  ld   $8b
              b958 00c8  ld   $c8
              b959 00b1  ld   $b1
              b95a 0054  ld   $54
              b95b 0065  ld   $65
              b95c 008c  ld   $8c
              b95d 0085  ld   $85
              b95e 008c  ld   $8c
              b95f 0028  ld   $28
              b960 0010  ld   $10
              b961 00d3  ld   $d3
              b962 008a  ld   $8a
              b963 0030  ld   $30
              b964 00d0  ld   $d0
              b965 00c8  ld   $c8
              b966 00b1  ld   $b1
              b967 0054  ld   $54
              b968 00a0  ld   $a0
              b969 0000  ld   $00
              b96a 000a  ld   $0a
              b96b 0069  ld   $69
              b96c 0005  ld   $05
              b96d 0065  ld   $65
              b96e 0054  ld   $54
              b96f 0085  ld   $85
              b970 0054  ld   $54
              b971 0090  ld   $90
              b972 0002  ld   $02
              b973 00e6  ld   $e6
              b974 0055  ld   $55
              b975 00a6  ld   $a6
              b976 0055  ld   $55
              b977 00e4  ld   $e4
              b978 008c  ld   $8c
              b979 00d0  ld   $d0
              b97a 0004  ld   $04
              b97b 00c5  ld   $c5
              b97c 008b  ld   $8b
              b97d 00f0  ld   $f0
              b97e 00ba  ld   $ba
              b97f 0020  ld   $20
              b980 0003  ld   $03
              b981 0016  ld   $16
              b982 00f0  ld   $f0
              b983 00f3  ld   $f3
              b984 00b1  ld   $b1
              b985 0054  ld   $54
              b986 0030  ld   $30
              b987 0035  ld   $35
              b988 00c8  ld   $c8
              b989 00b1  ld   $b1
              b98a 0054  ld   $54
              b98b 0016  ld   $16
              b98c 0000  ld   $00
              b98d 0000  ld   $00
              b98e 0010  ld   $10
              b98f 0030  ld   $30
              b990 00c8  ld   $c8
              b991 00b1  ld   $b1
              b992 0054  ld   $54
              b993 00f0  ld   $f0
              b994 002b  ld   $2b
              b995 00c8  ld   $c8
              b996 00b1  ld   $b1
              b997 0054  ld   $54
              b998 00aa  ld   $aa
              b999 00c8  ld   $c8
              b99a 00b1  ld   $b1
              b99b 0054  ld   $54
              b99c 00c5  ld   $c5
              b99d 0066  ld   $66
              b99e 0090  ld   $90
              b99f 0006  ld   $06
              b9a0 00d0  ld   $d0
              b9a1 001e  ld   $1e
              b9a2 00e4  ld   $e4
              b9a3 0065  ld   $65
              b9a4 00b0  ld   $b0
              b9a5 001a  ld   $1a
              b9a6 00c5  ld   $c5
              b9a7 0093  ld   $93
              b9a8 0090  ld   $90
              b9a9 0016  ld   $16
              b9aa 00d0  ld   $d0
              b9ab 0004  ld   $04
              b9ac 00e4  ld   $e4
              b9ad 0092  ld   $92
              b9ae 0090  ld   $90
              b9af 0010  ld   $10
              b9b0 0086  ld   $86
              b9b1 0092  ld   $92
              b9b2 0085  ld   $85
              b9b3 0093  ld   $93
              b9b4 00a5  ld   $a5
              b9b5 0054  ld   $54
              b9b6 00a6  ld   $a6
              b9b7 0055  ld   $55
              b9b8 0085  ld   $85
              b9b9 0081  ld   $81
              b9ba 0086  ld   $86
              b9bb 0082  ld   $82
              b9bc 00a5  ld   $a5
              b9bd 0086  ld   $86
              b9be 0085  ld   $85
              b9bf 0088  ld   $88
              b9c0 00a5  ld   $a5
              b9c1 0086  ld   $86
              b9c2 0018  ld   $18
              b9c3 0065  ld   $65
              b9c4 0054  ld   $54
              b9c5 0085  ld   $85
              b9c6 0054  ld   $54
              b9c7 0090  ld   $90
              b9c8 0002  ld   $02
              b9c9 00e6  ld   $e6
              b9ca 0055  ld   $55
              b9cb 00a6  ld   $a6
              b9cc 0055  ld   $55
              b9cd 00a0  ld   $a0
              b9ce 0000  ld   $00
              b9cf 0060  ld   $60
              b9d0 00a5  ld   $a5
              b9d1 0082  ld   $82
              b9d2 0005  ld   $05
              b9d3 0081  ld   $81
              b9d4 00f0  ld   $f0
              b9d5 00f5  ld   $f5
              b9d6 00a5  ld   $a5
              b9d7 0088  ld   $88
              b9d8 0029  ld   $29
              b9d9 0004  ld   $04
              b9da 004a  ld   $4a
              b9db 00a8  ld   $a8
              b9dc 0085  ld   $85
              b9dd 0088  ld   $88
              b9de 00b1  ld   $b1
              b9df 0081  ld   $81
              b9e0 0065  ld   $65
              b9e1 0092  ld   $92
              b9e2 0085  ld   $85
              b9e3 008d  ld   $8d
              b9e4 00a5  ld   $a5
              b9e5 0093  ld   $93
              b9e6 0069  ld   $69
              b9e7 0000  ld   $00
              b9e8 0085  ld   $85
              b9e9 008e  ld   $8e
              b9ea 00a5  ld   $a5
              b9eb 0065  ld   $65
              b9ec 00a6  ld   $a6
              b9ed 0066  ld   $66
              b9ee 0085  ld   $85
              b9ef 008b  ld   $8b
              b9f0 0086  ld   $86
              b9f1 008c  ld   $8c
              b9f2 0020  ld   $20
              b9f3 00d2  ld   $d2
              b9f4 0004  ld   $04
              b9f5 00a4  ld   $a4
              b9f6 0088  ld   $88
              b9f7 00c8  ld   $c8
              b9f8 00a5  ld   $a5
              b9f9 008b  ld   $8b
              b9fa 0091  ld   $91
              b9fb fe00  bra  ac          ;+-----------------------------------+
              b9fc fcfd  bra  $b9fd       ;|                                   |
              b9fd 1418  ld   $18,y       ;| Trampoline for page $b900 lookups |
              b9fe e006  jmp  y,$06       ;|                                   |
              b9ff c218  st   [$18]       ;+-----------------------------------+
              ba00 0081  ld   $81
              ba01 00aa  ld   $aa
              ba02 00e6  ld   $e6
              ba03 008c  ld   $8c
              ba04 00a5  ld   $a5
              ba05 008c  ld   $8c
              ba06 00c8  ld   $c8
              ba07 0091  ld   $91
              ba08 0081  ld   $81
              ba09 004c  ld   $4c
              ba0a 0066  ld   $66
              ba0b 0015  ld   $15
              ba0c 00a5  ld   $a5
              ba0d 0098  ld   $98
              ba0e 0048  ld   $48
              ba0f 00a5  ld   $a5
              ba10 0097  ld   $97
              ba11 0048  ld   $48
              ba12 0020  ld   $20
              ba13 00ef  ld   $ef
              ba14 000e  ld   $0e
              ba15 0020  ld   $20
              ba16 00fb  ld   $fb
              ba17 000d  ld   $0d
              ba18 0068  ld   $68
              ba19 0085  ld   $85
              ba1a 00a2  ld   $a2
              ba1b 0068  ld   $68
              ba1c 0085  ld   $85
              ba1d 00a3  ld   $a3
              ba1e 00a0  ld   $a0
              ba1f 0000  ld   $00
              ba20 00b1  ld   $b1
              ba21 00a2  ld   $a2
              ba22 0018  ld   $18
              ba23 0071  ld   $71
              ba24 0097  ld   $97
              ba25 0090  ld   $90
              ba26 0005  ld   $05
              ba27 00a2  ld   $a2
              ba28 00b0  ld   $b0
              ba29 004c  ld   $4c
              ba2a 004a  ld   $4a
              ba2b 0005  ld   $05
              ba2c 0020  ld   $20
              ba2d 00b1  ld   $b1
              ba2e 0014  ld   $14
              ba2f 0020  ld   $20
              ba30 00b6  ld   $b6
              ba31 0016  ld   $16
              ba32 00a5  ld   $a5
              ba33 0083  ld   $83
              ba34 00a4  ld   $a4
              ba35 0084  ld   $84
              ba36 0020  ld   $20
              ba37 00e6  ld   $e6
              ba38 0016  ld   $16
              ba39 0020  ld   $20
              ba3a 00c8  ld   $c8
              ba3b 0016  ld   $16
              ba3c 00a5  ld   $a5
              ba3d 00a2  ld   $a2
              ba3e 00a4  ld   $a4
              ba3f 00a3  ld   $a3
              ba40 0020  ld   $20
              ba41 00e6  ld   $e6
              ba42 0016  ld   $16
              ba43 0020  ld   $20
              ba44 0006  ld   $06
              ba45 0015  ld   $15
              ba46 004c  ld   $4c
              ba47 0024  ld   $24
              ba48 000e  ld   $0e
              ba49 00a0  ld   $a0
              ba4a 0000  ld   $00
              ba4b 00b1  ld   $b1
              ba4c 00a2  ld   $a2
              ba4d 0048  ld   $48
              ba4e 00c8  ld   $c8
              ba4f 00b1  ld   $b1
              ba50 00a2  ld   $a2
              ba51 00aa  ld   $aa
              ba52 00c8  ld   $c8
              ba53 00b1  ld   $b1
              ba54 00a2  ld   $a2
              ba55 00a8  ld   $a8
              ba56 0068  ld   $68
              ba57 0086  ld   $86
              ba58 0054  ld   $54
              ba59 0084  ld   $84
              ba5a 0055  ld   $55
              ba5b 00a8  ld   $a8
              ba5c 00f0  ld   $f0
              ba5d 000a  ld   $0a
              ba5e 0048  ld   $48
              ba5f 0088  ld   $88
              ba60 00b1  ld   $b1
              ba61 0054  ld   $54
              ba62 0091  ld   $91
              ba63 0067  ld   $67
              ba64 0098  ld   $98
              ba65 00d0  ld   $d0
              ba66 00f8  ld   $f8
              ba67 0068  ld   $68
              ba68 0018  ld   $18
              ba69 0065  ld   $65
              ba6a 0067  ld   $67
              ba6b 0085  ld   $85
              ba6c 0067  ld   $67
              ba6d 0090  ld   $90
              ba6e 0002  ld   $02
              ba6f 00e6  ld   $e6
              ba70 0068  ld   $68
              ba71 0060  ld   $60
              ba72 0020  ld   $20
              ba73 00fb  ld   $fb
              ba74 000d  ld   $0d
              ba75 00a5  ld   $a5
              ba76 0097  ld   $97
              ba77 00a4  ld   $a4
              ba78 0098  ld   $98
              ba79 0085  ld   $85
              ba7a 0054  ld   $54
              ba7b 0084  ld   $84
              ba7c 0055  ld   $55
              ba7d 0020  ld   $20
              ba7e 0017  ld   $17
              ba7f 0017  ld   $17
              ba80 0008  ld   $08
              ba81 00a0  ld   $a0
              ba82 0000  ld   $00
              ba83 00b1  ld   $b1
              ba84 0054  ld   $54
              ba85 0048  ld   $48
              ba86 00c8  ld   $c8
              ba87 00b1  ld   $b1
              ba88 0054  ld   $54
              ba89 00aa  ld   $aa
              ba8a 00c8  ld   $c8
              ba8b 00b1  ld   $b1
              ba8c 0054  ld   $54
              ba8d 00a8  ld   $a8
              ba8e 0068  ld   $68
              ba8f 0028  ld   $28
              ba90 00d0  ld   $d0
              ba91 0013  ld   $13
              ba92 00c4  ld   $c4
              ba93 0017  ld   $17
              ba94 0000  ld   $00
              ba95 0000  ld   $00
              ba96 0066  ld   $66
              ba97 00d0  ld   $d0
              ba98 000f  ld   $0f
              ba99 00e4  ld   $e4
              ba9a 0065  ld   $65
              ba9b 00d0  ld   $d0
              ba9c 000b  ld   $0b
              ba9d 0048  ld   $48
              ba9e 0018  ld   $18
              ba9f 0065  ld   $65
              baa0 0065  ld   $65
              baa1 0085  ld   $85
              baa2 0065  ld   $65
              baa3 0090  ld   $90
              baa4 0002  ld   $02
              baa5 00e6  ld   $e6
              baa6 0066  ld   $66
              baa7 0068  ld   $68
              baa8 0086  ld   $86
              baa9 0054  ld   $54
              baaa 0084  ld   $84
              baab 0055  ld   $55
              baac 0060  ld   $60
              baad 00c4  ld   $c4
              baae 004a  ld   $4a
              baaf 00d0  ld   $d0
              bab0 000c  ld   $0c
              bab1 00c5  ld   $c5
              bab2 0049  ld   $49
              bab3 00d0  ld   $d0
              bab4 0008  ld   $08
              bab5 0085  ld   $85
              bab6 0048  ld   $48
              bab7 00e9  ld   $e9
              bab8 0003  ld   $03
              bab9 0085  ld   $85
              baba 0049  ld   $49
              babb 00a0  ld   $a0
              babc 0000  ld   $00
              babd 0060  ld   $60
              babe 0020  ld   $20
              babf 00dd  ld   $dd
              bac0 0017  ld   $17
              bac1 008a  ld   $8a
              bac2 0048  ld   $48
              bac3 00a9  ld   $a9
              bac4 0001  ld   $01
              bac5 0020  ld   $20
              bac6 00b9  ld   $b9
              bac7 0014  ld   $14
              bac8 0068  ld   $68
              bac9 00a0  ld   $a0
              baca 0000  ld   $00
              bacb 0091  ld   $91
              bacc 0095  ld   $95
              bacd 0068  ld   $68
              bace 0068  ld   $68
              bacf 004c  ld   $4c
              bad0 0006  ld   $06
              bad1 0015  ld   $15
              bad2 0020  ld   $20
              bad3 009d  ld   $9d
              bad4 0017  ld   $17
              bad5 00d1  ld   $d1
              bad6 0083  ld   $83
              bad7 0098  ld   $98
              bad8 0090  ld   $90
              bad9 0004  ld   $04
              bada 00b1  ld   $b1
              badb 0083  ld   $83
              badc 00aa  ld   $aa
              badd 0098  ld   $98
              bade 0048  ld   $48
              badf 008a  ld   $8a
              bae0 0048  ld   $48
              bae1 0020  ld   $20
              bae2 00b9  ld   $b9
              bae3 0014  ld   $14
              bae4 00a5  ld   $a5
              bae5 0083  ld   $83
              bae6 00a4  ld   $a4
              bae7 0084  ld   $84
              bae8 0020  ld   $20
              bae9 00e6  ld   $e6
              baea 0016  ld   $16
              baeb 0068  ld   $68
              baec 00a8  ld   $a8
              baed 0068  ld   $68
              baee 0018  ld   $18
              baef 0065  ld   $65
              baf0 0054  ld   $54
              baf1 0085  ld   $85
              baf2 0054  ld   $54
              baf3 0090  ld   $90
              baf4 0002  ld   $02
              baf5 00e6  ld   $e6
              baf6 0055  ld   $55
              baf7 0098  ld   $98
              baf8 0020  ld   $20
              baf9 00c8  ld   $c8
              bafa 0016  ld   $16
              bafb fe00  bra  ac          ;+-----------------------------------+
              bafc fcfd  bra  $bafd       ;|                                   |
              bafd 1418  ld   $18,y       ;| Trampoline for page $ba00 lookups |
              bafe e006  jmp  y,$06       ;|                                   |
              baff c218  st   [$18]       ;+-----------------------------------+
              bb00 004c  ld   $4c
              bb01 0006  ld   $06
              bb02 0015  ld   $15
              bb03 0020  ld   $20
              bb04 009d  ld   $9d
              bb05 0017  ld   $17
              bb06 0018  ld   $18
              bb07 00f1  ld   $f1
              bb08 0083  ld   $83
              bb09 0049  ld   $49
              bb0a 00ff  ld   $ff
              bb0b 004c  ld   $4c
              bb0c 0042  ld   $42
              bb0d 0017  ld   $17
              bb0e 00a9  ld   $a9
              bb0f 00ff  ld   $ff
              bb10 0085  ld   $85
              bb11 0098  ld   $98
              bb12 0020  ld   $20
              bb13 0071  ld   $71
              bb14 0022  ld   $22
              bb15 00c9  ld   $c9
              bb16 0029  ld   $29
              bb17 00f0  ld   $f0
              bb18 0006  ld   $06
              bb19 0020  ld   $20
              bb1a 0063  ld   $63
              bb1b 000f  ld   $0f
              bb1c 0020  ld   $20
              bb1d 00da  ld   $da
              bb1e 0017  ld   $17
              bb1f 0020  ld   $20
              bb20 009d  ld   $9d
              bb21 0017  ld   $17
              bb22 00f0  ld   $f0
              bb23 004b  ld   $4b
              bb24 00ca  ld   $ca
              bb25 008a  ld   $8a
              bb26 0048  ld   $48
              bb27 0018  ld   $18
              bb28 00a2  ld   $a2
              bb29 0000  ld   $00
              bb2a 00f1  ld   $f1
              bb2b 0083  ld   $83
              bb2c 00b0  ld   $b0
              bb2d 00b6  ld   $b6
              bb2e 0049  ld   $49
              bb2f 00ff  ld   $ff
              bb30 00c5  ld   $c5
              bb31 0098  ld   $98
              bb32 0090  ld   $90
              bb33 00b1  ld   $b1
              bb34 00a5  ld   $a5
              bb35 0098  ld   $98
              bb36 00b0  ld   $b0
              bb37 00ad  ld   $ad
              bb38 0020  ld   $20
              bb39 005d  ld   $5d
              bb3a 000f  ld   $0f
              bb3b 0068  ld   $68
              bb3c 00a8  ld   $a8
              bb3d 0068  ld   $68
              bb3e 0085  ld   $85
              bb3f 0088  ld   $88
              bb40 0068  ld   $68
              bb41 0068  ld   $68
              bb42 0068  ld   $68
              bb43 00aa  ld   $aa
              bb44 0068  ld   $68
              bb45 0085  ld   $85
              bb46 0083  ld   $83
              bb47 0068  ld   $68
              bb48 0085  ld   $85
              bb49 0084  ld   $84
              bb4a 00a5  ld   $a5
              bb4b 0088  ld   $88
              bb4c 0048  ld   $48
              bb4d 0098  ld   $98
              bb4e 0048  ld   $48
              bb4f 00a0  ld   $a0
              bb50 0000  ld   $00
              bb51 008a  ld   $8a
              bb52 0060  ld   $60
              bb53 0020  ld   $20
              bb54 00be  ld   $be
              bb55 0017  ld   $17
              bb56 004c  ld   $4c
              bb57 00de  ld   $de
              bb58 0013  ld   $13
              bb59 0020  ld   $20
              bb5a 00df  ld   $df
              bb5b 0016  ld   $16
              bb5c 00a2  ld   $a2
              bb5d 0000  ld   $00
              bb5e 0086  ld   $86
              bb5f 003f  ld   $3f
              bb60 00a8  ld   $a8
              bb61 0060  ld   $60
              bb62 0020  ld   $20
              bb63 00be  ld   $be
              bb64 0017  ld   $17
              bb65 00f0  ld   $f0
              bb66 0008  ld   $08
              bb67 00a0  ld   $a0
              bb68 0000  ld   $00
              bb69 00b1  ld   $b1
              bb6a 0054  ld   $54
              bb6b 00a8  ld   $a8
              bb6c 004c  ld   $4c
              bb6d 00de  ld   $de
              bb6e 0013  ld   $13
              bb6f 004c  ld   $4c
              bb70 0082  ld   $82
              bb71 0012  ld   $12
              bb72 0020  ld   $20
              bb73 006b  ld   $6b
              bb74 0022  ld   $22
              bb75 0020  ld   $20
              bb76 00f6  ld   $f6
              bb77 000d  ld   $0d
              bb78 0020  ld   $20
              bb79 00f6  ld   $f6
              bb7a 0011  ld   $11
              bb7b 00a6  ld   $a6
              bb7c 0097  ld   $97
              bb7d 00d0  ld   $d0
              bb7e 00f0  ld   $f0
              bb7f 00a6  ld   $a6
              bb80 0098  ld   $98
              bb81 004c  ld   $4c
              bb82 0071  ld   $71
              bb83 0022  ld   $22
              bb84 0020  ld   $20
              bb85 00be  ld   $be
              bb86 0017  ld   $17
              bb87 00d0  ld   $d0
              bb88 0003  ld   $03
              bb89 004c  ld   $4c
              bb8a 006f  ld   $6f
              bb8b 0019  ld   $19
              bb8c 00a6  ld   $a6
              bb8d 00a6  ld   $a6
              bb8e 00a4  ld   $a4
              bb8f 00a7  ld   $a7
              bb90 0086  ld   $86
              bb91 00a4  ld   $a4
              bb92 0084  ld   $84
              bb93 00a5  ld   $a5
              bb94 00a6  ld   $a6
              bb95 0054  ld   $54
              bb96 0086  ld   $86
              bb97 00a6  ld   $a6
              bb98 0018  ld   $18
              bb99 0065  ld   $65
              bb9a 0054  ld   $54
              bb9b 0018  ld   $18
              bb9c 0000  ld   $00
              bb9d 0000  ld   $00
              bb9e 0085  ld   $85
              bb9f 0056  ld   $56
              bba0 00a6  ld   $a6
              bba1 0055  ld   $55
              bba2 0086  ld   $86
              bba3 00a7  ld   $a7
              bba4 0090  ld   $90
              bba5 0001  ld   $01
              bba6 00e8  ld   $e8
              bba7 0086  ld   $86
              bba8 0057  ld   $57
              bba9 00a0  ld   $a0
              bbaa 0000  ld   $00
              bbab 00b1  ld   $b1
              bbac 0056  ld   $56
              bbad 0048  ld   $48
              bbae 00a9  ld   $a9
              bbaf 0000  ld   $00
              bbb0 0091  ld   $91
              bbb1 0056  ld   $56
              bbb2 0020  ld   $20
              bbb3 0071  ld   $71
              bbb4 0022  ld   $22
              bbb5 0020  ld   $20
              bbb6 006b  ld   $6b
              bbb7 001d  ld   $1d
              bbb8 0068  ld   $68
              bbb9 00a0  ld   $a0
              bbba 0000  ld   $00
              bbbb 0091  ld   $91
              bbbc 0056  ld   $56
              bbbd 00a6  ld   $a6
              bbbe 00a4  ld   $a4
              bbbf 00a4  ld   $a4
              bbc0 00a5  ld   $a5
              bbc1 0086  ld   $86
              bbc2 00a6  ld   $a6
              bbc3 0084  ld   $84
              bbc4 00a7  ld   $a7
              bbc5 0060  ld   $60
              bbc6 0020  ld   $20
              bbc7 00f6  ld   $f6
              bbc8 000d  ld   $0d
              bbc9 0020  ld   $20
              bbca 0034  ld   $34
              bbcb 0018  ld   $18
              bbcc 0020  ld   $20
              bbcd 0063  ld   $63
              bbce 000f  ld   $0f
              bbcf 004c  ld   $4c
              bbd0 00da  ld   $da
              bbd1 0017  ld   $17
              bbd2 00a5  ld   $a5
              bbd3 0099  ld   $99
              bbd4 0030  ld   $30
              bbd5 009c  ld   $9c
              bbd6 00a5  ld   $a5
              bbd7 0094  ld   $94
              bbd8 00c9  ld   $c9
              bbd9 0091  ld   $91
              bbda 00b0  ld   $b0
              bbdb 0096  ld   $96
              bbdc 0020  ld   $20
              bbdd 0013  ld   $13
              bbde 001d  ld   $1d
              bbdf 00a5  ld   $a5
              bbe0 0097  ld   $97
              bbe1 00a4  ld   $a4
              bbe2 0098  ld   $98
              bbe3 0084  ld   $84
              bbe4 0046  ld   $46
              bbe5 0085  ld   $85
              bbe6 0047  ld   $47
              bbe7 0060  ld   $60
              bbe8 00a5  ld   $a5
              bbe9 0047  ld   $47
              bbea 0048  ld   $48
              bbeb 00a5  ld   $a5
              bbec 0046  ld   $46
              bbed 0048  ld   $48
              bbee 0020  ld   $20
              bbef 0034  ld   $34
              bbf0 0018  ld   $18
              bbf1 00a0  ld   $a0
              bbf2 0000  ld   $00
              bbf3 00ea  ld   $ea
              bbf4 00ea  ld   $ea
              bbf5 00ea  ld   $ea
              * 8 times
              bbfb fe00  bra  ac          ;+-----------------------------------+
              bbfc fcfd  bra  $bbfd       ;|                                   |
              bbfd 1418  ld   $18,y       ;| Trampoline for page $bb00 lookups |
              bbfe e006  jmp  y,$06       ;|                                   |
              bbff c218  st   [$18]       ;+-----------------------------------+
              bc00 00b1  ld   $b1
              bc01 0046  ld   $46
              bc02 00a8  ld   $a8
              bc03 0068  ld   $68
              bc04 0085  ld   $85
              bc05 0046  ld   $46
              bc06 0068  ld   $68
              bc07 0085  ld   $85
              bc08 0047  ld   $47
              bc09 004c  ld   $4c
              bc0a 00de  ld   $de
              bc0b 0013  ld   $13
              bc0c 0020  ld   $20
              bc0d 0028  ld   $28
              bc0e 0018  ld   $18
              bc0f 008a  ld   $8a
              bc10 00a0  ld   $a0
              bc11 0000  ld   $00
              bc12 0091  ld   $91
              bc13 0046  ld   $46
              bc14 0060  ld   $60
              bc15 0020  ld   $20
              bc16 0028  ld   $28
              bc17 0018  ld   $18
              bc18 0086  ld   $86
              bc19 007b  ld   $7b
              bc1a 00a2  ld   $a2
              bc1b 0000  ld   $00
              bc1c 0020  ld   $20
              bc1d 0071  ld   $71
              bc1e 0022  ld   $22
              bc1f 00f0  ld   $f0
              bc20 0029  ld   $29
              bc21 0020  ld   $20
              bc22 002e  ld   $2e
              bc23 0018  ld   $18
              bc24 0086  ld   $86
              bc25 007c  ld   $7c
              bc26 00a0  ld   $a0
              bc27 0000  ld   $00
              bc28 00b1  ld   $b1
              bc29 0046  ld   $46
              bc2a 0045  ld   $45
              bc2b 007c  ld   $7c
              bc2c 0025  ld   $25
              bc2d 007b  ld   $7b
              bc2e 00f0  ld   $f0
              bc2f 00f8  ld   $f8
              bc30 0060  ld   $60
              bc31 00a9  ld   $a9
              bc32 0089  ld   $89
              bc33 00a0  ld   $a0
              bc34 001f  ld   $1f
              bc35 004c  ld   $4c
              bc36 00df  ld   $df
              bc37 0018  ld   $18
              bc38 0020  ld   $20
              bc39 0004  ld   $04
              bc3a 001b  ld   $1b
              bc3b 00a5  ld   $a5
              bc3c 0099  ld   $99
              bc3d 0049  ld   $49
              bc3e 00ff  ld   $ff
              bc3f 0085  ld   $85
              bc40 0099  ld   $99
              bc41 0045  ld   $45
              bc42 00a1  ld   $a1
              bc43 0085  ld   $85
              bc44 00a2  ld   $a2
              bc45 00a5  ld   $a5
              bc46 0094  ld   $94
              bc47 004c  ld   $4c
              bc48 00e2  ld   $e2
              bc49 0018  ld   $18
              bc4a 00a5  ld   $a5
              bc4b 0046  ld   $46
              bc4c 0049  ld   $49
              bc4d 00e8  ld   $e8
              bc4e 00d0  ld   $d0
              bc4f 0008  ld   $08
              bc50 00a2  ld   $a2
              bc51 0014  ld   $14
              bc52 0045  ld   $45
              bc53 0047  ld   $47
              bc54 0049  ld   $49
              bc55 001c  ld   $1c
              bc56 00f0  ld   $f0
              bc57 000e  ld   $0e
              bc58 00a5  ld   $a5
              bc59 0046  ld   $46
              bc5a 00c9  ld   $c9
              bc5b 0066  ld   $66
              bc5c 00d0  ld   $d0
              bc5d 00c6  ld   $c6
              bc5e 00a5  ld   $a5
              bc5f 0047  ld   $47
              bc60 00e9  ld   $e9
              bc61 0019  ld   $19
              bc62 00d0  ld   $d0
              bc63 00c0  ld   $c0
              bc64 00a2  ld   $a2
              bc65 000a  ld   $0a
              bc66 00bd  ld   $bd
              bc67 00e9  ld   $e9
              bc68 0021  ld   $21
              bc69 0029  ld   $29
              bc6a 003f  ld   $3f
              bc6b 0049  ld   $49
              bc6c 0020  ld   $20
              bc6d 0018  ld   $18
              bc6e 0069  ld   $69
              bc6f 0020  ld   $20
              bc70 0020  ld   $20
              bc71 0000  ld   $00
              bc72 002b  ld   $2b
              bc73 00ca  ld   $ca
              bc74 0049  ld   $49
              bc75 0021  ld   $21
              bc76 00d0  ld   $d0
              bc77 00ee  ld   $ee
              bc78 00c6  ld   $c6
              bc79 007b  ld   $7b
              bc7a 00d0  ld   $d0
              bc7b 00e8  ld   $e8
              bc7c 0060  ld   $60
              bc7d 0020  ld   $20
              bc7e 0011  ld   $11
              bc7f 001a  ld   $1a
              bc80 0090  ld   $90
              bc81 003c  ld   $3c
              bc82 0020  ld   $20
              bc83 0004  ld   $04
              bc84 001b  ld   $1b
              bc85 00d0  ld   $d0
              bc86 0003  ld   $03
              bc87 004c  ld   $4c
              bc88 0074  ld   $74
              bc89 001c  ld   $1c
              bc8a 00a6  ld   $a6
              bc8b 00a3  ld   $a3
              bc8c 0086  ld   $86
              bc8d 0089  ld   $89
              bc8e 00a2  ld   $a2
              bc8f 009c  ld   $9c
              bc90 00a5  ld   $a5
              bc91 009c  ld   $9c
              bc92 00a8  ld   $a8
              bc93 00f0  ld   $f0
              bc94 009b  ld   $9b
              bc95 0038  ld   $38
              bc96 00e5  ld   $e5
              bc97 0094  ld   $94
              bc98 00f0  ld   $f0
              bc99 0024  ld   $24
              bc9a 0090  ld   $90
              bc9b 0012  ld   $12
              bc9c 0084  ld   $84
              bc9d 0094  ld   $94
              bc9e 00a4  ld   $a4
              bc9f 00a1  ld   $a1
              bca0 0084  ld   $84
              bca1 0099  ld   $99
              bca2 0049  ld   $49
              bca3 0019  ld   $19
              bca4 0000  ld   $00
              bca5 0000  ld   $00
              bca6 00ff  ld   $ff
              bca7 0069  ld   $69
              bca8 0000  ld   $00
              bca9 00a0  ld   $a0
              bcaa 0000  ld   $00
              bcab 0084  ld   $84
              bcac 0089  ld   $89
              bcad 00a2  ld   $a2
              bcae 0094  ld   $94
              bcaf 00d0  ld   $d0
              bcb0 0004  ld   $04
              bcb1 00a0  ld   $a0
              bcb2 0000  ld   $00
              bcb3 0084  ld   $84
              bcb4 00a3  ld   $a3
              bcb5 00c9  ld   $c9
              bcb6 00f9  ld   $f9
              bcb7 0030  ld   $30
              bcb8 00c7  ld   $c7
              bcb9 00a8  ld   $a8
              bcba 00a5  ld   $a5
              bcbb 00a3  ld   $a3
              bcbc 0056  ld   $56
              bcbd 0001  ld   $01
              bcbe 0020  ld   $20
              bcbf 0028  ld   $28
              bcc0 001a  ld   $1a
              bcc1 0024  ld   $24
              bcc2 00a2  ld   $a2
              bcc3 0010  ld   $10
              bcc4 0057  ld   $57
              bcc5 00a0  ld   $a0
              bcc6 0094  ld   $94
              bcc7 00e0  ld   $e0
              bcc8 009c  ld   $9c
              bcc9 00f0  ld   $f0
              bcca 0002  ld   $02
              bccb 00a0  ld   $a0
              bccc 009c  ld   $9c
              bccd 0038  ld   $38
              bcce 0049  ld   $49
              bccf 00ff  ld   $ff
              bcd0 0065  ld   $65
              bcd1 0089  ld   $89
              bcd2 0085  ld   $85
              bcd3 00a3  ld   $a3
              bcd4 00b9  ld   $b9
              bcd5 0004  ld   $04
              bcd6 0000  ld   $00
              bcd7 00f5  ld   $f5
              bcd8 0004  ld   $04
              bcd9 0085  ld   $85
              bcda 0098  ld   $98
              bcdb 00b9  ld   $b9
              bcdc 0003  ld   $03
              bcdd 0000  ld   $00
              bcde 00f5  ld   $f5
              bcdf 0003  ld   $03
              bce0 0085  ld   $85
              bce1 0097  ld   $97
              bce2 00b9  ld   $b9
              bce3 0002  ld   $02
              bce4 0000  ld   $00
              bce5 00f5  ld   $f5
              bce6 0002  ld   $02
              bce7 0085  ld   $85
              bce8 0096  ld   $96
              bce9 00b9  ld   $b9
              bcea 0001  ld   $01
              bceb 0000  ld   $00
              bcec 00f5  ld   $f5
              bced 0001  ld   $01
              bcee 0085  ld   $85
              bcef 0095  ld   $95
              bcf0 00b0  ld   $b0
              bcf1 0003  ld   $03
              bcf2 0020  ld   $20
              bcf3 00bf  ld   $bf
              bcf4 0019  ld   $19
              bcf5 00a0  ld   $a0
              bcf6 0000  ld   $00
              bcf7 0098  ld   $98
              bcf8 0018  ld   $18
              bcf9 00a6  ld   $a6
              bcfa 0095  ld   $95
              bcfb fe00  bra  ac          ;+-----------------------------------+
              bcfc fcfd  bra  $bcfd       ;|                                   |
              bcfd 1418  ld   $18,y       ;| Trampoline for page $bc00 lookups |
              bcfe e006  jmp  y,$06       ;|                                   |
              bcff c218  st   [$18]       ;+-----------------------------------+
              bd00 00d0  ld   $d0
              bd01 004a  ld   $4a
              bd02 00a6  ld   $a6
              bd03 0096  ld   $96
              bd04 0086  ld   $86
              bd05 0095  ld   $95
              bd06 00a6  ld   $a6
              bd07 0097  ld   $97
              bd08 0086  ld   $86
              bd09 0096  ld   $96
              bd0a 00a6  ld   $a6
              bd0b 0098  ld   $98
              bd0c 0086  ld   $86
              bd0d 0097  ld   $97
              bd0e 00a6  ld   $a6
              bd0f 00a3  ld   $a3
              bd10 0086  ld   $86
              bd11 0098  ld   $98
              bd12 0084  ld   $84
              bd13 00a3  ld   $a3
              bd14 0069  ld   $69
              bd15 0008  ld   $08
              bd16 00c9  ld   $c9
              bd17 0020  ld   $20
              bd18 00d0  ld   $d0
              bd19 00e4  ld   $e4
              bd1a 00a9  ld   $a9
              bd1b 0000  ld   $00
              bd1c 0085  ld   $85
              bd1d 0094  ld   $94
              bd1e 0085  ld   $85
              bd1f 0099  ld   $99
              bd20 0060  ld   $60
              bd21 0065  ld   $65
              bd22 0089  ld   $89
              bd23 0085  ld   $85
              bd24 00a3  ld   $a3
              bd25 00a5  ld   $a5
              bd26 0098  ld   $98
              bd27 0065  ld   $65
              bd28 00a0  ld   $a0
              bd29 0085  ld   $85
              bd2a 0098  ld   $98
              bd2b 00a5  ld   $a5
              bd2c 0097  ld   $97
              bd2d 0065  ld   $65
              bd2e 009f  ld   $9f
              bd2f 0085  ld   $85
              bd30 0097  ld   $97
              bd31 00a5  ld   $a5
              bd32 0096  ld   $96
              bd33 0065  ld   $65
              bd34 009e  ld   $9e
              bd35 0085  ld   $85
              bd36 0096  ld   $96
              bd37 00a5  ld   $a5
              bd38 0095  ld   $95
              bd39 0065  ld   $65
              bd3a 009d  ld   $9d
              bd3b 0085  ld   $85
              bd3c 0095  ld   $95
              bd3d 004c  ld   $4c
              bd3e 00ae  ld   $ae
              bd3f 0019  ld   $19
              bd40 0069  ld   $69
              bd41 0001  ld   $01
              bd42 0006  ld   $06
              bd43 00a3  ld   $a3
              bd44 0026  ld   $26
              bd45 0098  ld   $98
              bd46 0026  ld   $26
              bd47 0097  ld   $97
              bd48 0026  ld   $26
              bd49 0096  ld   $96
              bd4a 0026  ld   $26
              bd4b 0095  ld   $95
              bd4c 0010  ld   $10
              bd4d 00f2  ld   $f2
              bd4e 0038  ld   $38
              bd4f 00e5  ld   $e5
              bd50 0094  ld   $94
              bd51 00b0  ld   $b0
              bd52 00c7  ld   $c7
              bd53 0049  ld   $49
              bd54 00ff  ld   $ff
              bd55 0069  ld   $69
              bd56 0001  ld   $01
              bd57 0085  ld   $85
              bd58 0094  ld   $94
              bd59 0090  ld   $90
              bd5a 000e  ld   $0e
              bd5b 00e6  ld   $e6
              bd5c 0094  ld   $94
              bd5d 00f0  ld   $f0
              bd5e 0042  ld   $42
              bd5f 0066  ld   $66
              bd60 0095  ld   $95
              bd61 0066  ld   $66
              bd62 0096  ld   $96
              bd63 0066  ld   $66
              bd64 0097  ld   $97
              bd65 0066  ld   $66
              bd66 0098  ld   $98
              bd67 0066  ld   $66
              bd68 00a3  ld   $a3
              bd69 0060  ld   $60
              bd6a 00a5  ld   $a5
              bd6b 0099  ld   $99
              bd6c 0049  ld   $49
              bd6d 00ff  ld   $ff
              bd6e 0085  ld   $85
              bd6f 0099  ld   $99
              bd70 00a5  ld   $a5
              bd71 0095  ld   $95
              bd72 0049  ld   $49
              bd73 00ff  ld   $ff
              bd74 0085  ld   $85
              bd75 0095  ld   $95
              bd76 00a5  ld   $a5
              bd77 0096  ld   $96
              bd78 0049  ld   $49
              bd79 00ff  ld   $ff
              bd7a 0085  ld   $85
              bd7b 0096  ld   $96
              bd7c 00a5  ld   $a5
              bd7d 0097  ld   $97
              bd7e 0049  ld   $49
              bd7f 00ff  ld   $ff
              bd80 0085  ld   $85
              bd81 0097  ld   $97
              bd82 00a5  ld   $a5
              bd83 0098  ld   $98
              bd84 0049  ld   $49
              bd85 00ff  ld   $ff
              bd86 0085  ld   $85
              bd87 0098  ld   $98
              bd88 00a5  ld   $a5
              bd89 00a3  ld   $a3
              bd8a 0049  ld   $49
              bd8b 00ff  ld   $ff
              bd8c 0085  ld   $85
              bd8d 00a3  ld   $a3
              bd8e 00e6  ld   $e6
              bd8f 00a3  ld   $a3
              bd90 00d0  ld   $d0
              bd91 000e  ld   $0e
              bd92 00e6  ld   $e6
              bd93 0098  ld   $98
              bd94 00d0  ld   $d0
              bd95 000a  ld   $0a
              bd96 00e6  ld   $e6
              bd97 0097  ld   $97
              bd98 00d0  ld   $d0
              bd99 0006  ld   $06
              bd9a 00e6  ld   $e6
              bd9b 0096  ld   $96
              bd9c 00d0  ld   $d0
              bd9d 0002  ld   $02
              bd9e 00e6  ld   $e6
              bd9f 0095  ld   $95
              bda0 0060  ld   $60
              bda1 00a2  ld   $a2
              bda2 0045  ld   $45
              bda3 004c  ld   $4c
              bda4 004a  ld   $4a
              bda5 0005  ld   $05
              bda6 00a2  ld   $a2
              bda7 0057  ld   $57
              bda8 00b4  ld   $b4
              bda9 0004  ld   $04
              bdaa 0084  ld   $84
              bdab 001a  ld   $1a
              bdac 0000  ld   $00
              bdad 0000  ld   $00
              bdae 00a3  ld   $a3
              bdaf 00b4  ld   $b4
              bdb0 0003  ld   $03
              bdb1 0094  ld   $94
              bdb2 0004  ld   $04
              bdb3 00b4  ld   $b4
              bdb4 0002  ld   $02
              bdb5 0094  ld   $94
              bdb6 0003  ld   $03
              bdb7 00b4  ld   $b4
              bdb8 0001  ld   $01
              bdb9 0094  ld   $94
              bdba 0002  ld   $02
              bdbb 00a4  ld   $a4
              bdbc 009b  ld   $9b
              bdbd 0094  ld   $94
              bdbe 0001  ld   $01
              bdbf 0069  ld   $69
              bdc0 0008  ld   $08
              bdc1 0030  ld   $30
              bdc2 00e8  ld   $e8
              bdc3 00f0  ld   $f0
              bdc4 00e6  ld   $e6
              bdc5 00e9  ld   $e9
              bdc6 0008  ld   $08
              bdc7 00a8  ld   $a8
              bdc8 00a5  ld   $a5
              bdc9 00a3  ld   $a3
              bdca 00b0  ld   $b0
              bdcb 0014  ld   $14
              bdcc 0016  ld   $16
              bdcd 0001  ld   $01
              bdce 0090  ld   $90
              bdcf 0002  ld   $02
              bdd0 00f6  ld   $f6
              bdd1 0001  ld   $01
              bdd2 0076  ld   $76
              bdd3 0001  ld   $01
              bdd4 0076  ld   $76
              bdd5 0001  ld   $01
              bdd6 0076  ld   $76
              bdd7 0002  ld   $02
              bdd8 0076  ld   $76
              bdd9 0003  ld   $03
              bdda 0076  ld   $76
              bddb 0004  ld   $04
              bddc 006a  ld   $6a
              bddd 00c8  ld   $c8
              bdde 00d0  ld   $d0
              bddf 00ec  ld   $ec
              bde0 0018  ld   $18
              bde1 0060  ld   $60
              bde2 0081  ld   $81
              bde3 0000  ld   $00
              bde4 0000  ld   $00
              bde5 0000  ld   $00
              bde6 0000  ld   $00
              bde7 0003  ld   $03
              bde8 007f  ld   $7f
              bde9 005e  ld   $5e
              bdea 0056  ld   $56
              bdeb 00cb  ld   $cb
              bdec 0079  ld   $79
              bded 0080  ld   $80
              bdee 0013  ld   $13
              bdef 009b  ld   $9b
              bdf0 000b  ld   $0b
              bdf1 0064  ld   $64
              bdf2 0080  ld   $80
              bdf3 0076  ld   $76
              bdf4 0038  ld   $38
              bdf5 0093  ld   $93
              bdf6 0016  ld   $16
              bdf7 0082  ld   $82
              bdf8 0038  ld   $38
              bdf9 00aa  ld   $aa
              bdfa 003b  ld   $3b
              bdfb fe00  bra  ac          ;+-----------------------------------+
              bdfc fcfd  bra  $bdfd       ;|                                   |
              bdfd 1418  ld   $18,y       ;| Trampoline for page $bd00 lookups |
              bdfe e006  jmp  y,$06       ;|                                   |
              bdff c218  st   [$18]       ;+-----------------------------------+
              be00 0020  ld   $20
              be01 0080  ld   $80
              be02 0035  ld   $35
              be03 0004  ld   $04
              be04 00f3  ld   $f3
              be05 0034  ld   $34
              be06 0081  ld   $81
              be07 0035  ld   $35
              be08 0004  ld   $04
              be09 00f3  ld   $f3
              be0a 0034  ld   $34
              be0b 0080  ld   $80
              be0c 0080  ld   $80
              be0d 0000  ld   $00
              be0e 0000  ld   $00
              be0f 0000  ld   $00
              be10 0080  ld   $80
              be11 0031  ld   $31
              be12 0072  ld   $72
              be13 0017  ld   $17
              be14 00f8  ld   $f8
              be15 0020  ld   $20
              be16 00a3  ld   $a3
              be17 001c  ld   $1c
              be18 00f0  ld   $f0
              be19 0002  ld   $02
              be1a 0010  ld   $10
              be1b 0003  ld   $03
              be1c 004c  ld   $4c
              be1d 0082  ld   $82
              be1e 0012  ld   $12
              be1f 00a5  ld   $a5
              be20 0094  ld   $94
              be21 00e9  ld   $e9
              be22 007f  ld   $7f
              be23 0048  ld   $48
              be24 00a9  ld   $a9
              be25 0080  ld   $80
              be26 0085  ld   $85
              be27 0094  ld   $94
              be28 00a9  ld   $a9
              be29 004e  ld   $4e
              be2a 00a0  ld   $a0
              be2b 001a  ld   $1a
              be2c 0020  ld   $20
              be2d 00df  ld   $df
              be2e 0018  ld   $18
              be2f 00a9  ld   $a9
              be30 0053  ld   $53
              be31 00a0  ld   $a0
              be32 001a  ld   $1a
              be33 0020  ld   $20
              be34 0087  ld   $87
              be35 001b  ld   $1b
              be36 00a9  ld   $a9
              be37 0034  ld   $34
              be38 00a0  ld   $a0
              be39 001a  ld   $1a
              be3a 0020  ld   $20
              be3b 0095  ld   $95
              be3c 0018  ld   $18
              be3d 00a9  ld   $a9
              be3e 0039  ld   $39
              be3f 00a0  ld   $a0
              be40 001a  ld   $1a
              be41 0020  ld   $20
              be42 0099  ld   $99
              be43 0020  ld   $20
              be44 00a9  ld   $a9
              be45 0058  ld   $58
              be46 00a0  ld   $a0
              be47 001a  ld   $1a
              be48 0020  ld   $20
              be49 00df  ld   $df
              be4a 0018  ld   $18
              be4b 0068  ld   $68
              be4c 0020  ld   $20
              be4d 00f6  ld   $f6
              be4e 001d  ld   $1d
              be4f 00a9  ld   $a9
              be50 005d  ld   $5d
              be51 00a0  ld   $a0
              be52 001a  ld   $1a
              be53 0020  ld   $20
              be54 0004  ld   $04
              be55 001b  ld   $1b
              be56 00d0  ld   $d0
              be57 0003  ld   $03
              be58 004c  ld   $4c
              be59 0003  ld   $03
              be5a 001b  ld   $1b
              be5b 0020  ld   $20
              be5c 002f  ld   $2f
              be5d 001b  ld   $1b
              be5e 00a9  ld   $a9
              be5f 0000  ld   $00
              be60 0085  ld   $85
              be61 0058  ld   $58
              be62 0085  ld   $85
              be63 0059  ld   $59
              be64 0085  ld   $85
              be65 005a  ld   $5a
              be66 0085  ld   $85
              be67 005b  ld   $5b
              be68 00a5  ld   $a5
              be69 00a3  ld   $a3
              be6a 0020  ld   $20
              be6b 00d1  ld   $d1
              be6c 001a  ld   $1a
              be6d 00a5  ld   $a5
              be6e 0098  ld   $98
              be6f 0020  ld   $20
              be70 00d1  ld   $d1
              be71 001a  ld   $1a
              be72 00a5  ld   $a5
              be73 0097  ld   $97
              be74 0020  ld   $20
              be75 00d1  ld   $d1
              be76 001a  ld   $1a
              be77 00a5  ld   $a5
              be78 0096  ld   $96
              be79 0020  ld   $20
              be7a 00d1  ld   $d1
              be7b 001a  ld   $1a
              be7c 00a5  ld   $a5
              be7d 0095  ld   $95
              be7e 0020  ld   $20
              be7f 00d6  ld   $d6
              be80 001a  ld   $1a
              be81 004c  ld   $4c
              be82 0007  ld   $07
              be83 001c  ld   $1c
              be84 00d0  ld   $d0
              be85 0003  ld   $03
              be86 004c  ld   $4c
              be87 00fb  ld   $fb
              be88 0019  ld   $19
              be89 004a  ld   $4a
              be8a 0009  ld   $09
              be8b 0080  ld   $80
              be8c 00a8  ld   $a8
              be8d 0090  ld   $90
              be8e 0019  ld   $19
              be8f 0018  ld   $18
              be90 00a5  ld   $a5
              be91 005b  ld   $5b
              be92 0065  ld   $65
              be93 00a0  ld   $a0
              be94 0085  ld   $85
              be95 005b  ld   $5b
              be96 00a5  ld   $a5
              be97 005a  ld   $5a
              be98 0065  ld   $65
              be99 009f  ld   $9f
              be9a 0085  ld   $85
              be9b 005a  ld   $5a
              be9c 00a5  ld   $a5
              be9d 0059  ld   $59
              be9e 0065  ld   $65
              be9f 009e  ld   $9e
              bea0 0085  ld   $85
              bea1 0059  ld   $59
              bea2 00a5  ld   $a5
              bea3 0058  ld   $58
              bea4 0065  ld   $65
              bea5 009d  ld   $9d
              bea6 0085  ld   $85
              bea7 0058  ld   $58
              bea8 0066  ld   $66
              bea9 0058  ld   $58
              beaa 0066  ld   $66
              beab 0059  ld   $59
              beac 0066  ld   $66
              bead 005a  ld   $5a
              beae 0066  ld   $66
              beaf 005b  ld   $5b
              beb0 0066  ld   $66
              beb1 00a3  ld   $a3
              beb2 0098  ld   $98
              beb3 001b  ld   $1b
              beb4 0000  ld   $00
              beb5 0000  ld   $00
              beb6 004a  ld   $4a
              beb7 00d0  ld   $d0
              beb8 00d6  ld   $d6
              beb9 0060  ld   $60
              beba 0085  ld   $85
              bebb 0054  ld   $54
              bebc 0084  ld   $84
              bebd 0055  ld   $55
              bebe 00a0  ld   $a0
              bebf 0004  ld   $04
              bec0 00b1  ld   $b1
              bec1 0054  ld   $54
              bec2 0085  ld   $85
              bec3 00a0  ld   $a0
              bec4 0088  ld   $88
              bec5 00b1  ld   $b1
              bec6 0054  ld   $54
              bec7 0085  ld   $85
              bec8 009f  ld   $9f
              bec9 0088  ld   $88
              beca 00b1  ld   $b1
              becb 0054  ld   $54
              becc 0085  ld   $85
              becd 009e  ld   $9e
              bece 0088  ld   $88
              becf 00b1  ld   $b1
              bed0 0054  ld   $54
              bed1 0085  ld   $85
              bed2 00a1  ld   $a1
              bed3 0045  ld   $45
              bed4 0099  ld   $99
              bed5 0085  ld   $85
              bed6 00a2  ld   $a2
              bed7 00a5  ld   $a5
              bed8 00a1  ld   $a1
              bed9 0009  ld   $09
              beda 0080  ld   $80
              bedb 0085  ld   $85
              bedc 009d  ld   $9d
              bedd 0088  ld   $88
              bede 00b1  ld   $b1
              bedf 0054  ld   $54
              bee0 0085  ld   $85
              bee1 009c  ld   $9c
              bee2 00a5  ld   $a5
              bee3 0094  ld   $94
              bee4 0060  ld   $60
              bee5 00a5  ld   $a5
              bee6 009c  ld   $9c
              bee7 00f0  ld   $f0
              bee8 001f  ld   $1f
              bee9 0018  ld   $18
              beea 0065  ld   $65
              beeb 0094  ld   $94
              beec 0090  ld   $90
              beed 0004  ld   $04
              beee 0030  ld   $30
              beef 001d  ld   $1d
              bef0 0018  ld   $18
              bef1 002c  ld   $2c
              bef2 0010  ld   $10
              bef3 0014  ld   $14
              bef4 0069  ld   $69
              bef5 0080  ld   $80
              bef6 0085  ld   $85
              bef7 0094  ld   $94
              bef8 00d0  ld   $d0
              bef9 0003  ld   $03
              befa 004c  ld   $4c
              befb fe00  bra  ac          ;+-----------------------------------+
              befc fcfd  bra  $befd       ;|                                   |
              befd 1418  ld   $18,y       ;| Trampoline for page $be00 lookups |
              befe e006  jmp  y,$06       ;|                                   |
              beff c218  st   [$18]       ;+-----------------------------------+
              bf00 0073  ld   $73
              bf01 0019  ld   $19
              bf02 00a5  ld   $a5
              bf03 00a2  ld   $a2
              bf04 0085  ld   $85
              bf05 0099  ld   $99
              bf06 0060  ld   $60
              bf07 00a5  ld   $a5
              bf08 0099  ld   $99
              bf09 0049  ld   $49
              bf0a 00ff  ld   $ff
              bf0b 0030  ld   $30
              bf0c 0005  ld   $05
              bf0d 0068  ld   $68
              bf0e 0068  ld   $68
              bf0f 004c  ld   $4c
              bf10 006f  ld   $6f
              bf11 0019  ld   $19
              bf12 004c  ld   $4c
              bf13 00f6  ld   $f6
              bf14 0019  ld   $19
              bf15 0020  ld   $20
              bf16 0084  ld   $84
              bf17 001c  ld   $1c
              bf18 00aa  ld   $aa
              bf19 00f0  ld   $f0
              bf1a 0010  ld   $10
              bf1b 0018  ld   $18
              bf1c 0069  ld   $69
              bf1d 0002  ld   $02
              bf1e 00b0  ld   $b0
              bf1f 00f2  ld   $f2
              bf20 00a2  ld   $a2
              bf21 0000  ld   $00
              bf22 0086  ld   $86
              bf23 00a2  ld   $a2
              bf24 0020  ld   $20
              bf25 00ef  ld   $ef
              bf26 0018  ld   $18
              bf27 00e6  ld   $e6
              bf28 0094  ld   $94
              bf29 00f0  ld   $f0
              bf2a 00e7  ld   $e7
              bf2b 0060  ld   $60
              bf2c 0084  ld   $84
              bf2d 0020  ld   $20
              bf2e 0000  ld   $00
              bf2f 0000  ld   $00
              bf30 0000  ld   $00
              bf31 0020  ld   $20
              bf32 0084  ld   $84
              bf33 001c  ld   $1c
              bf34 00a9  ld   $a9
              bf35 0071  ld   $71
              bf36 00a0  ld   $a0
              bf37 001b  ld   $1b
              bf38 00a2  ld   $a2
              bf39 0000  ld   $00
              bf3a 0086  ld   $86
              bf3b 00a2  ld   $a2
              bf3c 0020  ld   $20
              bf3d 001a  ld   $1a
              bf3e 001c  ld   $1c
              bf3f 004c  ld   $4c
              bf40 008a  ld   $8a
              bf41 001b  ld   $1b
              bf42 0020  ld   $20
              bf43 0004  ld   $04
              bf44 001b  ld   $1b
              bf45 00f0  ld   $f0
              bf46 0076  ld   $76
              bf47 0020  ld   $20
              bf48 0093  ld   $93
              bf49 001c  ld   $1c
              bf4a 00a9  ld   $a9
              bf4b 0000  ld   $00
              bf4c 0038  ld   $38
              bf4d 00e5  ld   $e5
              bf4e 0094  ld   $94
              bf4f 0085  ld   $85
              bf50 0094  ld   $94
              bf51 0020  ld   $20
              bf52 002f  ld   $2f
              bf53 001b  ld   $1b
              bf54 00e6  ld   $e6
              bf55 0094  ld   $94
              bf56 00f0  ld   $f0
              bf57 00ba  ld   $ba
              bf58 00a2  ld   $a2
              bf59 00fc  ld   $fc
              bf5a 00a9  ld   $a9
              bf5b 0001  ld   $01
              bf5c 00a4  ld   $a4
              bf5d 009d  ld   $9d
              bf5e 00c4  ld   $c4
              bf5f 0095  ld   $95
              bf60 00d0  ld   $d0
              bf61 0010  ld   $10
              bf62 00a4  ld   $a4
              bf63 009e  ld   $9e
              bf64 00c4  ld   $c4
              bf65 0096  ld   $96
              bf66 00d0  ld   $d0
              bf67 000a  ld   $0a
              bf68 00a4  ld   $a4
              bf69 009f  ld   $9f
              bf6a 00c4  ld   $c4
              bf6b 0097  ld   $97
              bf6c 00d0  ld   $d0
              bf6d 0004  ld   $04
              bf6e 00a4  ld   $a4
              bf6f 00a0  ld   $a0
              bf70 00c4  ld   $c4
              bf71 0098  ld   $98
              bf72 0008  ld   $08
              bf73 002a  ld   $2a
              bf74 0090  ld   $90
              bf75 0009  ld   $09
              bf76 00e8  ld   $e8
              bf77 0095  ld   $95
              bf78 005b  ld   $5b
              bf79 00f0  ld   $f0
              bf7a 0032  ld   $32
              bf7b 0010  ld   $10
              bf7c 0034  ld   $34
              bf7d 00a9  ld   $a9
              bf7e 0001  ld   $01
              bf7f 0028  ld   $28
              bf80 00b0  ld   $b0
              bf81 000e  ld   $0e
              bf82 0006  ld   $06
              bf83 00a0  ld   $a0
              bf84 0026  ld   $26
              bf85 009f  ld   $9f
              bf86 0026  ld   $26
              bf87 009e  ld   $9e
              bf88 0026  ld   $26
              bf89 009d  ld   $9d
              bf8a 00b0  ld   $b0
              bf8b 00e6  ld   $e6
              bf8c 0030  ld   $30
              bf8d 00ce  ld   $ce
              bf8e 0010  ld   $10
              bf8f 00e2  ld   $e2
              bf90 00a8  ld   $a8
              bf91 00a5  ld   $a5
              bf92 00a0  ld   $a0
              bf93 00e5  ld   $e5
              bf94 0098  ld   $98
              bf95 0085  ld   $85
              bf96 00a0  ld   $a0
              bf97 00a5  ld   $a5
              bf98 009f  ld   $9f
              bf99 00e5  ld   $e5
              bf9a 0097  ld   $97
              bf9b 0085  ld   $85
              bf9c 009f  ld   $9f
              bf9d 00a5  ld   $a5
              bf9e 009e  ld   $9e
              bf9f 00e5  ld   $e5
              bfa0 0096  ld   $96
              bfa1 0085  ld   $85
              bfa2 009e  ld   $9e
              bfa3 00a5  ld   $a5
              bfa4 009d  ld   $9d
              bfa5 00e5  ld   $e5
              bfa6 0095  ld   $95
              bfa7 0085  ld   $85
              bfa8 009d  ld   $9d
              bfa9 0098  ld   $98
              bfaa 004c  ld   $4c
              bfab 00c7  ld   $c7
              bfac 001b  ld   $1b
              bfad 00a9  ld   $a9
              bfae 0040  ld   $40
              bfaf 00d0  ld   $d0
              bfb0 00ce  ld   $ce
              bfb1 000a  ld   $0a
              bfb2 000a  ld   $0a
              bfb3 000a  ld   $0a
              * 6 times
              bfb7 0085  ld   $85
              bfb8 00a3  ld   $a3
              bfb9 0028  ld   $28
              bfba 004c  ld   $4c
              bfbb 001c  ld   $1c
              bfbc 0000  ld   $00
              bfbd 0000  ld   $00
              bfbe 0007  ld   $07
              bfbf 001c  ld   $1c
              bfc0 00a2  ld   $a2
              bfc1 0085  ld   $85
              bfc2 004c  ld   $4c
              bfc3 004a  ld   $4a
              bfc4 0005  ld   $05
              bfc5 00a5  ld   $a5
              bfc6 0058  ld   $58
              bfc7 0085  ld   $85
              bfc8 0095  ld   $95
              bfc9 00a5  ld   $a5
              bfca 0059  ld   $59
              bfcb 0085  ld   $85
              bfcc 0096  ld   $96
              bfcd 00a5  ld   $a5
              bfce 005a  ld   $5a
              bfcf 0085  ld   $85
              bfd0 0097  ld   $97
              bfd1 00a5  ld   $a5
              bfd2 005b  ld   $5b
              bfd3 0085  ld   $85
              bfd4 0098  ld   $98
              bfd5 004c  ld   $4c
              bfd6 004f  ld   $4f
              bfd7 0019  ld   $19
              bfd8 0085  ld   $85
              bfd9 0054  ld   $54
              bfda 0084  ld   $84
              bfdb 0055  ld   $55
              bfdc 00a0  ld   $a0
              bfdd 0004  ld   $04
              bfde 00b1  ld   $b1
              bfdf 0054  ld   $54
              bfe0 0085  ld   $85
              bfe1 0098  ld   $98
              bfe2 0088  ld   $88
              bfe3 00b1  ld   $b1
              bfe4 0054  ld   $54
              bfe5 0085  ld   $85
              bfe6 0097  ld   $97
              bfe7 0088  ld   $88
              bfe8 00b1  ld   $b1
              bfe9 0054  ld   $54
              bfea 0085  ld   $85
              bfeb 0096  ld   $96
              bfec 0088  ld   $88
              bfed 00b1  ld   $b1
              bfee 0054  ld   $54
              bfef 0085  ld   $85
              bff0 0099  ld   $99
              bff1 0009  ld   $09
              bff2 0080  ld   $80
              bff3 0085  ld   $85
              bff4 0095  ld   $95
              bff5 0088  ld   $88
              bff6 00b1  ld   $b1
              bff7 0054  ld   $54
              bff8 0085  ld   $85
              bff9 0094  ld   $94
              bffa 0084  ld   $84
              bffb fe00  bra  ac          ;+-----------------------------------+
              bffc fcfd  bra  $bffd       ;|                                   |
              bffd 1418  ld   $18,y       ;| Trampoline for page $bf00 lookups |
              bffe e006  jmp  y,$06       ;|                                   |
              bfff c218  st   [$18]       ;+-----------------------------------+
              c000 00a3  ld   $a3
              c001 0060  ld   $60
              c002 00a2  ld   $a2
              c003 008f  ld   $8f
              c004 002c  ld   $2c
              c005 00a2  ld   $a2
              c006 008a  ld   $8a
              c007 00a0  ld   $a0
              c008 0000  ld   $00
              c009 00f0  ld   $f0
              c00a 0004  ld   $04
              c00b 00a6  ld   $a6
              c00c 007b  ld   $7b
              c00d 00a4  ld   $a4
              c00e 007c  ld   $7c
              c00f 0020  ld   $20
              c010 0093  ld   $93
              c011 001c  ld   $1c
              c012 0086  ld   $86
              c013 0054  ld   $54
              c014 0084  ld   $84
              c015 0055  ld   $55
              c016 00a0  ld   $a0
              c017 0004  ld   $04
              c018 00a5  ld   $a5
              c019 0098  ld   $98
              c01a 0091  ld   $91
              c01b 0054  ld   $54
              c01c 0088  ld   $88
              c01d 00a5  ld   $a5
              c01e 0097  ld   $97
              c01f 0091  ld   $91
              c020 0054  ld   $54
              c021 0088  ld   $88
              c022 00a5  ld   $a5
              c023 0096  ld   $96
              c024 0091  ld   $91
              c025 0054  ld   $54
              c026 0088  ld   $88
              c027 00a5  ld   $a5
              c028 0099  ld   $99
              c029 0009  ld   $09
              c02a 007f  ld   $7f
              c02b 0025  ld   $25
              c02c 0095  ld   $95
              c02d 0091  ld   $91
              c02e 0054  ld   $54
              c02f 0088  ld   $88
              c030 00a5  ld   $a5
              c031 0094  ld   $94
              c032 0091  ld   $91
              c033 0054  ld   $54
              c034 0084  ld   $84
              c035 00a3  ld   $a3
              c036 0060  ld   $60
              c037 00a5  ld   $a5
              c038 00a1  ld   $a1
              c039 0085  ld   $85
              c03a 0099  ld   $99
              c03b 00a2  ld   $a2
              c03c 0005  ld   $05
              c03d 00b5  ld   $b5
              c03e 009b  ld   $9b
              c03f 0095  ld   $95
              c040 0093  ld   $93
              c041 00ca  ld   $ca
              c042 00d0  ld   $d0
              c043 00f9  ld   $f9
              c044 0086  ld   $86
              c045 00a3  ld   $a3
              c046 0060  ld   $60
              c047 0020  ld   $20
              c048 0093  ld   $93
              c049 001c  ld   $1c
              c04a 00a2  ld   $a2
              c04b 0006  ld   $06
              c04c 00b5  ld   $b5
              c04d 0093  ld   $93
              c04e 0095  ld   $95
              c04f 009b  ld   $9b
              c050 00ca  ld   $ca
              c051 00d0  ld   $d0
              c052 00f9  ld   $f9
              c053 0086  ld   $86
              c054 00a3  ld   $a3
              c055 0060  ld   $60
              c056 00a5  ld   $a5
              c057 0094  ld   $94
              c058 00f0  ld   $f0
              c059 00fb  ld   $fb
              c05a 0006  ld   $06
              c05b 00a3  ld   $a3
              c05c 0090  ld   $90
              c05d 00f7  ld   $f7
              c05e 0020  ld   $20
              c05f 00e7  ld   $e7
              c060 0019  ld   $19
              c061 00d0  ld   $d0
              c062 00f2  ld   $f2
              c063 004c  ld   $4c
              c064 00b0  ld   $b0
              c065 0019  ld   $19
              c066 00a5  ld   $a5
              c067 0094  ld   $94
              c068 00f0  ld   $f0
              c069 0009  ld   $09
              c06a 00a5  ld   $a5
              c06b 0099  ld   $99
              c06c 002a  ld   $2a
              c06d 00a9  ld   $a9
              c06e 00ff  ld   $ff
              c06f 00b0  ld   $b0
              c070 0002  ld   $02
              c071 00a9  ld   $a9
              c072 0001  ld   $01
              c073 0060  ld   $60
              c074 0020  ld   $20
              c075 00a3  ld   $a3
              c076 001c  ld   $1c
              c077 0085  ld   $85
              c078 0095  ld   $95
              c079 00a9  ld   $a9
              c07a 0000  ld   $00
              c07b 0085  ld   $85
              c07c 0096  ld   $96
              c07d 00a2  ld   $a2
              c07e 0088  ld   $88
              c07f 00a5  ld   $a5
              c080 0095  ld   $95
              c081 0049  ld   $49
              c082 00ff  ld   $ff
              c083 002a  ld   $2a
              c084 00a9  ld   $a9
              c085 0000  ld   $00
              c086 0085  ld   $85
              c087 0098  ld   $98
              c088 0085  ld   $85
              c089 0097  ld   $97
              c08a 0086  ld   $86
              c08b 0094  ld   $94
              c08c 0085  ld   $85
              c08d 00a3  ld   $a3
              c08e 0085  ld   $85
              c08f 0099  ld   $99
              c090 004c  ld   $4c
              c091 004a  ld   $4a
              c092 0019  ld   $19
              c093 0046  ld   $46
              c094 0099  ld   $99
              c095 0060  ld   $60
              c096 0085  ld   $85
              c097 0056  ld   $56
              c098 0084  ld   $84
              c099 0057  ld   $57
              c09a 00a0  ld   $a0
              c09b 0000  ld   $00
              c09c 00b1  ld   $b1
              c09d 0056  ld   $56
              c09e 00c8  ld   $c8
              c09f 00aa  ld   $aa
              c0a0 00f0  ld   $f0
              c0a1 00c4  ld   $c4
              c0a2 00b1  ld   $b1
              c0a3 0056  ld   $56
              c0a4 0045  ld   $45
              c0a5 0099  ld   $99
              c0a6 0030  ld   $30
              c0a7 00c2  ld   $c2
              c0a8 00e4  ld   $e4
              c0a9 0094  ld   $94
              c0aa 00d0  ld   $d0
              c0ab 0021  ld   $21
              c0ac 00b1  ld   $b1
              c0ad 0056  ld   $56
              c0ae 0009  ld   $09
              c0af 0080  ld   $80
              c0b0 00c5  ld   $c5
              c0b1 0095  ld   $95
              c0b2 00d0  ld   $d0
              c0b3 0019  ld   $19
              c0b4 00c8  ld   $c8
              c0b5 00b1  ld   $b1
              c0b6 0056  ld   $56
              c0b7 00c5  ld   $c5
              c0b8 0096  ld   $96
              c0b9 00d0  ld   $d0
              c0ba 0012  ld   $12
              c0bb 00c8  ld   $c8
              c0bc 00b1  ld   $b1
              c0bd 0056  ld   $56
              c0be 00c5  ld   $c5
              c0bf 0097  ld   $97
              c0c0 00d0  ld   $d0
              c0c1 000b  ld   $0b
              c0c2 00c8  ld   $c8
              c0c3 001d  ld   $1d
              c0c4 0000  ld   $00
              c0c5 0000  ld   $00
              c0c6 00a9  ld   $a9
              c0c7 007f  ld   $7f
              c0c8 00c5  ld   $c5
              c0c9 00a3  ld   $a3
              c0ca 00b1  ld   $b1
              c0cb 0056  ld   $56
              c0cc 00e5  ld   $e5
              c0cd 0098  ld   $98
              c0ce 00f0  ld   $f0
              c0cf 0028  ld   $28
              c0d0 00a5  ld   $a5
              c0d1 0099  ld   $99
              c0d2 0090  ld   $90
              c0d3 0002  ld   $02
              c0d4 0049  ld   $49
              c0d5 00ff  ld   $ff
              c0d6 004c  ld   $4c
              c0d7 00a9  ld   $a9
              c0d8 001c  ld   $1c
              c0d9 00a5  ld   $a5
              c0da 0094  ld   $94
              c0db 00f0  ld   $f0
              c0dc 004a  ld   $4a
              c0dd 0038  ld   $38
              c0de 00e9  ld   $e9
              c0df 00a0  ld   $a0
              c0e0 0024  ld   $24
              c0e1 0099  ld   $99
              c0e2 0010  ld   $10
              c0e3 0009  ld   $09
              c0e4 00aa  ld   $aa
              c0e5 00a9  ld   $a9
              c0e6 00ff  ld   $ff
              c0e7 0085  ld   $85
              c0e8 009b  ld   $9b
              c0e9 0020  ld   $20
              c0ea 00c5  ld   $c5
              c0eb 0019  ld   $19
              c0ec 008a  ld   $8a
              c0ed 00a2  ld   $a2
              c0ee 0094  ld   $94
              c0ef 00c9  ld   $c9
              c0f0 00f9  ld   $f9
              c0f1 0010  ld   $10
              c0f2 0006  ld   $06
              c0f3 0020  ld   $20
              c0f4 0011  ld   $11
              c0f5 001a  ld   $1a
              c0f6 0084  ld   $84
              c0f7 009b  ld   $9b
              c0f8 0060  ld   $60
              c0f9 00a8  ld   $a8
              c0fa 00a5  ld   $a5
              c0fb fe00  bra  ac          ;+-----------------------------------+
              c0fc fcfd  bra  $c0fd       ;|                                   |
              c0fd 1418  ld   $18,y       ;| Trampoline for page $c000 lookups |
              c0fe e006  jmp  y,$06       ;|                                   |
              c0ff c218  st   [$18]       ;+-----------------------------------+
              c100 0099  ld   $99
              c101 0029  ld   $29
              c102 0080  ld   $80
              c103 0046  ld   $46
              c104 0095  ld   $95
              c105 0005  ld   $05
              c106 0095  ld   $95
              c107 0085  ld   $85
              c108 0095  ld   $95
              c109 0020  ld   $20
              c10a 0028  ld   $28
              c10b 001a  ld   $1a
              c10c 0084  ld   $84
              c10d 009b  ld   $9b
              c10e 0060  ld   $60
              c10f 00a5  ld   $a5
              c110 0094  ld   $94
              c111 00c9  ld   $c9
              c112 00a0  ld   $a0
              c113 00b0  ld   $b0
              c114 0020  ld   $20
              c115 0020  ld   $20
              c116 0013  ld   $13
              c117 001d  ld   $1d
              c118 0084  ld   $84
              c119 00a3  ld   $a3
              c11a 00a5  ld   $a5
              c11b 0099  ld   $99
              c11c 0084  ld   $84
              c11d 0099  ld   $99
              c11e 0049  ld   $49
              c11f 0080  ld   $80
              c120 002a  ld   $2a
              c121 00a9  ld   $a9
              c122 00a0  ld   $a0
              c123 0085  ld   $85
              c124 0094  ld   $94
              c125 00a5  ld   $a5
              c126 0098  ld   $98
              c127 0085  ld   $85
              c128 003b  ld   $3b
              c129 004c  ld   $4c
              c12a 004a  ld   $4a
              c12b 0019  ld   $19
              c12c 0085  ld   $85
              c12d 0095  ld   $95
              c12e 0085  ld   $85
              c12f 0096  ld   $96
              c130 0085  ld   $85
              c131 0097  ld   $97
              c132 0085  ld   $85
              c133 0098  ld   $98
              c134 00a8  ld   $a8
              c135 0060  ld   $60
              c136 00a0  ld   $a0
              c137 0000  ld   $00
              c138 00a2  ld   $a2
              c139 000a  ld   $0a
              c13a 0094  ld   $94
              c13b 0090  ld   $90
              c13c 00ca  ld   $ca
              c13d 0010  ld   $10
              c13e 00fb  ld   $fb
              c13f 0090  ld   $90
              c140 000f  ld   $0f
              c141 00c9  ld   $c9
              c142 002d  ld   $2d
              c143 00d0  ld   $d0
              c144 0004  ld   $04
              c145 0086  ld   $86
              c146 009a  ld   $9a
              c147 00f0  ld   $f0
              c148 0004  ld   $04
              c149 00c9  ld   $c9
              c14a 002b  ld   $2b
              c14b 00d0  ld   $d0
              c14c 0005  ld   $05
              c14d 0020  ld   $20
              c14e 006b  ld   $6b
              c14f 0022  ld   $22
              c150 0090  ld   $90
              c151 005b  ld   $5b
              c152 00c9  ld   $c9
              c153 002e  ld   $2e
              c154 00f0  ld   $f0
              c155 002e  ld   $2e
              c156 00c9  ld   $c9
              c157 0045  ld   $45
              c158 00d0  ld   $d0
              c159 0030  ld   $30
              c15a 0020  ld   $20
              c15b 006b  ld   $6b
              c15c 0022  ld   $22
              c15d 0090  ld   $90
              c15e 0017  ld   $17
              c15f 00c9  ld   $c9
              c160 00a5  ld   $a5
              c161 00f0  ld   $f0
              c162 000e  ld   $0e
              c163 00c9  ld   $c9
              c164 002d  ld   $2d
              c165 00f0  ld   $f0
              c166 000a  ld   $0a
              c167 00c9  ld   $c9
              c168 00a4  ld   $a4
              c169 00f0  ld   $f0
              c16a 0008  ld   $08
              c16b 00c9  ld   $c9
              c16c 002b  ld   $2b
              c16d 00f0  ld   $f0
              c16e 0004  ld   $04
              c16f 00d0  ld   $d0
              c170 0007  ld   $07
              c171 0066  ld   $66
              c172 0093  ld   $93
              c173 0020  ld   $20
              c174 006b  ld   $6b
              c175 0022  ld   $22
              c176 0090  ld   $90
              c177 005c  ld   $5c
              c178 0024  ld   $24
              c179 0093  ld   $93
              c17a 0010  ld   $10
              c17b 000e  ld   $0e
              c17c 00a9  ld   $a9
              c17d 0000  ld   $00
              c17e 0038  ld   $38
              c17f 00e5  ld   $e5
              c180 0091  ld   $91
              c181 004c  ld   $4c
              c182 00c1  ld   $c1
              c183 001d  ld   $1d
              c184 0066  ld   $66
              c185 0092  ld   $92
              c186 0024  ld   $24
              c187 0092  ld   $92
              c188 0050  ld   $50
              c189 00c3  ld   $c3
              c18a 00a5  ld   $a5
              c18b 0091  ld   $91
              c18c 0038  ld   $38
              c18d 00e5  ld   $e5
              c18e 0090  ld   $90
              c18f 0085  ld   $85
              c190 0091  ld   $91
              c191 00f0  ld   $f0
              c192 0012  ld   $12
              c193 0010  ld   $10
              c194 0009  ld   $09
              c195 0020  ld   $20
              c196 0076  ld   $76
              c197 001b  ld   $1b
              c198 00e6  ld   $e6
              c199 0091  ld   $91
              c19a 00d0  ld   $d0
              c19b 00f9  ld   $f9
              c19c 00f0  ld   $f0
              c19d 0007  ld   $07
              c19e 0020  ld   $20
              c19f 005a  ld   $5a
              c1a0 001b  ld   $1b
              c1a1 00c6  ld   $c6
              c1a2 0091  ld   $91
              c1a3 00d0  ld   $d0
              c1a4 00f9  ld   $f9
              c1a5 00a5  ld   $a5
              c1a6 009a  ld   $9a
              c1a7 0030  ld   $30
              c1a8 0001  ld   $01
              c1a9 0060  ld   $60
              c1aa 004c  ld   $4c
              c1ab 000d  ld   $0d
              c1ac 0020  ld   $20
              c1ad 0048  ld   $48
              c1ae 0024  ld   $24
              c1af 0092  ld   $92
              c1b0 0010  ld   $10
              c1b1 0002  ld   $02
              c1b2 00e6  ld   $e6
              c1b3 0090  ld   $90
              c1b4 0020  ld   $20
              c1b5 005a  ld   $5a
              c1b6 001b  ld   $1b
              c1b7 0068  ld   $68
              c1b8 0038  ld   $38
              c1b9 00e9  ld   $e9
              c1ba 0030  ld   $30
              c1bb 0020  ld   $20
              c1bc 00f6  ld   $f6
              c1bd 001d  ld   $1d
              c1be 004c  ld   $4c
              c1bf 0082  ld   $82
              c1c0 001d  ld   $1d
              c1c1 0048  ld   $48
              c1c2 0020  ld   $20
              c1c3 0084  ld   $84
              c1c4 001c  ld   $1c
              c1c5 0068  ld   $68
              c1c6 0020  ld   $20
              c1c7 00b4  ld   $b4
              c1c8 001c  ld   $1c
              c1c9 00a5  ld   $a5
              c1ca 00a1  ld   $a1
              c1cb 001e  ld   $1e
              c1cc 0000  ld   $00
              c1cd 0000  ld   $00
              c1ce 0045  ld   $45
              c1cf 0099  ld   $99
              c1d0 0085  ld   $85
              c1d1 00a2  ld   $a2
              c1d2 00a6  ld   $a6
              c1d3 0094  ld   $94
              c1d4 004c  ld   $4c
              c1d5 00e2  ld   $e2
              c1d6 0018  ld   $18
              c1d7 00a5  ld   $a5
              c1d8 0091  ld   $91
              c1d9 00c9  ld   $c9
              c1da 000a  ld   $0a
              c1db 0090  ld   $90
              c1dc 0009  ld   $09
              c1dd 00a9  ld   $a9
              c1de 0064  ld   $64
              c1df 0024  ld   $24
              c1e0 0093  ld   $93
              c1e1 0030  ld   $30
              c1e2 0011  ld   $11
              c1e3 004c  ld   $4c
              c1e4 00f6  ld   $f6
              c1e5 0019  ld   $19
              c1e6 000a  ld   $0a
              c1e7 000a  ld   $0a
              c1e8 0018  ld   $18
              c1e9 0065  ld   $65
              c1ea 0091  ld   $91
              c1eb 000a  ld   $0a
              c1ec 0018  ld   $18
              c1ed 00a0  ld   $a0
              c1ee 0000  ld   $00
              c1ef 0071  ld   $71
              c1f0 00a6  ld   $a6
              c1f1 0038  ld   $38
              c1f2 00e9  ld   $e9
              c1f3 0030  ld   $30
              c1f4 0085  ld   $85
              c1f5 0091  ld   $91
              c1f6 004c  ld   $4c
              c1f7 00a8  ld   $a8
              c1f8 001d  ld   $1d
              c1f9 009b  ld   $9b
              c1fa 003e  ld   $3e
              c1fb fe00  bra  ac          ;+-----------------------------------+
              c1fc fcfd  bra  $c1fd       ;|                                   |
              c1fd 1418  ld   $18,y       ;| Trampoline for page $c100 lookups |
              c1fe e006  jmp  y,$06       ;|                                   |
              c1ff c218  st   [$18]       ;+-----------------------------------+
              c200 00bc  ld   $bc
              c201 001f  ld   $1f
              c202 00fd  ld   $fd
              c203 009e  ld   $9e
              c204 006e  ld   $6e
              c205 006b  ld   $6b
              c206 0027  ld   $27
              c207 00fd  ld   $fd
              c208 009e  ld   $9e
              c209 006e  ld   $6e
              c20a 006b  ld   $6b
              c20b 0028  ld   $28
              c20c 0000  ld   $00
              c20d 00a9  ld   $a9
              c20e 008a  ld   $8a
              c20f 00a0  ld   $a0
              c210 0004  ld   $04
              c211 0020  ld   $20
              c212 0052  ld   $52
              c213 001e  ld   $1e
              c214 00a5  ld   $a5
              c215 006c  ld   $6c
              c216 00a6  ld   $a6
              c217 006b  ld   $6b
              c218 0085  ld   $85
              c219 0095  ld   $95
              c21a 0086  ld   $86
              c21b 0096  ld   $96
              c21c 00a2  ld   $a2
              c21d 0090  ld   $90
              c21e 0038  ld   $38
              c21f 0020  ld   $20
              c220 00c1  ld   $c1
              c221 001c  ld   $1c
              c222 0020  ld   $20
              c223 0055  ld   $55
              c224 001e  ld   $1e
              c225 004c  ld   $4c
              c226 00ef  ld   $ef
              c227 000b  ld   $0b
              c228 00a0  ld   $a0
              c229 0001  ld   $01
              c22a 00a9  ld   $a9
              c22b 0020  ld   $20
              c22c 0024  ld   $24
              c22d 0099  ld   $99
              c22e 0010  ld   $10
              c22f 0002  ld   $02
              c230 00a9  ld   $a9
              c231 002d  ld   $2d
              c232 0099  ld   $99
              c233 0004  ld   $04
              c234 0002  ld   $02
              c235 0085  ld   $85
              c236 0099  ld   $99
              c237 0084  ld   $84
              c238 00a4  ld   $a4
              c239 00c8  ld   $c8
              c23a 00a9  ld   $a9
              c23b 0030  ld   $30
              c23c 00a6  ld   $a6
              c23d 0094  ld   $94
              c23e 00d0  ld   $d0
              c23f 0003  ld   $03
              c240 004c  ld   $4c
              c241 007c  ld   $7c
              c242 001f  ld   $1f
              c243 00a9  ld   $a9
              c244 0000  ld   $00
              c245 00e0  ld   $e0
              c246 0080  ld   $80
              c247 00f0  ld   $f0
              c248 0002  ld   $02
              c249 00b0  ld   $b0
              c24a 0009  ld   $09
              c24b 00a9  ld   $a9
              c24c 0035  ld   $35
              c24d 00a0  ld   $a0
              c24e 001e  ld   $1e
              c24f 0020  ld   $20
              c250 00a0  ld   $a0
              c251 001a  ld   $1a
              c252 00a9  ld   $a9
              c253 00f7  ld   $f7
              c254 0085  ld   $85
              c255 0090  ld   $90
              c256 00a9  ld   $a9
              c257 0030  ld   $30
              c258 00a0  ld   $a0
              c259 001e  ld   $1e
              c25a 0020  ld   $20
              c25b 00d3  ld   $d3
              c25c 001c  ld   $1c
              c25d 00f0  ld   $f0
              c25e 001e  ld   $1e
              c25f 0010  ld   $10
              c260 0012  ld   $12
              c261 00a9  ld   $a9
              c262 002b  ld   $2b
              c263 00a0  ld   $a0
              c264 001e  ld   $1e
              c265 0020  ld   $20
              c266 00d3  ld   $d3
              c267 001c  ld   $1c
              c268 00f0  ld   $f0
              c269 0002  ld   $02
              c26a 0010  ld   $10
              c26b 000e  ld   $0e
              c26c 0020  ld   $20
              c26d 005a  ld   $5a
              c26e 001b  ld   $1b
              c26f 00c6  ld   $c6
              c270 0090  ld   $90
              c271 00d0  ld   $d0
              c272 00ee  ld   $ee
              c273 0020  ld   $20
              c274 0076  ld   $76
              c275 001b  ld   $1b
              c276 00e6  ld   $e6
              c277 0090  ld   $90
              c278 00d0  ld   $d0
              c279 00dc  ld   $dc
              c27a 0020  ld   $20
              c27b 008e  ld   $8e
              c27c 0018  ld   $18
              c27d 0020  ld   $20
              c27e 0013  ld   $13
              c27f 001d  ld   $1d
              c280 00a2  ld   $a2
              c281 0001  ld   $01
              c282 00a5  ld   $a5
              c283 0090  ld   $90
              c284 0018  ld   $18
              c285 0069  ld   $69
              c286 000a  ld   $0a
              c287 0030  ld   $30
              c288 0009  ld   $09
              c289 00c9  ld   $c9
              c28a 000b  ld   $0b
              c28b 00b0  ld   $b0
              c28c 0006  ld   $06
              c28d 0069  ld   $69
              c28e 00ff  ld   $ff
              c28f 00aa  ld   $aa
              c290 00a9  ld   $a9
              c291 0002  ld   $02
              c292 0038  ld   $38
              c293 00e9  ld   $e9
              c294 0002  ld   $02
              c295 0085  ld   $85
              c296 0091  ld   $91
              c297 0086  ld   $86
              c298 0090  ld   $90
              c299 008a  ld   $8a
              c29a 00f0  ld   $f0
              c29b 0002  ld   $02
              c29c 0010  ld   $10
              c29d 0013  ld   $13
              c29e 00a4  ld   $a4
              c29f 00a4  ld   $a4
              c2a0 00a9  ld   $a9
              c2a1 002e  ld   $2e
              c2a2 00c8  ld   $c8
              c2a3 0099  ld   $99
              c2a4 0004  ld   $04
              c2a5 0002  ld   $02
              c2a6 008a  ld   $8a
              c2a7 00f0  ld   $f0
              c2a8 0006  ld   $06
              c2a9 00a9  ld   $a9
              c2aa 0030  ld   $30
              c2ab 00c8  ld   $c8
              c2ac 0099  ld   $99
              c2ad 0004  ld   $04
              c2ae 0002  ld   $02
              c2af 0084  ld   $84
              c2b0 00a4  ld   $a4
              c2b1 00a0  ld   $a0
              c2b2 0000  ld   $00
              c2b3 00a2  ld   $a2
              c2b4 0080  ld   $80
              c2b5 00a5  ld   $a5
              c2b6 0098  ld   $98
              c2b7 0018  ld   $18
              c2b8 0079  ld   $79
              c2b9 0091  ld   $91
              c2ba 001f  ld   $1f
              c2bb 0085  ld   $85
              c2bc 0098  ld   $98
              c2bd 00a5  ld   $a5
              c2be 0097  ld   $97
              c2bf 0079  ld   $79
              c2c0 0090  ld   $90
              c2c1 001f  ld   $1f
              c2c2 0085  ld   $85
              c2c3 0097  ld   $97
              c2c4 00a5  ld   $a5
              c2c5 0096  ld   $96
              c2c6 0079  ld   $79
              c2c7 008f  ld   $8f
              c2c8 001f  ld   $1f
              c2c9 0085  ld   $85
              c2ca 0096  ld   $96
              c2cb 00a5  ld   $a5
              c2cc 0095  ld   $95
              c2cd 0079  ld   $79
              c2ce 008e  ld   $8e
              c2cf 001f  ld   $1f
              c2d0 0085  ld   $85
              c2d1 0095  ld   $95
              c2d2 00e8  ld   $e8
              c2d3 001f  ld   $1f
              c2d4 0000  ld   $00
              c2d5 0000  ld   $00
              c2d6 00b0  ld   $b0
              c2d7 0004  ld   $04
              c2d8 0010  ld   $10
              c2d9 00de  ld   $de
              c2da 0030  ld   $30
              c2db 0002  ld   $02
              c2dc 0030  ld   $30
              c2dd 00da  ld   $da
              c2de 008a  ld   $8a
              c2df 0090  ld   $90
              c2e0 0004  ld   $04
              c2e1 0049  ld   $49
              c2e2 00ff  ld   $ff
              c2e3 0069  ld   $69
              c2e4 000a  ld   $0a
              c2e5 0069  ld   $69
              c2e6 002f  ld   $2f
              c2e7 00c8  ld   $c8
              c2e8 00c8  ld   $c8
              c2e9 00c8  ld   $c8
              c2ea 00c8  ld   $c8
              c2eb 0084  ld   $84
              c2ec 0079  ld   $79
              c2ed 00a4  ld   $a4
              c2ee 00a4  ld   $a4
              c2ef 00c8  ld   $c8
              c2f0 00aa  ld   $aa
              c2f1 0029  ld   $29
              c2f2 007f  ld   $7f
              c2f3 0099  ld   $99
              c2f4 0004  ld   $04
              c2f5 0002  ld   $02
              c2f6 00c6  ld   $c6
              c2f7 0090  ld   $90
              c2f8 00d0  ld   $d0
              c2f9 0006  ld   $06
              c2fa 00a9  ld   $a9
              c2fb fe00  bra  ac          ;+-----------------------------------+
              c2fc fcfd  bra  $c2fd       ;|                                   |
              c2fd 1418  ld   $18,y       ;| Trampoline for page $c200 lookups |
              c2fe e006  jmp  y,$06       ;|                                   |
              c2ff c218  st   [$18]       ;+-----------------------------------+
              c300 002e  ld   $2e
              c301 00c8  ld   $c8
              c302 0099  ld   $99
              c303 0004  ld   $04
              c304 0002  ld   $02
              c305 0084  ld   $84
              c306 00a4  ld   $a4
              c307 00a4  ld   $a4
              c308 0079  ld   $79
              c309 008a  ld   $8a
              c30a 0049  ld   $49
              c30b 00ff  ld   $ff
              c30c 0029  ld   $29
              c30d 0080  ld   $80
              c30e 00aa  ld   $aa
              c30f 00c0  ld   $c0
              c310 0024  ld   $24
              c311 00f0  ld   $f0
              c312 0004  ld   $04
              c313 00c0  ld   $c0
              c314 003c  ld   $3c
              c315 00d0  ld   $d0
              c316 00a6  ld   $a6
              c317 00a4  ld   $a4
              c318 00a4  ld   $a4
              c319 00b9  ld   $b9
              c31a 0004  ld   $04
              c31b 0002  ld   $02
              c31c 0088  ld   $88
              c31d 00c9  ld   $c9
              c31e 0030  ld   $30
              c31f 00f0  ld   $f0
              c320 00f8  ld   $f8
              c321 00c9  ld   $c9
              c322 002e  ld   $2e
              c323 00f0  ld   $f0
              c324 0001  ld   $01
              c325 00c8  ld   $c8
              c326 00a9  ld   $a9
              c327 002b  ld   $2b
              c328 00a6  ld   $a6
              c329 0091  ld   $91
              c32a 00f0  ld   $f0
              c32b 002e  ld   $2e
              c32c 0010  ld   $10
              c32d 0008  ld   $08
              c32e 00a9  ld   $a9
              c32f 0000  ld   $00
              c330 0038  ld   $38
              c331 00e5  ld   $e5
              c332 0091  ld   $91
              c333 00aa  ld   $aa
              c334 00a9  ld   $a9
              c335 002d  ld   $2d
              c336 0099  ld   $99
              c337 0006  ld   $06
              c338 0002  ld   $02
              c339 00a9  ld   $a9
              c33a 0045  ld   $45
              c33b 0099  ld   $99
              c33c 0005  ld   $05
              c33d 0002  ld   $02
              c33e 008a  ld   $8a
              c33f 00a2  ld   $a2
              c340 002f  ld   $2f
              c341 0038  ld   $38
              c342 00e8  ld   $e8
              c343 00e9  ld   $e9
              c344 000a  ld   $0a
              c345 00b0  ld   $b0
              c346 00fb  ld   $fb
              c347 0069  ld   $69
              c348 003a  ld   $3a
              c349 0099  ld   $99
              c34a 0008  ld   $08
              c34b 0002  ld   $02
              c34c 008a  ld   $8a
              c34d 0099  ld   $99
              c34e 0007  ld   $07
              c34f 0002  ld   $02
              c350 00a9  ld   $a9
              c351 0000  ld   $00
              c352 0099  ld   $99
              c353 0009  ld   $09
              c354 0002  ld   $02
              c355 00f0  ld   $f0
              c356 0008  ld   $08
              c357 0099  ld   $99
              c358 0004  ld   $04
              c359 0002  ld   $02
              c35a 00a9  ld   $a9
              c35b 0000  ld   $00
              c35c 0099  ld   $99
              c35d 0005  ld   $05
              c35e 0002  ld   $02
              c35f 00a9  ld   $a9
              c360 0005  ld   $05
              c361 00a0  ld   $a0
              c362 0002  ld   $02
              c363 0060  ld   $60
              c364 0080  ld   $80
              c365 0000  ld   $00
              c366 0000  ld   $00
              c367 0000  ld   $00
              c368 0000  ld   $00
              c369 00fa  ld   $fa
              c36a 000a  ld   $0a
              c36b 001f  ld   $1f
              c36c 0000  ld   $00
              c36d 0000  ld   $00
              c36e 0098  ld   $98
              c36f 0096  ld   $96
              c370 0080  ld   $80
              c371 00ff  ld   $ff
              c372 00f0  ld   $f0
              c373 00bd  ld   $bd
              c374 00c0  ld   $c0
              c375 0000  ld   $00
              c376 0001  ld   $01
              c377 0086  ld   $86
              c378 00a0  ld   $a0
              c379 00ff  ld   $ff
              c37a 00ff  ld   $ff
              c37b 00d8  ld   $d8
              c37c 00f0  ld   $f0
              c37d 0000  ld   $00
              c37e 0000  ld   $00
              c37f 0003  ld   $03
              c380 00e8  ld   $e8
              c381 00ff  ld   $ff
              c382 00ff  ld   $ff
              c383 00ff  ld   $ff
              c384 009c  ld   $9c
              c385 0000  ld   $00
              c386 0000  ld   $00
              c387 0000  ld   $00
              c388 000a  ld   $0a
              c389 00ff  ld   $ff
              c38a 00ff  ld   $ff
              c38b 00ff  ld   $ff
              * 5 times
              c38e 00df  ld   $df
              c38f 000a  ld   $0a
              c390 0080  ld   $80
              c391 0000  ld   $00
              c392 0003  ld   $03
              c393 004b  ld   $4b
              c394 00c0  ld   $c0
              c395 00ff  ld   $ff
              c396 00ff  ld   $ff
              c397 0073  ld   $73
              c398 0060  ld   $60
              c399 0000  ld   $00
              c39a 0000  ld   $00
              c39b 000e  ld   $0e
              c39c 0010  ld   $10
              c39d 00ff  ld   $ff
              c39e 00ff  ld   $ff
              c39f 00fd  ld   $fd
              c3a0 00a8  ld   $a8
              c3a1 0000  ld   $00
              c3a2 0000  ld   $00
              c3a3 0000  ld   $00
              c3a4 003c  ld   $3c
              c3a5 0020  ld   $20
              c3a6 0084  ld   $84
              c3a7 001c  ld   $1c
              c3a8 00a9  ld   $a9
              c3a9 0089  ld   $89
              c3aa 00a0  ld   $a0
              c3ab 001f  ld   $1f
              c3ac 0020  ld   $20
              c3ad 001a  ld   $1a
              c3ae 001c  ld   $1c
              c3af 00f0  ld   $f0
              c3b0 0070  ld   $70
              c3b1 00a5  ld   $a5
              c3b2 009c  ld   $9c
              c3b3 00d0  ld   $d0
              c3b4 0003  ld   $03
              c3b5 004c  ld   $4c
              c3b6 0071  ld   $71
              c3b7 0019  ld   $19
              c3b8 00a2  ld   $a2
              c3b9 0081  ld   $81
              c3ba 00a0  ld   $a0
              c3bb 0000  ld   $00
              c3bc 0020  ld   $20
              c3bd 004c  ld   $4c
              c3be 001c  ld   $1c
              c3bf 00a5  ld   $a5
              c3c0 00a1  ld   $a1
              c3c1 0010  ld   $10
              c3c2 000f  ld   $0f
              c3c3 0020  ld   $20
              c3c4 0044  ld   $44
              c3c5 001d  ld   $1d
              c3c6 00a9  ld   $a9
              c3c7 0081  ld   $81
              c3c8 00a0  ld   $a0
              c3c9 0000  ld   $00
              c3ca 0020  ld   $20
              c3cb 00d3  ld   $d3
              c3cc 001c  ld   $1c
              c3cd 00d0  ld   $d0
              c3ce 0003  ld   $03
              c3cf 0098  ld   $98
              c3d0 00a4  ld   $a4
              c3d1 003b  ld   $3b
              c3d2 0020  ld   $20
              c3d3 0076  ld   $76
              c3d4 001c  ld   $1c
              c3d5 0098  ld   $98
              c3d6 0048  ld   $48
              c3d7 0020  ld   $20
              c3d8 0062  ld   $62
              c3d9 001a  ld   $1a
              c3da 00a9  ld   $a9
              c3db 0020  ld   $20
              c3dc 0000  ld   $00
              c3dd 0000  ld   $00
              c3de 0081  ld   $81
              c3df 00a0  ld   $a0
              c3e0 0000  ld   $00
              c3e1 0020  ld   $20
              c3e2 00a0  ld   $a0
              c3e3 001a  ld   $1a
              c3e4 0020  ld   $20
              c3e5 0046  ld   $46
              c3e6 0020  ld   $20
              c3e7 0068  ld   $68
              c3e8 004a  ld   $4a
              c3e9 0090  ld   $90
              c3ea 000a  ld   $0a
              c3eb 00a5  ld   $a5
              c3ec 0094  ld   $94
              c3ed 00f0  ld   $f0
              c3ee 0006  ld   $06
              c3ef 00a5  ld   $a5
              c3f0 0099  ld   $99
              c3f1 0049  ld   $49
              c3f2 00ff  ld   $ff
              c3f3 0085  ld   $85
              c3f4 0099  ld   $99
              c3f5 0060  ld   $60
              c3f6 0081  ld   $81
              c3f7 0038  ld   $38
              c3f8 00aa  ld   $aa
              c3f9 003b  ld   $3b
              c3fa 0029  ld   $29
              c3fb fe00  bra  ac          ;+-----------------------------------+
              c3fc fcfd  bra  $c3fd       ;|                                   |
              c3fd 1418  ld   $18,y       ;| Trampoline for page $c300 lookups |
              c3fe e006  jmp  y,$06       ;|                                   |
              c3ff c218  st   [$18]       ;+-----------------------------------+
              c400 0007  ld   $07
              c401 0071  ld   $71
              c402 0034  ld   $34
              c403 0058  ld   $58
              c404 003e  ld   $3e
              c405 0056  ld   $56
              c406 0074  ld   $74
              c407 0016  ld   $16
              c408 007e  ld   $7e
              c409 00b3  ld   $b3
              c40a 001b  ld   $1b
              c40b 0077  ld   $77
              c40c 002f  ld   $2f
              c40d 00ee  ld   $ee
              c40e 00e3  ld   $e3
              c40f 0085  ld   $85
              c410 007a  ld   $7a
              c411 001d  ld   $1d
              c412 0084  ld   $84
              c413 001c  ld   $1c
              c414 002a  ld   $2a
              c415 007c  ld   $7c
              c416 0063  ld   $63
              c417 0059  ld   $59
              c418 0058  ld   $58
              c419 000a  ld   $0a
              c41a 007e  ld   $7e
              c41b 0075  ld   $75
              c41c 00fd  ld   $fd
              c41d 00e7  ld   $e7
              c41e 00c6  ld   $c6
              c41f 0080  ld   $80
              c420 0031  ld   $31
              c421 0072  ld   $72
              c422 0018  ld   $18
              c423 0010  ld   $10
              c424 0081  ld   $81
              c425 0000  ld   $00
              c426 0000  ld   $00
              c427 0000  ld   $00
              c428 0000  ld   $00
              c429 00a9  ld   $a9
              c42a 0018  ld   $18
              c42b 00a0  ld   $a0
              c42c 0020  ld   $20
              c42d 0020  ld   $20
              c42e 00a0  ld   $a0
              c42f 001a  ld   $1a
              c430 00a5  ld   $a5
              c431 00a3  ld   $a3
              c432 0069  ld   $69
              c433 0050  ld   $50
              c434 0090  ld   $90
              c435 0003  ld   $03
              c436 0020  ld   $20
              c437 009b  ld   $9b
              c438 001c  ld   $1c
              c439 0085  ld   $85
              c43a 0089  ld   $89
              c43b 0020  ld   $20
              c43c 0087  ld   $87
              c43d 001c  ld   $1c
              c43e 00a5  ld   $a5
              c43f 0094  ld   $94
              c440 00c9  ld   $c9
              c441 0088  ld   $88
              c442 0090  ld   $90
              c443 0003  ld   $03
              c444 0020  ld   $20
              c445 004c  ld   $4c
              c446 001b  ld   $1b
              c447 0020  ld   $20
              c448 0044  ld   $44
              c449 001d  ld   $1d
              c44a 00a5  ld   $a5
              c44b 003b  ld   $3b
              c44c 0018  ld   $18
              c44d 0069  ld   $69
              c44e 0081  ld   $81
              c44f 00f0  ld   $f0
              c450 00f3  ld   $f3
              c451 0038  ld   $38
              c452 00e9  ld   $e9
              c453 0001  ld   $01
              c454 0048  ld   $48
              c455 00a2  ld   $a2
              c456 0005  ld   $05
              c457 00b5  ld   $b5
              c458 009c  ld   $9c
              c459 00b4  ld   $b4
              c45a 0094  ld   $94
              c45b 0095  ld   $95
              c45c 0094  ld   $94
              c45d 0094  ld   $94
              c45e 009c  ld   $9c
              c45f 00ca  ld   $ca
              c460 0010  ld   $10
              c461 00f5  ld   $f5
              c462 00a5  ld   $a5
              c463 0089  ld   $89
              c464 0085  ld   $85
              c465 00a3  ld   $a3
              c466 0020  ld   $20
              c467 0098  ld   $98
              c468 0018  ld   $18
              c469 0020  ld   $20
              c46a 000d  ld   $0d
              c46b 0020  ld   $20
              c46c 00a9  ld   $a9
              c46d 001d  ld   $1d
              c46e 00a0  ld   $a0
              c46f 0020  ld   $20
              c470 0020  ld   $20
              c471 00af  ld   $af
              c472 0020  ld   $20
              c473 00a9  ld   $a9
              c474 0000  ld   $00
              c475 0085  ld   $85
              c476 00a2  ld   $a2
              c477 0068  ld   $68
              c478 0020  ld   $20
              c479 0031  ld   $31
              c47a 001b  ld   $1b
              c47b 0060  ld   $60
              c47c 0085  ld   $85
              c47d 00a4  ld   $a4
              c47e 0084  ld   $84
              c47f 00a5  ld   $a5
              c480 0020  ld   $20
              c481 0042  ld   $42
              c482 001c  ld   $1c
              c483 00a9  ld   $a9
              c484 008a  ld   $8a
              c485 0020  ld   $20
              c486 00a0  ld   $a0
              c487 001a  ld   $1a
              c488 0020  ld   $20
              c489 00b3  ld   $b3
              c48a 0020  ld   $20
              c48b 00a9  ld   $a9
              c48c 008a  ld   $8a
              c48d 00a0  ld   $a0
              c48e 0000  ld   $00
              c48f 004c  ld   $4c
              c490 00a0  ld   $a0
              c491 001a  ld   $1a
              c492 0085  ld   $85
              c493 00a4  ld   $a4
              c494 0084  ld   $84
              c495 00a5  ld   $a5
              c496 0020  ld   $20
              c497 003f  ld   $3f
              c498 001c  ld   $1c
              c499 00b1  ld   $b1
              c49a 00a4  ld   $a4
              c49b 0085  ld   $85
              c49c 009a  ld   $9a
              c49d 00a4  ld   $a4
              c49e 00a4  ld   $a4
              c49f 00c8  ld   $c8
              c4a0 0098  ld   $98
              c4a1 00d0  ld   $d0
              c4a2 0002  ld   $02
              c4a3 00e6  ld   $e6
              c4a4 00a5  ld   $a5
              c4a5 0085  ld   $85
              c4a6 00a4  ld   $a4
              c4a7 00a4  ld   $a4
              c4a8 00a5  ld   $a5
              c4a9 0020  ld   $20
              c4aa 00a0  ld   $a0
              c4ab 001a  ld   $1a
              c4ac 00a5  ld   $a5
              c4ad 00a4  ld   $a4
              c4ae 00a4  ld   $a4
              c4af 00a5  ld   $a5
              c4b0 0018  ld   $18
              c4b1 0069  ld   $69
              c4b2 0005  ld   $05
              c4b3 0090  ld   $90
              c4b4 0001  ld   $01
              c4b5 00c8  ld   $c8
              c4b6 0085  ld   $85
              c4b7 00a4  ld   $a4
              c4b8 0084  ld   $84
              c4b9 00a5  ld   $a5
              c4ba 0020  ld   $20
              c4bb 00df  ld   $df
              c4bc 0018  ld   $18
              c4bd 00a9  ld   $a9
              c4be 008f  ld   $8f
              c4bf 00a0  ld   $a0
              c4c0 0000  ld   $00
              c4c1 00c6  ld   $c6
              c4c2 009a  ld   $9a
              c4c3 00d0  ld   $d0
              c4c4 00e4  ld   $e4
              c4c5 0060  ld   $60
              c4c6 0098  ld   $98
              c4c7 0035  ld   $35
              c4c8 0044  ld   $44
              c4c9 007a  ld   $7a
              c4ca 0068  ld   $68
              c4cb 0028  ld   $28
              c4cc 00b1  ld   $b1
              c4cd 0046  ld   $46
              c4ce 0020  ld   $20
              c4cf 00a3  ld   $a3
              c4d0 001c  ld   $1c
              c4d1 0030  ld   $30
              c4d2 002a  ld   $2a
              c4d3 00d0  ld   $d0
              c4d4 0013  ld   $13
              c4d5 00a5  ld   $a5
              c4d6 0006  ld   $06
              c4d7 0085  ld   $85
              c4d8 0095  ld   $95
              c4d9 00a5  ld   $a5
              c4da 000a  ld   $0a
              c4db 0085  ld   $85
              c4dc 0096  ld   $96
              c4dd 00a5  ld   $a5
              c4de 0007  ld   $07
              c4df 0085  ld   $85
              c4e0 0097  ld   $97
              c4e1 00a5  ld   $a5
              c4e2 000b  ld   $0b
              c4e3 0021  ld   $21
              c4e4 0000  ld   $00
              c4e5 0000  ld   $00
              c4e6 0085  ld   $85
              c4e7 0098  ld   $98
              c4e8 004c  ld   $4c
              c4e9 002a  ld   $2a
              c4ea 0021  ld   $21
              c4eb 00a9  ld   $a9
              c4ec 0088  ld   $88
              c4ed 00a0  ld   $a0
              c4ee 0022  ld   $22
              c4ef 0020  ld   $20
              c4f0 001a  ld   $1a
              c4f1 001c  ld   $1c
              c4f2 00a9  ld   $a9
              c4f3 00e3  ld   $e3
              c4f4 00a0  ld   $a0
              c4f5 0020  ld   $20
              c4f6 0020  ld   $20
              c4f7 00a0  ld   $a0
              c4f8 001a  ld   $1a
              c4f9 00a9  ld   $a9
              c4fa 00e7  ld   $e7
              c4fb fe00  bra  ac          ;+-----------------------------------+
              c4fc fcfd  bra  $c4fd       ;|                                   |
              c4fd 1418  ld   $18,y       ;| Trampoline for page $c400 lookups |
              c4fe e006  jmp  y,$06       ;|                                   |
              c4ff c218  st   [$18]       ;+-----------------------------------+
              c500 00a0  ld   $a0
              c501 0020  ld   $20
              c502 0020  ld   $20
              c503 00df  ld   $df
              c504 0018  ld   $18
              c505 00a6  ld   $a6
              c506 0098  ld   $98
              c507 00a5  ld   $a5
              c508 0095  ld   $95
              c509 0085  ld   $85
              c50a 0098  ld   $98
              c50b 0086  ld   $86
              c50c 0095  ld   $95
              c50d 00a6  ld   $a6
              c50e 0096  ld   $96
              c50f 00a5  ld   $a5
              c510 0097  ld   $97
              c511 0085  ld   $85
              c512 0096  ld   $96
              c513 0086  ld   $86
              c514 0097  ld   $97
              c515 00a9  ld   $a9
              c516 0000  ld   $00
              c517 0085  ld   $85
              c518 0099  ld   $99
              c519 00a5  ld   $a5
              c51a 0094  ld   $94
              c51b 0085  ld   $85
              c51c 00a3  ld   $a3
              c51d 00a9  ld   $a9
              c51e 0080  ld   $80
              c51f 0085  ld   $85
              c520 0094  ld   $94
              c521 0020  ld   $20
              c522 004f  ld   $4f
              c523 0019  ld   $19
              c524 00a2  ld   $a2
              c525 0088  ld   $88
              c526 00a0  ld   $a0
              c527 0022  ld   $22
              c528 004c  ld   $4c
              c529 004c  ld   $4c
              c52a 001c  ld   $1c
              c52b 00a9  ld   $a9
              c52c 00bc  ld   $bc
              c52d 00a0  ld   $a0
              c52e 0021  ld   $21
              c52f 0020  ld   $20
              c530 00df  ld   $df
              c531 0018  ld   $18
              c532 0020  ld   $20
              c533 0084  ld   $84
              c534 001c  ld   $1c
              c535 00a9  ld   $a9
              c536 00c1  ld   $c1
              c537 00a0  ld   $a0
              c538 0021  ld   $21
              c539 00a6  ld   $a6
              c53a 00a1  ld   $a1
              c53b 0020  ld   $20
              c53c 007f  ld   $7f
              c53d 001b  ld   $1b
              c53e 0020  ld   $20
              c53f 0084  ld   $84
              c540 001c  ld   $1c
              c541 0020  ld   $20
              c542 0044  ld   $44
              c543 001d  ld   $1d
              c544 00a9  ld   $a9
              c545 0000  ld   $00
              c546 0085  ld   $85
              c547 00a2  ld   $a2
              c548 0020  ld   $20
              c549 0098  ld   $98
              c54a 0018  ld   $18
              c54b 00a9  ld   $a9
              c54c 00c6  ld   $c6
              c54d 00a0  ld   $a0
              c54e 0021  ld   $21
              c54f 0020  ld   $20
              c550 0095  ld   $95
              c551 0018  ld   $18
              c552 00a5  ld   $a5
              c553 0099  ld   $99
              c554 0048  ld   $48
              c555 0010  ld   $10
              c556 000d  ld   $0d
              c557 0020  ld   $20
              c558 008e  ld   $8e
              c559 0018  ld   $18
              c55a 00a5  ld   $a5
              c55b 0099  ld   $99
              c55c 0030  ld   $30
              c55d 0009  ld   $09
              c55e 00a5  ld   $a5
              c55f 0044  ld   $44
              c560 0049  ld   $49
              c561 00ff  ld   $ff
              c562 0085  ld   $85
              c563 0044  ld   $44
              c564 0020  ld   $20
              c565 000d  ld   $0d
              c566 0020  ld   $20
              c567 00a9  ld   $a9
              c568 00c6  ld   $c6
              c569 00a0  ld   $a0
              c56a 0021  ld   $21
              c56b 0020  ld   $20
              c56c 00df  ld   $df
              c56d 0018  ld   $18
              c56e 0068  ld   $68
              c56f 0010  ld   $10
              c570 0003  ld   $03
              c571 0020  ld   $20
              c572 000d  ld   $0d
              c573 0020  ld   $20
              c574 00a9  ld   $a9
              c575 00cb  ld   $cb
              c576 00a0  ld   $a0
              c577 0021  ld   $21
              c578 004c  ld   $4c
              c579 0099  ld   $99
              c57a 0020  ld   $20
              c57b 0020  ld   $20
              c57c 0042  ld   $42
              c57d 001c  ld   $1c
              c57e 00a9  ld   $a9
              c57f 0000  ld   $00
              c580 0085  ld   $85
              c581 0044  ld   $44
              c582 0020  ld   $20
              c583 0047  ld   $47
              c584 0021  ld   $21
              c585 00a2  ld   $a2
              c586 0081  ld   $81
              c587 00a0  ld   $a0
              c588 0000  ld   $00
              c589 0020  ld   $20
              c58a 003d  ld   $3d
              c58b 0021  ld   $21
              c58c 00a9  ld   $a9
              c58d 008a  ld   $8a
              c58e 00a0  ld   $a0
              c58f 0000  ld   $00
              c590 0020  ld   $20
              c591 001a  ld   $1a
              c592 001c  ld   $1c
              c593 00a9  ld   $a9
              c594 0000  ld   $00
              c595 0085  ld   $85
              c596 0099  ld   $99
              c597 00a5  ld   $a5
              c598 0044  ld   $44
              c599 0020  ld   $20
              c59a 00b8  ld   $b8
              c59b 0021  ld   $21
              c59c 00a9  ld   $a9
              c59d 0081  ld   $81
              c59e 00a0  ld   $a0
              c59f 0000  ld   $00
              c5a0 004c  ld   $4c
              c5a1 0087  ld   $87
              c5a2 001b  ld   $1b
              c5a3 0048  ld   $48
              c5a4 004c  ld   $4c
              c5a5 0079  ld   $79
              c5a6 0021  ld   $21
              c5a7 0081  ld   $81
              c5a8 0049  ld   $49
              c5a9 000f  ld   $0f
              c5aa 00da  ld   $da
              c5ab 00a2  ld   $a2
              c5ac 0083  ld   $83
              c5ad 0049  ld   $49
              c5ae 000f  ld   $0f
              c5af 00da  ld   $da
              c5b0 00a2  ld   $a2
              c5b1 007f  ld   $7f
              c5b2 0000  ld   $00
              c5b3 0000  ld   $00
              c5b4 0000  ld   $00
              c5b5 0000  ld   $00
              c5b6 0005  ld   $05
              c5b7 0084  ld   $84
              c5b8 00e6  ld   $e6
              c5b9 001a  ld   $1a
              c5ba 002d  ld   $2d
              c5bb 001b  ld   $1b
              c5bc 0086  ld   $86
              c5bd 0028  ld   $28
              c5be 0007  ld   $07
              c5bf 00fb  ld   $fb
              c5c0 00f8  ld   $f8
              c5c1 0087  ld   $87
              c5c2 0099  ld   $99
              c5c3 0068  ld   $68
              c5c4 0089  ld   $89
              c5c5 0001  ld   $01
              c5c6 0087  ld   $87
              c5c7 0023  ld   $23
              c5c8 0035  ld   $35
              c5c9 00df  ld   $df
              c5ca 00e1  ld   $e1
              c5cb 0086  ld   $86
              c5cc 00a5  ld   $a5
              c5cd 005d  ld   $5d
              c5ce 00e7  ld   $e7
              c5cf 0028  ld   $28
              c5d0 0083  ld   $83
              c5d1 0049  ld   $49
              c5d2 000f  ld   $0f
              c5d3 00da  ld   $da
              c5d4 00a2  ld   $a2
              c5d5 00a1  ld   $a1
              c5d6 0054  ld   $54
              c5d7 0046  ld   $46
              c5d8 008f  ld   $8f
              c5d9 0013  ld   $13
              c5da 008f  ld   $8f
              c5db 0052  ld   $52
              c5dc 0043  ld   $43
              c5dd 0089  ld   $89
              c5de 00cd  ld   $cd
              c5df 00e1  ld   $e1
              c5e0 004e  ld   $4e
              c5e1 008f  ld   $8f
              c5e2 0092  ld   $92
              c5e3 0014  ld   $14
              c5e4 00ad  ld   $ad
              c5e5 0081  ld   $81
              c5e6 0047  ld   $47
              c5e7 0089  ld   $89
              c5e8 00c7  ld   $c7
              c5e9 00a5  ld   $a5
              c5ea 0099  ld   $99
              c5eb 0022  ld   $22
              c5ec 0000  ld   $00
              c5ed 0000  ld   $00
              c5ee 0048  ld   $48
              c5ef 0010  ld   $10
              c5f0 0003  ld   $03
              c5f1 0020  ld   $20
              c5f2 000d  ld   $0d
              c5f3 0020  ld   $20
              c5f4 00a5  ld   $a5
              c5f5 0094  ld   $94
              c5f6 0048  ld   $48
              c5f7 00c9  ld   $c9
              c5f8 0081  ld   $81
              c5f9 0090  ld   $90
              c5fa 0007  ld   $07
              c5fb fe00  bra  ac          ;+-----------------------------------+
              c5fc fcfd  bra  $c5fd       ;|                                   |
              c5fd 1418  ld   $18,y       ;| Trampoline for page $c500 lookups |
              c5fe e006  jmp  y,$06       ;|                                   |
              c5ff c218  st   [$18]       ;+-----------------------------------+
              c600 00a9  ld   $a9
              c601 0034  ld   $34
              c602 00a0  ld   $a0
              c603 001a  ld   $1a
              c604 0020  ld   $20
              c605 0087  ld   $87
              c606 001b  ld   $1b
              c607 00a9  ld   $a9
              c608 002e  ld   $2e
              c609 00a0  ld   $a0
              c60a 0022  ld   $22
              c60b 0020  ld   $20
              c60c 0099  ld   $99
              c60d 0020  ld   $20
              c60e 0068  ld   $68
              c60f 00c9  ld   $c9
              c610 0081  ld   $81
              c611 0090  ld   $90
              c612 0007  ld   $07
              c613 00a9  ld   $a9
              c614 00bc  ld   $bc
              c615 00a0  ld   $a0
              c616 0021  ld   $21
              c617 0020  ld   $20
              c618 0095  ld   $95
              c619 0018  ld   $18
              c61a 0068  ld   $68
              c61b 0010  ld   $10
              c61c 0003  ld   $03
              c61d 004c  ld   $4c
              c61e 000d  ld   $0d
              c61f 0020  ld   $20
              c620 0060  ld   $60
              c621 000b  ld   $0b
              c622 0076  ld   $76
              c623 00b3  ld   $b3
              c624 0083  ld   $83
              c625 00bd  ld   $bd
              c626 00d3  ld   $d3
              c627 0079  ld   $79
              c628 001e  ld   $1e
              c629 00f4  ld   $f4
              c62a 00a6  ld   $a6
              c62b 00f5  ld   $f5
              c62c 007b  ld   $7b
              c62d 0083  ld   $83
              c62e 00fc  ld   $fc
              c62f 00b0  ld   $b0
              c630 0010  ld   $10
              c631 007c  ld   $7c
              c632 000c  ld   $0c
              c633 001f  ld   $1f
              c634 0067  ld   $67
              c635 00ca  ld   $ca
              c636 007c  ld   $7c
              c637 00de  ld   $de
              c638 0053  ld   $53
              c639 00cb  ld   $cb
              c63a 00c1  ld   $c1
              c63b 007d  ld   $7d
              c63c 0014  ld   $14
              c63d 0064  ld   $64
              c63e 0070  ld   $70
              c63f 004c  ld   $4c
              c640 007d  ld   $7d
              c641 00b7  ld   $b7
              c642 00ea  ld   $ea
              c643 0051  ld   $51
              c644 007a  ld   $7a
              c645 007d  ld   $7d
              c646 0063  ld   $63
              c647 0030  ld   $30
              c648 0088  ld   $88
              c649 007e  ld   $7e
              c64a 007e  ld   $7e
              c64b 0092  ld   $92
              c64c 0044  ld   $44
              c64d 0099  ld   $99
              c64e 003a  ld   $3a
              c64f 007e  ld   $7e
              c650 004c  ld   $4c
              c651 00cc  ld   $cc
              c652 0091  ld   $91
              c653 00c7  ld   $c7
              c654 007f  ld   $7f
              c655 00aa  ld   $aa
              c656 00aa  ld   $aa
              c657 00aa  ld   $aa
              c658 0013  ld   $13
              c659 0081  ld   $81
              c65a 0000  ld   $00
              c65b 0000  ld   $00
              c65c 0000  ld   $00
              c65d 0000  ld   $00
              c65e 00e6  ld   $e6
              c65f 00a6  ld   $a6
              c660 00d0  ld   $d0
              c661 0002  ld   $02
              c662 00e6  ld   $e6
              c663 00a7  ld   $a7
              c664 0084  ld   $84
              c665 0019  ld   $19
              c666 00a0  ld   $a0
              c667 0000  ld   $00
              c668 00b1  ld   $b1
              c669 00a6  ld   $a6
              c66a 00a4  ld   $a4
              c66b 0019  ld   $19
              c66c 00c9  ld   $c9
              c66d 003a  ld   $3a
              c66e 00b0  ld   $b0
              c66f 000a  ld   $0a
              c670 00c9  ld   $c9
              c671 0020  ld   $20
              c672 00f0  ld   $f0
              c673 00ea  ld   $ea
              c674 0038  ld   $38
              c675 00e9  ld   $e9
              c676 0030  ld   $30
              c677 0038  ld   $38
              c678 00e9  ld   $e9
              c679 00d0  ld   $d0
              c67a 0060  ld   $60
              c67b 0080  ld   $80
              c67c 004f  ld   $4f
              c67d 00c7  ld   $c7
              c67e 0052  ld   $52
              c67f 0058  ld   $58
              c680 00a2  ld   $a2
              c681 00fb  ld   $fb
              c682 009a  ld   $9a
              c683 00a9  ld   $a9
              c684 004c  ld   $4c
              c685 0085  ld   $85
              c686 0087  ld   $87
              c687 0085  ld   $85
              c688 0038  ld   $38
              c689 00a9  ld   $a9
              c68a 0082  ld   $82
              c68b 00a0  ld   $a0
              c68c 0012  ld   $12
              c68d 0085  ld   $85
              c68e 0039  ld   $39
              c68f 0084  ld   $84
              c690 003a  ld   $3a
              c691 00a9  ld   $a9
              c692 0028  ld   $28
              c693 0085  ld   $85
              c694 0019  ld   $19
              c695 00a9  ld   $a9
              c696 001e  ld   $1e
              c697 0085  ld   $85
              c698 0019  ld   $19
              c699 00a2  ld   $a2
              c69a 0000  ld   $00
              c69b 00a9  ld   $a9
              c69c 0003  ld   $03
              c69d 0085  ld   $85
              c69e 0086  ld   $86
              c69f 008a  ld   $8a
              c6a0 0085  ld   $85
              c6a1 009b  ld   $9b
              c6a2 0085  ld   $85
              c6a3 0019  ld   $19
              c6a4 0085  ld   $85
              c6a5 004a  ld   $4a
              c6a6 0048  ld   $48
              c6a7 0085  ld   $85
              c6a8 0045  ld   $45
              c6a9 00e8  ld   $e8
              c6aa 008e  ld   $8e
              c6ab 0002  ld   $02
              c6ac 0024  ld   $24
              c6ad 008e  ld   $8e
              c6ae 0001  ld   $01
              c6af 0024  ld   $24
              c6b0 00a2  ld   $a2
              c6b1 004b  ld   $4b
              c6b2 0086  ld   $86
              c6b3 0048  ld   $48
              c6b4 00a0  ld   $a0
              c6b5 0071  ld   $71
              c6b6 0085  ld   $85
              c6b7 005d  ld   $5d
              c6b8 0084  ld   $84
              c6b9 005e  ld   $5e
              c6ba 0085  ld   $85
              c6bb 0046  ld   $46
              c6bc 0084  ld   $84
              c6bd 0047  ld   $47
              c6be 00a8  ld   $a8
              c6bf 00e6  ld   $e6
              c6c0 0046  ld   $46
              c6c1 00d0  ld   $d0
              c6c2 0004  ld   $04
              c6c3 00e6  ld   $e6
              c6c4 0047  ld   $47
              c6c5 0030  ld   $30
              c6c6 000f  ld   $0f
              c6c7 00a9  ld   $a9
              c6c8 0055  ld   $55
              c6c9 0091  ld   $91
              c6ca 0046  ld   $46
              c6cb 00d1  ld   $d1
              c6cc 0046  ld   $46
              c6cd 00d0  ld   $d0
              c6ce 0007  ld   $07
              c6cf 000a  ld   $0a
              c6d0 0091  ld   $91
              c6d1 0046  ld   $46
              c6d2 00d1  ld   $d1
              c6d3 0046  ld   $46
              c6d4 00f0  ld   $f0
              c6d5 00e9  ld   $e9
              c6d6 00a5  ld   $a5
              c6d7 0001  ld   $01
              c6d8 00c9  ld   $c9
              c6d9 0001  ld   $01
              c6da 00e9  ld   $e9
              c6db 0000  ld   $00
              c6dc 0085  ld   $85
              c6dd 0047  ld   $47
              c6de 00a5  ld   $a5
              c6df 0046  ld   $46
              c6e0 00a4  ld   $a4
              c6e1 0047  ld   $47
              c6e2 0085  ld   $85
              c6e3 0069  ld   $69
              c6e4 0084  ld   $84
              c6e5 006a  ld   $6a
              c6e6 0085  ld   $85
              c6e7 0065  ld   $65
              c6e8 0084  ld   $84
              c6e9 0066  ld   $66
              c6ea 00a2  ld   $a2
              c6eb 0000  ld   $00
              c6ec 00a0  ld   $a0
              c6ed 0071  ld   $71
              c6ee 0086  ld   $86
              c6ef 005d  ld   $5d
              c6f0 0084  ld   $84
              c6f1 005e  ld   $5e
              c6f2 00a0  ld   $a0
              c6f3 0023  ld   $23
              c6f4 0000  ld   $00
              c6f5 004e  ld   $4e
              c6f6 0000  ld   $00
              c6f7 0098  ld   $98
              c6f8 0091  ld   $91
              c6f9 005d  ld   $5d
              c6fa 00e6  ld   $e6
              c6fb fe00  bra  ac          ;+-----------------------------------+
              c6fc fcfd  bra  $c6fd       ;|                                   |
              c6fd 1418  ld   $18,y       ;| Trampoline for page $c600 lookups |
              c6fe e006  jmp  y,$06       ;|                                   |
              c6ff c218  st   [$18]       ;+-----------------------------------+
              c700 005d  ld   $5d
              c701 00a5  ld   $a5
              c702 005d  ld   $5d
              c703 00a4  ld   $a4
              c704 005e  ld   $5e
              c705 0020  ld   $20
              c706 001b  ld   $1b
              c707 0005  ld   $05
              c708 00a9  ld   $a9
              c709 003b  ld   $3b
              c70a 00a0  ld   $a0
              c70b 0023  ld   $23
              c70c 0020  ld   $20
              c70d 00ef  ld   $ef
              c70e 000b  ld   $0b
              c70f 00a5  ld   $a5
              c710 0069  ld   $69
              c711 0038  ld   $38
              c712 00e5  ld   $e5
              c713 005d  ld   $5d
              c714 00aa  ld   $aa
              c715 00a5  ld   $a5
              c716 006a  ld   $6a
              c717 00e5  ld   $e5
              c718 005e  ld   $5e
              c719 0020  ld   $20
              c71a 0045  ld   $45
              c71b 001e  ld   $1e
              c71c 00a9  ld   $a9
              c71d 002e  ld   $2e
              c71e 00a0  ld   $a0
              c71f 0023  ld   $23
              c720 0020  ld   $20
              c721 00ef  ld   $ef
              c722 000b  ld   $0b
              c723 0020  ld   $20
              c724 0044  ld   $44
              c725 0007  ld   $07
              c726 004c  ld   $4c
              c727 0071  ld   $71
              c728 0005  ld   $05
              c729 0020  ld   $20
              c72a 0042  ld   $42
              c72b 0059  ld   $59
              c72c 0054  ld   $54
              c72d 0045  ld   $45
              c72e 0053  ld   $53
              c72f 0020  ld   $20
              c730 0046  ld   $46
              c731 0052  ld   $52
              c732 0045  ld   $45
              c733 0045  ld   $45
              c734 000d  ld   $0d
              c735 0000  ld   $00
              c736 0023  ld   $23
              c737 0023  ld   $23
              c738 0023  ld   $23
              c739 0020  ld   $20
              c73a 004d  ld   $4d
              c73b 0053  ld   $53
              c73c 0020  ld   $20
              c73d 0042  ld   $42
              c73e 0041  ld   $41
              c73f 0053  ld   $53
              c740 0049  ld   $49
              c741 0043  ld   $43
              c742 0020  ld   $20
              c743 0023  ld   $23
              c744 0023  ld   $23
              c745 0023  ld   $23
              c746 000d  ld   $0d
              c747 000d  ld   $0d
              c748 0000  ld   $00
              c749 0024  ld   $24
              c74a 0000  ld   $00
              c74b 0038  ld   $38
              c74c 0011  ld   $11
              c74d 0000  ld   $00
              c74e 000b  ld   $0b
              c74f 002b  ld   $2b
              c750 0022  ld   $22
              c751 0059  ld   $59
              c752 0003  ld   $03
              c753 00b4  ld   $b4
              c754 00e6  ld   $e6
              c755 0011  ld   $11
              c756 0000  ld   $00
              c757 0002  ld   $02
              c758 002b  ld   $2b
              c759 0030  ld   $30
              c75a 0059  ld   $59
              c75b 0000  ld   $00
              c75c 00f3  ld   $f3
              c75d 0030  ld   $30
              c75e 0093  ld   $93
              c75f 0030  ld   $30
              c760 0093  ld   $93
              c761 0030  ld   $30
              c762 00f3  ld   $f3
              c763 0030  ld   $30
              c764 0011  ld   $11
              c765 0000  ld   $00
              c766 0001  ld   $01
              c767 002b  ld   $2b
              c768 0030  ld   $30
              c769 0011  ld   $11
              c76a 0000  ld   $00
              c76b 0027  ld   $27
              c76c 002b  ld   $2b
              c76d 0032  ld   $32
              c76e 0011  ld   $11
              c76f 0000  ld   $00
              c770 00a0  ld   $a0
              c771 002b  ld   $2b
              c772 0024  ld   $24
              c773 0011  ld   $11
              c774 0060  ld   $60
              c775 0070  ld   $70
              c776 002b  ld   $2b
              c777 0026  ld   $26
              c778 0011  ld   $11
              c779 0003  ld   $03
              c77a 000b  ld   $0b
              c77b 002b  ld   $2b
              c77c 0022  ld   $22
              c77d 00b4  ld   $b4
              c77e 00f3  ld   $f3
              c77f 0011  ld   $11
              c780 0000  ld   $00
              c781 0025  ld   $25
              c782 00cf  ld   $cf
              c783 0018  ld   $18
              c784 0025  ld   $25
              c785 0000  ld   $00
              c786 0054  ld   $54
              c787 0011  ld   $11
              c788 0000  ld   $00
              c789 0001  ld   $01
              c78a 002b  ld   $2b
              c78b 0030  ld   $30
              c78c 0011  ld   $11
              c78d 00e0  ld   $e0
              c78e 0001  ld   $01
              c78f 002b  ld   $2b
              c790 0034  ld   $34
              c791 0059  ld   $59
              c792 0023  ld   $23
              c793 002b  ld   $2b
              c794 0036  ld   $36
              c795 0021  ld   $21
              c796 0034  ld   $34
              c797 0035  ld   $35
              c798 0050  ld   $50
              c799 001b  ld   $1b
              c79a 0021  ld   $21
              c79b 0036  ld   $36
              c79c 00f0  ld   $f0
              c79d 0030  ld   $30
              c79e 0093  ld   $93
              c79f 0036  ld   $36
              c7a0 0021  ld   $21
              c7a1 0034  ld   $34
              c7a2 0090  ld   $90
              c7a3 0023  ld   $23
              c7a4 0059  ld   $59
              c7a5 0070  ld   $70
              c7a6 00f0  ld   $f0
              c7a7 0030  ld   $30
              c7a8 0021  ld   $21
              c7a9 0034  ld   $34
              c7aa 00e3  ld   $e3
              c7ab 0010  ld   $10
              c7ac 00e9  ld   $e9
              c7ad 002b  ld   $2b
              c7ae 0034  ld   $34
              c7af 0093  ld   $93
              c7b0 0030  ld   $30
              c7b1 0093  ld   $93
              c7b2 0030  ld   $30
              c7b3 001a  ld   $1a
              c7b4 0030  ld   $30
              c7b5 008c  ld   $8c
              c7b6 00f0  ld   $f0
              c7b7 0035  ld   $35
              c7b8 0072  ld   $72
              c7b9 000c  ld   $0c
              c7ba 0011  ld   $11
              c7bb 0001  ld   $01
              c7bc 0001  ld   $01
              c7bd 002b  ld   $2b
              c7be 0030  ld   $30
              c7bf 0059  ld   $59
              c7c0 0060  ld   $60
              c7c1 00f0  ld   $f0
              c7c2 0030  ld   $30
              c7c3 0059  ld   $59
              c7c4 0006  ld   $06
              c7c5 005e  ld   $5e
              c7c6 002a  ld   $2a
              c7c7 0059  ld   $59
              c7c8 000d  ld   $0d
              c7c9 00cf  ld   $cf
              c7ca 0032  ld   $32
              c7cb 001a  ld   $1a
              c7cc 002a  ld   $2a
              c7cd 00e6  ld   $e6
              c7ce 0001  ld   $01
              c7cf 0035  ld   $35
              c7d0 004d  ld   $4d
              c7d1 003c  ld   $3c
              c7d2 0011  ld   $11
              c7d3 0000  ld   $00
              c7d4 0026  ld   $26
              c7d5 002b  ld   $2b
              c7d6 001a  ld   $1a
              c7d7 0011  ld   $11
              c7d8 008d  ld   $8d
              c7d9 0022  ld   $22
              c7da 00ff  ld   $ff
              c7db 0026  ld   $26
              c7dc 0000  ld   $00
              c7dd 0047  ld   $47
              c7de 002b  ld   $2b
              c7df 001a  ld   $1a
              c7e0 0011  ld   $11
              c7e1 000c  ld   $0c
              c7e2 000b  ld   $0b
              c7e3 002b  ld   $2b
              c7e4 0022  ld   $22
              c7e5 00b4  ld   $b4
              c7e6 00e6  ld   $e6
              c7e7 0075  ld   $75
              c7e8 00cf  ld   $cf
              c7e9 0032  ld   $32
              c7ea 0063  ld   $63
              c7eb 0090  ld   $90
              c7ec 0000  ld   $00
              c7ed 0011  ld   $11
              c7ee 00e1  ld   $e1
              c7ef 0004  ld   $04
              c7f0 002b  ld   $2b
              c7f1 0022  ld   $22
              c7f2 0011  ld   $11
              c7f3 0000  ld   $00
              c7f4 000b  ld   $0b
              c7f5 002b  ld   $2b
              c7f6 0024  ld   $24
              c7f7 0021  ld   $21
              c7f8 0030  ld   $30
              c7f9 002b  ld   $2b
              c7fa 0028  ld   $28
              c7fb fe00  bra  ac          ;+-----------------------------------+
              c7fc fcfd  bra  $c7fd       ;|                                   |
              c7fd 1418  ld   $18,y       ;| Trampoline for page $c700 lookups |
              c7fe e006  jmp  y,$06       ;|                                   |
              c7ff c218  st   [$18]       ;+-----------------------------------+
              c800 00e3  ld   $e3
              c801 0006  ld   $06
              c802 002b  ld   $2b
              c803 0030  ld   $30
              c804 0059  ld   $59
              c805 0005  ld   $05
              c806 002b  ld   $2b
              c807 0034  ld   $34
              c808 0021  ld   $21
              c809 0036  ld   $36
              c80a 007f  ld   $7f
              c80b 0000  ld   $00
              c80c 0082  ld   $82
              c80d 00fe  ld   $fe
              c80e 005e  ld   $5e
              c80f 0026  ld   $26
              c810 0011  ld   $11
              c811 0000  ld   $00
              c812 0007  ld   $07
              c813 0099  ld   $99
              c814 0028  ld   $28
              c815 00ad  ld   $ad
              c816 0035  ld   $35
              c817 003f  ld   $3f
              c818 0036  ld   $36
              c819 0093  ld   $93
              c81a 0026  ld   $26
              c81b 00b4  ld   $b4
              c81c 00cb  ld   $cb
              c81d 0093  ld   $93
              c81e 0036  ld   $36
              c81f 0093  ld   $93
              c820 0028  ld   $28
              c821 0021  ld   $21
              c822 0034  ld   $34
              c823 00e6  ld   $e6
              c824 0001  ld   $01
              c825 0035  ld   $35
              c826 004d  ld   $4d
              c827 0021  ld   $21
              c828 0063  ld   $63
              c829 00ff  ld   $ff
              c82a 0027  ld   $27
              c82b 0000  ld   $00
              c82c 0059  ld   $59
              c82d 0075  ld   $75
              c82e 00e6  ld   $e6
              c82f 00ff  ld   $ff
              c830 0035  ld   $35
              c831 003f  ld   $3f
              c832 0041  ld   $41
              c833 00e3  ld   $e3
              c834 00df  ld   $df
              c835 0035  ld   $35
              c836 0053  ld   $53
              c837 001a  ld   $1a
              c838 002b  ld   $2b
              c839 0024  ld   $24
              c83a 0011  ld   $11
              c83b 0000  ld   $00
              c83c 0029  ld   $29
              c83d 00cf  ld   $cf
              c83e 0018  ld   $18
              c83f 0035  ld   $35
              c840 0072  ld   $72
              c841 0015  ld   $15
              c842 0063  ld   $63
              c843 00ff  ld   $ff
              c844 0011  ld   $11
              c845 009b  ld   $9b
              c846 0007  ld   $07
              c847 0090  ld   $90
              c848 003f  ld   $3f
              c849 00e6  ld   $e6
              c84a 005f  ld   $5f
              c84b 0035  ld   $35
              c84c 0056  ld   $56
              c84d 0022  ld   $22
              c84e 0011  ld   $11
              c84f 00c0  ld   $c0
              c850 00ff  ld   $ff
              c851 00e3  ld   $e3
              c852 002d  ld   $2d
              c853 0035  ld   $35
              c854 0053  ld   $53
              c855 0030  ld   $30
              c856 00e3  ld   $e3
              c857 0032  ld   $32
              c858 002b  ld   $2b
              c859 0034  ld   $34
              c85a 0011  ld   $11
              c85b 0000  ld   $00
              c85c 0007  ld   $07
              c85d 0090  ld   $90
              c85e 0035  ld   $35
              c85f 002b  ld   $2b
              c860 0034  ld   $34
              c861 0011  ld   $11
              c862 0000  ld   $00
              c863 0008  ld   $08
              c864 002b  ld   $2b
              c865 0036  ld   $36
              c866 0021  ld   $21
              c867 0034  ld   $34
              c868 00e9  ld   $e9
              c869 00e9  ld   $e9
              c86a 0099  ld   $99
              c86b 0034  ld   $34
              c86c 0099  ld   $99
              c86d 0036  ld   $36
              c86e 0090  ld   $90
              c86f 0044  ld   $44
              c870 0011  ld   $11
              c871 000c  ld   $0c
              c872 0008  ld   $08
              c873 002b  ld   $2b
              c874 0036  ld   $36
              c875 001a  ld   $1a
              c876 0030  ld   $30
              c877 00e6  ld   $e6
              c878 00fb  ld   $fb
              c879 0035  ld   $35
              c87a 0056  ld   $56
              c87b 0052  ld   $52
              c87c 0011  ld   $11
              c87d 0000  ld   $00
              c87e 0028  ld   $28
              c87f 00cf  ld   $cf
              c880 0018  ld   $18
              c881 0011  ld   $11
              c882 000f  ld   $0f
              c883 0026  ld   $26
              c884 00cf  ld   $cf
              c885 0018  ld   $18
              c886 0028  ld   $28
              c887 0000  ld   $00
              c888 004c  ld   $4c
              c889 0011  ld   $11
              c88a 00e1  ld   $e1
              c88b 0004  ld   $04
              c88c 002b  ld   $2b
              c88d 0022  ld   $22
              c88e 0011  ld   $11
              c88f 0000  ld   $00
              c890 000b  ld   $0b
              c891 002b  ld   $2b
              c892 0024  ld   $24
              c893 0059  ld   $59
              c894 0062  ld   $62
              c895 005e  ld   $5e
              c896 0030  ld   $30
              c897 00e3  ld   $e3
              c898 009e  ld   $9e
              c899 002b  ld   $2b
              c89a 0034  ld   $34
              c89b 00ad  ld   $ad
              c89c 005e  ld   $5e
              c89d 0031  ld   $31
              c89e 0021  ld   $21
              c89f 0030  ld   $30
              c8a0 00e6  ld   $e6
              c8a1 0002  ld   $02
              c8a2 002b  ld   $2b
              c8a3 0028  ld   $28
              c8a4 0011  ld   $11
              c8a5 0000  ld   $00
              c8a6 0007  ld   $07
              c8a7 0099  ld   $99
              c8a8 0028  ld   $28
              c8a9 00ad  ld   $ad
              c8aa 0082  ld   $82
              c8ab 0001  ld   $01
              c8ac 005e  ld   $5e
              c8ad 0026  ld   $26
              c8ae 00b4  ld   $b4
              c8af 00cb  ld   $cb
              c8b0 0093  ld   $93
              c8b1 0028  ld   $28
              c8b2 001a  ld   $1a
              c8b3 0028  ld   $28
              c8b4 0035  ld   $35
              c8b5 0072  ld   $72
              c8b6 0019  ld   $19
              c8b7 0021  ld   $21
              c8b8 0034  ld   $34
              c8b9 00e3  ld   $e3
              c8ba 0016  ld   $16
              c8bb 002b  ld   $2b
              c8bc 0028  ld   $28
              c8bd 00ad  ld   $ad
              c8be 005e  ld   $5e
              c8bf 0026  ld   $26
              c8c0 0021  ld   $21
              c8c1 0034  ld   $34
              c8c2 00ad  ld   $ad
              c8c3 00f0  ld   $f0
              c8c4 0028  ld   $28
              c8c5 001a  ld   $1a
              c8c6 0026  ld   $26
              c8c7 00f0  ld   $f0
              c8c8 0034  ld   $34
              c8c9 0093  ld   $93
              c8ca 0034  ld   $34
              c8cb 0093  ld   $93
              c8cc 0034  ld   $34
              c8cd 001a  ld   $1a
              c8ce 0034  ld   $34
              c8cf 008c  ld   $8c
              c8d0 00da  ld   $da
              c8d1 0035  ld   $35
              c8d2 0072  ld   $72
              c8d3 002c  ld   $2c
              c8d4 00ff  ld   $ff
              c8d5 0029  ld   $29
              c8d6 0000  ld   $00
              c8d7 001f  ld   $1f
              c8d8 0021  ld   $21
              c8d9 0024  ld   $24
              c8da 00e3  ld   $e3
              c8db 0013  ld   $13
              c8dc 0035  ld   $35
              c8dd 0072  ld   $72
              c8de 000d  ld   $0d
              c8df 0075  ld   $75
              c8e0 0011  ld   $11
              c8e1 0000  ld   $00
              c8e2 0028  ld   $28
              c8e3 00cf  ld   $cf
              c8e4 0018  ld   $18
              c8e5 0063  ld   $63
              c8e6 00ff  ld   $ff
              c8e7 00e3  ld   $e3
              c8e8 0003  ld   $03
              c8e9 0035  ld   $35
              c8ea 003f  ld   $3f
              c8eb 001c  ld   $1c
              c8ec 00e3  ld   $e3
              c8ed 0003  ld   $03
              c8ee 0035  ld   $35
              c8ef 0072  ld   $72
              c8f0 001c  ld   $1c
              c8f1 0059  ld   $59
              c8f2 0006  ld   $06
              c8f3 005e  ld   $5e
              c8f4 002c  ld   $2c
              c8f5 0063  ld   $63
              c8f6 00ff  ld   $ff
              c8f7 002a  ld   $2a
              c8f8 0000  ld   $00
              c8f9 003e  ld   $3e
              c8fa 00a5  ld   $a5
              c8fb fe00  bra  ac          ;+-----------------------------------+
              c8fc fcfd  bra  $c8fd       ;|                                   |
              c8fd 1418  ld   $18,y       ;| Trampoline for page $c800 lookups |
              c8fe e006  jmp  y,$06       ;|                                   |
              c8ff c218  st   [$18]       ;+-----------------------------------+
              c900 000f  ld   $0f
              c901 0085  ld   $85
              c902 003e  ld   $3e
              c903 00a5  ld   $a5
              c904 000f  ld   $0f
              c905 00c5  ld   $c5
              c906 003e  ld   $3e
              c907 00d0  ld   $d0
              c908 001b  ld   $1b
              c909 00a5  ld   $a5
              c90a 000e  ld   $0e
              c90b 0029  ld   $29
              c90c 000f  ld   $0f
              c90d 00d0  ld   $d0
              c90e 00f4  ld   $f4
              c90f 00a5  ld   $a5
              c910 000e  ld   $0e
              c911 0029  ld   $29
              c912 0010  ld   $10
              c913 00d0  ld   $d0
              c914 0003  ld   $03
              c915 00a9  ld   $a9
              c916 0020  ld   $20
              c917 002c  ld   $2c
              c918 00a9  ld   $a9
              c919 007f  ld   $7f
              c91a 0000  ld   $00
              c91b 0020  ld   $20
              c91c 0032  ld   $32
              c91d 002a  ld   $2a
              c91e 0020  ld   $20
              c91f 0000  ld   $00
              c920 002e  ld   $2e
              c921 004c  ld   $4c
              c922 0004  ld   $04
              c923 002a  ld   $2a
              c924 00c9  ld   $c9
              c925 00ff  ld   $ff
              c926 00f0  ld   $f0
              c927 00d9  ld   $d9
              c928 0048  ld   $48
              c929 00a9  ld   $a9
              c92a 0020  ld   $20
              c92b 0000  ld   $00
              c92c 0020  ld   $20
              c92d 0032  ld   $32
              c92e 002a  ld   $2a
              c92f 0068  ld   $68
              c930 0060  ld   $60
              c931 00a5  ld   $a5
              c932 0030  ld   $30
              c933 0038  ld   $38
              c934 00e9  ld   $e9
              c935 0006  ld   $06
              c936 00c9  ld   $c9
              c937 0060  ld   $60
              c938 0090  ld   $90
              c939 0002  ld   $02
              c93a 0085  ld   $85
              c93b 0030  ld   $30
              c93c 0060  ld   $60
              c93d 002b  ld   $2b
              c93e 0000  ld   $00
              c93f 0013  ld   $13
              c940 0085  ld   $85
              c941 0043  ld   $43
              c942 0048  ld   $48
              c943 0008  ld   $08
              c944 008a  ld   $8a
              c945 0048  ld   $48
              c946 0098  ld   $98
              c947 0048  ld   $48
              c948 00a5  ld   $a5
              c949 0043  ld   $43
              c94a 0000  ld   $00
              c94b 0068  ld   $68
              c94c 00a8  ld   $a8
              c94d 0068  ld   $68
              c94e 00aa  ld   $aa
              c94f 0028  ld   $28
              c950 0068  ld   $68
              c951 0018  ld   $18
              c952 0060  ld   $60
              c953 002c  ld   $2c
              c954 0000  ld   $00
              c955 0041  ld   $41
              c956 0024  ld   $24
              c957 0043  ld   $43
              c958 0050  ld   $50
              c959 0018  ld   $18
              c95a 00a5  ld   $a5
              c95b 000f  ld   $0f
              c95c 00c9  ld   $c9
              c95d 00ff  ld   $ff
              c95e 0069  ld   $69
              c95f 0000  ld   $00
              c960 00c9  ld   $c9
              c961 0060  ld   $60
              c962 00d0  ld   $d0
              c963 0002  ld   $02
              c964 00a9  ld   $a9
              c965 001f  ld   $1f
              c966 0090  ld   $90
              c967 0002  ld   $02
              c968 00e9  ld   $e9
              c969 0020  ld   $20
              c96a 00c9  ld   $c9
              c96b 000a  ld   $0a
              c96c 00d0  ld   $d0
              c96d 0002  ld   $02
              c96e 00a9  ld   $a9
              c96f 000d  ld   $0d
              c970 0018  ld   $18
              c971 0060  ld   $60
              c972 008a  ld   $8a
              c973 0048  ld   $48
              c974 0098  ld   $98
              c975 0048  ld   $48
              c976 0020  ld   $20
              c977 0000  ld   $00
              c978 002a  ld   $2a
              c979 0020  ld   $20
              c97a 000a  ld   $0a
              c97b 002c  ld   $2c
              c97c 00c9  ld   $c9
              c97d 0007  ld   $07
              c97e 00d0  ld   $d0
              c97f 0004  ld   $04
              c980 0000  ld   $00
              c981 004c  ld   $4c
              c982 0020  ld   $20
              c983 002c  ld   $2c
              c984 00c9  ld   $c9
              c985 000d  ld   $0d
              c986 0090  ld   $90
              c987 00ee  ld   $ee
              c988 00f0  ld   $f0
              c989 0003  ld   $03
              c98a 0048  ld   $48
              c98b 0000  ld   $00
              c98c 0068  ld   $68
              c98d 0085  ld   $85
              c98e 003e  ld   $3e
              c98f 0068  ld   $68
              c990 00a8  ld   $a8
              c991 0068  ld   $68
              c992 00aa  ld   $aa
              c993 00a5  ld   $a5
              c994 003e  ld   $3e
              c995 0018  ld   $18
              c996 0060  ld   $60
              c997 002d  ld   $2d
              c998 0000  ld   $00
              c999 0018  ld   $18
              c99a 00a5  ld   $a5
              c99b 000f  ld   $0f
              c99c 00c9  ld   $c9
              c99d 0003  ld   $03
              c99e 00d0  ld   $d0
              c99f 0003  ld   $03
              c9a0 004c  ld   $4c
              c9a1 0026  ld   $26
              c9a2 0009  ld   $09
              c9a3 00a5  ld   $a5
              c9a4 000e  ld   $0e
              c9a5 00cd  ld   $cd
              c9a6 0003  ld   $03
              c9a7 0002  ld   $02
              c9a8 0010  ld   $10
              c9a9 0007  ld   $07
              c9aa 0084  ld   $84
              c9ab 003e  ld   $3e
              c9ac 0020  ld   $20
              c9ad 0000  ld   $00
              c9ae 002e  ld   $2e
              c9af 00a4  ld   $a4
              c9b0 003e  ld   $3e
              c9b1 0060  ld   $60
              c9b2 002e  ld   $2e
              c9b3 0000  ld   $00
              c9b4 0036  ld   $36
              c9b5 00a5  ld   $a5
              c9b6 000e  ld   $0e
              c9b7 00a8  ld   $a8
              c9b8 0038  ld   $38
              c9b9 00ed  ld   $ed
              c9ba 0003  ld   $03
              c9bb 0002  ld   $02
              c9bc 008c  ld   $8c
              c9bd 0003  ld   $03
              c9be 0002  ld   $02
              c9bf 0018  ld   $18
              c9c0 006d  ld   $6d
              c9c1 0002  ld   $02
              c9c2 0002  ld   $02
              c9c3 008d  ld   $8d
              c9c4 0002  ld   $02
              c9c5 0002  ld   $02
              c9c6 00a9  ld   $a9
              c9c7 0000  ld   $00
              c9c8 006d  ld   $6d
              c9c9 0001  ld   $01
              c9ca 0002  ld   $02
              c9cb 008d  ld   $8d
              c9cc 0001  ld   $01
              c9cd 0002  ld   $02
              c9ce 00a9  ld   $a9
              c9cf 0000  ld   $00
              c9d0 006d  ld   $6d
              c9d1 0000  ld   $00
              c9d2 0002  ld   $02
              c9d3 008d  ld   $8d
              c9d4 0000  ld   $00
              c9d5 0002  ld   $02
              c9d6 00ad  ld   $ad
              c9d7 0001  ld   $01
              c9d8 0002  ld   $02
              c9d9 00c9  ld   $c9
              c9da 001a  ld   $1a
              c9db 00ad  ld   $ad
              c9dc 0000  ld   $00
              c9dd 0002  ld   $02
              c9de 00e9  ld   $e9
              c9df 004f  ld   $4f
              c9e0 0090  ld   $90
              c9e1 0008  ld   $08
              c9e2 00a9  ld   $a9
              c9e3 0000  ld   $00
              c9e4 008d  ld   $8d
              c9e5 0000  ld   $00
              c9e6 0002  ld   $02
              c9e7 008d  ld   $8d
              c9e8 0001  ld   $01
              c9e9 0002  ld   $02
              c9ea 0060  ld   $60
              c9eb 002f  ld   $2f
              c9ec 0000  ld   $00
              c9ed 002a  ld   $2a
              c9ee 00c9  ld   $c9
              c9ef 005f  ld   $5f
              c9f0 00f0  ld   $f0
              c9f1 0005  ld   $05
              c9f2 00e0  ld   $e0
              c9f3 005a  ld   $5a
              c9f4 00b0  ld   $b0
              c9f5 0011  ld   $11
              c9f6 0060  ld   $60
              c9f7 008a  ld   $8a
              c9f8 0048  ld   $48
              c9f9 0020  ld   $20
              c9fa 0032  ld   $32
              c9fb fe00  bra  ac          ;+-----------------------------------+
              c9fc fcfd  bra  $c9fd       ;|                                   |
              c9fd 1418  ld   $18,y       ;| Trampoline for page $c900 lookups |
              c9fe e006  jmp  y,$06       ;|                                   |
              c9ff c218  st   [$18]       ;+-----------------------------------+
              ca00 002a  ld   $2a
              ca01 00a9  ld   $a9
              ca02 0020  ld   $20
              ca03 0000  ld   $00
              ca04 0020  ld   $20
              ca05 0032  ld   $32
              ca06 002a  ld   $2a
              ca07 0068  ld   $68
              ca08 00aa  ld   $aa
              ca09 00f0  ld   $f0
              ca0a 0008  ld   $08
              ca0b 00ca  ld   $ca
              ca0c 0020  ld   $20
              ca0d 0032  ld   $32
              ca0e 002a  ld   $2a
              ca0f 0090  ld   $90
              ca10 0003  ld   $03
              ca11 00a9  ld   $a9
              ca12 0000  ld   $00
              ca13 0060  ld   $60
              ca14 00a9  ld   $a9
              ca15 003f  ld   $3f
              ca16 0000  ld   $00
              ca17 00a9  ld   $a9
              ca18 000d  ld   $0d
              ca19 0000  ld   $00
              ca1a 00a2  ld   $a2
              ca1b 0000  ld   $00
              ca1c 0060  ld   $60
              ca1d 0030  ld   $30
              ca1e 0000  ld   $00
              ca1f 0050  ld   $50
              ca20 0008  ld   $08
              ca21 0048  ld   $48
              ca22 00a0  ld   $a0
              ca23 0000  ld   $00
              ca24 00b9  ld   $b9
              ca25 002a  ld   $2a
              ca26 0030  ld   $30
              ca27 00c8  ld   $c8
              ca28 0020  ld   $20
              ca29 0000  ld   $00
              ca2a 002b  ld   $2b
              ca2b 00d0  ld   $d0
              ca2c 00f7  ld   $f7
              ca2d 00a9  ld   $a9
              ca2e 0005  ld   $05
              ca2f 00a0  ld   $a0
              ca30 0024  ld   $24
              ca31 0085  ld   $85
              ca32 0034  ld   $34
              ca33 0084  ld   $84
              ca34 0035  ld   $35
              ca35 00a9  ld   $a9
              ca36 0000  ld   $00
              ca37 0085  ld   $85
              ca38 0036  ld   $36
              ca39 00a9  ld   $a9
              ca3a 000a  ld   $0a
              ca3b 0085  ld   $85
              ca3c 0037  ld   $37
              ca3d 00a9  ld   $a9
              ca3e 00fe  ld   $fe
              ca3f 00a0  ld   $a0
              ca40 0030  ld   $30
              ca41 0085  ld   $85
              ca42 0016  ld   $16
              ca43 0084  ld   $84
              ca44 0017  ld   $17
              ca45 0068  ld   $68
              ca46 0028  ld   $28
              ca47 004c  ld   $4c
              ca48 009c  ld   $9c
              ca49 0007  ld   $07
              ca4a 000d  ld   $0d
              ca4b 0053  ld   $53
              ca4c 0045  ld   $45
              ca4d 004e  ld   $4e
              ca4e 0044  ld   $44
              ca4f 0049  ld   $49
              ca50 004e  ld   $4e
              ca51 0047  ld   $47
              ca52 0020  ld   $20
              ca53 0054  ld   $54
              ca54 004f  ld   $4f
              ca55 0020  ld   $20
              ca56 0042  ld   $42
              ca57 0041  ld   $41
              ca58 0042  ld   $42
              ca59 0045  ld   $45
              ca5a 004c  ld   $4c
              ca5b 0046  ld   $46
              ca5c 0049  ld   $49
              ca5d 0053  ld   $53
              ca5e 0048  ld   $48
              ca5f 000d  ld   $0d
              ca60 0000  ld   $00
              ca61 0021  ld   $21
              ca62 0034  ld   $34
              ca63 00ad  ld   $ad
              ca64 00cf  ld   $cf
              ca65 0032  ld   $32
              ca66 0011  ld   $11
              ca67 0000  ld   $00
              ca68 0026  ld   $26
              ca69 002b  ld   $2b
              ca6a 001a  ld   $1a
              ca6b 00ee  ld   $ee
              ca6c 0000  ld   $00
              ca6d 00df  ld   $df
              ca6e 0002  ld   $02
              ca6f 00ff  ld   $ff
              ca70 0031  ld   $31
              ca71 0000  ld   $00
              ca72 005a  ld   $5a
              ca73 00ee  ld   $ee
              ca74 0003  ld   $03
              ca75 00f0  ld   $f0
              ca76 0034  ld   $34
              ca77 001a  ld   $1a
              ca78 0037  ld   $37
              ca79 008c  ld   $8c
              ca7a 000a  ld   $0a
              ca7b 0035  ld   $35
              ca7c 0072  ld   $72
              ca7d 0017  ld   $17
              ca7e 0021  ld   $21
              ca7f 0034  ld   $34
              ca80 00ad  ld   $ad
              ca81 00e6  ld   $e6
              ca82 0020  ld   $20
              ca83 0035  ld   $35
              ca84 0056  ld   $56
              ca85 0017  ld   $17
              ca86 0075  ld   $75
              ca87 0011  ld   $11
              ca88 0041  ld   $41
              ca89 0030  ld   $30
              ca8a 00cf  ld   $cf
              ca8b 0018  ld   $18
              ca8c 001a  ld   $1a
              ca8d 0036  ld   $36
              ca8e 00e3  ld   $e3
              ca8f 0008  ld   $08
              ca90 005e  ld   $5e
              ca91 0036  ld   $36
              ca92 0021  ld   $21
              ca93 0034  ld   $34
              ca94 00ad  ld   $ad
              ca95 005e  ld   $5e
              ca96 0037  ld   $37
              ca97 0093  ld   $93
              ca98 0034  ld   $34
              ca99 008c  ld   $8c
              ca9a 000a  ld   $0a
              ca9b 0035  ld   $35
              ca9c 003f  ld   $3f
              ca9d 002b  ld   $2b
              ca9e 001a  ld   $1a
              ca9f 0036  ld   $36
              caa0 0035  ld   $35
              caa1 0072  ld   $72
              caa2 004f  ld   $4f
              caa3 0011  ld   $11
              caa4 0005  ld   $05
              caa5 0024  ld   $24
              caa6 002b  ld   $2b
              caa7 0034  ld   $34
              caa8 002b  ld   $2b
              caa9 0024  ld   $24
              caaa 0059  ld   $59
              caab 0001  ld   $01
              caac 005e  ld   $5e
              caad 0026  ld   $26
              caae 001a  ld   $1a
              caaf 0036  ld   $36
              cab0 005e  ld   $5e
              cab1 0027  ld   $27
              cab2 0011  ld   $11
              cab3 0006  ld   $06
              cab4 000b  ld   $0b
              cab5 002b  ld   $2b
              cab6 0022  ld   $22
              cab7 00b4  ld   $b4
              cab8 00e6  ld   $e6
              cab9 0035  ld   $35
              caba 003f  ld   $3f
              cabb 004b  ld   $4b
              cabc 0059  ld   $59
              cabd 0003  ld   $03
              cabe 005e  ld   $5e
              cabf 000f  ld   $0f
              cac0 0059  ld   $59
              cac1 0000  ld   $00
              cac2 005e  ld   $5e
              cac3 0036  ld   $36
              cac4 0011  ld   $11
              cac5 000c  ld   $0c
              cac6 000b  ld   $0b
              cac7 002b  ld   $2b
              cac8 0022  ld   $22
              cac9 00b4  ld   $b4
              caca 00e6  ld   $e6
              cacb 0090  ld   $90
              cacc 00fe  ld   $fe
              cacd 0032  ld   $32
              cace 0000  ld   $00
              cacf 0025  ld   $25
              cad0 00a0  ld   $a0
              cad1 0000  ld   $00
              cad2 00b9  ld   $b9
              cad3 000e  ld   $0e
              cad4 0032  ld   $32
              cad5 00c8  ld   $c8
              cad6 0020  ld   $20
              cad7 0000  ld   $00
              cad8 002b  ld   $2b
              cad9 00d0  ld   $d0
              cada 00f7  ld   $f7
              cadb 004c  ld   $4c
              cadc 0026  ld   $26
              cadd 0009  ld   $09
              cade 000d  ld   $0d
              cadf 0055  ld   $55
              cae0 0053  ld   $53
              cae1 0045  ld   $45
              cae2 0020  ld   $20
              cae3 0042  ld   $42
              cae4 0041  ld   $41
              cae5 0042  ld   $42
              cae6 0045  ld   $45
              cae7 004c  ld   $4c
              cae8 0046  ld   $46
              cae9 0049  ld   $49
              caea 0053  ld   $53
              caeb 0048  ld   $48
              caec 0020  ld   $20
              caed 0054  ld   $54
              caee 004f  ld   $4f
              caef 0020  ld   $20
              caf0 004c  ld   $4c
              caf1 004f  ld   $4f
              caf2 0041  ld   $41
              caf3 0044  ld   $44
              caf4 0000  ld   $00
              caf5 0000  ld   $00
              caf6 0000  ld   $00         ;End of Apps/MSBASIC/MSBASIC_v1.gt1, size 9742
                                          ;+-----------------------------------+
                                          ;| Apps/Horizon/Horizon_at67_v1.gt1  |
                                          ;+-----------------------------------+
              caf7 0200  nop              ;4 fillers
              caf8 0200  nop
              caf9 0200  nop
              cafa 0200  nop
              cafb fe00  bra  ac          ;+-----------------------------------+
              cafc fcfd  bra  $cafd       ;|                                   |
              cafd 1418  ld   $18,y       ;| Trampoline for page $ca00 lookups |
              cafe e006  jmp  y,$06       ;|                                   |
              caff c218  st   [$18]       ;+-----------------------------------+
              cb00 dc4d  st   $4d,[y,x++] ;'M'
              cb01 dc53  st   $53,[y,x++] ;'S'
              cb02 dc42  st   $42,[y,x++] ;'B'
              cb03 dc41  st   $41,[y,x++] ;'A'
              cb04 dc53  st   $53,[y,x++] ;'S'
              cb05 dc49  st   $49,[y,x++] ;'I'
              cb06 dc43  st   $43,[y,x++] ;'C'
              cb07 dc00  st   $00,[y,x++] ;'\x00'
              cb08 00e9  ld   $e9
              cb09 c218  st   [$18]
              cb0a 00a4  ld   $a4
              cb0b 14e1  ld   $e1,y
              cb0c e071  jmp  y,$71
              cb0d c219  st   [$19]
Egg:          cb0e 0002  ld   $02
              cb0f 0000  ld   $00
              cb10 00c0  ld   $c0
              cb11 0011  ld   $11
              cb12 00b4  ld   $b4
              cb13 0026  ld   $26
              cb14 002b  ld   $2b
              cb15 00dc  ld   $dc
              cb16 0011  ld   $11
              cb17 00bd  ld   $bd
              cb18 0026  ld   $26
              cb19 002b  ld   $2b
              cb1a 00d0  ld   $d0
              cb1b 0011  ld   $11
              cb1c 00c6  ld   $c6
              cb1d 0026  ld   $26
              cb1e 002b  ld   $2b
              cb1f 00d2  ld   $d2
              cb20 0011  ld   $11
              cb21 00cf  ld   $cf
              cb22 0026  ld   $26
              cb23 002b  ld   $2b
              cb24 00d4  ld   $d4
              cb25 0011  ld   $11
              cb26 00d8  ld   $d8
              cb27 0026  ld   $26
              cb28 002b  ld   $2b
              cb29 00d6  ld   $d6
              cb2a 0011  ld   $11
              cb2b 00e1  ld   $e1
              cb2c 0026  ld   $26
              cb2d 002b  ld   $2b
              cb2e 00d8  ld   $d8
              cb2f 0011  ld   $11
              cb30 00ea  ld   $ea
              cb31 0026  ld   $26
              cb32 002b  ld   $2b
              cb33 00da  ld   $da
              cb34 0011  ld   $11
              cb35 0020  ld   $20
              cb36 000f  ld   $0f
              cb37 002b  ld   $2b
              cb38 00a2  ld   $a2
              cb39 0011  ld   $11
              cb3a 0001  ld   $01
              cb3b 0000  ld   $00
              cb3c 002b  ld   $2b
              cb3d 00ac  ld   $ac
              cb3e 0011  ld   $11
              cb3f 0000  ld   $00
              cb40 00ff  ld   $ff
              cb41 002b  ld   $2b
              cb42 00ae  ld   $ae
              cb43 0011  ld   $11
              cb44 0000  ld   $00
              cb45 0000  ld   $00
              cb46 002b  ld   $2b
              cb47 00a6  ld   $a6
              cb48 0059  ld   $59
              cb49 0000  ld   $00
              cb4a 005e  ld   $5e
              cb4b 002c  ld   $2c
              cb4c 0011  ld   $11
              cb4d 00a0  ld   $a0
              cb4e 0025  ld   $25
              cb4f 00cf  ld   $cf
              cb50 0018  ld   $18
              cb51 0011  ld   $11
              cb52 00c3  ld   $c3
              cb53 0025  ld   $25
              cb54 00cf  ld   $cf
              cb55 0018  ld   $18
              cb56 0059  ld   $59
              cb57 0000  ld   $00
              cb58 002b  ld   $2b
              cb59 0030  ld   $30
              cb5a 002b  ld   $2b
              cb5b 0032  ld   $32
              cb5c 002b  ld   $2b
              cb5d 0034  ld   $34
              cb5e 002b  ld   $2b
              cb5f 0036  ld   $36
              cb60 002b  ld   $2b
              cb61 0038  ld   $38
              cb62 002b  ld   $2b
              cb63 003a  ld   $3a
              cb64 002b  ld   $2b
              cb65 003c  ld   $3c
              cb66 0059  ld   $59
              cb67 003f  ld   $3f
              cb68 002b  ld   $2b
              cb69 003e  ld   $3e
              cb6a 0059  ld   $59
              cb6b 0003  ld   $03
              cb6c 002b  ld   $2b
              cb6d 0040  ld   $40
              cb6e 0059  ld   $59
              cb6f 0020  ld   $20
              cb70 002b  ld   $2b
              cb71 0042  ld   $42
              cb72 0011  ld   $11
              cb73 00a0  ld   $a0
              cb74 0026  ld   $26
              cb75 002b  ld   $2b
              cb76 0084  ld   $84
              cb77 0059  ld   $59
              cb78 003f  ld   $3f
              cb79 00f3  ld   $f3
              cb7a 0084  ld   $84
              cb7b 0011  ld   $11
              cb7c 00a2  ld   $a2
              cb7d 0026  ld   $26
              cb7e 002b  ld   $2b
              cb7f 0084  ld   $84
              cb80 0059  ld   $59
              cb81 002a  ld   $2a
              cb82 00f3  ld   $f3
              cb83 0084  ld   $84
              cb84 0011  ld   $11
              cb85 00a4  ld   $a4
              cb86 0026  ld   $26
              cb87 002b  ld   $2b
              cb88 0084  ld   $84
              cb89 0059  ld   $59
              cb8a 0015  ld   $15
              cb8b 00f3  ld   $f3
              cb8c 0084  ld   $84
              cb8d 0011  ld   $11
              cb8e 00a6  ld   $a6
              cb8f 0026  ld   $26
              cb90 002b  ld   $2b
              cb91 0084  ld   $84
              cb92 0059  ld   $59
              cb93 0000  ld   $00
              cb94 00f3  ld   $f3
              cb95 0084  ld   $84
              cb96 0011  ld   $11
              cb97 00aa  ld   $aa
              cb98 0026  ld   $26
              cb99 002b  ld   $2b
              cb9a 0084  ld   $84
              cb9b 0059  ld   $59
              cb9c 0003  ld   $03
              cb9d 00f3  ld   $f3
              cb9e 0084  ld   $84
              cb9f 0011  ld   $11
              cba0 00ac  ld   $ac
              cba1 0026  ld   $26
              cba2 002b  ld   $2b
              cba3 0084  ld   $84
              cba4 0059  ld   $59
              cba5 0002  ld   $02
              cba6 00f3  ld   $f3
              cba7 0084  ld   $84
              cba8 0011  ld   $11
              cba9 00ae  ld   $ae
              cbaa 0026  ld   $26
              cbab 002b  ld   $2b
              cbac 0084  ld   $84
              cbad 0059  ld   $59
              cbae 0001  ld   $01
              cbaf 00f3  ld   $f3
              cbb0 0084  ld   $84
              cbb1 0011  ld   $11
              cbb2 00b0  ld   $b0
              cbb3 0026  ld   $26
              cbb4 002b  ld   $2b
              cbb5 0084  ld   $84
              cbb6 0059  ld   $59
              cbb7 0000  ld   $00
              cbb8 00f3  ld   $f3
              cbb9 0084  ld   $84
              cbba 0059  ld   $59
              cbbb 0000  ld   $00
              cbbc 002b  ld   $2b
              cbbd 0044  ld   $44
              cbbe 002b  ld   $2b
              cbbf 0046  ld   $46
              cbc0 0059  ld   $59
              cbc1 0036  ld   $36
              cbc2 002b  ld   $2b
              cbc3 0048  ld   $48
              cbc4 0059  ld   $59
              cbc5 0077  ld   $77
              cbc6 002b  ld   $2b
              cbc7 0030  ld   $30
              cbc8 0021  ld   $21
              cbc9 0042  ld   $42
              cbca 002b  ld   $2b
              cbcb 00b0  ld   $b0
              cbcc 0011  ld   $11
              cbcd 00ff  ld   $ff
              cbce 00ff  ld   $ff
              cbcf 002b  ld   $2b
              cbd0 00b2  ld   $b2
              cbd1 0002  ld   $02
              cbd2 00c0  ld   $c0
              cbd3 0037  ld   $37
              cbd4 0011  ld   $11
              cbd5 00a0  ld   $a0
              cbd6 0026  ld   $26
              cbd7 0099  ld   $99
              cbd8 0046  ld   $46
              cbd9 0099  ld   $99
              cbda 0046  ld   $46
              cbdb 00f6  ld   $f6
              cbdc 002b  ld   $2b
              cbdd 003e  ld   $3e
              cbde 0011  ld   $11
              cbdf 00aa  ld   $aa
              cbe0 0026  ld   $26
              cbe1 0099  ld   $99
              cbe2 0046  ld   $46
              cbe3 0099  ld   $99
              cbe4 0046  ld   $46
              cbe5 00f6  ld   $f6
              cbe6 002b  ld   $2b
              cbe7 0040  ld   $40
              cbe8 0021  ld   $21
              cbe9 0044  ld   $44
              cbea 00e3  ld   $e3
              cbeb 0001  ld   $01
              cbec 002b  ld   $2b
              cbed 0044  ld   $44
              cbee 0021  ld   $21
              cbef 0044  ld   $44
              cbf0 00b8  ld   $b8
              cbf1 0048  ld   $48
              cbf2 0035  ld   $35
              cbf3 003f  ld   $3f
              cbf4 00e4  ld   $e4
              cbf5 0011  ld   $11
              cbf6 000d  ld   $0d
              cbf7 0003  ld   $03
              cbf8 00cf  ld   $cf
              cbf9 0018  ld   $18
              cbfa 0021  ld   $21
              cbfb fe00  bra  ac          ;+-----------------------------------+
              cbfc fcfd  bra  $cbfd       ;|                                   |
              cbfd 1418  ld   $18,y       ;| Trampoline for page $cb00 lookups |
              cbfe e006  jmp  y,$06       ;|                                   |
              cbff c218  st   [$18]       ;+-----------------------------------+
              cc00 0046  ld   $46
              cc01 00e3  ld   $e3
              cc02 0001  ld   $01
              cc03 002b  ld   $2b
              cc04 0046  ld   $46
              cc05 0059  ld   $59
              cc06 0000  ld   $00
              cc07 002b  ld   $2b
              cc08 0044  ld   $44
              cc09 002b  ld   $2b
              cc0a 00de  ld   $de
              cc0b 0011  ld   $11
              cc0c 0000  ld   $00
              cc0d 0003  ld   $03
              cc0e 00cf  ld   $cf
              cc0f 0018  ld   $18
              cc10 0003  ld   $03
              cc11 0000  ld   $00
              cc12 000d  ld   $0d
              cc13 0021  ld   $21
              cc14 00de  ld   $de
              cc15 0021  ld   $21
              cc16 0048  ld   $48
              cc17 002b  ld   $2b
              cc18 0098  ld   $98
              cc19 0011  ld   $11
              cc1a 00f3  ld   $f3
              cc1b 0026  ld   $26
              cc1c 00cf  ld   $cf
              cc1d 0018  ld   $18
              cc1e 002b  ld   $2b
              cc1f 0048  ld   $48
              cc20 0003  ld   $03
              cc21 000d  ld   $0d
              cc22 002c  ld   $2c
              cc23 0021  ld   $21
              cc24 0030  ld   $30
              cc25 002b  ld   $2b
              cc26 003c  ld   $3c
              cc27 0011  ld   $11
              cc28 00a7  ld   $a7
              cc29 0004  ld   $04
              cc2a 00cf  ld   $cf
              cc2b 0018  ld   $18
              cc2c 0021  ld   $21
              cc2d 0030  ld   $30
              cc2e 00b8  ld   $b8
              cc2f 0042  ld   $42
              cc30 00e3  ld   $e3
              cc31 0028  ld   $28
              cc32 002b  ld   $2b
              cc33 00c0  ld   $c0
              cc34 0011  ld   $11
              cc35 0090  ld   $90
              cc36 0001  ld   $01
              cc37 002b  ld   $2b
              cc38 0082  ld   $82
              cc39 0021  ld   $21
              cc3a 00c0  ld   $c0
              cc3b 002b  ld   $2b
              cc3c 0084  ld   $84
              cc3d 0011  ld   $11
              cc3e 00a0  ld   $a0
              cc3f 0024  ld   $24
              cc40 00cf  ld   $cf
              cc41 0018  ld   $18
              cc42 0082  ld   $82
              cc43 0001  ld   $01
              cc44 0035  ld   $35
              cc45 0072  ld   $72
              cc46 0037  ld   $37
              cc47 0021  ld   $21
              cc48 003e  ld   $3e
              cc49 00fc  ld   $fc
              cc4a 0040  ld   $40
              cc4b 002b  ld   $2b
              cc4c 0036  ld   $36
              cc4d 0090  ld   $90
              cc4e 003b  ld   $3b
              cc4f 0003  ld   $03
              cc50 0039  ld   $39
              cc51 0004  ld   $04
              cc52 0059  ld   $59
              cc53 0000  ld   $00
              cc54 002b  ld   $2b
              cc55 0036  ld   $36
              cc56 0003  ld   $03
              cc57 003d  ld   $3d
              cc58 0029  ld   $29
              cc59 0059  ld   $59
              cc5a 0050  ld   $50
              cc5b 002b  ld   $2b
              cc5c 0082  ld   $82
              cc5d 0021  ld   $21
              cc5e 003a  ld   $3a
              cc5f 002b  ld   $2b
              cc60 0084  ld   $84
              cc61 0011  ld   $11
              cc62 00a0  ld   $a0
              cc63 0024  ld   $24
              cc64 00cf  ld   $cf
              cc65 0018  ld   $18
              cc66 0021  ld   $21
              cc67 0092  ld   $92
              cc68 002b  ld   $2b
              cc69 0034  ld   $34
              cc6a 0021  ld   $21
              cc6b 0030  ld   $30
              cc6c 00e3  ld   $e3
              cc6d 0008  ld   $08
              cc6e 002b  ld   $2b
              cc6f 00c0  ld   $c0
              cc70 001a  ld   $1a
              cc71 00c0  ld   $c0
              cc72 005e  ld   $5e
              cc73 0039  ld   $39
              cc74 0059  ld   $59
              cc75 0000  ld   $00
              cc76 002b  ld   $2b
              cc77 0032  ld   $32
              cc78 0021  ld   $21
              cc79 003a  ld   $3a
              cc7a 00e3  ld   $e3
              cc7b 009f  ld   $9f
              cc7c 002b  ld   $2b
              cc7d 00b4  ld   $b4
              cc7e 0059  ld   $59
              cc7f 0001  ld   $01
              cc80 002b  ld   $2b
              cc81 00b6  ld   $b6
              cc82 0003  ld   $03
              cc83 0066  ld   $66
              cc84 000d  ld   $0d
              cc85 0021  ld   $21
              cc86 0034  ld   $34
              cc87 0035  ld   $35
              cc88 0072  ld   $72
              cc89 0071  ld   $71
              cc8a 0021  ld   $21
              cc8b 003a  ld   $3a
              cc8c 00e6  ld   $e6
              cc8d 0001  ld   $01
              cc8e 002b  ld   $2b
              cc8f 0034  ld   $34
              cc90 0090  ld   $90
              cc91 0077  ld   $77
              cc92 0003  ld   $03
              cc93 0073  ld   $73
              cc94 0006  ld   $06
              cc95 0021  ld   $21
              cc96 0034  ld   $34
              cc97 00e6  ld   $e6
              cc98 0001  ld   $01
              cc99 002b  ld   $2b
              cc9a 0034  ld   $34
              cc9b 0003  ld   $03
              cc9c 0079  ld   $79
              cc9d 0011  ld   $11
              cc9e 0021  ld   $21
              cc9f 0034  ld   $34
              cca0 0099  ld   $99
              cca1 0034  ld   $34
              cca2 00b8  ld   $b8
              cca3 003a  ld   $3a
              cca4 0035  ld   $35
              cca5 0050  ld   $50
              cca6 0088  ld   $88
              cca7 0021  ld   $21
              cca8 003e  ld   $3e
              cca9 00fc  ld   $fc
              ccaa 0036  ld   $36
              ccab 002b  ld   $2b
              ccac 004a  ld   $4a
              ccad 0090  ld   $90
              ccae 008e  ld   $8e
              ccaf 0003  ld   $03
              ccb0 008a  ld   $8a
              ccb1 0006  ld   $06
              ccb2 0021  ld   $21
              ccb3 0040  ld   $40
              ccb4 00fc  ld   $fc
              ccb5 0036  ld   $36
              ccb6 002b  ld   $2b
              ccb7 004a  ld   $4a
              ccb8 0003  ld   $03
              ccb9 0090  ld   $90
              ccba 004a  ld   $4a
              ccbb 0021  ld   $21
              ccbc 0038  ld   $38
              ccbd 0099  ld   $99
              ccbe 0032  ld   $32
              ccbf 002b  ld   $2b
              ccc0 00c0  ld   $c0
              ccc1 0021  ld   $21
              ccc2 004a  ld   $4a
              ccc3 00f0  ld   $f0
              ccc4 00c0  ld   $c0
              ccc5 0021  ld   $21
              ccc6 0032  ld   $32
              ccc7 0099  ld   $99
              ccc8 00b6  ld   $b6
              ccc9 002b  ld   $2b
              ccca 0032  ld   $32
              cccb 00b8  ld   $b8
              cccc 00b4  ld   $b4
              cccd 0035  ld   $35
              ccce 004d  ld   $4d
              cccf 00a8  ld   $a8
              ccd0 0011  ld   $11
              ccd1 0066  ld   $66
              ccd2 0003  ld   $03
              ccd3 00cf  ld   $cf
              ccd4 0018  ld   $18
              ccd5 0021  ld   $21
              ccd6 0030  ld   $30
              ccd7 0099  ld   $99
              ccd8 0030  ld   $30
              ccd9 002b  ld   $2b
              ccda 00c0  ld   $c0
              ccdb 0011  ld   $11
              ccdc 00f9  ld   $f9
              ccdd 0001  ld   $01
              ccde 002b  ld   $2b
              ccdf 0082  ld   $82
              cce0 0021  ld   $21
              cce1 00c0  ld   $c0
              cce2 00f0  ld   $f0
              cce3 0082  ld   $82
              cce4 0021  ld   $21
              cce5 0030  ld   $30
              cce6 0099  ld   $99
              cce7 00b2  ld   $b2
              cce8 002b  ld   $2b
              cce9 0030  ld   $30
              ccea 00b8  ld   $b8
              cceb 00b0  ld   $b0
              ccec 0035  ld   $35
              cced 0050  ld   $50
              ccee 00c7  ld   $c7
              ccef 0011  ld   $11
              ccf0 00c0  ld   $c0
              ccf1 0002  ld   $02
              ccf2 00cf  ld   $cf
              ccf3 0018  ld   $18
              ccf4 0011  ld   $11
              ccf5 00f9  ld   $f9
              ccf6 0001  ld   $01
              ccf7 002b  ld   $2b
              ccf8 0082  ld   $82
              ccf9 0059  ld   $59
              ccfa 0000  ld   $00
              ccfb fe00  bra  ac          ;+-----------------------------------+
              ccfc fcfd  bra  $ccfd       ;|                                   |
              ccfd 1418  ld   $18,y       ;| Trampoline for page $cc00 lookups |
              ccfe e006  jmp  y,$06       ;|                                   |
              ccff c218  st   [$18]       ;+-----------------------------------+
              cd00 00f0  ld   $f0
              cd01 0082  ld   $82
              cd02 0059  ld   $59
              cd03 0000  ld   $00
              cd04 002b  ld   $2b
              cd05 0032  ld   $32
              cd06 0059  ld   $59
              cd07 0008  ld   $08
              cd08 002b  ld   $2b
              cd09 004c  ld   $4c
              cd0a 0003  ld   $03
              cd0b 00da  ld   $da
              cd0c 001f  ld   $1f
              cd0d 0021  ld   $21
              cd0e 0032  ld   $32
              cd0f 0082  ld   $82
              cd10 00ff  ld   $ff
              cd11 002b  ld   $2b
              cd12 0034  ld   $34
              cd13 0059  ld   $59
              cd14 0000  ld   $00
              cd15 002b  ld   $2b
              cd16 0036  ld   $36
              cd17 0011  ld   $11
              cd18 00f0  ld   $f0
              cd19 0001  ld   $01
              cd1a 002b  ld   $2b
              cd1b 004e  ld   $4e
              cd1c 0021  ld   $21
              cd1d 0042  ld   $42
              cd1e 002b  ld   $2b
              cd1f 003c  ld   $3c
              cd20 0011  ld   $11
              cd21 00a7  ld   $a7
              cd22 0004  ld   $04
              cd23 00cf  ld   $cf
              cd24 0018  ld   $18
              cd25 002b  ld   $2b
              cd26 00de  ld   $de
              cd27 0011  ld   $11
              cd28 0000  ld   $00
              cd29 0004  ld   $04
              cd2a 00cf  ld   $cf
              cd2b 0018  ld   $18
              cd2c 0004  ld   $04
              cd2d 0000  ld   $00
              cd2e 000e  ld   $0e
              cd2f 0021  ld   $21
              cd30 00de  ld   $de
              cd31 0059  ld   $59
              cd32 0000  ld   $00
              cd33 002b  ld   $2b
              cd34 0030  ld   $30
              cd35 0021  ld   $21
              cd36 003a  ld   $3a
              cd37 002b  ld   $2b
              cd38 00b0  ld   $b0
              cd39 0059  ld   $59
              cd3a 0001  ld   $01
              cd3b 002b  ld   $2b
              cd3c 00b2  ld   $b2
              cd3d 0004  ld   $04
              cd3e 000e  ld   $0e
              cd3f 002e  ld   $2e
              cd40 0021  ld   $21
              cd41 0036  ld   $36
              cd42 0099  ld   $99
              cd43 0034  ld   $34
              cd44 002b  ld   $2b
              cd45 0036  ld   $36
              cd46 0021  ld   $21
              cd47 0030  ld   $30
              cd48 0099  ld   $99
              cd49 00b2  ld   $b2
              cd4a 002b  ld   $2b
              cd4b 0030  ld   $30
              cd4c 00b8  ld   $b8
              cd4d 00b0  ld   $b0
              cd4e 0035  ld   $35
              cd4f 004d  ld   $4d
              cd50 0022  ld   $22
              cd51 0011  ld   $11
              cd52 000e  ld   $0e
              cd53 0004  ld   $04
              cd54 00cf  ld   $cf
              cd55 0018  ld   $18
              cd56 0021  ld   $21
              cd57 0034  ld   $34
              cd58 0099  ld   $99
              cd59 0034  ld   $34
              cd5a 002b  ld   $2b
              cd5b 0034  ld   $34
              cd5c 0011  ld   $11
              cd5d 0001  ld   $01
              cd5e 0001  ld   $01
              cd5f 0099  ld   $99
              cd60 0042  ld   $42
              cd61 0099  ld   $99
              cd62 0042  ld   $42
              cd63 002b  ld   $2b
              cd64 004a  ld   $4a
              cd65 0059  ld   $59
              cd66 0001  ld   $01
              cd67 002b  ld   $2b
              cd68 0082  ld   $82
              cd69 0011  ld   $11
              cd6a 00a0  ld   $a0
              cd6b 0023  ld   $23
              cd6c 00cf  ld   $cf
              cd6d 0018  ld   $18
              cd6e 0004  ld   $04
              cd6f 003c  ld   $3c
              cd70 0035  ld   $35
              cd71 001a  ld   $1a
              cd72 0037  ld   $37
              cd73 00f0  ld   $f0
              cd74 004a  ld   $4a
              cd75 0021  ld   $21
              cd76 0036  ld   $36
              cd77 0082  ld   $82
              cd78 00ff  ld   $ff
              cd79 0099  ld   $99
              cd7a 0034  ld   $34
              cd7b 002b  ld   $2b
              cd7c 0036  ld   $36
              cd7d 0021  ld   $21
              cd7e 004a  ld   $4a
              cd7f 00e3  ld   $e3
              cd80 0004  ld   $04
              cd81 002b  ld   $2b
              cd82 004a  ld   $4a
              cd83 00b8  ld   $b8
              cd84 004e  ld   $4e
              cd85 0035  ld   $35
              cd86 0053  ld   $53
              cd87 0056  ld   $56
              cd88 0011  ld   $11
              cd89 003c  ld   $3c
              cd8a 0004  ld   $04
              cd8b 00cf  ld   $cf
              cd8c 0018  ld   $18
              cd8d 0059  ld   $59
              cd8e 0011  ld   $11
              cd8f 00ad  ld   $ad
              cd90 002b  ld   $2b
              cd91 0082  ld   $82
              cd92 0059  ld   $59
              cd93 0000  ld   $00
              cd94 002b  ld   $2b
              cd95 0084  ld   $84
              cd96 0011  ld   $11
              cd97 00bb  ld   $bb
              cd98 0023  ld   $23
              cd99 00cf  ld   $cf
              cd9a 0018  ld   $18
              cd9b 0021  ld   $21
              cd9c 0032  ld   $32
              cd9d 0099  ld   $99
              cd9e 004c  ld   $4c
              cd9f 002b  ld   $2b
              cda0 0032  ld   $32
              cda1 0011  ld   $11
              cda2 00da  ld   $da
              cda3 0003  ld   $03
              cda4 00cf  ld   $cf
              cda5 0018  ld   $18
              cda6 0004  ld   $04
              cda7 0071  ld   $71
              cda8 0010  ld   $10
              cda9 0075  ld   $75
              cdaa 0021  ld   $21
              cdab 004c  ld   $4c
              cdac 00e3  ld   $e3
              cdad 0001  ld   $01
              cdae 002b  ld   $2b
              cdaf 004c  ld   $4c
              cdb0 00e6  ld   $e6
              cdb1 0020  ld   $20
              cdb2 0035  ld   $35
              cdb3 0056  ld   $56
              cdb4 007f  ld   $7f
              cdb5 0059  ld   $59
              cdb6 0020  ld   $20
              cdb7 002b  ld   $2b
              cdb8 004c  ld   $4c
              cdb9 0004  ld   $04
              cdba 0081  ld   $81
              cdbb 0002  ld   $02
              cdbc 0063  ld   $63
              cdbd 00ff  ld   $ff
              cdbe 0004  ld   $04
              cdbf 0083  ld   $83
              cdc0 0014  ld   $14
              cdc1 0075  ld   $75
              cdc2 0021  ld   $21
              cdc3 004c  ld   $4c
              cdc4 00e6  ld   $e6
              cdc5 0001  ld   $01
              cdc6 002b  ld   $2b
              cdc7 004c  ld   $4c
              cdc8 0011  ld   $11
              cdc9 00e0  ld   $e0
              cdca 00ff  ld   $ff
              cdcb 00b8  ld   $b8
              cdcc 004c  ld   $4c
              cdcd 0035  ld   $35
              cdce 0050  ld   $50
              cdcf 0095  ld   $95
              cdd0 0011  ld   $11
              cdd1 00e0  ld   $e0
              cdd2 00ff  ld   $ff
              cdd3 002b  ld   $2b
              cdd4 004c  ld   $4c
              cdd5 0004  ld   $04
              cdd6 0097  ld   $97
              cdd7 0002  ld   $02
              cdd8 0063  ld   $63
              cdd9 00ff  ld   $ff
              cdda 0004  ld   $04
              cddb 0099  ld   $99
              cddc 0007  ld   $07
              cddd 0075  ld   $75
              cdde 0059  ld   $59
              cddf 0000  ld   $00
              cde0 002b  ld   $2b
              cde1 004c  ld   $4c
              cde2 0063  ld   $63
              cde3 00ff  ld   $ff
              cde4 0004  ld   $04
              cde5 00a0  ld   $a0
              cde6 0007  ld   $07
              cde7 0075  ld   $75
              cde8 0059  ld   $59
              cde9 0000  ld   $00
              cdea 002b  ld   $2b
              cdeb 004c  ld   $4c
              cdec 0063  ld   $63
              cded 00ff  ld   $ff
              cdee 0004  ld   $04
              cdef 00a7  ld   $a7
              cdf0 0017  ld   $17
              cdf1 0075  ld   $75
              cdf2 0011  ld   $11
              cdf3 00e9  ld   $e9
              cdf4 00ff  ld   $ff
              cdf5 0099  ld   $99
              cdf6 003c  ld   $3c
              cdf7 002b  ld   $2b
              cdf8 003a  ld   $3a
              cdf9 0021  ld   $21
              cdfa 003a  ld   $3a
              cdfb fe00  bra  ac          ;+-----------------------------------+
              cdfc fcfd  bra  $cdfd       ;|                                   |
              cdfd 1418  ld   $18,y       ;| Trampoline for page $cd00 lookups |
              cdfe e006  jmp  y,$06       ;|                                   |
              cdff c218  st   [$18]       ;+-----------------------------------+
              ce00 00e3  ld   $e3
              ce01 0001  ld   $01
              ce02 002b  ld   $2b
              ce03 00c0  ld   $c0
              ce04 0011  ld   $11
              ce05 00fe  ld   $fe
              ce06 00ff  ld   $ff
              ce07 00f8  ld   $f8
              ce08 00c0  ld   $c0
              ce09 002b  ld   $2b
              ce0a 003a  ld   $3a
              ce0b 0063  ld   $63
              ce0c 00ff  ld   $ff
              ce0d 0004  ld   $04
              ce0e 00be  ld   $be
              ce0f 0002  ld   $02
              ce10 0090  ld   $90
              ce11 00bc  ld   $bc
              ce12 0022  ld   $22
              ce13 00a0  ld   $a0
              ce14 0008  ld   $08
              ce15 0071  ld   $71
              ce16 0004  ld   $04
              ce17 0083  ld   $83
              ce18 0004  ld   $04
              ce19 0099  ld   $99
              ce1a 0004  ld   $04
              ce1b 00a0  ld   $a0
              ce1c 0004  ld   $04
              ce1d 0022  ld   $22
              ce1e 00a8  ld   $a8
              ce1f 001f  ld   $1f
              ce20 0075  ld   $75
              ce21 0059  ld   $59
              ce22 0008  ld   $08
              ce23 002b  ld   $2b
              ce24 0098  ld   $98
              ce25 0011  ld   $11
              ce26 0000  ld   $00
              ce27 0001  ld   $01
              ce28 002b  ld   $2b
              ce29 009a  ld   $9a
              ce2a 00cf  ld   $cf
              ce2b 00dc  ld   $dc
              ce2c 0021  ld   $21
              ce2d 0098  ld   $98
              ce2e 00f3  ld   $f3
              ce2f 009a  ld   $9a
              ce30 0093  ld   $93
              ce31 009a  ld   $9a
              ce32 0093  ld   $93
              ce33 009a  ld   $9a
              ce34 0093  ld   $93
              ce35 0098  ld   $98
              ce36 001a  ld   $1a
              ce37 0098  ld   $98
              ce38 00e6  ld   $e6
              ce39 0080  ld   $80
              ce3a 0035  ld   $35
              ce3b 0050  ld   $50
              ce3c 00b0  ld   $b0
              ce3d 0063  ld   $63
              ce3e 00ff  ld   $ff
              ce3f 0023  ld   $23
              ce40 00a0  ld   $a0
              ce41 001b  ld   $1b
              ce42 0021  ld   $21
              ce43 0082  ld   $82
              ce44 00e6  ld   $e6
              ce45 0001  ld   $01
              ce46 002b  ld   $2b
              ce47 0082  ld   $82
              ce48 0035  ld   $35
              ce49 0053  ld   $53
              ce4a 00a8  ld   $a8
              ce4b 00ff  ld   $ff
              ce4c 001a  ld   $1a
              ce4d 000e  ld   $0e
              ce4e 00b8  ld   $b8
              ce4f 00aa  ld   $aa
              ce50 0035  ld   $35
              ce51 003f  ld   $3f
              ce52 00a8  ld   $a8
              ce53 001a  ld   $1a
              ce54 000e  ld   $0e
              ce55 002b  ld   $2b
              ce56 00aa  ld   $aa
              ce57 0075  ld   $75
              ce58 00cf  ld   $cf
              ce59 00dc  ld   $dc
              ce5a 0063  ld   $63
              ce5b 0090  ld   $90
              ce5c 009e  ld   $9e
              ce5d 0023  ld   $23
              ce5e 00bb  ld   $bb
              ce5f 003a  ld   $3a
              ce60 0075  ld   $75
              ce61 0011  ld   $11
              ce62 00f5  ld   $f5
              ce63 0023  ld   $23
              ce64 002b  ld   $2b
              ce65 0086  ld   $86
              ce66 002b  ld   $2b
              ce67 0092  ld   $92
              ce68 0011  ld   $11
              ce69 00a0  ld   $a0
              ce6a 0022  ld   $22
              ce6b 002b  ld   $2b
              ce6c 0088  ld   $88
              ce6d 0021  ld   $21
              ce6e 0092  ld   $92
              ce6f 00f6  ld   $f6
              ce70 002b  ld   $2b
              ce71 0094  ld   $94
              ce72 001a  ld   $1a
              ce73 0095  ld   $95
              ce74 0082  ld   $82
              ce75 0080  ld   $80
              ce76 0035  ld   $35
              ce77 003f  ld   $3f
              ce78 00db  ld   $db
              ce79 0021  ld   $21
              ce7a 0084  ld   $84
              ce7b 0035  ld   $35
              ce7c 003f  ld   $3f
              ce7d 00d9  ld   $d9
              ce7e 00cf  ld   $cf
              ce7f 0084  ld   $84
              ce80 0063  ld   $63
              ce81 00ff  ld   $ff
              ce82 0021  ld   $21
              ce83 0094  ld   $94
              ce84 00b8  ld   $b8
              ce85 0082  ld   $82
              ce86 0035  ld   $35
              ce87 003f  ld   $3f
              ce88 00e8  ld   $e8
              ce89 0093  ld   $93
              ce8a 0092  ld   $92
              ce8b 0093  ld   $93
              ce8c 0092  ld   $92
              ce8d 0090  ld   $90
              ce8e 00c6  ld   $c6
              ce8f 0021  ld   $21
              ce90 0092  ld   $92
              ce91 00b8  ld   $b8
              ce92 0086  ld   $86
              ce93 0099  ld   $99
              ce94 0088  ld   $88
              ce95 00f6  ld   $f6
              ce96 00cf  ld   $cf
              ce97 0018  ld   $18
              ce98 0063  ld   $63
              ce99 00ff  ld   $ff
              ce9a 0023  ld   $23
              ce9b 00f5  ld   $f5
              ce9c 000a  ld   $0a
              ce9d 00fe  ld   $fe
              ce9e 0000  ld   $00
              ce9f 00fd  ld   $fd
              cea0 0000  ld   $00
              cea1 00bf  ld   $bf
              cea2 0000  ld   $00
              cea3 007f  ld   $7f
              cea4 0000  ld   $00
              cea5 00ff  ld   $ff
              cea6 00ff  ld   $ff
              cea7 0024  ld   $24
              cea8 00a0  ld   $a0
              cea9 005a  ld   $5a
              ceaa 0021  ld   $21
              ceab 0082  ld   $82
              ceac 00fc  ld   $fc
              cead 0084  ld   $84
              ceae 002b  ld   $2b
              ceaf 0094  ld   $94
              ceb0 0021  ld   $21
              ceb1 0082  ld   $82
              ceb2 0035  ld   $35
              ceb3 0053  ld   $53
              ceb4 00af  ld   $af
              ceb5 0059  ld   $59
              ceb6 0000  ld   $00
              ceb7 00b8  ld   $b8
              ceb8 0082  ld   $82
              ceb9 002b  ld   $2b
              ceba 0082  ld   $82
              cebb 0021  ld   $21
              cebc 0084  ld   $84
              cebd 0035  ld   $35
              cebe 0053  ld   $53
              cebf 00ba  ld   $ba
              cec0 0059  ld   $59
              cec1 0000  ld   $00
              cec2 00b8  ld   $b8
              cec3 0084  ld   $84
              cec4 002b  ld   $2b
              cec5 0084  ld   $84
              cec6 0059  ld   $59
              cec7 0000  ld   $00
              cec8 002b  ld   $2b
              cec9 0092  ld   $92
              ceca 002b  ld   $2b
              cecb 0096  ld   $96
              cecc 0021  ld   $21
              cecd 0092  ld   $92
              cece 0099  ld   $99
              cecf 0092  ld   $92
              ced0 002b  ld   $2b
              ced1 0092  ld   $92
              ced2 0021  ld   $21
              ced3 0082  ld   $82
              ced4 0035  ld   $35
              ced5 0053  ld   $53
              ced6 00cd  ld   $cd
              ced7 0093  ld   $93
              ced8 0092  ld   $92
              ced9 0021  ld   $21
              ceda 0082  ld   $82
              cedb 0099  ld   $99
              cedc 0082  ld   $82
              cedd 002b  ld   $2b
              cede 0082  ld   $82
              cedf 0021  ld   $21
              cee0 0092  ld   $92
              cee1 00b8  ld   $b8
              cee2 0084  ld   $84
              cee3 0035  ld   $35
              cee4 0050  ld   $50
              cee5 00de  ld   $de
              cee6 002b  ld   $2b
              cee7 0092  ld   $92
              cee8 0093  ld   $93
              cee9 0082  ld   $82
              ceea 0075  ld   $75
              ceeb 00cf  ld   $cf
              ceec 00dc  ld   $dc
              ceed 0063  ld   $63
              ceee 0021  ld   $21
              ceef 0096  ld   $96
              cef0 00e3  ld   $e3
              cef1 0001  ld   $01
              cef2 0082  ld   $82
              cef3 000f  ld   $0f
              cef4 0035  ld   $35
              cef5 0072  ld   $72
              cef6 00be  ld   $be
              cef7 0021  ld   $21
              cef8 0094  ld   $94
              cef9 0035  ld   $35
              cefa 0053  ld   $53
              cefb fe00  bra  ac          ;+-----------------------------------+
              cefc fcfd  bra  $cefd       ;|                                   |
              cefd 1418  ld   $18,y       ;| Trampoline for page $ce00 lookups |
              cefe e006  jmp  y,$06       ;|                                   |
              ceff c218  st   [$18]       ;+-----------------------------------+
              cf00 00f5  ld   $f5
              cf01 0059  ld   $59
              cf02 0000  ld   $00
              cf03 00b8  ld   $b8
              cf04 0082  ld   $82
              cf05 00ff  ld   $ff
              cf06 0021  ld   $21
              cf07 0082  ld   $82
              cf08 00ff  ld   $ff
              cf09 0025  ld   $25
              cf0a 00a0  ld   $a0
              cf0b 0023  ld   $23
              cf0c 0075  ld   $75
              cf0d 0011  ld   $11
              cf0e 00a8  ld   $a8
              cf0f 0022  ld   $22
              cf10 00cf  ld   $cf
              cf11 0018  ld   $18
              cf12 0011  ld   $11
              cf13 0002  ld   $02
              cf14 0000  ld   $00
              cf15 002b  ld   $2b
              cf16 00a4  ld   $a4
              cf17 0011  ld   $11
              cf18 00ff  ld   $ff
              cf19 007f  ld   $7f
              cf1a 00f8  ld   $f8
              cf1b 00ac  ld   $ac
              cf1c 002b  ld   $2b
              cf1d 00ac  ld   $ac
              cf1e 001a  ld   $1a
              cf1f 00a2  ld   $a2
              cf20 005e  ld   $5e
              cf21 0024  ld   $24
              cf22 005e  ld   $5e
              cf23 0025  ld   $25
              cf24 005e  ld   $5e
              cf25 0026  ld   $26
              cf26 005e  ld   $5e
              cf27 0027  ld   $27
              cf28 0011  ld   $11
              cf29 00d4  ld   $d4
              cf2a 0004  ld   $04
              cf2b 002b  ld   $2b
              cf2c 0022  ld   $22
              cf2d 0063  ld   $63
              cf2e 00ff  ld   $ff
              cf2f 0025  ld   $25
              cf30 00c3  ld   $c3
              cf31 003a  ld   $3a
              cf32 0075  ld   $75
              cf33 0011  ld   $11
              cf34 00a0  ld   $a0
              cf35 0025  ld   $25
              cf36 00cf  ld   $cf
              cf37 0018  ld   $18
              cf38 0011  ld   $11
              cf39 0000  ld   $00
              cf3a 0008  ld   $08
              cf3b 002b  ld   $2b
              cf3c 0028  ld   $28
              cf3d 001a  ld   $1a
              cf3e 0029  ld   $29
              cf3f 005e  ld   $5e
              cf40 0094  ld   $94
              cf41 00cf  ld   $cf
              cf42 00dc  ld   $dc
              cf43 001a  ld   $1a
              cf44 0094  ld   $94
              cf45 005e  ld   $5e
              cf46 0029  ld   $29
              cf47 00b4  ld   $b4
              cf48 00ff  ld   $ff
              cf49 0011  ld   $11
              cf4a 0087  ld   $87
              cf4b 0000  ld   $00
              cf4c 00b8  ld   $b8
              cf4d 0094  ld   $94
              cf4e 005e  ld   $5e
              cf4f 0029  ld   $29
              cf50 00b4  ld   $b4
              cf51 00ff  ld   $ff
              cf52 001a  ld   $1a
              cf53 0028  ld   $28
              cf54 00e3  ld   $e3
              cf55 0004  ld   $04
              cf56 005e  ld   $5e
              cf57 0028  ld   $28
              cf58 00e6  ld   $e6
              cf59 00a0  ld   $a0
              cf5a 0035  ld   $35
              cf5b 0050  ld   $50
              cf5c 00d0  ld   $d0
              cf5d 0059  ld   $59
              cf5e 0000  ld   $00
              cf5f 005e  ld   $5e
              cf60 0028  ld   $28
              cf61 0093  ld   $93
              cf62 0094  ld   $94
              cf63 001a  ld   $1a
              cf64 0094  ld   $94
              cf65 00e6  ld   $e6
              cf66 0044  ld   $44
              cf67 0035  ld   $35
              cf68 0050  ld   $50
              cf69 00d0  ld   $d0
              cf6a 0063  ld   $63
              cf6b 00ff  ld   $ff
              cf6c 0026  ld   $26
              cf6d 00a0  ld   $a0
              cf6e 000a  ld   $0a
              cf6f 0000  ld   $00
              cf70 0000  ld   $00
              cf71 0000  ld   $00
              * 10 times
              cf79 0026  ld   $26
              cf7a 00aa  ld   $aa
              cf7b 000a  ld   $0a
              cf7c 0000  ld   $00
              cf7d 0000  ld   $00
              cf7e 0000  ld   $00
              * 10 times
              cf86 0026  ld   $26
              cf87 00b4  ld   $b4
              cf88 0009  ld   $09
              cf89 0075  ld   $75
              cf8a 0011  ld   $11
              cf8b 00bc  ld   $bc
              cf8c 0026  ld   $26
              cf8d 00cf  ld   $cf
              cf8e 0018  ld   $18
              cf8f 0063  ld   $63
              cf90 00ff  ld   $ff
              cf91 00ff  ld   $ff
              cf92 0026  ld   $26
              cf93 00bd  ld   $bd
              cf94 0009  ld   $09
              cf95 0035  ld   $35
              cf96 003f  ld   $3f
              cf97 00c1  ld   $c1
              cf98 0059  ld   $59
              cf99 0000  ld   $00
              cf9a 00ff  ld   $ff
              cf9b 0059  ld   $59
              cf9c 0001  ld   $01
              cf9d 00ff  ld   $ff
              cf9e 0026  ld   $26
              cf9f 00c6  ld   $c6
              cfa0 0009  ld   $09
              cfa1 0035  ld   $35
              cfa2 0072  ld   $72
              cfa3 00ca  ld   $ca
              cfa4 0059  ld   $59
              cfa5 0000  ld   $00
              cfa6 00ff  ld   $ff
              cfa7 0059  ld   $59
              cfa8 0001  ld   $01
              cfa9 00ff  ld   $ff
              cfaa 0026  ld   $26
              cfab 00cf  ld   $cf
              cfac 0009  ld   $09
              cfad 0035  ld   $35
              cfae 0056  ld   $56
              cfaf 00d3  ld   $d3
              cfb0 0059  ld   $59
              cfb1 0000  ld   $00
              cfb2 00ff  ld   $ff
              cfb3 0059  ld   $59
              cfb4 0001  ld   $01
              cfb5 00ff  ld   $ff
              cfb6 0026  ld   $26
              cfb7 00d8  ld   $d8
              cfb8 0009  ld   $09
              cfb9 0035  ld   $35
              cfba 0053  ld   $53
              cfbb 00dc  ld   $dc
              cfbc 0059  ld   $59
              cfbd 0000  ld   $00
              cfbe 00ff  ld   $ff
              cfbf 0059  ld   $59
              cfc0 0001  ld   $01
              cfc1 00ff  ld   $ff
              cfc2 0026  ld   $26
              cfc3 00e1  ld   $e1
              cfc4 0009  ld   $09
              cfc5 0035  ld   $35
              cfc6 0050  ld   $50
              cfc7 00e5  ld   $e5
              cfc8 0059  ld   $59
              cfc9 0000  ld   $00
              cfca 00ff  ld   $ff
              cfcb 0059  ld   $59
              cfcc 0001  ld   $01
              cfcd 00ff  ld   $ff
              cfce 0026  ld   $26
              cfcf 00ea  ld   $ea
              cfd0 0009  ld   $09
              cfd1 0035  ld   $35
              cfd2 004d  ld   $4d
              cfd3 00ee  ld   $ee
              cfd4 0059  ld   $59
              cfd5 0000  ld   $00
              cfd6 00ff  ld   $ff
              cfd7 0059  ld   $59
              cfd8 0001  ld   $01
              cfd9 00ff  ld   $ff
              cfda 0026  ld   $26
              cfdb 00f3  ld   $f3
              cfdc 000a  ld   $0a
              cfdd 0011  ld   $11
              cfde 0000  ld   $00
              cfdf 0006  ld   $06
              cfe0 002b  ld   $2b
              cfe1 0022  ld   $22
              cfe2 0021  ld   $21
              cfe3 0098  ld   $98
              cfe4 00b4  ld   $b4
              cfe5 00f6  ld   $f6
              cfe6 00ff  ld   $ff
              cfe7 0000  ld   $00
              cfe8 0000  ld   $00         ;End of Apps/Horizon/Horizon_at67_v1.gt1, size 1243
                                          ;+-----------------------------------+
                                          ;| Apps/CardBoot/CardBoot.gt1        |
                                          ;+-----------------------------------+
              cfe9 dc45  st   $45,[y,x++] ;'E'
              cfea dc67  st   $67,[y,x++] ;'g'
              cfeb dc67  st   $67,[y,x++] ;'g'
              cfec dc00  st   $00,[y,x++] ;'\x00'
              cfed dc00  st   $00,[y,x++] ;'\x00'
              cfee dc00  st   $00,[y,x++] ;'\x00'
              cfef dc00  st   $00,[y,x++] ;'\x00'
              cff0 dc00  st   $00,[y,x++] ;'\x00'
              cff1 000e  ld   $0e
              cff2 c218  st   [$18]
              cff3 00cb  ld   $cb
              cff4 14e1  ld   $e1,y
              cff5 e071  jmp  y,$71
              cff6 c219  st   [$19]
Boot:         cff7 0002  ld   $02
              cff8 0000  ld   $00
              cff9 004c  ld   $4c
              cffa 001a  ld   $1a
              cffb fe00  bra  ac          ;+-----------------------------------+
              cffc fcfd  bra  $cffd       ;|                                   |
              cffd 1418  ld   $18,y       ;| Trampoline for page $cf00 lookups |
              cffe e006  jmp  y,$06       ;|                                   |
              cfff c218  st   [$18]       ;+-----------------------------------+
              d000 0021  ld   $21
              d001 00e6  ld   $e6
              d002 0040  ld   $40
              d003 0035  ld   $35
              d004 0053  ld   $53
              d005 000b  ld   $0b
              d006 0021  ld   $21
              d007 000e  ld   $0e
              d008 00f3  ld   $f3
              d009 0017  ld   $17
              d00a 0090  ld   $90
              d00b 0005  ld   $05
              d00c 0011  ld   $11
              d00d 0000  ld   $00
              d00e 007d  ld   $7d
              d00f 002b  ld   $2b
              d010 0030  ld   $30
              d011 0011  ld   $11
              d012 00f9  ld   $f9
              d013 0001  ld   $01
              d014 002b  ld   $2b
              d015 0032  ld   $32
              d016 0059  ld   $59
              d017 0000  ld   $00
              d018 0085  ld   $85
              d019 00b1  ld   $b1
              d01a 0072  ld   $72
              d01b 0059  ld   $59
              d01c 0020  ld   $20
              d01d 00f0  ld   $f0
              d01e 0032  ld   $32
              d01f 0011  ld   $11
              d020 00e8  ld   $e8
              d021 0001  ld   $01
              d022 002b  ld   $2b
              d023 0034  ld   $34
              d024 0059  ld   $59
              d025 007b  ld   $7b
              d026 00f0  ld   $f0
              d027 0034  ld   $34
              d028 0021  ld   $21
              d029 0034  ld   $34
              d02a 00e3  ld   $e3
              d02b 0002  ld   $02
              d02c 002b  ld   $2b
              d02d 0034  ld   $34
              d02e 0011  ld   $11
              d02f 00f0  ld   $f0
              d030 0001  ld   $01
              d031 00fc  ld   $fc
              d032 0034  ld   $34
              d033 0035  ld   $35
              d034 0072  ld   $72
              d035 0023  ld   $23
              d036 0011  ld   $11
              d037 007c  ld   $7c
              d038 0000  ld   $00
              d039 005e  ld   $5e
              d03a 0027  ld   $27
              d03b 0059  ld   $59
              d03c 00ff  ld   $ff
              d03d 002b  ld   $2b
              d03e 0025  ld   $25
              d03f 0059  ld   $59
              d040 0000  ld   $00
              d041 005e  ld   $5e
              d042 0024  ld   $24
              d043 00b4  ld   $b4
              d044 00f3  ld   $f3
              d045 0011  ld   $11
              d046 00a0  ld   $a0
              d047 0058  ld   $58
              d048 002b  ld   $2b
              d049 001a  ld   $1a
              d04a 00ff  ld   $ff
              d04b 0058  ld   $58
              d04c 00a0  ld   $a0
              d04d 0042  ld   $42
              d04e 00cd  ld   $cd
              d04f 00c8  ld   $c8
              d050 0075  ld   $75
              d051 0059  ld   $59
              d052 0000  ld   $00
              d053 002b  ld   $2b
              d054 0036  ld   $36
              d055 0059  ld   $59
              d056 000a  ld   $0a
              d057 002b  ld   $2b
              d058 0034  ld   $34
              d059 0085  ld   $85
              d05a 00bc  ld   $bc
              d05b 005d  ld   $5d
              d05c 0021  ld   $21
              d05d 0034  ld   $34
              d05e 00e6  ld   $e6
              d05f 0001  ld   $01
              d060 0035  ld   $35
              d061 004d  ld   $4d
              d062 00a7  ld   $a7
              d063 0085  ld   $85
              d064 00a2  ld   $a2
              d065 005d  ld   $5d
              d066 00cd  ld   $cd
              d067 00be  ld   $be
              d068 0040  ld   $40
              d069 0000  ld   $00
              d06a 0000  ld   $00
              d06b 0000  ld   $00
              d06c 0000  ld   $00
              d06d 0095  ld   $95
              d06e 0085  ld   $85
              d06f 00a2  ld   $a2
              d070 005f  ld   $5f
              d071 0085  ld   $85
              d072 00da  ld   $da
              d073 005f  ld   $5f
              d074 008c  ld   $8c
              d075 0001  ld   $01
              d076 0063  ld   $63
              d077 00ff  ld   $ff
              d078 00cd  ld   $cd
              d079 00dd  ld   $dd
              d07a 0075  ld   $75
              d07b 0085  ld   $85
              d07c 00a2  ld   $a2
              d07d 0058  ld   $58
              d07e 0035  ld   $35
              d07f 003f  ld   $3f
              d080 00db  ld   $db
              d081 0085  ld   $85
              d082 00af  ld   $af
              d083 005d  ld   $5d
              d084 001a  ld   $1a
              d085 000e  ld   $0e
              d086 00e6  ld   $e6
              d087 003c  ld   $3c
              d088 0035  ld   $35
              d089 0050  ld   $50
              d08a 00cb  ld   $cb
              d08b 0063  ld   $63
              d08c 00ff  ld   $ff
              d08d 0093  ld   $93
              d08e 001b  ld   $1b
              d08f 00ff  ld   $ff
              d090 0059  ld   $59
              d091 00a0  ld   $a0
              d092 0044  ld   $44
              d093 00cd  ld   $cd
              d094 00df  ld   $df
              d095 0075  ld   $75
              d096 0085  ld   $85
              d097 00a2  ld   $a2
              d098 005d  ld   $5d
              d099 00cd  ld   $cd
              d09a 00ac  ld   $ac
              d09b 0048  ld   $48
              d09c 0000  ld   $00
              d09d 0000  ld   $00
              d09e 0001  ld   $01
              d09f 00aa  ld   $aa
              d0a0 0087  ld   $87
              d0a1 0085  ld   $85
              d0a2 00a2  ld   $a2
              d0a3 005f  ld   $5f
              d0a4 0085  ld   $85
              d0a5 00da  ld   $da
              d0a6 005f  ld   $5f
              d0a7 008c  ld   $8c
              d0a8 00ff  ld   $ff
              d0a9 0035  ld   $35
              d0aa 003f  ld   $3f
              d0ab 00d9  ld   $d9
              d0ac 0021  ld   $21
              d0ad 0038  ld   $38
              d0ae 0082  ld   $82
              d0af 0004  ld   $04
              d0b0 0035  ld   $35
              d0b1 003f  ld   $3f
              d0b2 00c4  ld   $c4
              d0b3 0059  ld   $59
              d0b4 0001  ld   $01
              d0b5 002b  ld   $2b
              d0b6 0036  ld   $36
              d0b7 0090  ld   $90
              d0b8 00d9  ld   $d9
              d0b9 0085  ld   $85
              d0ba 00bc  ld   $bc
              d0bb 005d  ld   $5d
              d0bc 0085  ld   $85
              d0bd 00bc  ld   $bc
              d0be 005d  ld   $5d
              d0bf 0085  ld   $85
              d0c0 00bc  ld   $bc
              d0c1 005d  ld   $5d
              d0c2 0085  ld   $85
              d0c3 00bc  ld   $bc
              d0c4 005d  ld   $5d
              d0c5 008c  ld   $8c
              d0c6 00aa  ld   $aa
              d0c7 0035  ld   $35
              d0c8 0072  ld   $72
              d0c9 00d9  ld   $d9
              d0ca 0059  ld   $59
              d0cb 0002  ld   $02
              d0cc 002b  ld   $2b
              d0cd 0036  ld   $36
              d0ce 0021  ld   $21
              d0cf 0038  ld   $38
              d0d0 0082  ld   $82
              d0d1 00fa  ld   $fa
              d0d2 0063  ld   $63
              d0d3 00ff  ld   $ff
              d0d4 0093  ld   $93
              d0d5 001b  ld   $1b
              d0d6 00ff  ld   $ff
              d0d7 005a  ld   $5a
              d0d8 00a0  ld   $a0
              d0d9 0044  ld   $44
              d0da 00cd  ld   $cd
              d0db 00ca  ld   $ca
              d0dc 0075  ld   $75
              d0dd 0085  ld   $85
              d0de 00a2  ld   $a2
              d0df 005d  ld   $5d
              d0e0 00cd  ld   $cd
              d0e1 00ac  ld   $ac
              d0e2 007a  ld   $7a
              d0e3 0000  ld   $00
              d0e4 0000  ld   $00
              d0e5 0000  ld   $00
              * 5 times
              d0e8 0085  ld   $85
              d0e9 00a2  ld   $a2
              d0ea 005f  ld   $5f
              d0eb 0085  ld   $85
              d0ec 00da  ld   $da
              d0ed 005f  ld   $5f
              d0ee 0085  ld   $85
              d0ef 00bc  ld   $bc
              d0f0 005d  ld   $5d
              d0f1 0082  ld   $82
              d0f2 0040  ld   $40
              d0f3 0035  ld   $35
              d0f4 003f  ld   $3f
              d0f5 00be  ld   $be
              d0f6 0059  ld   $59
              d0f7 0004  ld   $04
              d0f8 002b  ld   $2b
              d0f9 0036  ld   $36
              d0fa 0085  ld   $85
              d0fb fe00  bra  ac          ;+-----------------------------------+
              d0fc fcfd  bra  $d0fd       ;|                                   |
              d0fd 1418  ld   $18,y       ;| Trampoline for page $d000 lookups |
              d0fe e006  jmp  y,$06       ;|                                   |
              d0ff c218  st   [$18]       ;+-----------------------------------+
              d100 00bc  ld   $bc
              d101 005d  ld   $5d
              d102 0085  ld   $85
              d103 00bc  ld   $bc
              d104 005d  ld   $5d
              d105 0021  ld   $21
              d106 0038  ld   $38
              d107 0082  ld   $82
              d108 00fe  ld   $fe
              d109 0063  ld   $63
              d10a 00ff  ld   $ff
              d10b 00cd  ld   $cd
              d10c 00df  ld   $df
              d10d 0075  ld   $75
              d10e 00cd  ld   $cd
              d10f 00d5  ld   $d5
              d110 0077  ld   $77
              d111 0000  ld   $00
              d112 0000  ld   $00
              d113 0000  ld   $00
              * 5 times
              d116 0085  ld   $85
              d117 00a2  ld   $a2
              d118 005f  ld   $5f
              d119 0085  ld   $85
              d11a 00da  ld   $da
              d11b 005f  ld   $5f
              d11c 0082  ld   $82
              d11d 00fe  ld   $fe
              d11e 0063  ld   $63
              d11f 00ff  ld   $ff
              d120 0093  ld   $93
              d121 001b  ld   $1b
              d122 00ff  ld   $ff
              d123 005b  ld   $5b
              d124 00a0  ld   $a0
              d125 0055  ld   $55
              d126 00cd  ld   $cd
              d127 00c4  ld   $c4
              d128 0075  ld   $75
              d129 0021  ld   $21
              d12a 0036  ld   $36
              d12b 008c  ld   $8c
              d12c 0001  ld   $01
              d12d 0035  ld   $35
              d12e 0072  ld   $72
              d12f 00b2  ld   $b2
              d130 00cd  ld   $cd
              d131 00b0  ld   $b0
              d132 0069  ld   $69
              d133 0000  ld   $00
              d134 0000  ld   $00
              d135 0000  ld   $00
              * 5 times
              d138 0090  ld   $90
              d139 00ba  ld   $ba
              d13a 00cd  ld   $cd
              d13b 00ba  ld   $ba
              d13c 0069  ld   $69
              d13d 0040  ld   $40
              d13e 0000  ld   $00
              d13f 0000  ld   $00
              d140 0000  ld   $00
              d141 0000  ld   $00
              d142 0085  ld   $85
              d143 00a2  ld   $a2
              d144 005f  ld   $5f
              d145 0085  ld   $85
              d146 00da  ld   $da
              d147 005f  ld   $5f
              d148 0082  ld   $82
              d149 00fe  ld   $fe
              d14a 0063  ld   $63
              d14b 00ff  ld   $ff
              d14c 00cd  ld   $cd
              d14d 00db  ld   $db
              d14e 0075  ld   $75
              d14f 0085  ld   $85
              d150 00ce  ld   $ce
              d151 005a  ld   $5a
              d152 0085  ld   $85
              d153 00a2  ld   $a2
              d154 005b  ld   $5b
              d155 0021  ld   $21
              d156 0038  ld   $38
              d157 0035  ld   $35
              d158 003f  ld   $3f
              d159 00d9  ld   $d9
              d15a 001a  ld   $1a
              d15b 000e  ld   $0e
              d15c 00e6  ld   $e6
              d15d 0078  ld   $78
              d15e 0035  ld   $35
              d15f 0050  ld   $50
              d160 00c7  ld   $c7
              d161 0063  ld   $63
              d162 00ff  ld   $ff
              d163 00cd  ld   $cd
              d164 00f0  ld   $f0
              d165 0075  ld   $75
              d166 00cd  ld   $cd
              d167 00e6  ld   $e6
              d168 0050  ld   $50
              d169 0000  ld   $00
              d16a 0000  ld   $00
              d16b 0002  ld   $02
              d16c 0000  ld   $00
              d16d 0000  ld   $00
              d16e 0085  ld   $85
              d16f 00a2  ld   $a2
              d170 005f  ld   $5f
              d171 0085  ld   $85
              d172 00da  ld   $da
              d173 005f  ld   $5f
              d174 0082  ld   $82
              d175 00fe  ld   $fe
              d176 0063  ld   $63
              d177 00ff  ld   $ff
              d178 0093  ld   $93
              d179 001b  ld   $1b
              d17a 00ff  ld   $ff
              d17b 005c  ld   $5c
              d17c 00a0  ld   $a0
              d17d 0041  ld   $41
              d17e 00cd  ld   $cd
              d17f 00dc  ld   $dc
              d180 0075  ld   $75
              d181 00cd  ld   $cd
              d182 00a9  ld   $a9
              d183 0051  ld   $51
              d184 0000  ld   $00
              d185 0000  ld   $00
              d186 0000  ld   $00
              * 5 times
              d189 002b  ld   $2b
              d18a 003a  ld   $3a
              d18b 002b  ld   $2b
              d18c 003c  ld   $3c
              d18d 001a  ld   $1a
              d18e 003f  ld   $3f
              d18f 0093  ld   $93
              d190 003c  ld   $3c
              d191 00f0  ld   $f0
              d192 003c  ld   $3c
              d193 001a  ld   $1a
              d194 003e  ld   $3e
              d195 0093  ld   $93
              d196 003c  ld   $3c
              d197 00f0  ld   $f0
              d198 003c  ld   $3c
              d199 001a  ld   $1a
              d19a 0041  ld   $41
              d19b 0093  ld   $93
              d19c 003c  ld   $3c
              d19d 00f0  ld   $f0
              d19e 003c  ld   $3c
              d19f 001a  ld   $1a
              d1a0 0040  ld   $40
              d1a1 0093  ld   $93
              d1a2 003c  ld   $3c
              d1a3 00f0  ld   $f0
              d1a4 003c  ld   $3c
              d1a5 0021  ld   $21
              d1a6 003a  ld   $3a
              d1a7 0085  ld   $85
              d1a8 00a2  ld   $a2
              d1a9 005f  ld   $5f
              d1aa 0085  ld   $85
              d1ab 00da  ld   $da
              d1ac 005f  ld   $5f
              d1ad 0082  ld   $82
              d1ae 00fe  ld   $fe
              d1af 0035  ld   $35
              d1b0 0072  ld   $72
              d1b1 00da  ld   $da
              d1b2 0085  ld   $85
              d1b3 00bc  ld   $bc
              d1b4 005d  ld   $5d
              d1b5 008c  ld   $8c
              d1b6 00ff  ld   $ff
              d1b7 0035  ld   $35
              d1b8 003f  ld   $3f
              d1b9 00d2  ld   $d2
              d1ba 0063  ld   $63
              d1bb 00ff  ld   $ff
              d1bc 0093  ld   $93
              d1bd 001b  ld   $1b
              d1be 00ff  ld   $ff
              d1bf 005d  ld   $5d
              d1c0 00a0  ld   $a0
              d1c1 0035  ld   $35
              d1c2 00cd  ld   $cd
              d1c3 00ab  ld   $ab
              d1c4 0011  ld   $11
              d1c5 0009  ld   $09
              d1c6 000b  ld   $0b
              d1c7 002b  ld   $2b
              d1c8 0022  ld   $22
              d1c9 0011  ld   $11
              d1ca 0078  ld   $78
              d1cb 0080  ld   $80
              d1cc 00b4  ld   $b4
              d1cd 00fa  ld   $fa
              d1ce 00ff  ld   $ff
              d1cf 00cd  ld   $cd
              d1d0 00b8  ld   $b8
              d1d1 0011  ld   $11
              d1d2 0009  ld   $09
              d1d3 000b  ld   $0b
              d1d4 002b  ld   $2b
              d1d5 0022  ld   $22
              d1d6 0011  ld   $11
              d1d7 007c  ld   $7c
              d1d8 0080  ld   $80
              d1d9 00b4  ld   $b4
              d1da 00fa  ld   $fa
              d1db 00ff  ld   $ff
              d1dc 00cd  ld   $cd
              d1dd 00d0  ld   $d0
              d1de 0059  ld   $59
              d1df 00ff  ld   $ff
              d1e0 005e  ld   $5e
              d1e1 002a  ld   $2a
              d1e2 0059  ld   $59
              d1e3 002a  ld   $2a
              d1e4 002b  ld   $2b
              d1e5 0024  ld   $24
              d1e6 00e3  ld   $e3
              d1e7 0001  ld   $01
              d1e8 002b  ld   $2b
              d1e9 0026  ld   $26
              d1ea 0011  ld   $11
              d1eb 0015  ld   $15
              d1ec 000b  ld   $0b
              d1ed 002b  ld   $2b
              d1ee 0022  ld   $22
              d1ef 00b4  ld   $b4
              d1f0 00cb  ld   $cb
              d1f1 001a  ld   $1a
              d1f2 002a  ld   $2a
              d1f3 00ff  ld   $ff
              d1f4 0093  ld   $93
              d1f5 001b  ld   $1b
              d1f6 00ff  ld   $ff
              d1f7 005e  ld   $5e
              d1f8 00a0  ld   $a0
              d1f9 0029  ld   $29
              d1fa 00cd  ld   $cd
              d1fb fe00  bra  ac          ;+-----------------------------------+
              d1fc fcfd  bra  $d1fd       ;|                                   |
              d1fd 1418  ld   $18,y       ;| Trampoline for page $d100 lookups |
              d1fe e006  jmp  y,$06       ;|                                   |
              d1ff c218  st   [$18]       ;+-----------------------------------+
              d200 00c4  ld   $c4
              d201 00fc  ld   $fc
              d202 0043  ld   $43
              d203 005e  ld   $5e
              d204 0043  ld   $43
              d205 0059  ld   $59
              d206 0008  ld   $08
              d207 002b  ld   $2b
              d208 0034  ld   $34
              d209 0021  ld   $21
              d20a 0042  ld   $42
              d20b 0035  ld   $35
              d20c 0053  ld   $53
              d20d 00b8  ld   $b8
              d20e 0099  ld   $99
              d20f 0042  ld   $42
              d210 002b  ld   $2b
              d211 0042  ld   $42
              d212 0011  ld   $11
              d213 0021  ld   $21
              d214 0010  ld   $10
              d215 00fc  ld   $fc
              d216 0042  ld   $42
              d217 0090  ld   $90
              d218 00ba  ld   $ba
              d219 0099  ld   $99
              d21a 0042  ld   $42
              d21b 002b  ld   $2b
              d21c 0042  ld   $42
              d21d 0021  ld   $21
              d21e 0034  ld   $34
              d21f 00e6  ld   $e6
              d220 0001  ld   $01
              d221 0035  ld   $35
              d222 004d  ld   $4d
              d223 00a6  ld   $a6
              d224 00ff  ld   $ff
              d225 0093  ld   $93
              d226 001b  ld   $1b
              d227 00ff  ld   $ff
              d228 005f  ld   $5f
              d229 00a0  ld   $a0
              d22a 0057  ld   $57
              d22b 00cd  ld   $cd
              d22c 00d6  ld   $d6
              d22d 0075  ld   $75
              d22e 002b  ld   $2b
              d22f 003a  ld   $3a
              d230 0021  ld   $21
              d231 0044  ld   $44
              d232 002b  ld   $2b
              d233 003c  ld   $3c
              d234 0059  ld   $59
              d235 00ff  ld   $ff
              d236 00f0  ld   $f0
              d237 003c  ld   $3c
              d238 0093  ld   $93
              d239 003c  ld   $3c
              d23a 00f0  ld   $f0
              d23b 003c  ld   $3c
              d23c 0093  ld   $93
              d23d 003c  ld   $3c
              d23e 0059  ld   $59
              d23f 0006  ld   $06
              d240 002b  ld   $2b
              d241 0034  ld   $34
              d242 0021  ld   $21
              d243 003a  ld   $3a
              d244 00ad  ld   $ad
              d245 0093  ld   $93
              d246 003a  ld   $3a
              d247 00f0  ld   $f0
              d248 003c  ld   $3c
              d249 0093  ld   $93
              d24a 003c  ld   $3c
              d24b 0021  ld   $21
              d24c 0034  ld   $34
              d24d 00e6  ld   $e6
              d24e 0001  ld   $01
              d24f 0035  ld   $35
              d250 004d  ld   $4d
              d251 00b3  ld   $b3
              d252 0021  ld   $21
              d253 0044  ld   $44
              d254 002b  ld   $2b
              d255 0024  ld   $24
              d256 00e3  ld   $e3
              d257 0008  ld   $08
              d258 002b  ld   $2b
              d259 0026  ld   $26
              d25a 0011  ld   $11
              d25b 0015  ld   $15
              d25c 000b  ld   $0b
              d25d 002b  ld   $2b
              d25e 0022  ld   $22
              d25f 00b4  ld   $b4
              d260 00cb  ld   $cb
              d261 0063  ld   $63
              d262 00ff  ld   $ff
              d263 00cd  ld   $cd
              d264 00f2  ld   $f2
              d265 0075  ld   $75
              d266 0059  ld   $59
              d267 0008  ld   $08
              d268 002b  ld   $2b
              d269 0034  ld   $34
              d26a 0085  ld   $85
              d26b 00bc  ld   $bc
              d26c 005d  ld   $5d
              d26d 0082  ld   $82
              d26e 0080  ld   $80
              d26f 0035  ld   $35
              d270 003f  ld   $3f
              d271 00ec  ld   $ec
              d272 0021  ld   $21
              d273 0034  ld   $34
              d274 00e6  ld   $e6
              d275 0001  ld   $01
              d276 0035  ld   $35
              d277 004d  ld   $4d
              d278 00db  ld   $db
              d279 001a  ld   $1a
              d27a 002a  ld   $2a
              d27b 002b  ld   $2b
              d27c 0038  ld   $38
              d27d 0063  ld   $63
              d27e 00ff  ld   $ff
              d27f 0093  ld   $93
              d280 001b  ld   $1b
              d281 00ff  ld   $ff
              d282 0060  ld   $60
              d283 00a0  ld   $a0
              d284 004f  ld   $4f
              d285 00cd  ld   $cd
              d286 00c3  ld   $c3
              d287 0075  ld   $75
              d288 0085  ld   $85
              d289 00cc  ld   $cc
              d28a 0058  ld   $58
              d28b 0085  ld   $85
              d28c 00a2  ld   $a2
              d28d 0059  ld   $59
              d28e 0085  ld   $85
              d28f 00c8  ld   $c8
              d290 005b  ld   $5b
              d291 0021  ld   $21
              d292 0036  ld   $36
              d293 00e6  ld   $e6
              d294 0002  ld   $02
              d295 0035  ld   $35
              d296 0072  ld   $72
              d297 00b4  ld   $b4
              d298 0085  ld   $85
              d299 00a2  ld   $a2
              d29a 005a  ld   $5a
              d29b 0021  ld   $21
              d29c 0036  ld   $36
              d29d 00e6  ld   $e6
              d29e 0002  ld   $02
              d29f 0035  ld   $35
              d2a0 004d  ld   $4d
              d2a1 00be  ld   $be
              d2a2 0085  ld   $85
              d2a3 00df  ld   $df
              d2a4 005b  ld   $5b
              d2a5 0085  ld   $85
              d2a6 00af  ld   $af
              d2a7 005d  ld   $5d
              d2a8 0063  ld   $63
              d2a9 00ff  ld   $ff
              d2aa 00cd  ld   $cd
              d2ab 00ea  ld   $ea
              d2ac 0075  ld   $75
              d2ad 0085  ld   $85
              d2ae 00a2  ld   $a2
              d2af 0063  ld   $63
              d2b0 00cd  ld   $cd
              d2b1 00d3  ld   $d3
              d2b2 0056  ld   $56
              d2b3 006f  ld   $6f
              d2b4 006c  ld   $6c
              d2b5 002e  ld   $2e
              d2b6 0049  ld   $49
              d2b7 0044  ld   $44
              d2b8 0020  ld   $20
              d2b9 0000  ld   $00
              d2ba 0085  ld   $85
              d2bb 00a2  ld   $a2
              d2bc 0069  ld   $69
              d2bd 0059  ld   $59
              d2be 000b  ld   $0b
              d2bf 0099  ld   $99
              d2c0 0030  ld   $30
              d2c1 00f6  ld   $f6
              d2c2 002b  ld   $2b
              d2c3 0046  ld   $46
              d2c4 0085  ld   $85
              d2c5 00ce  ld   $ce
              d2c6 0067  ld   $67
              d2c7 0011  ld   $11
              d2c8 0000  ld   $00
              d2c9 0002  ld   $02
              d2ca 00fc  ld   $fc
              d2cb 0046  ld   $46
              d2cc 0085  ld   $85
              d2cd 00bb  ld   $bb
              d2ce 0068  ld   $68
              d2cf 0063  ld   $63
              d2d0 00ff  ld   $ff
              d2d1 0093  ld   $93
              d2d2 001b  ld   $1b
              d2d3 00ff  ld   $ff
              d2d4 0061  ld   $61
              d2d5 00a0  ld   $a0
              d2d6 005e  ld   $5e
              d2d7 00cd  ld   $cd
              d2d8 00ea  ld   $ea
              d2d9 0075  ld   $75
              d2da 0059  ld   $59
              d2db 0000  ld   $00
              d2dc 002b  ld   $2b
              d2dd 0040  ld   $40
              d2de 002b  ld   $2b
              d2df 003e  ld   $3e
              d2e0 0085  ld   $85
              d2e1 00a2  ld   $a2
              d2e2 0063  ld   $63
              d2e3 00cd  ld   $cd
              d2e4 00b1  ld   $b1
              d2e5 004d  ld   $4d
              d2e6 0042  ld   $42
              d2e7 0052  ld   $52
              d2e8 0020  ld   $20
              d2e9 0000  ld   $00
              d2ea 0085  ld   $85
              d2eb 00a2  ld   $a2
              d2ec 0069  ld   $69
              d2ed 0011  ld   $11
              d2ee 00fe  ld   $fe
              d2ef 0001  ld   $01
              d2f0 0099  ld   $99
              d2f1 0030  ld   $30
              d2f2 00f6  ld   $f6
              d2f3 002b  ld   $2b
              d2f4 0046  ld   $46
              d2f5 0011  ld   $11
              d2f6 0055  ld   $55
              d2f7 00aa  ld   $aa
              d2f8 00fc  ld   $fc
              d2f9 0046  ld   $46
              d2fa 0035  ld   $35
              d2fb fe00  bra  ac          ;+-----------------------------------+
              d2fc fcfd  bra  $d2fd       ;|                                   |
              d2fd 1418  ld   $18,y       ;| Trampoline for page $d200 lookups |
              d2fe e006  jmp  y,$06       ;|                                   |
              d2ff c218  st   [$18]       ;+-----------------------------------+
              d300 0072  ld   $72
              d301 00e8  ld   $e8
              d302 0011  ld   $11
              d303 00c6  ld   $c6
              d304 0001  ld   $01
              d305 0099  ld   $99
              d306 0030  ld   $30
              d307 00f6  ld   $f6
              d308 002b  ld   $2b
              d309 0040  ld   $40
              d30a 0011  ld   $11
              d30b 00c8  ld   $c8
              d30c 0001  ld   $01
              d30d 0099  ld   $99
              d30e 0030  ld   $30
              d30f 00f6  ld   $f6
              d310 002b  ld   $2b
              d311 003e  ld   $3e
              d312 0011  ld   $11
              d313 00c2  ld   $c2
              d314 0001  ld   $01
              d315 0099  ld   $99
              d316 0030  ld   $30
              d317 00ad  ld   $ad
              d318 002b  ld   $2b
              d319 0046  ld   $46
              d31a 0085  ld   $85
              d31b 00a2  ld   $a2
              d31c 0068  ld   $68
              d31d 0059  ld   $59
              d31e 000b  ld   $0b
              d31f 00fc  ld   $fc
              d320 0046  ld   $46
              d321 0035  ld   $35
              d322 003f  ld   $3f
              d323 00e8  ld   $e8
              d324 008c  ld   $8c
              d325 0007  ld   $07
              d326 0063  ld   $63
              d327 00ff  ld   $ff
              d328 00cd  ld   $cd
              d329 00f9  ld   $f9
              d32a 002b  ld   $2b
              d32b 0048  ld   $48
              d32c 0099  ld   $99
              d32d 0048  ld   $48
              d32e 00e6  ld   $e6
              d32f 0001  ld   $01
              d330 005e  ld   $5e
              d331 0019  ld   $19
              d332 0088  ld   $88
              d333 00ff  ld   $ff
              d334 002b  ld   $2b
              d335 004a  ld   $4a
              d336 00ff  ld   $ff
              d337 0093  ld   $93
              d338 001b  ld   $1b
              d339 00ff  ld   $ff
              d33a 0062  ld   $62
              d33b 00a0  ld   $a0
              d33c 0060  ld   $60
              d33d 00cd  ld   $cd
              d33e 00fb  ld   $fb
              d33f 0075  ld   $75
              d340 0059  ld   $59
              d341 000d  ld   $0d
              d342 0099  ld   $99
              d343 0030  ld   $30
              d344 00ad  ld   $ad
              d345 0085  ld   $85
              d346 00ee  ld   $ee
              d347 0061  ld   $61
              d348 0021  ld   $21
              d349 0040  ld   $40
              d34a 002b  ld   $2b
              d34b 004c  ld   $4c
              d34c 0021  ld   $21
              d34d 003e  ld   $3e
              d34e 002b  ld   $2b
              d34f 004e  ld   $4e
              d350 0059  ld   $59
              d351 000e  ld   $0e
              d352 0099  ld   $99
              d353 0030  ld   $30
              d354 00f6  ld   $f6
              d355 002b  ld   $2b
              d356 0050  ld   $50
              d357 0085  ld   $85
              d358 00d2  ld   $d2
              d359 0066  ld   $66
              d35a 002b  ld   $2b
              d35b 0052  ld   $52
              d35c 0021  ld   $21
              d35d 004e  ld   $4e
              d35e 002b  ld   $2b
              d35f 0054  ld   $54
              d360 0059  ld   $59
              d361 0024  ld   $24
              d362 0099  ld   $99
              d363 0030  ld   $30
              d364 00f6  ld   $f6
              d365 002b  ld   $2b
              d366 0050  ld   $50
              d367 0059  ld   $59
              d368 0026  ld   $26
              d369 0099  ld   $99
              d36a 0030  ld   $30
              d36b 00f6  ld   $f6
              d36c 002b  ld   $2b
              d36d 0056  ld   $56
              d36e 0085  ld   $85
              d36f 00d6  ld   $d6
              d370 0066  ld   $66
              d371 0085  ld   $85
              d372 00d6  ld   $d6
              d373 0066  ld   $66
              d374 0059  ld   $59
              d375 0000  ld   $00
              d376 00b8  ld   $b8
              d377 0048  ld   $48
              d378 00b8  ld   $b8
              d379 0048  ld   $48
              d37a 002b  ld   $2b
              d37b 0050  ld   $50
              d37c 0011  ld   $11
              d37d 00ff  ld   $ff
              d37e 00ff  ld   $ff
              d37f 002b  ld   $2b
              d380 0056  ld   $56
              d381 0085  ld   $85
              d382 00d6  ld   $d6
              d383 0066  ld   $66
              d384 002b  ld   $2b
              d385 0058  ld   $58
              d386 0021  ld   $21
              d387 004e  ld   $4e
              d388 002b  ld   $2b
              d389 005a  ld   $5a
              d38a 0059  ld   $59
              d38b 002c  ld   $2c
              d38c 0099  ld   $99
              d38d 0030  ld   $30
              d38e 00f6  ld   $f6
              d38f 002b  ld   $2b
              d390 005c  ld   $5c
              d391 0059  ld   $59
              d392 002e  ld   $2e
              d393 0099  ld   $99
              d394 0030  ld   $30
              d395 00f6  ld   $f6
              d396 002b  ld   $2b
              d397 005e  ld   $5e
              d398 0063  ld   $63
              d399 00ff  ld   $ff
              d39a 0093  ld   $93
              d39b 001b  ld   $1b
              d39c 00ff  ld   $ff
              d39d 0063  ld   $63
              d39e 00a0  ld   $a0
              d39f 003e  ld   $3e
              d3a0 00cd  ld   $cd
              d3a1 00d9  ld   $d9
              d3a2 0075  ld   $75
              d3a3 0085  ld   $85
              d3a4 00a2  ld   $a2
              d3a5 005d  ld   $5d
              d3a6 0021  ld   $21
              d3a7 0036  ld   $36
              d3a8 00e6  ld   $e6
              d3a9 0002  ld   $02
              d3aa 0035  ld   $35
              d3ab 004d  ld   $4d
              d3ac 00ae  ld   $ae
              d3ad 0085  ld   $85
              d3ae 00a2  ld   $a2
              d3af 0066  ld   $66
              d3b0 0085  ld   $85
              d3b1 00a2  ld   $a2
              d3b2 005c  ld   $5c
              d3b3 001a  ld   $1a
              d3b4 002a  ld   $2a
              d3b5 008c  ld   $8c
              d3b6 00fe  ld   $fe
              d3b7 0035  ld   $35
              d3b8 0072  ld   $72
              d3b9 00d7  ld   $d7
              d3ba 0011  ld   $11
              d3bb 0015  ld   $15
              d3bc 000b  ld   $0b
              d3bd 002b  ld   $2b
              d3be 0022  ld   $22
              d3bf 0011  ld   $11
              d3c0 0000  ld   $00
              d3c1 007c  ld   $7c
              d3c2 002b  ld   $2b
              d3c3 0024  ld   $24
              d3c4 0021  ld   $21
              d3c5 0030  ld   $30
              d3c6 002b  ld   $2b
              d3c7 0026  ld   $26
              d3c8 00b4  ld   $b4
              d3c9 00cb  ld   $cb
              d3ca 0093  ld   $93
              d3cb 0027  ld   $27
              d3cc 00b4  ld   $b4
              d3cd 00cb  ld   $cb
              d3ce 0085  ld   $85
              d3cf 00bc  ld   $bc
              d3d0 005d  ld   $5d
              d3d1 0085  ld   $85
              d3d2 00bc  ld   $bc
              d3d3 005d  ld   $5d
              d3d4 0085  ld   $85
              d3d5 00af  ld   $af
              d3d6 005d  ld   $5d
              d3d7 0059  ld   $59
              d3d8 0000  ld   $00
              d3d9 0063  ld   $63
              d3da 00ff  ld   $ff
              d3db 0093  ld   $93
              d3dc 001b  ld   $1b
              d3dd 00ff  ld   $ff
              d3de 0064  ld   $64
              d3df 00a0  ld   $a0
              d3e0 0050  ld   $50
              d3e1 00cd  ld   $cd
              d3e2 00eb  ld   $eb
              d3e3 0075  ld   $75
              d3e4 0021  ld   $21
              d3e5 0060  ld   $60
              d3e6 00fc  ld   $fc
              d3e7 0062  ld   $62
              d3e8 0035  ld   $35
              d3e9 0072  ld   $72
              d3ea 00ae  ld   $ae
              d3eb 0021  ld   $21
              d3ec 0064  ld   $64
              d3ed 00fc  ld   $fc
              d3ee 0066  ld   $66
              d3ef 001a  ld   $1a
              d3f0 0019  ld   $19
              d3f1 0035  ld   $35
              d3f2 0072  ld   $72
              d3f3 00b5  ld   $b5
              d3f4 0021  ld   $21
              d3f5 0066  ld   $66
              d3f6 0090  ld   $90
              d3f7 00bb  ld   $bb
              d3f8 0021  ld   $21
              d3f9 0064  ld   $64
              d3fa 0088  ld   $88
              d3fb fe00  bra  ac          ;+-----------------------------------+
              d3fc fcfd  bra  $d3fd       ;|                                   |
              d3fd 1418  ld   $18,y       ;| Trampoline for page $d300 lookups |
              d3fe e006  jmp  y,$06       ;|                                   |
              d3ff c218  st   [$18]       ;+-----------------------------------+
              d400 00ff  ld   $ff
              d401 00e3  ld   $e3
              d402 0001  ld   $01
              d403 00b8  ld   $b8
              d404 0064  ld   $64
              d405 002b  ld   $2b
              d406 0068  ld   $68
              d407 0035  ld   $35
              d408 003f  ld   $3f
              d409 00e5  ld   $e5
              d40a 0011  ld   $11
              d40b 00ff  ld   $ff
              d40c 0001  ld   $01
              d40d 00f8  ld   $f8
              d40e 0064  ld   $64
              d40f 0035  ld   $35
              d410 003f  ld   $3f
              d411 00ce  ld   $ce
              d412 0099  ld   $99
              d413 0030  ld   $30
              d414 0090  ld   $90
              d415 00e5  ld   $e5
              d416 0085  ld   $85
              d417 00a2  ld   $a2
              d418 0063  ld   $63
              d419 0035  ld   $35
              d41a 0072  ld   $72
              d41b 00db  ld   $db
              d41c 0085  ld   $85
              d41d 00a2  ld   $a2
              d41e 0075  ld   $75
              d41f 0021  ld   $21
              d420 0030  ld   $30
              d421 0090  ld   $90
              d422 00e5  ld   $e5
              d423 0021  ld   $21
              d424 0060  ld   $60
              d425 002b  ld   $2b
              d426 0062  ld   $62
              d427 0021  ld   $21
              d428 0064  ld   $64
              d429 002b  ld   $2b
              d42a 0066  ld   $66
              d42b 0059  ld   $59
              d42c 0000  ld   $00
              d42d 002b  ld   $2b
              d42e 006a  ld   $6a
              d42f 0021  ld   $21
              d430 0068  ld   $68
              d431 0063  ld   $63
              d432 00ff  ld   $ff
              d433 0093  ld   $93
              d434 001b  ld   $1b
              d435 00ff  ld   $ff
              d436 0065  ld   $65
              d437 00a0  ld   $a0
              d438 0060  ld   $60
              d439 00cd  ld   $cd
              d43a 00cb  ld   $cb
              d43b 0075  ld   $75
              d43c 0059  ld   $59
              d43d 0000  ld   $00
              d43e 002b  ld   $2b
              d43f 0064  ld   $64
              d440 002b  ld   $2b
              d441 0060  ld   $60
              d442 0021  ld   $21
              d443 003a  ld   $3a
              d444 00e3  ld   $e3
              d445 001c  ld   $1c
              d446 00f6  ld   $f6
              d447 002b  ld   $2b
              d448 0066  ld   $66
              d449 0021  ld   $21
              d44a 003a  ld   $3a
              d44b 00e3  ld   $e3
              d44c 001e  ld   $1e
              d44d 00f6  ld   $f6
              d44e 002b  ld   $2b
              d44f 0062  ld   $62
              d450 0021  ld   $21
              d451 003a  ld   $3a
              d452 00e3  ld   $e3
              d453 001a  ld   $1a
              d454 00f6  ld   $f6
              d455 002b  ld   $2b
              d456 004c  ld   $4c
              d457 0021  ld   $21
              d458 003a  ld   $3a
              d459 00e3  ld   $e3
              d45a 0014  ld   $14
              d45b 00f6  ld   $f6
              d45c 002b  ld   $2b
              d45d 004e  ld   $4e
              d45e 0085  ld   $85
              d45f 00a2  ld   $a2
              d460 0076  ld   $76
              d461 0085  ld   $85
              d462 00cf  ld   $cf
              d463 0065  ld   $65
              d464 0063  ld   $63
              d465 00ff  ld   $ff
              d466 00cd  ld   $cd
              d467 00fb  ld   $fb
              d468 0075  ld   $75
              d469 001a  ld   $1a
              d46a 004f  ld   $4f
              d46b 0082  ld   $82
              d46c 000f  ld   $0f
              d46d 005e  ld   $5e
              d46e 004f  ld   $4f
              d46f 0059  ld   $59
              d470 0001  ld   $01
              d471 002b  ld   $2b
              d472 0046  ld   $46
              d473 00b8  ld   $b8
              d474 0048  ld   $48
              d475 0035  ld   $35
              d476 0053  ld   $53
              d477 00e6  ld   $e6
              d478 0085  ld   $85
              d479 00c2  ld   $c2
              d47a 0066  ld   $66
              d47b 0021  ld   $21
              d47c 0046  ld   $46
              d47d 0099  ld   $99
              d47e 0046  ld   $46
              d47f 0090  ld   $90
              d480 00d6  ld   $d6
              d481 0021  ld   $21
              d482 0058  ld   $58
              d483 002b  ld   $2b
              d484 0050  ld   $50
              d485 0021  ld   $21
              d486 005a  ld   $5a
              d487 002b  ld   $2b
              d488 0056  ld   $56
              d489 0085  ld   $85
              d48a 00d6  ld   $d6
              d48b 0066  ld   $66
              d48c 0021  ld   $21
              d48d 004c  ld   $4c
              d48e 002b  ld   $2b
              d48f 0040  ld   $40
              d490 0021  ld   $21
              d491 004e  ld   $4e
              d492 002b  ld   $2b
              d493 003e  ld   $3e
              d494 0063  ld   $63
              d495 00ff  ld   $ff
              d496 0093  ld   $93
              d497 001b  ld   $1b
              d498 00ff  ld   $ff
              d499 0066  ld   $66
              d49a 00a0  ld   $a0
              d49b 005f  ld   $5f
              d49c 00cd  ld   $cd
              d49d 00be  ld   $be
              d49e 0075  ld   $75
              d49f 0059  ld   $59
              d4a0 0000  ld   $00
              d4a1 005e  ld   $5e
              d4a2 0050  ld   $50
              d4a3 001a  ld   $1a
              d4a4 004c  ld   $4c
              d4a5 005e  ld   $5e
              d4a6 0051  ld   $51
              d4a7 001a  ld   $1a
              d4a8 004d  ld   $4d
              d4a9 005e  ld   $5e
              d4aa 0056  ld   $56
              d4ab 001a  ld   $1a
              d4ac 004e  ld   $4e
              d4ad 005e  ld   $5e
              d4ae 0057  ld   $57
              d4af 0021  ld   $21
              d4b0 0050  ld   $50
              d4b1 002b  ld   $2b
              d4b2 004c  ld   $4c
              d4b3 0021  ld   $21
              d4b4 0056  ld   $56
              d4b5 002b  ld   $2b
              d4b6 004e  ld   $4e
              d4b7 0085  ld   $85
              d4b8 00d6  ld   $d6
              d4b9 0066  ld   $66
              d4ba 0063  ld   $63
              d4bb 00ff  ld   $ff
              d4bc 00cd  ld   $cd
              d4bd 00fa  ld   $fa
              d4be 0075  ld   $75
              d4bf 0021  ld   $21
              d4c0 004c  ld   $4c
              d4c1 002b  ld   $2b
              d4c2 0050  ld   $50
              d4c3 0021  ld   $21
              d4c4 004e  ld   $4e
              d4c5 002b  ld   $2b
              d4c6 0056  ld   $56
              d4c7 0085  ld   $85
              d4c8 00d6  ld   $d6
              d4c9 0066  ld   $66
              d4ca 0021  ld   $21
              d4cb 0056  ld   $56
              d4cc 0063  ld   $63
              d4cd 00ff  ld   $ff
              d4ce 0059  ld   $59
              d4cf 0000  ld   $00
              d4d0 002b  ld   $2b
              d4d1 0056  ld   $56
              d4d2 0021  ld   $21
              d4d3 004c  ld   $4c
              d4d4 00fc  ld   $fc
              d4d5 0050  ld   $50
              d4d6 0035  ld   $35
              d4d7 0053  ld   $53
              d4d8 00df  ld   $df
              d4d9 0021  ld   $21
              d4da 004c  ld   $4c
              d4db 0090  ld   $90
              d4dc 00e2  ld   $e2
              d4dd 0011  ld   $11
              d4de 0000  ld   $00
              d4df 0080  ld   $80
              d4e0 0099  ld   $99
              d4e1 0050  ld   $50
              d4e2 0035  ld   $35
              d4e3 0050  ld   $50
              d4e4 00ed  ld   $ed
              d4e5 0021  ld   $21
              d4e6 004e  ld   $4e
              d4e7 00e3  ld   $e3
              d4e8 0001  ld   $01
              d4e9 002b  ld   $2b
              d4ea 004e  ld   $4e
              d4eb 0021  ld   $21
              d4ec 004e  ld   $4e
              d4ed 0099  ld   $99
              d4ee 0056  ld   $56
              d4ef 002b  ld   $2b
              d4f0 004e  ld   $4e
              d4f1 0021  ld   $21
              d4f2 004c  ld   $4c
              d4f3 0099  ld   $99
              d4f4 0050  ld   $50
              d4f5 002b  ld   $2b
              d4f6 004c  ld   $4c
              d4f7 00ff  ld   $ff
              d4f8 0093  ld   $93
              d4f9 001b  ld   $1b
              d4fa 00ff  ld   $ff
              d4fb fe00  bra  ac          ;+-----------------------------------+
              d4fc fcfd  bra  $d4fd       ;|                                   |
              d4fd 1418  ld   $18,y       ;| Trampoline for page $d400 lookups |
              d4fe e006  jmp  y,$06       ;|                                   |
              d4ff c218  st   [$18]       ;+-----------------------------------+
              d500 0067  ld   $67
              d501 00a0  ld   $a0
              d502 0040  ld   $40
              d503 00cd  ld   $cd
              d504 00b8  ld   $b8
              d505 0075  ld   $75
              d506 00e6  ld   $e6
              d507 0020  ld   $20
              d508 0035  ld   $35
              d509 0053  ld   $53
              d50a 00aa  ld   $aa
              d50b 0059  ld   $59
              d50c 007f  ld   $7f
              d50d 0090  ld   $90
              d50e 00b1  ld   $b1
              d50f 00e6  ld   $e6
              d510 0060  ld   $60
              d511 0035  ld   $35
              d512 0050  ld   $50
              d513 00b1  ld   $b1
              d514 0059  ld   $59
              d515 007f  ld   $7f
              d516 0082  ld   $82
              d517 007f  ld   $7f
              d518 0085  ld   $85
              d519 00a2  ld   $a2
              d51a 006e  ld   $6e
              d51b 0063  ld   $63
              d51c 00ff  ld   $ff
              d51d 00cd  ld   $cd
              d51e 00ca  ld   $ca
              d51f 0075  ld   $75
              d520 0021  ld   $21
              d521 004e  ld   $4e
              d522 0085  ld   $85
              d523 00ce  ld   $ce
              d524 0067  ld   $67
              d525 0021  ld   $21
              d526 004c  ld   $4c
              d527 0085  ld   $85
              d528 00ce  ld   $ce
              d529 0067  ld   $67
              d52a 0085  ld   $85
              d52b 00a2  ld   $a2
              d52c 006d  ld   $6d
              d52d 0063  ld   $63
              d52e 00ff  ld   $ff
              d52f 00cd  ld   $cd
              d530 00db  ld   $db
              d531 0075  ld   $75
              d532 002b  ld   $2b
              d533 0046  ld   $46
              d534 001a  ld   $1a
              d535 0047  ld   $47
              d536 0085  ld   $85
              d537 00a2  ld   $a2
              d538 0068  ld   $68
              d539 001a  ld   $1a
              d53a 0046  ld   $46
              d53b 0085  ld   $85
              d53c 00a2  ld   $a2
              d53d 0068  ld   $68
              d53e 0063  ld   $63
              d53f 00ff  ld   $ff
              d540 0093  ld   $93
              d541 001b  ld   $1b
              d542 00ff  ld   $ff
              d543 0068  ld   $68
              d544 00a0  ld   $a0
              d545 0054  ld   $54
              d546 00cd  ld   $cd
              d547 00b7  ld   $b7
              d548 0075  ld   $75
              d549 00df  ld   $df
              d54a 00fe  ld   $fe
              d54b 00ec  ld   $ec
              d54c 0000  ld   $00
              d54d 00e9  ld   $e9
              d54e 00e9  ld   $e9
              d54f 00e9  ld   $e9
              d550 00e9  ld   $e9
              d551 001a  ld   $1a
              d552 0019  ld   $19
              d553 0085  ld   $85
              d554 00de  ld   $de
              d555 0068  ld   $68
              d556 00ee  ld   $ee
              d557 0000  ld   $00
              d558 00df  ld   $df
              d559 0002  ld   $02
              d55a 0085  ld   $85
              d55b 00de  ld   $de
              d55c 0068  ld   $68
              d55d 0063  ld   $63
              d55e 00ff  ld   $ff
              d55f 00cd  ld   $cd
              d560 00da  ld   $da
              d561 0075  ld   $75
              d562 002b  ld   $2b
              d563 0046  ld   $46
              d564 0035  ld   $35
              d565 0072  ld   $72
              d566 00c8  ld   $c8
              d567 00cd  ld   $cd
              d568 00c6  ld   $c6
              d569 0020  ld   $20
              d56a 004f  ld   $4f
              d56b 004b  ld   $4b
              d56c 000a  ld   $0a
              d56d 0000  ld   $00
              d56e 0090  ld   $90
              d56f 00d3  ld   $d3
              d570 00cd  ld   $cd
              d571 00d3  ld   $d3
              d572 0020  ld   $20
              d573 0046  ld   $46
              d574 0041  ld   $41
              d575 0049  ld   $49
              d576 004c  ld   $4c
              d577 0045  ld   $45
              d578 0044  ld   $44
              d579 000a  ld   $0a
              d57a 0000  ld   $00
              d57b 0085  ld   $85
              d57c 00a2  ld   $a2
              d57d 0069  ld   $69
              d57e 0021  ld   $21
              d57f 0046  ld   $46
              d580 0063  ld   $63
              d581 00ff  ld   $ff
              d582 00cd  ld   $cd
              d583 00ef  ld   $ef
              d584 0075  ld   $75
              d585 0082  ld   $82
              d586 000f  ld   $0f
              d587 00e6  ld   $e6
              d588 000a  ld   $0a
              d589 0035  ld   $35
              d58a 0053  ld   $53
              d58b 00e8  ld   $e8
              d58c 00e3  ld   $e3
              d58d 003a  ld   $3a
              d58e 0090  ld   $90
              d58f 00ea  ld   $ea
              d590 00e3  ld   $e3
              d591 0041  ld   $41
              d592 0085  ld   $85
              d593 00a2  ld   $a2
              d594 006e  ld   $6e
              d595 0063  ld   $63
              d596 00ff  ld   $ff
              d597 0093  ld   $93
              d598 001b  ld   $1b
              d599 00ff  ld   $ff
              d59a 0069  ld   $69
              d59b 00a0  ld   $a0
              d59c 004f  ld   $4f
              d59d 00cd  ld   $cd
              d59e 00be  ld   $be
              d59f 0075  ld   $75
              d5a0 002b  ld   $2b
              d5a1 003c  ld   $3c
              d5a2 0021  ld   $21
              d5a3 003c  ld   $3c
              d5a4 00ad  ld   $ad
              d5a5 0035  ld   $35
              d5a6 003f  ld   $3f
              d5a7 00bc  ld   $bc
              d5a8 008c  ld   $8c
              d5a9 000a  ld   $0a
              d5aa 0035  ld   $35
              d5ab 003f  ld   $3f
              d5ac 00b5  ld   $b5
              d5ad 008c  ld   $8c
              d5ae 000a  ld   $0a
              d5af 0085  ld   $85
              d5b0 00a2  ld   $a2
              d5b1 006e  ld   $6e
              d5b2 0090  ld   $90
              d5b3 00b8  ld   $b8
              d5b4 0085  ld   $85
              d5b5 00a2  ld   $a2
              d5b6 006d  ld   $6d
              d5b7 0093  ld   $93
              d5b8 003c  ld   $3c
              d5b9 0090  ld   $90
              d5ba 00a3  ld   $a3
              d5bb 0063  ld   $63
              d5bc 00ff  ld   $ff
              d5bd 00cd  ld   $cd
              d5be 00ea  ld   $ea
              d5bf 0075  ld   $75
              d5c0 00cd  ld   $cd
              d5c1 00cb  ld   $cb
              d5c2 0056  ld   $56
              d5c3 006f  ld   $6f
              d5c4 006c  ld   $6c
              d5c5 0075  ld   $75
              d5c6 006d  ld   $6d
              d5c7 0065  ld   $65
              d5c8 0020  ld   $20
              d5c9 0000  ld   $00
              d5ca 0085  ld   $85
              d5cb 00a2  ld   $a2
              d5cc 0069  ld   $69
              d5cd 0021  ld   $21
              d5ce 003a  ld   $3a
              d5cf 002b  ld   $2b
              d5d0 003c  ld   $3c
              d5d1 0059  ld   $59
              d5d2 000b  ld   $0b
              d5d3 002b  ld   $2b
              d5d4 0046  ld   $46
              d5d5 0021  ld   $21
              d5d6 003c  ld   $3c
              d5d7 00ad  ld   $ad
              d5d8 0093  ld   $93
              d5d9 003c  ld   $3c
              d5da 0085  ld   $85
              d5db 00a2  ld   $a2
              d5dc 0067  ld   $67
              d5dd 0021  ld   $21
              d5de 0046  ld   $46
              d5df 00e6  ld   $e6
              d5e0 0001  ld   $01
              d5e1 0035  ld   $35
              d5e2 004d  ld   $4d
              d5e3 00d4  ld   $d4
              d5e4 0085  ld   $85
              d5e5 00a2  ld   $a2
              d5e6 006d  ld   $6d
              d5e7 0063  ld   $63
              d5e8 00ff  ld   $ff
              d5e9 0093  ld   $93
              d5ea 001b  ld   $1b
              d5eb 00ff  ld   $ff
              d5ec 006a  ld   $6a
              d5ed 00a0  ld   $a0
              d5ee 0050  ld   $50
              d5ef 00cd  ld   $cd
              d5f0 00b5  ld   $b5
              d5f1 0075  ld   $75
              d5f2 002b  ld   $2b
              d5f3 006c  ld   $6c
              d5f4 0059  ld   $59
              d5f5 0030  ld   $30
              d5f6 002b  ld   $2b
              d5f7 0046  ld   $46
              d5f8 0059  ld   $59
              d5f9 000a  ld   $0a
              d5fa 0085  ld   $85
              d5fb fe00  bra  ac          ;+-----------------------------------+
              d5fc fcfd  bra  $d5fd       ;|                                   |
              d5fd 1418  ld   $18,y       ;| Trampoline for page $d500 lookups |
              d5fe e006  jmp  y,$06       ;|                                   |
              d5ff c218  st   [$18]       ;+-----------------------------------+
              d600 00a2  ld   $a2
              d601 006c  ld   $6c
              d602 0021  ld   $21
              d603 006c  ld   $6c
              d604 00e3  ld   $e3
              d605 0030  ld   $30
              d606 0085  ld   $85
              d607 00a2  ld   $a2
              d608 006e  ld   $6e
              d609 0063  ld   $63
              d60a 00ff  ld   $ff
              d60b 00cd  ld   $cd
              d60c 00eb  ld   $eb
              d60d 0075  ld   $75
              d60e 0011  ld   $11
              d60f 0000  ld   $00
              d610 0006  ld   $06
              d611 002b  ld   $2b
              d612 0022  ld   $22
              d613 0021  ld   $21
              d614 003a  ld   $3a
              d615 00e3  ld   $e3
              d616 0011  ld   $11
              d617 00ad  ld   $ad
              d618 00b4  ld   $b4
              d619 00f6  ld   $f6
              d61a 00e6  ld   $e6
              d61b 0014  ld   $14
              d61c 0035  ld   $35
              d61d 0053  ld   $53
              d61e 00cb  ld   $cb
              d61f 00e3  ld   $e3
              d620 0064  ld   $64
              d621 0085  ld   $85
              d622 00a2  ld   $a2
              d623 006a  ld   $6a
              d624 0011  ld   $11
              d625 006d  ld   $6d
              d626 0006  ld   $06
              d627 002b  ld   $2b
              d628 0022  ld   $22
              d629 0021  ld   $21
              d62a 003a  ld   $3a
              d62b 00e3  ld   $e3
              d62c 0010  ld   $10
              d62d 00f6  ld   $f6
              d62e 00b4  ld   $b4
              d62f 00f5  ld   $f5
              d630 0082  ld   $82
              d631 000f  ld   $0f
              d632 0085  ld   $85
              d633 00a2  ld   $a2
              d634 006a  ld   $6a
              d635 0021  ld   $21
              d636 003a  ld   $3a
              d637 00e3  ld   $e3
              d638 0010  ld   $10
              d639 00ad  ld   $ad
              d63a 0082  ld   $82
              d63b 001f  ld   $1f
              d63c 0085  ld   $85
              d63d 00a2  ld   $a2
              d63e 006a  ld   $6a
              d63f 0063  ld   $63
              d640 00ff  ld   $ff
              d641 0093  ld   $93
              d642 001b  ld   $1b
              d643 00ff  ld   $ff
              d644 006b  ld   $6b
              d645 00a0  ld   $a0
              d646 0055  ld   $55
              d647 00cd  ld   $cd
              d648 00bb  ld   $bb
              d649 0075  ld   $75
              d64a 0085  ld   $85
              d64b 00b9  ld   $b9
              d64c 006a  ld   $6a
              d64d 0059  ld   $59
              d64e 0004  ld   $04
              d64f 0099  ld   $99
              d650 006e  ld   $6e
              d651 002b  ld   $2b
              d652 006e  ld   $6e
              d653 0085  ld   $85
              d654 00a2  ld   $a2
              d655 0070  ld   $70
              d656 0059  ld   $59
              d657 0004  ld   $04
              d658 0099  ld   $99
              d659 006e  ld   $6e
              d65a 002b  ld   $2b
              d65b 006e  ld   $6e
              d65c 0085  ld   $85
              d65d 00bf  ld   $bf
              d65e 006b  ld   $6b
              d65f 0085  ld   $85
              d660 00a2  ld   $a2
              d661 006d  ld   $6d
              d662 0063  ld   $63
              d663 00ff  ld   $ff
              d664 00cd  ld   $cd
              d665 00f0  ld   $f0
              d666 0075  ld   $75
              d667 0021  ld   $21
              d668 003a  ld   $3a
              d669 002b  ld   $2b
              d66a 003c  ld   $3c
              d66b 0059  ld   $59
              d66c 000b  ld   $0b
              d66d 002b  ld   $2b
              d66e 0046  ld   $46
              d66f 008c  ld   $8c
              d670 0003  ld   $03
              d671 0035  ld   $35
              d672 0072  ld   $72
              d673 00d8  ld   $d8
              d674 0021  ld   $21
              d675 003c  ld   $3c
              d676 00ad  ld   $ad
              d677 008c  ld   $8c
              d678 0020  ld   $20
              d679 0035  ld   $35
              d67a 003f  ld   $3f
              d67b 00d8  ld   $d8
              d67c 0059  ld   $59
              d67d 002e  ld   $2e
              d67e 0085  ld   $85
              d67f 00a2  ld   $a2
              d680 006e  ld   $6e
              d681 0021  ld   $21
              d682 003c  ld   $3c
              d683 00ad  ld   $ad
              d684 0093  ld   $93
              d685 003c  ld   $3c
              d686 008c  ld   $8c
              d687 0020  ld   $20
              d688 0035  ld   $35
              d689 003f  ld   $3f
              d68a 00e7  ld   $e7
              d68b 008c  ld   $8c
              d68c 0020  ld   $20
              d68d 0085  ld   $85
              d68e 00a2  ld   $a2
              d68f 0067  ld   $67
              d690 0021  ld   $21
              d691 0046  ld   $46
              d692 00e6  ld   $e6
              d693 0001  ld   $01
              d694 0035  ld   $35
              d695 004d  ld   $4d
              d696 00c4  ld   $c4
              d697 0063  ld   $63
              d698 00ff  ld   $ff
              d699 0093  ld   $93
              d69a 001b  ld   $1b
              d69b 00ff  ld   $ff
              d69c 006c  ld   $6c
              d69d 00a0  ld   $a0
              d69e 002c  ld   $2c
              d69f 00cd  ld   $cd
              d6a0 00c7  ld   $c7
              d6a1 0075  ld   $75
              d6a2 002b  ld   $2b
              d6a3 0034  ld   $34
              d6a4 0021  ld   $21
              d6a5 006c  ld   $6c
              d6a6 00b8  ld   $b8
              d6a7 0034  ld   $34
              d6a8 0035  ld   $35
              d6a9 0050  ld   $50
              d6aa 00b0  ld   $b0
              d6ab 002b  ld   $2b
              d6ac 006c  ld   $6c
              d6ad 0093  ld   $93
              d6ae 0046  ld   $46
              d6af 0090  ld   $90
              d6b0 00a5  ld   $a5
              d6b1 0021  ld   $21
              d6b2 0046  ld   $46
              d6b3 0035  ld   $35
              d6b4 0072  ld   $72
              d6b5 00bc  ld   $bc
              d6b6 0059  ld   $59
              d6b7 0020  ld   $20
              d6b8 0085  ld   $85
              d6b9 00a2  ld   $a2
              d6ba 006e  ld   $6e
              d6bb 0090  ld   $90
              d6bc 00c5  ld   $c5
              d6bd 0088  ld   $88
              d6be 0030  ld   $30
              d6bf 0085  ld   $85
              d6c0 00a2  ld   $a2
              d6c1 006e  ld   $6e
              d6c2 0059  ld   $59
              d6c3 0030  ld   $30
              d6c4 002b  ld   $2b
              d6c5 0046  ld   $46
              d6c6 0063  ld   $63
              d6c7 00ff  ld   $ff
              d6c8 0093  ld   $93
              d6c9 001b  ld   $1b
              d6ca 00ff  ld   $ff
              d6cb 006d  ld   $6d
              d6cc 00a0  ld   $a0
              d6cd 004c  ld   $4c
              d6ce 00cd  ld   $cd
              d6cf 00e7  ld   $e7
              d6d0 0011  ld   $11
              d6d1 0000  ld   $00
              d6d2 003f  ld   $3f
              d6d3 002b  ld   $2b
              d6d4 0024  ld   $24
              d6d5 0059  ld   $59
              d6d6 0000  ld   $00
              d6d7 005e  ld   $5e
              d6d8 006e  ld   $6e
              d6d9 0011  ld   $11
              d6da 0020  ld   $20
              d6db 0001  ld   $01
              d6dc 00ad  ld   $ad
              d6dd 005e  ld   $5e
              d6de 006f  ld   $6f
              d6df 0021  ld   $21
              d6e0 006e  ld   $6e
              d6e1 002b  ld   $2b
              d6e2 0028  ld   $28
              d6e3 005e  ld   $5e
              d6e4 0026  ld   $26
              d6e5 0011  ld   $11
              d6e6 00e1  ld   $e1
              d6e7 0004  ld   $04
              d6e8 002b  ld   $2b
              d6e9 0022  ld   $22
              d6ea 00b4  ld   $b4
              d6eb 00cb  ld   $cb
              d6ec 0093  ld   $93
              d6ed 0028  ld   $28
              d6ee 001a  ld   $1a
              d6ef 0028  ld   $28
              d6f0 008c  ld   $8c
              d6f1 00a0  ld   $a0
              d6f2 0035  ld   $35
              d6f3 0072  ld   $72
              d6f4 00b5  ld   $b5
              d6f5 0059  ld   $59
              d6f6 0001  ld   $01
              d6f7 005e  ld   $5e
              d6f8 0035  ld   $35
              d6f9 0059  ld   $59
              d6fa 00c0  ld   $c0
              d6fb fe00  bra  ac          ;+-----------------------------------+
              d6fc fcfd  bra  $d6fd       ;|                                   |
              d6fd 1418  ld   $18,y       ;| Trampoline for page $d600 lookups |
              d6fe e006  jmp  y,$06       ;|                                   |
              d6ff c218  st   [$18]       ;+-----------------------------------+
              d700 00e3  ld   $e3
              d701 001e  ld   $1e
              d702 005e  ld   $5e
              d703 0034  ld   $34
              d704 0021  ld   $21
              d705 0034  ld   $34
              d706 00ad  ld   $ad
              d707 00e6  ld   $e6
              d708 0070  ld   $70
              d709 0035  ld   $35
              d70a 0053  ld   $53
              d70b 00db  ld   $db
              d70c 00e3  ld   $e3
              d70d 0078  ld   $78
              d70e 0090  ld   $90
              d70f 00dd  ld   $dd
              d710 00e3  ld   $e3
              d711 0018  ld   $18
              d712 00f0  ld   $f0
              d713 0034  ld   $34
              d714 001a  ld   $1a
              d715 0034  ld   $34
              d716 00e6  ld   $e6
              d717 0020  ld   $20
              d718 0035  ld   $35
              d719 004d  ld   $4d
              d71a 00cb  ld   $cb
              d71b 00ff  ld   $ff
              d71c 0093  ld   $93
              d71d 001b  ld   $1b
              d71e 00ff  ld   $ff
              d71f 006e  ld   $6e
              d720 00a0  ld   $a0
              d721 004e  ld   $4e
              d722 00cd  ld   $cd
              d723 00e9  ld   $e9
              d724 00e6  ld   $e6
              d725 0052  ld   $52
              d726 0035  ld   $35
              d727 0053  ld   $53
              d728 00ae  ld   $ae
              d729 00e3  ld   $e3
              d72a 0032  ld   $32
              d72b 002b  ld   $2b
              d72c 0034  ld   $34
              d72d 0011  ld   $11
              d72e 0000  ld   $00
              d72f 0007  ld   $07
              d730 0090  ld   $90
              d731 00b3  ld   $b3
              d732 002b  ld   $2b
              d733 0034  ld   $34
              d734 0011  ld   $11
              d735 0000  ld   $00
              d736 0008  ld   $08
              d737 002b  ld   $2b
              d738 0070  ld   $70
              d739 0021  ld   $21
              d73a 0034  ld   $34
              d73b 00e9  ld   $e9
              d73c 00e9  ld   $e9
              d73d 0099  ld   $99
              d73e 0034  ld   $34
              d73f 0099  ld   $99
              d740 0070  ld   $70
              d741 002b  ld   $2b
              d742 0070  ld   $70
              d743 0011  ld   $11
              d744 0000  ld   $00
              d745 003f  ld   $3f
              d746 002b  ld   $2b
              d747 0024  ld   $24
              d748 0021  ld   $21
              d749 006e  ld   $6e
              d74a 002b  ld   $2b
              d74b 0028  ld   $28
              d74c 00e3  ld   $e3
              d74d 0006  ld   $06
              d74e 002b  ld   $2b
              d74f 006e  ld   $6e
              d750 0011  ld   $11
              d751 00e1  ld   $e1
              d752 0004  ld   $04
              d753 002b  ld   $2b
              d754 0022  ld   $22
              d755 0059  ld   $59
              d756 0005  ld   $05
              d757 002b  ld   $2b
              d758 0034  ld   $34
              d759 0021  ld   $21
              d75a 0070  ld   $70
              d75b 007f  ld   $7f
              d75c 0000  ld   $00
              d75d 005e  ld   $5e
              d75e 0026  ld   $26
              d75f 00b4  ld   $b4
              d760 00cb  ld   $cb
              d761 0093  ld   $93
              d762 0070  ld   $70
              d763 0093  ld   $93
              d764 0028  ld   $28
              d765 0021  ld   $21
              d766 0034  ld   $34
              d767 00e6  ld   $e6
              d768 0001  ld   $01
              d769 0035  ld   $35
              d76a 004d  ld   $4d
              d76b 00d3  ld   $d3
              d76c 00ff  ld   $ff
              d76d 0093  ld   $93
              d76e 001b  ld   $1b
              d76f 00ff  ld   $ff
              d770 006f  ld   $6f
              d771 00a0  ld   $a0
              d772 004f  ld   $4f
              d773 00cd  ld   $cd
              d774 00ea  ld   $ea
              d775 0075  ld   $75
              d776 0085  ld   $85
              d777 00a2  ld   $a2
              d778 0064  ld   $64
              d779 0021  ld   $21
              d77a 006a  ld   $6a
              d77b 002b  ld   $2b
              d77c 003a  ld   $3a
              d77d 00ad  ld   $ad
              d77e 0035  ld   $35
              d77f 003f  ld   $3f
              d780 00e8  ld   $e8
              d781 008c  ld   $8c
              d782 00e5  ld   $e5
              d783 0035  ld   $35
              d784 003f  ld   $3f
              d785 00e1  ld   $e1
              d786 0021  ld   $21
              d787 003a  ld   $3a
              d788 00e3  ld   $e3
              d789 000b  ld   $0b
              d78a 00ad  ld   $ad
              d78b 002b  ld   $2b
              d78c 0046  ld   $46
              d78d 008c  ld   $8c
              d78e 000f  ld   $0f
              d78f 0035  ld   $35
              d790 003f  ld   $3f
              d791 00e1  ld   $e1
              d792 0082  ld   $82
              d793 0002  ld   $02
              d794 0035  ld   $35
              d795 003f  ld   $3f
              d796 00e1  ld   $e1
              d797 0021  ld   $21
              d798 0046  ld   $46
              d799 0082  ld   $82
              d79a 0008  ld   $08
              d79b 0035  ld   $35
              d79c 003f  ld   $3f
              d79d 00ce  ld   $ce
              d79e 0085  ld   $85
              d79f 00c2  ld   $c2
              d7a0 0069  ld   $69
              d7a1 0090  ld   $90
              d7a2 00e1  ld   $e1
              d7a3 0085  ld   $85
              d7a4 00a2  ld   $a2
              d7a5 006b  ld   $6b
              d7a6 0085  ld   $85
              d7a7 00a2  ld   $a2
              d7a8 0074  ld   $74
              d7a9 0035  ld   $35
              d7aa 0072  ld   $72
              d7ab 00e1  ld   $e1
              d7ac 0059  ld   $59
              d7ad 00d0  ld   $d0
              d7ae 00f0  ld   $f0
              d7af 0032  ld   $32
              d7b0 0085  ld   $85
              d7b1 00a2  ld   $a2
              d7b2 0073  ld   $73
              d7b3 0085  ld   $85
              d7b4 00cd  ld   $cd
              d7b5 0074  ld   $74
              d7b6 0059  ld   $59
              d7b7 0020  ld   $20
              d7b8 0085  ld   $85
              d7b9 00c6  ld   $c6
              d7ba 0075  ld   $75
              d7bb 0090  ld   $90
              d7bc 00a1  ld   $a1
              d7bd 0063  ld   $63
              d7be 00ff  ld   $ff
              d7bf 0093  ld   $93
              d7c0 001b  ld   $1b
              d7c1 00ff  ld   $ff
              d7c2 0070  ld   $70
              d7c3 00a0  ld   $a0
              d7c4 005e  ld   $5e
              d7c5 00cd  ld   $cd
              d7c6 00f9  ld   $f9
              d7c7 0075  ld   $75
              d7c8 0021  ld   $21
              d7c9 003a  ld   $3a
              d7ca 00e3  ld   $e3
              d7cb 000b  ld   $0b
              d7cc 00ad  ld   $ad
              d7cd 0082  ld   $82
              d7ce 0010  ld   $10
              d7cf 0035  ld   $35
              d7d0 003f  ld   $3f
              d7d1 00b7  ld   $b7
              d7d2 00cd  ld   $cd
              d7d3 00b5  ld   $b5
              d7d4 0020  ld   $20
              d7d5 0020  ld   $20
              d7d6 003c  ld   $3c
              d7d7 0044  ld   $44
              d7d8 0049  ld   $49
              d7d9 0052  ld   $52
              d7da 003e  ld   $3e
              d7db 0000  ld   $00
              d7dc 0090  ld   $90
              d7dd 00f4  ld   $f4
              d7de 0021  ld   $21
              d7df 003a  ld   $3a
              d7e0 00e3  ld   $e3
              d7e1 001c  ld   $1c
              d7e2 00f6  ld   $f6
              d7e3 002b  ld   $2b
              d7e4 004c  ld   $4c
              d7e5 0021  ld   $21
              d7e6 003a  ld   $3a
              d7e7 00e3  ld   $e3
              d7e8 001e  ld   $1e
              d7e9 00f6  ld   $f6
              d7ea 002b  ld   $2b
              d7eb 004e  ld   $4e
              d7ec 0085  ld   $85
              d7ed 00a2  ld   $a2
              d7ee 0071  ld   $71
              d7ef 0059  ld   $59
              d7f0 0000  ld   $00
              d7f1 002b  ld   $2b
              d7f2 0070  ld   $70
              d7f3 0059  ld   $59
              d7f4 0008  ld   $08
              d7f5 002b  ld   $2b
              d7f6 0034  ld   $34
              d7f7 0021  ld   $21
              d7f8 003c  ld   $3c
              d7f9 00ad  ld   $ad
              d7fa 008c  ld   $8c
              d7fb fe00  bra  ac          ;+-----------------------------------+
              d7fc fcfd  bra  $d7fd       ;|                                   |
              d7fd 1418  ld   $18,y       ;| Trampoline for page $d700 lookups |
              d7fe e006  jmp  y,$06       ;|                                   |
              d7ff c218  st   [$18]       ;+-----------------------------------+
              d800 0030  ld   $30
              d801 0035  ld   $35
              d802 0072  ld   $72
              d803 00f0  ld   $f0
              d804 0021  ld   $21
              d805 0034  ld   $34
              d806 00e6  ld   $e6
              d807 0006  ld   $06
              d808 0035  ld   $35
              d809 0053  ld   $53
              d80a 00e5  ld   $e5
              d80b 0059  ld   $59
              d80c 0020  ld   $20
              d80d 00f0  ld   $f0
              d80e 003c  ld   $3c
              d80f 0090  ld   $90
              d810 00e7  ld   $e7
              d811 0093  ld   $93
              d812 0070  ld   $70
              d813 0093  ld   $93
              d814 003c  ld   $3c
              d815 0021  ld   $21
              d816 0034  ld   $34
              d817 00e6  ld   $e6
              d818 0001  ld   $01
              d819 0035  ld   $35
              d81a 0053  ld   $53
              d81b 00ce  ld   $ce
              d81c 0021  ld   $21
              d81d 0044  ld   $44
              d81e 0099  ld   $99
              d81f 0070  ld   $70
              d820 0085  ld   $85
              d821 00a2  ld   $a2
              d822 0069  ld   $69
              d823 0063  ld   $63
              d824 00ff  ld   $ff
              d825 0093  ld   $93
              d826 001b  ld   $1b
              d827 00ff  ld   $ff
              d828 0071  ld   $71
              d829 00a0  ld   $a0
              d82a 0060  ld   $60
              d82b 00cd  ld   $cd
              d82c 00fb  ld   $fb
              d82d 0075  ld   $75
              d82e 0059  ld   $59
              d82f 0009  ld   $09
              d830 002b  ld   $2b
              d831 0034  ld   $34
              d832 0021  ld   $21
              d833 0044  ld   $44
              d834 0099  ld   $99
              d835 0034  ld   $34
              d836 002b  ld   $2b
              d837 003c  ld   $3c
              d838 0059  ld   $59
              d839 0030  ld   $30
              d83a 00f0  ld   $f0
              d83b 003c  ld   $3c
              d83c 0021  ld   $21
              d83d 0034  ld   $34
              d83e 00e6  ld   $e6
              d83f 0001  ld   $01
              d840 0035  ld   $35
              d841 0053  ld   $53
              d842 00a3  ld   $a3
              d843 0059  ld   $59
              d844 001f  ld   $1f
              d845 002b  ld   $2b
              d846 0070  ld   $70
              d847 0085  ld   $85
              d848 00c2  ld   $c2
              d849 0066  ld   $66
              d84a 0035  ld   $35
              d84b 0050  ld   $50
              d84c 00c4  ld   $c4
              d84d 0059  ld   $59
              d84e 006a  ld   $6a
              d84f 0090  ld   $90
              d850 00c6  ld   $c6
              d851 0059  ld   $59
              d852 0069  ld   $69
              d853 002b  ld   $2b
              d854 0046  ld   $46
              d855 0059  ld   $59
              d856 0009  ld   $09
              d857 002b  ld   $2b
              d858 0034  ld   $34
              d859 0021  ld   $21
              d85a 0044  ld   $44
              d85b 0099  ld   $99
              d85c 0034  ld   $34
              d85d 002b  ld   $2b
              d85e 003c  ld   $3c
              d85f 0021  ld   $21
              d860 003c  ld   $3c
              d861 00ad  ld   $ad
              d862 00e9  ld   $e9
              d863 00b8  ld   $b8
              d864 0046  ld   $46
              d865 0035  ld   $35
              d866 0053  ld   $53
              d867 00e3  ld   $e3
              d868 00e3  ld   $e3
              d869 003a  ld   $3a
              d86a 00f0  ld   $f0
              d86b 003c  ld   $3c
              d86c 0059  ld   $59
              d86d 006a  ld   $6a
              d86e 0090  ld   $90
              d86f 00e9  ld   $e9
              d870 00e3  ld   $e3
              d871 0030  ld   $30
              d872 00f0  ld   $f0
              d873 003c  ld   $3c
              d874 0059  ld   $59
              d875 0069  ld   $69
              d876 002b  ld   $2b
              d877 0046  ld   $46
              d878 0021  ld   $21
              d879 0034  ld   $34
              d87a 00e6  ld   $e6
              d87b 0001  ld   $01
              d87c 0035  ld   $35
              d87d 0053  ld   $53
              d87e 00ca  ld   $ca
              d87f 0021  ld   $21
              d880 0070  ld   $70
              d881 00e6  ld   $e6
              d882 0001  ld   $01
              d883 0035  ld   $35
              d884 0053  ld   $53
              d885 00b8  ld   $b8
              d886 0063  ld   $63
              d887 00ff  ld   $ff
              d888 0093  ld   $93
              d889 001b  ld   $1b
              d88a 00ff  ld   $ff
              d88b 0072  ld   $72
              d88c 00a0  ld   $a0
              d88d 004f  ld   $4f
              d88e 00cd  ld   $cd
              d88f 00ab  ld   $ab
              d890 002d  ld   $2d
              d891 002d  ld   $2d
              d892 002d  ld   $2d
              * 10 times
              d89a 0000  ld   $00
              d89b 002b  ld   $2b
              d89c 0044  ld   $44
              d89d 00cd  ld   $cd
              d89e 00ea  ld   $ea
              d89f 0075  ld   $75
              d8a0 005e  ld   $5e
              d8a1 0025  ld   $25
              d8a2 0011  ld   $11
              d8a3 0003  ld   $03
              d8a4 000b  ld   $0b
              d8a5 002b  ld   $2b
              d8a6 0022  ld   $22
              d8a7 0059  ld   $59
              d8a8 0018  ld   $18
              d8a9 002b  ld   $2b
              d8aa 0034  ld   $34
              d8ab 0011  ld   $11
              d8ac 0020  ld   $20
              d8ad 0001  ld   $01
              d8ae 002b  ld   $2b
              d8af 0046  ld   $46
              d8b0 0021  ld   $21
              d8b1 0034  ld   $34
              d8b2 00f0  ld   $f0
              d8b3 0046  ld   $46
              d8b4 005e  ld   $5e
              d8b5 0027  ld   $27
              d8b6 0059  ld   $59
              d8b7 0000  ld   $00
              d8b8 005e  ld   $5e
              d8b9 0026  ld   $26
              d8ba 0059  ld   $59
              d8bb 00a0  ld   $a0
              d8bc 005e  ld   $5e
              d8bd 0024  ld   $24
              d8be 00b4  ld   $b4
              d8bf 00f3  ld   $f3
              d8c0 0059  ld   $59
              d8c1 0001  ld   $01
              d8c2 0099  ld   $99
              d8c3 0034  ld   $34
              d8c4 002b  ld   $2b
              d8c5 0034  ld   $34
              d8c6 0059  ld   $59
              d8c7 0002  ld   $02
              d8c8 0099  ld   $99
              d8c9 0046  ld   $46
              d8ca 002b  ld   $2b
              d8cb 0046  ld   $46
              d8cc 0011  ld   $11
              d8cd 00f0  ld   $f0
              d8ce 0001  ld   $01
              d8cf 00fc  ld   $fc
              d8d0 0046  ld   $46
              d8d1 0035  ld   $35
              d8d2 0072  ld   $72
              d8d3 00c0  ld   $c0
              d8d4 0059  ld   $59
              d8d5 0000  ld   $00
              d8d6 00f0  ld   $f0
              d8d7 0032  ld   $32
              d8d8 0063  ld   $63
              d8d9 00ff  ld   $ff
              d8da 0093  ld   $93
              d8db 001b  ld   $1b
              d8dc 00ff  ld   $ff
              d8dd 0073  ld   $73
              d8de 00a0  ld   $a0
              d8df 0056  ld   $56
              d8e0 00cd  ld   $cd
              d8e1 00f1  ld   $f1
              d8e2 0075  ld   $75
              d8e3 00cd  ld   $cd
              d8e4 00ac  ld   $ac
              d8e5 004c  ld   $4c
              d8e6 006f  ld   $6f
              d8e7 0061  ld   $61
              d8e8 0064  ld   $64
              d8e9 0069  ld   $69
              d8ea 006e  ld   $6e
              d8eb 0067  ld   $67
              d8ec 0020  ld   $20
              d8ed 0000  ld   $00
              d8ee 0085  ld   $85
              d8ef 00a2  ld   $a2
              d8f0 0069  ld   $69
              d8f1 0085  ld   $85
              d8f2 00bf  ld   $bf
              d8f3 006b  ld   $6b
              d8f4 0085  ld   $85
              d8f5 00a2  ld   $a2
              d8f6 0065  ld   $65
              d8f7 0085  ld   $85
              d8f8 00de  ld   $de
              d8f9 0075  ld   $75
              d8fa 005e  ld   $5e
              d8fb fe00  bra  ac          ;+-----------------------------------+
              d8fc fcfd  bra  $d8fd       ;|                                   |
              d8fd 1418  ld   $18,y       ;| Trampoline for page $d800 lookups |
              d8fe e006  jmp  y,$06       ;|                                   |
              d8ff c218  st   [$18]       ;+-----------------------------------+
              d900 0073  ld   $73
              d901 0085  ld   $85
              d902 00de  ld   $de
              d903 0075  ld   $75
              d904 005e  ld   $5e
              d905 0072  ld   $72
              d906 0085  ld   $85
              d907 00de  ld   $de
              d908 0075  ld   $75
              d909 00e6  ld   $e6
              d90a 0001  ld   $01
              d90b 0082  ld   $82
              d90c 00ff  ld   $ff
              d90d 00e3  ld   $e3
              d90e 0001  ld   $01
              d90f 002b  ld   $2b
              d910 0074  ld   $74
              d911 0085  ld   $85
              d912 00a2  ld   $a2
              d913 0078  ld   $78
              d914 0021  ld   $21
              d915 0074  ld   $74
              d916 0035  ld   $35
              d917 0072  ld   $72
              d918 00d8  ld   $d8
              d919 0085  ld   $85
              d91a 00de  ld   $de
              d91b 0075  ld   $75
              d91c 0035  ld   $35
              d91d 0072  ld   $72
              d91e 00b8  ld   $b8
              d91f 0085  ld   $85
              d920 00de  ld   $de
              d921 0075  ld   $75
              d922 005e  ld   $5e
              d923 0073  ld   $73
              d924 0085  ld   $85
              d925 00de  ld   $de
              d926 0075  ld   $75
              d927 005e  ld   $5e
              d928 0072  ld   $72
              d929 0085  ld   $85
              d92a 00de  ld   $de
              d92b 0075  ld   $75
              d92c 0035  ld   $35
              d92d 0050  ld   $50
              d92e 00ec  ld   $ec
              d92f 0059  ld   $59
              d930 0000  ld   $00
              d931 002b  ld   $2b
              d932 0072  ld   $72
              d933 0085  ld   $85
              d934 00af  ld   $af
              d935 005d  ld   $5d
              d936 0063  ld   $63
              d937 00ff  ld   $ff
              d938 0093  ld   $93
              d939 001b  ld   $1b
              d93a 00ff  ld   $ff
              d93b 0074  ld   $74
              d93c 00a0  ld   $a0
              d93d 003c  ld   $3c
              d93e 00cd  ld   $cd
              d93f 00c9  ld   $c9
              d940 00cd  ld   $cd
              d941 00ae  ld   $ae
              d942 0053  ld   $53
              d943 0059  ld   $59
              d944 0053  ld   $53
              d945 0054  ld   $54
              d946 0045  ld   $45
              d947 004d  ld   $4d
              d948 0020  ld   $20
              d949 0020  ld   $20
              d94a 0047  ld   $47
              d94b 0054  ld   $54
              d94c 0031  ld   $31
              d94d 0000  ld   $00
              d94e 002b  ld   $2b
              d94f 003c  ld   $3c
              d950 0021  ld   $21
              d951 003a  ld   $3a
              d952 002b  ld   $2b
              d953 0034  ld   $34
              d954 0021  ld   $21
              d955 003c  ld   $3c
              d956 00ad  ld   $ad
              d957 0093  ld   $93
              d958 003c  ld   $3c
              d959 0035  ld   $35
              d95a 003f  ld   $3f
              d95b 00c8  ld   $c8
              d95c 002b  ld   $2b
              d95d 0070  ld   $70
              d95e 0021  ld   $21
              d95f 0034  ld   $34
              d960 00ad  ld   $ad
              d961 0093  ld   $93
              d962 0034  ld   $34
              d963 00fc  ld   $fc
              d964 0070  ld   $70
              d965 0035  ld   $35
              d966 003f  ld   $3f
              d967 00b4  ld   $b4
              d968 00ff  ld   $ff
              d969 00cd  ld   $cd
              d96a 00d7  ld   $d7
              d96b 0059  ld   $59
              d96c 0020  ld   $20
              d96d 0085  ld   $85
              d96e 00b1  ld   $b1
              d96f 0072  ld   $72
              d970 0021  ld   $21
              d971 0072  ld   $72
              d972 0035  ld   $35
              d973 003f  ld   $3f
              d974 00d2  ld   $d2
              d975 00cf  ld   $cf
              d976 0018  ld   $18
              d977 0093  ld   $93
              d978 001b  ld   $1b
              d979 00ff  ld   $ff
              d97a 0075  ld   $75
              d97b 00a0  ld   $a0
              d97c 0059  ld   $59
              d97d 00cd  ld   $cd
              d97e 00c2  ld   $c2
              d97f 0075  ld   $75
              d980 0093  ld   $93
              d981 0040  ld   $40
              d982 0011  ld   $11
              d983 0000  ld   $00
              d984 0002  ld   $02
              d985 0099  ld   $99
              d986 0064  ld   $64
              d987 00f8  ld   $f8
              d988 004a  ld   $4a
              d989 0035  ld   $35
              d98a 0072  ld   $72
              d98b 00c0  ld   $c0
              d98c 0021  ld   $21
              d98d 0076  ld   $76
              d98e 00e3  ld   $e3
              d98f 0004  ld   $04
              d990 002b  ld   $2b
              d991 0076  ld   $76
              d992 00f6  ld   $f6
              d993 002b  ld   $2b
              d994 004c  ld   $4c
              d995 0021  ld   $21
              d996 0076  ld   $76
              d997 00e3  ld   $e3
              d998 0002  ld   $02
              d999 00f6  ld   $f6
              d99a 002b  ld   $2b
              d99b 004e  ld   $4e
              d99c 0085  ld   $85
              d99d 00cf  ld   $cf
              d99e 0065  ld   $65
              d99f 0063  ld   $63
              d9a0 00ff  ld   $ff
              d9a1 00cd  ld   $cd
              d9a2 00da  ld   $da
              d9a3 002b  ld   $2b
              d9a4 0034  ld   $34
              d9a5 0099  ld   $99
              d9a6 0064  ld   $64
              d9a7 002b  ld   $2b
              d9a8 0064  ld   $64
              d9a9 0035  ld   $35
              d9aa 0072  ld   $72
              d9ab 00d3  ld   $d3
              d9ac 0059  ld   $59
              d9ad 0001  ld   $01
              d9ae 0099  ld   $99
              d9af 0060  ld   $60
              d9b0 002b  ld   $2b
              d9b1 0060  ld   $60
              d9b2 0021  ld   $21
              d9b3 0068  ld   $68
              d9b4 00b8  ld   $b8
              d9b5 0034  ld   $34
              d9b6 002b  ld   $2b
              d9b7 0068  ld   $68
              d9b8 00ff  ld   $ff
              d9b9 00cd  ld   $cd
              d9ba 00f4  ld   $f4
              d9bb 0075  ld   $75
              d9bc 0085  ld   $85
              d9bd 00a2  ld   $a2
              d9be 0064  ld   $64
              d9bf 0035  ld   $35
              d9c0 0056  ld   $56
              d9c1 00ef  ld   $ef
              d9c2 0059  ld   $59
              d9c3 0001  ld   $01
              d9c4 0085  ld   $85
              d9c5 00c6  ld   $c6
              d9c6 0075  ld   $75
              d9c7 0021  ld   $21
              d9c8 006a  ld   $6a
              d9c9 00ad  ld   $ad
              d9ca 0093  ld   $93
              d9cb 006a  ld   $6a
              d9cc 0090  ld   $90
              d9cd 00f2  ld   $f2
              d9ce 0011  ld   $11
              d9cf 00ff  ld   $ff
              d9d0 00ff  ld   $ff
              d9d1 0063  ld   $63
              d9d2 00ff  ld   $ff
              d9d3 0093  ld   $93
              d9d4 001b  ld   $1b
              d9d5 00ff  ld   $ff
              d9d6 0076  ld   $76
              d9d7 00a0  ld   $a0
              d9d8 0044  ld   $44
              d9d9 00cd  ld   $cd
              d9da 00df  ld   $df
              d9db 0075  ld   $75
              d9dc 0011  ld   $11
              d9dd 0000  ld   $00
              d9de 007f  ld   $7f
              d9df 002b  ld   $2b
              d9e0 0076  ld   $76
              d9e1 0021  ld   $21
              d9e2 004c  ld   $4c
              d9e3 00f3  ld   $f3
              d9e4 0076  ld   $76
              d9e5 0093  ld   $93
              d9e6 0076  ld   $76
              d9e7 0093  ld   $93
              d9e8 0076  ld   $76
              d9e9 0021  ld   $21
              d9ea 004e  ld   $4e
              d9eb 00f3  ld   $f3
              d9ec 0076  ld   $76
              d9ed 0093  ld   $93
              d9ee 0076  ld   $76
              d9ef 0093  ld   $93
              d9f0 0076  ld   $76
              d9f1 0011  ld   $11
              d9f2 0000  ld   $00
              d9f3 00f0  ld   $f0
              d9f4 00fa  ld   $fa
              d9f5 004e  ld   $4e
              d9f6 00e3  ld   $e3
              d9f7 0001  ld   $01
              d9f8 0035  ld   $35
              d9f9 0072  ld   $72
              d9fa 00c6  ld   $c6
              d9fb fe00  bra  ac          ;+-----------------------------------+
              d9fc fcfd  bra  $d9fd       ;|                                   |
              d9fd 1418  ld   $18,y       ;| Trampoline for page $d900 lookups |
              d9fe e006  jmp  y,$06       ;|                                   |
              d9ff c218  st   [$18]       ;+-----------------------------------+
              da00 0059  ld   $59
              da01 0007  ld   $07
              da02 00fa  ld   $fa
              da03 004c  ld   $4c
              da04 00e3  ld   $e3
              da05 0001  ld   $01
              da06 0035  ld   $35
              da07 003f  ld   $3f
              da08 00ce  ld   $ce
              da09 0085  ld   $85
              da0a 00a2  ld   $a2
              da0b 0077  ld   $77
              da0c 0090  ld   $90
              da0d 00a6  ld   $a6
              da0e 0011  ld   $11
              da0f 0000  ld   $00
              da10 007f  ld   $7f
              da11 002b  ld   $2b
              da12 0076  ld   $76
              da13 00f6  ld   $f6
              da14 002b  ld   $2b
              da15 004c  ld   $4c
              da16 0021  ld   $21
              da17 0076  ld   $76
              da18 00e3  ld   $e3
              da19 0002  ld   $02
              da1a 00f6  ld   $f6
              da1b 002b  ld   $2b
              da1c 004e  ld   $4e
              da1d 0063  ld   $63
              da1e 00ff  ld   $ff
              da1f 0093  ld   $93
              da20 001b  ld   $1b
              da21 00ff  ld   $ff
              da22 0077  ld   $77
              da23 00a0  ld   $a0
              da24 005d  ld   $5d
              da25 00cd  ld   $cd
              da26 00f8  ld   $f8
              da27 0075  ld   $75
              da28 001a  ld   $1a
              da29 004d  ld   $4d
              da2a 005e  ld   $5e
              da2b 0050  ld   $50
              da2c 001a  ld   $1a
              da2d 004e  ld   $4e
              da2e 005e  ld   $5e
              da2f 0051  ld   $51
              da30 001a  ld   $1a
              da31 004f  ld   $4f
              da32 002b  ld   $2b
              da33 0056  ld   $56
              da34 001a  ld   $1a
              da35 004c  ld   $4c
              da36 002b  ld   $2b
              da37 0078  ld   $78
              da38 0082  ld   $82
              da39 0080  ld   $80
              da3a 00ad  ld   $ad
              da3b 002b  ld   $2b
              da3c 004c  ld   $4c
              da3d 0059  ld   $59
              da3e 0000  ld   $00
              da3f 002b  ld   $2b
              da40 004e  ld   $4e
              da41 0085  ld   $85
              da42 00d6  ld   $d6
              da43 0066  ld   $66
              da44 0085  ld   $85
              da45 00d6  ld   $d6
              da46 0066  ld   $66
              da47 0021  ld   $21
              da48 0052  ld   $52
              da49 002b  ld   $2b
              da4a 0050  ld   $50
              da4b 0021  ld   $21
              da4c 0054  ld   $54
              da4d 002b  ld   $2b
              da4e 0056  ld   $56
              da4f 0085  ld   $85
              da50 00d6  ld   $d6
              da51 0066  ld   $66
              da52 00fc  ld   $fc
              da53 0040  ld   $40
              da54 0035  ld   $35
              da55 0072  ld   $72
              da56 00d4  ld   $d4
              da57 0021  ld   $21
              da58 004e  ld   $4e
              da59 00fc  ld   $fc
              da5a 003e  ld   $3e
              da5b 0035  ld   $35
              da5c 003f  ld   $3f
              da5d 00e2  ld   $e2
              da5e 0021  ld   $21
              da5f 004c  ld   $4c
              da60 002b  ld   $2b
              da61 0040  ld   $40
              da62 0021  ld   $21
              da63 004e  ld   $4e
              da64 002b  ld   $2b
              da65 003e  ld   $3e
              da66 0085  ld   $85
              da67 00a2  ld   $a2
              da68 0063  ld   $63
              da69 0021  ld   $21
              da6a 0078  ld   $78
              da6b 0082  ld   $82
              da6c 007f  ld   $7f
              da6d 00e9  ld   $e9
              da6e 00e9  ld   $e9
              da6f 0099  ld   $99
              da70 0030  ld   $30
              da71 002b  ld   $2b
              da72 0078  ld   $78
              da73 00f6  ld   $f6
              da74 002b  ld   $2b
              da75 004c  ld   $4c
              da76 0021  ld   $21
              da77 0078  ld   $78
              da78 00e3  ld   $e3
              da79 0002  ld   $02
              da7a 00f6  ld   $f6
              da7b 002b  ld   $2b
              da7c 004e  ld   $4e
              da7d 0063  ld   $63
              da7e 00ff  ld   $ff
              da7f 0093  ld   $93
              da80 001b  ld   $1b
              da81 00ff  ld   $ff
              da82 0078  ld   $78
              da83 00a0  ld   $a0
              da84 0038  ld   $38
              da85 00cd  ld   $cd
              da86 00d3  ld   $d3
              da87 0075  ld   $75
              da88 0085  ld   $85
              da89 00a2  ld   $a2
              da8a 0064  ld   $64
              da8b 0035  ld   $35
              da8c 0056  ld   $56
              da8d 00d1  ld   $d1
              da8e 00b8  ld   $b8
              da8f 0074  ld   $74
              da90 0035  ld   $35
              da91 0056  ld   $56
              da92 00ae  ld   $ae
              da93 0059  ld   $59
              da94 0000  ld   $00
              da95 0099  ld   $99
              da96 0074  ld   $74
              da97 0085  ld   $85
              da98 00c6  ld   $c6
              da99 0075  ld   $75
              da9a 0021  ld   $21
              da9b 006a  ld   $6a
              da9c 002b  ld   $2b
              da9d 0026  ld   $26
              da9e 0021  ld   $21
              da9f 0072  ld   $72
              daa0 002b  ld   $2b
              daa1 0024  ld   $24
              daa2 0099  ld   $99
              daa3 0034  ld   $34
              daa4 002b  ld   $2b
              daa5 0072  ld   $72
              daa6 0011  ld   $11
              daa7 00e9  ld   $e9
              daa8 0000  ld   $00
              daa9 002b  ld   $2b
              daaa 0022  ld   $22
              daab 0021  ld   $21
              daac 0034  ld   $34
              daad 00b4  ld   $b4
              daae 00e6  ld   $e6
              daaf 0021  ld   $21
              dab0 0074  ld   $74
              dab1 00b8  ld   $b8
              dab2 0034  ld   $34
              dab3 002b  ld   $2b
              dab4 0074  ld   $74
              dab5 0035  ld   $35
              dab6 004d  ld   $4d
              dab7 00a1  ld   $a1
              dab8 0063  ld   $63
              dab9 00ff  ld   $ff
              daba 0093  ld   $93
              dabb 001b  ld   $1b
              dabc 00ff  ld   $ff
              dabd 0079  ld   $79
              dabe 00a0  ld   $a0
              dabf 0040  ld   $40
              dac0 00cd  ld   $cd
              dac1 00bf  ld   $bf
              dac2 0075  ld   $75
              dac3 0059  ld   $59
              dac4 0000  ld   $00
              dac5 002b  ld   $2b
              dac6 0064  ld   $64
              dac7 002b  ld   $2b
              dac8 0060  ld   $60
              dac9 0059  ld   $59
              daca 0000  ld   $00
              dacb 002b  ld   $2b
              dacc 0066  ld   $66
              dacd 0059  ld   $59
              dace 0001  ld   $01
              dacf 002b  ld   $2b
              dad0 0062  ld   $62
              dad1 0021  ld   $21
              dad2 005c  ld   $5c
              dad3 002b  ld   $2b
              dad4 004c  ld   $4c
              dad5 0021  ld   $21
              dad6 005e  ld   $5e
              dad7 002b  ld   $2b
              dad8 004e  ld   $4e
              dad9 0085  ld   $85
              dada 00a2  ld   $a2
              dadb 0076  ld   $76
              dadc 0085  ld   $85
              dadd 00cf  ld   $cf
              dade 0065  ld   $65
              dadf 0063  ld   $63
              dae0 00ff  ld   $ff
              dae1 00cd  ld   $cd
              dae2 00db  ld   $db
              dae3 0075  ld   $75
              dae4 00cd  ld   $cd
              dae5 00ce  ld   $ce
              dae6 0043  ld   $43
              dae7 0061  ld   $61
              dae8 0072  ld   $72
              dae9 0064  ld   $64
              daea 0054  ld   $54
              daeb 0079  ld   $79
              daec 0070  ld   $70
              daed 0065  ld   $65
              daee 0020  ld   $20
              daef 0000  ld   $00
              daf0 0085  ld   $85
              daf1 00a2  ld   $a2
              daf2 0069  ld   $69
              daf3 0021  ld   $21
              daf4 0036  ld   $36
              daf5 0085  ld   $85
              daf6 00a2  ld   $a2
              daf7 0068  ld   $68
              daf8 0085  ld   $85
              daf9 00a2  ld   $a2
              dafa 006d  ld   $6d
              dafb fe00  bra  ac          ;+-----------------------------------+
              dafc fcfd  bra  $dafd       ;|                                   |
              dafd 1418  ld   $18,y       ;| Trampoline for page $da00 lookups |
              dafe e006  jmp  y,$06       ;|                                   |
              daff c218  st   [$18]       ;+-----------------------------------+
              db00 0063  ld   $63
              db01 00ff  ld   $ff
              db02 0093  ld   $93
              db03 001b  ld   $1b
              db04 00ff  ld   $ff
              db05 007a  ld   $7a
              db06 00a0  ld   $a0
              db07 0057  ld   $57
              db08 00cd  ld   $cd
              db09 00af  ld   $af
              db0a 000a  ld   $0a
              db0b 002a  ld   $2a
              db0c 002a  ld   $2a
              db0d 002a  ld   $2a
              db0e 0020  ld   $20
              db0f 0043  ld   $43
              db10 0061  ld   $61
              db11 0072  ld   $72
              db12 0064  ld   $64
              db13 0042  ld   $42
              db14 006f  ld   $6f
              db15 006f  ld   $6f
              db16 0074  ld   $74
              db17 000a  ld   $0a
              db18 0000  ld   $00
              db19 0085  ld   $85
              db1a 00a2  ld   $a2
              db1b 0069  ld   $69
              db1c 0059  ld   $59
              db1d 0000  ld   $00
              db1e 005e  ld   $5e
              db1f 000e  ld   $0e
              db20 0085  ld   $85
              db21 00a2  ld   $a2
              db22 0060  ld   $60
              db23 0085  ld   $85
              db24 00c3  ld   $c3
              db25 0079  ld   $79
              db26 0085  ld   $85
              db27 00a2  ld   $a2
              db28 0061  ld   $61
              db29 0085  ld   $85
              db2a 00bb  ld   $bb
              db2b 0068  ld   $68
              db2c 0085  ld   $85
              db2d 00c7  ld   $c7
              db2e 0060  ld   $60
              db2f 0035  ld   $35
              db30 0072  ld   $72
              db31 00d1  ld   $d1
              db32 0085  ld   $85
              db33 00a2  ld   $a2
              db34 0062  ld   $62
              db35 0085  ld   $85
              db36 00a2  ld   $a2
              db37 0079  ld   $79
              db38 0085  ld   $85
              db39 00a2  ld   $a2
              db3a 006f  ld   $6f
              db3b 0059  ld   $59
              db3c 0020  ld   $20
              db3d 00f0  ld   $f0
              db3e 0032  ld   $32
              db3f 0085  ld   $85
              db40 00a2  ld   $a2
              db41 006d  ld   $6d
              db42 00cd  ld   $cd
              db43 00f0  ld   $f0
              db44 0053  ld   $53
              db45 0059  ld   $59
              db46 0053  ld   $53
              db47 0054  ld   $54
              db48 0045  ld   $45
              db49 004d  ld   $4d
              db4a 002e  ld   $2e
              db4b 0047  ld   $47
              db4c 0054  ld   $54
              db4d 0031  ld   $31
              db4e 0020  ld   $20
              db4f 006e  ld   $6e
              db50 006f  ld   $6f
              db51 0074  ld   $74
              db52 0020  ld   $20
              db53 0066  ld   $66
              db54 006f  ld   $6f
              db55 0075  ld   $75
              db56 006e  ld   $6e
              db57 0064  ld   $64
              db58 0021  ld   $21
              db59 0000  ld   $00
              db5a 0085  ld   $85
              db5b 00a2  ld   $a2
              db5c 0069  ld   $69
              db5d 00b4  ld   $b4
              db5e 0080  ld   $80
              db5f 0000  ld   $00
              db60 0000  ld   $00         ;End of Apps/CardBoot/CardBoot.gt1, size 2922
                                          ;+-----------------------------------+
                                          ;| Apps/MainMenu/MainMenu_vX0.gcl    |
                                          ;+-----------------------------------+
              db61 dc42  st   $42,[y,x++] ;'B'
              db62 dc6f  st   $6f,[y,x++] ;'o'
              db63 dc6f  st   $6f,[y,x++] ;'o'
              db64 dc74  st   $74,[y,x++] ;'t'
              db65 dc00  st   $00,[y,x++] ;'\x00'
              db66 dc00  st   $00,[y,x++] ;'\x00'
              db67 dc00  st   $00,[y,x++] ;'\x00'
              db68 dc00  st   $00,[y,x++] ;'\x00'
              db69 00f7  ld   $f7
              db6a c218  st   [$18]
              db6b 00cf  ld   $cf
              db6c 14e1  ld   $e1,y
              db6d e071  jmp  y,$71
              db6e c219  st   [$19]
Main:         db6f 0002  ld   $02         ;| RAM segment address (high byte first)
              db70 0000  ld   $00         ;|
              db71 00dd  ld   $dd         ;| Length (1..256)
              db72 0021  ld   $21         ;0200 LDW
              db73 0011  ld   $11
              db74 0035  ld   $35         ;0202 BCC
              db75 0056  ld   $56         ;0203 LE
              db76 000f  ld   $0f
              db77 0082  ld   $82         ;0205 ANDI
              db78 0010  ld   $10
              db79 0035  ld   $35         ;0207 BCC
              db7a 0072  ld   $72         ;0208 NE
              db7b 000f  ld   $0f
              db7c 0011  ld   $11         ;020a LDWI
              db7d 000e  ld   $0e
              db7e 00cb  ld   $cb
              db7f 002b  ld   $2b         ;020d STW
              db80 0024  ld   $24         ;020d '_sysArgs0'
              db81 00b4  ld   $b4         ;020f SYS
              db82 00e3  ld   $e3
              db83 00cd  ld   $cd         ;0211 DEF
              db84 005f  ld   $5f
              db85 0021  ld   $21         ;0213 LDW
              db86 0030  ld   $30         ;0213 'Char'
              db87 00e6  ld   $e6         ;0215 SUBI
              db88 0052  ld   $52
              db89 0035  ld   $35         ;0217 BCC
              db8a 0053  ld   $53         ;0218 GE
              db8b 0021  ld   $21
              db8c 00e3  ld   $e3         ;021a ADDI
              db8d 0032  ld   $32
              db8e 002b  ld   $2b         ;021c STW
              db8f 0032  ld   $32         ;021c 'i'
              db90 0011  ld   $11         ;021e LDWI
              db91 0000  ld   $00
              db92 0007  ld   $07
              db93 0090  ld   $90         ;0221 BRA
              db94 0026  ld   $26
              db95 002b  ld   $2b         ;0223 STW
              db96 0032  ld   $32         ;0223 'i'
              db97 0011  ld   $11         ;0225 LDWI
              db98 0000  ld   $00
              db99 0008  ld   $08
              db9a 002b  ld   $2b         ;0228 STW
              db9b 0034  ld   $34         ;0228 'fontData'
              db9c 0021  ld   $21         ;022a LDW
              db9d 0032  ld   $32         ;022a 'i'
              db9e 00e9  ld   $e9         ;022c LSLW
              db9f 00e9  ld   $e9         ;022d LSLW
              dba0 0099  ld   $99         ;022e ADDW
              dba1 0032  ld   $32         ;022e 'i'
              dba2 0099  ld   $99         ;0230 ADDW
              dba3 0034  ld   $34         ;0230 'fontData'
              dba4 002b  ld   $2b         ;0232 STW
              dba5 0034  ld   $34         ;0232 'fontData'
              dba6 0059  ld   $59         ;0234 LDI
              dba7 0020  ld   $20
              dba8 005e  ld   $5e         ;0236 ST
              dba9 0024  ld   $24
              dbaa 0021  ld   $21         ;0238 LDW
              dbab 0036  ld   $36         ;0238 'Color'
              dbac 005e  ld   $5e         ;023a ST
              dbad 0025  ld   $25
              dbae 0021  ld   $21         ;023c LDW
              dbaf 0038  ld   $38         ;023c 'Pos'
              dbb0 002b  ld   $2b         ;023e STW
              dbb1 0028  ld   $28
              dbb2 00e3  ld   $e3         ;0240 ADDI
              dbb3 0006  ld   $06
              dbb4 002b  ld   $2b         ;0242 STW
              dbb5 0038  ld   $38         ;0242 'Pos'
              dbb6 0011  ld   $11         ;0244 LDWI
              dbb7 00e1  ld   $e1
              dbb8 0004  ld   $04
              dbb9 002b  ld   $2b         ;0247 STW
              dbba 0022  ld   $22
              dbbb 0059  ld   $59         ;0249 LDI
              dbbc 00fb  ld   $fb
              dbbd 002b  ld   $2b         ;024b STW
              dbbe 0032  ld   $32         ;024b 'i'
              dbbf 0021  ld   $21         ;024d LDW
              dbc0 0034  ld   $34         ;024d 'fontData'
              dbc1 007f  ld   $7f         ;024f LUP
              dbc2 0000  ld   $00
              dbc3 0093  ld   $93         ;0251 INC
              dbc4 0034  ld   $34         ;0251 'fontData'
              dbc5 005e  ld   $5e         ;0253 ST
              dbc6 0026  ld   $26
              dbc7 00b4  ld   $b4         ;0255 SYS
              dbc8 00cc  ld   $cc
              dbc9 0093  ld   $93         ;0257 INC
              dbca 0028  ld   $28
              dbcb 0093  ld   $93         ;0259 INC
              dbcc 0032  ld   $32         ;0259 'i'
              dbcd 0021  ld   $21         ;025b LDW
              dbce 0032  ld   $32         ;025b 'i'
              dbcf 0035  ld   $35         ;025d BCC
              dbd0 0072  ld   $72         ;025e NE
              dbd1 004b  ld   $4b
              dbd2 00ff  ld   $ff         ;0260 RET
              dbd3 002b  ld   $2b         ;0261 STW
              dbd4 003a  ld   $3a         ;0261 'PrintChar'
              dbd5 00cd  ld   $cd         ;0263 DEF
              dbd6 008c  ld   $8c
              dbd7 0075  ld   $75         ;0265 PUSH
              dbd8 002b  ld   $2b         ;0266 STW
              dbd9 003c  ld   $3c         ;0266 'Text'
              dbda 0021  ld   $21         ;0268 LDW
              dbdb 003c  ld   $3c         ;0268 'Text'
              dbdc 00ad  ld   $ad         ;026a PEEK
              dbdd 0035  ld   $35         ;026b BCC
              dbde 003f  ld   $3f         ;026c EQ
              dbdf 008a  ld   $8a
              dbe0 002b  ld   $2b         ;026e STW
              dbe1 0030  ld   $30         ;026e 'Char'
              dbe2 0093  ld   $93         ;0270 INC
              dbe3 003c  ld   $3c         ;0270 'Text'
              dbe4 008c  ld   $8c         ;0272 XORI
              dbe5 0009  ld   $09
              dbe6 0035  ld   $35         ;0274 BCC
              dbe7 0072  ld   $72         ;0275 NE
              dbe8 007d  ld   $7d
              dbe9 0021  ld   $21         ;0277 LDW
              dbea 0038  ld   $38         ;0277 'Pos'
              dbeb 00e3  ld   $e3         ;0279 ADDI
              dbec 0012  ld   $12
              dbed 002b  ld   $2b         ;027b STW
              dbee 0038  ld   $38         ;027b 'Pos'
              dbef 0090  ld   $90         ;027d BRA
              dbf0 0066  ld   $66
              dbf1 008c  ld   $8c         ;027f XORI
              dbf2 0003  ld   $03
              dbf3 0035  ld   $35         ;0281 BCC
              dbf4 0072  ld   $72         ;0282 NE
              dbf5 0086  ld   $86
              dbf6 00cf  ld   $cf         ;0284 CALL
              dbf7 003e  ld   $3e         ;0284 'Newline'
              dbf8 0090  ld   $90         ;0286 BRA
              dbf9 0066  ld   $66
              dbfa 00cf  ld   $cf         ;0288 CALL
              dbfb fe00  bra  ac          ;+-----------------------------------+
              dbfc fcfd  bra  $dbfd       ;|                                   |
              dbfd 1418  ld   $18,y       ;| Trampoline for page $db00 lookups |
              dbfe e006  jmp  y,$06       ;|                                   |
              dbff c218  st   [$18]       ;+-----------------------------------+
              dc00 003a  ld   $3a         ;0288 'PrintChar'
              dc01 0090  ld   $90         ;028a BRA
              dc02 0066  ld   $66
              dc03 0063  ld   $63         ;028c POP
              dc04 00ff  ld   $ff         ;028d RET
              dc05 002b  ld   $2b         ;028e STW
              dc06 0040  ld   $40         ;028e 'PrintText'
              dc07 00cd  ld   $cd         ;0290 DEF
              dc08 00a6  ld   $a6
              dc09 0075  ld   $75         ;0292 PUSH
              dc0a 0059  ld   $59         ;0293 LDI
              dc0b 002d  ld   $2d
              dc0c 002b  ld   $2b         ;0295 STW
              dc0d 0030  ld   $30         ;0295 'Char'
              dc0e 0059  ld   $59         ;0297 LDI
              dc0f 001a  ld   $1a
              dc10 002b  ld   $2b         ;0299 STW
              dc11 0042  ld   $42         ;0299 'j'
              dc12 00cf  ld   $cf         ;029b CALL
              dc13 003a  ld   $3a         ;029b 'PrintChar'
              dc14 0021  ld   $21         ;029d LDW
              dc15 0042  ld   $42         ;029d 'j'
              dc16 00e6  ld   $e6         ;029f SUBI
              dc17 0001  ld   $01
              dc18 0035  ld   $35         ;02a1 BCC
              dc19 004d  ld   $4d         ;02a2 GT
              dc1a 0097  ld   $97
              dc1b 00cf  ld   $cf         ;02a4 CALL
              dc1c 003e  ld   $3e         ;02a4 'Newline'
              dc1d 0063  ld   $63         ;02a6 POP
              dc1e 00ff  ld   $ff         ;02a7 RET
              dc1f 002b  ld   $2b         ;02a8 STW
              dc20 0044  ld   $44         ;02a8 'PrintDivider'
              dc21 00cd  ld   $cd         ;02aa DEF
              dc22 00d6  ld   $d6
              dc23 0075  ld   $75         ;02ac PUSH
              dc24 0021  ld   $21         ;02ad LDW
              dc25 0046  ld   $46         ;02ad 'MenuItem'
              dc26 00e6  ld   $e6         ;02af SUBI
              dc27 0005  ld   $05
              dc28 0035  ld   $35         ;02b1 BCC
              dc29 0053  ld   $53         ;02b2 GE
              dc2a 00b7  ld   $b7
              dc2b 0011  ld   $11         ;02b4 LDWI
              dc2c 000b  ld   $0b
              dc2d 0020  ld   $20
              dc2e 0090  ld   $90         ;02b7 BRA
              dc2f 00ba  ld   $ba
              dc30 0011  ld   $11         ;02b9 LDWI
              dc31 0059  ld   $59
              dc32 00f8  ld   $f8
              dc33 002b  ld   $2b         ;02bc STW
              dc34 0038  ld   $38         ;02bc 'Pos'
              dc35 0021  ld   $21         ;02be LDW
              dc36 0046  ld   $46         ;02be 'MenuItem'
              dc37 002b  ld   $2b         ;02c0 STW
              dc38 0042  ld   $42         ;02c0 'j'
              dc39 0011  ld   $11         ;02c2 LDWI
              dc3a 0000  ld   $00
              dc3b 0008  ld   $08
              dc3c 0099  ld   $99         ;02c5 ADDW
              dc3d 0038  ld   $38         ;02c5 'Pos'
              dc3e 002b  ld   $2b         ;02c7 STW
              dc3f 0038  ld   $38         ;02c7 'Pos'
              dc40 0021  ld   $21         ;02c9 LDW
              dc41 0042  ld   $42         ;02c9 'j'
              dc42 00e6  ld   $e6         ;02cb SUBI
              dc43 0001  ld   $01
              dc44 0035  ld   $35         ;02cd BCC
              dc45 0053  ld   $53         ;02ce GE
              dc46 00be  ld   $be
              dc47 0059  ld   $59         ;02d0 LDI
              dc48 0082  ld   $82
              dc49 002b  ld   $2b         ;02d2 STW
              dc4a 0030  ld   $30         ;02d2 'Char'
              dc4b 00cf  ld   $cf         ;02d4 CALL
              dc4c 003a  ld   $3a         ;02d4 'PrintChar'
              dc4d 0063  ld   $63         ;02d6 POP
              dc4e 00ff  ld   $ff         ;02d7 RET
              dc4f 002b  ld   $2b         ;02d8 STW
              dc50 0048  ld   $48         ;02d8 'PrintArrow'
              dc51 0093  ld   $93         ;02da INC
              dc52 001b  ld   $1b         ;02da '_vLR'+1
              dc53 00ff  ld   $ff         ;02dc RET
              dc54 0003  ld   $03         ;| RAM segment address (high byte first)
              dc55 0000  ld   $00         ;|
              dc56 00a0  ld   $a0         ;| Length (1..256)
              dc57 00cd  ld   $cd         ;0300 DEF
              dc58 0099  ld   $99
              dc59 0075  ld   $75         ;0302 PUSH
              dc5a 001a  ld   $1a         ;0303 LD
              dc5b 000e  ld   $0e
              dc5c 002b  ld   $2b         ;0305 STW
              dc5d 0036  ld   $36         ;0305 'Color'
              dc5e 00cf  ld   $cf         ;0307 CALL
              dc5f 0048  ld   $48         ;0307 'PrintArrow'
              dc60 001a  ld   $1a         ;0309 LD
              dc61 0011  ld   $11
              dc62 008c  ld   $8c         ;030b XORI
              dc63 00fe  ld   $fe
              dc64 0035  ld   $35         ;030d BCC
              dc65 0072  ld   $72         ;030e NE
              dc66 001f  ld   $1f
              dc67 00cf  ld   $cf         ;0310 CALL
              dc68 004a  ld   $4a         ;0310 'WipeOutArrow'
              dc69 0021  ld   $21         ;0312 LDW
              dc6a 0046  ld   $46         ;0312 'MenuItem'
              dc6b 00e6  ld   $e6         ;0314 SUBI
              dc6c 0004  ld   $04
              dc6d 0035  ld   $35         ;0316 BCC
              dc6e 004d  ld   $4d         ;0317 GT
              dc6f 001b  ld   $1b
              dc70 00e3  ld   $e3         ;0319 ADDI
              dc71 0009  ld   $09
              dc72 002b  ld   $2b         ;031b STW
              dc73 0046  ld   $46         ;031b 'MenuItem'
              dc74 0059  ld   $59         ;031d LDI
              dc75 00ef  ld   $ef
              dc76 005e  ld   $5e         ;031f ST
              dc77 0011  ld   $11
              dc78 001a  ld   $1a         ;0321 LD
              dc79 0011  ld   $11
              dc7a 008c  ld   $8c         ;0323 XORI
              dc7b 00fd  ld   $fd
              dc7c 0035  ld   $35         ;0325 BCC
              dc7d 0072  ld   $72         ;0326 NE
              dc7e 0035  ld   $35
              dc7f 00cf  ld   $cf         ;0328 CALL
              dc80 004a  ld   $4a         ;0328 'WipeOutArrow'
              dc81 0021  ld   $21         ;032a LDW
              dc82 0046  ld   $46         ;032a 'MenuItem'
              dc83 00e6  ld   $e6         ;032c SUBI
              dc84 0005  ld   $05
              dc85 0035  ld   $35         ;032e BCC
              dc86 0050  ld   $50         ;032f LT
              dc87 0031  ld   $31
              dc88 002b  ld   $2b         ;0331 STW
              dc89 0046  ld   $46         ;0331 'MenuItem'
              dc8a 0059  ld   $59         ;0333 LDI
              dc8b 00ef  ld   $ef
              dc8c 005e  ld   $5e         ;0335 ST
              dc8d 0011  ld   $11
              dc8e 001a  ld   $1a         ;0337 LD
              dc8f 0011  ld   $11
              dc90 008c  ld   $8c         ;0339 XORI
              dc91 00fb  ld   $fb
              dc92 0035  ld   $35         ;033b BCC
              dc93 0072  ld   $72         ;033c NE
              dc94 0050  ld   $50
              dc95 00cf  ld   $cf         ;033e CALL
              dc96 004a  ld   $4a         ;033e 'WipeOutArrow'
              dc97 0021  ld   $21         ;0340 LDW
              dc98 0046  ld   $46         ;0340 'MenuItem'
              dc99 00e6  ld   $e6         ;0342 SUBI
              dc9a 0004  ld   $04
              dc9b 0035  ld   $35         ;0344 BCC
              dc9c 003f  ld   $3f         ;0345 EQ
              dc9d 004c  ld   $4c
              dc9e 00e6  ld   $e6         ;0347 SUBI
              dc9f 0005  ld   $05
              dca0 0035  ld   $35         ;0349 BCC
              dca1 003f  ld   $3f         ;034a EQ
              dca2 004c  ld   $4c
              dca3 0093  ld   $93         ;034c INC
              dca4 0046  ld   $46         ;034c 'MenuItem'
              dca5 0059  ld   $59         ;034e LDI
              dca6 00ef  ld   $ef
              dca7 005e  ld   $5e         ;0350 ST
              dca8 0011  ld   $11
              dca9 001a  ld   $1a         ;0352 LD
              dcaa 0011  ld   $11
              dcab 008c  ld   $8c         ;0354 XORI
              dcac 00f7  ld   $f7
              dcad 0035  ld   $35         ;0356 BCC
              dcae 0072  ld   $72         ;0357 NE
              dcaf 006d  ld   $6d
              dcb0 00cf  ld   $cf         ;0359 CALL
              dcb1 004a  ld   $4a         ;0359 'WipeOutArrow'
              dcb2 0021  ld   $21         ;035b LDW
              dcb3 0046  ld   $46         ;035b 'MenuItem'
              dcb4 0035  ld   $35         ;035d BCC
              dcb5 003f  ld   $3f         ;035e EQ
              dcb6 0069  ld   $69
              dcb7 00e6  ld   $e6         ;0360 SUBI
              dcb8 0005  ld   $05
              dcb9 0035  ld   $35         ;0362 BCC
              dcba 003f  ld   $3f         ;0363 EQ
              dcbb 0069  ld   $69
              dcbc 0021  ld   $21         ;0365 LDW
              dcbd 0046  ld   $46         ;0365 'MenuItem'
              dcbe 00e6  ld   $e6         ;0367 SUBI
              dcbf 0001  ld   $01
              dcc0 002b  ld   $2b         ;0369 STW
              dcc1 0046  ld   $46         ;0369 'MenuItem'
              dcc2 0059  ld   $59         ;036b LDI
              dcc3 00ef  ld   $ef
              dcc4 005e  ld   $5e         ;036d ST
              dcc5 0011  ld   $11
              dcc6 001a  ld   $1a         ;036f LD
              dcc7 0011  ld   $11
              dcc8 0082  ld   $82         ;0371 ANDI
              dcc9 0080  ld   $80
              dcca 0035  ld   $35         ;0373 BCC
              dccb 0072  ld   $72         ;0374 NE
              dccc 0001  ld   $01
              dccd 0059  ld   $59         ;0376 LDI
              dcce 002a  ld   $2a
              dccf 002b  ld   $2b         ;0378 STW
              dcd0 0036  ld   $36         ;0378 'Color'
              dcd1 00cf  ld   $cf         ;037a CALL
              dcd2 0048  ld   $48         ;037a 'PrintArrow'
              dcd3 00cd  ld   $cd         ;037c DEF
              dcd4 0090  ld   $90
              dcd5 004f  ld   $4f
              dcd6 0055  ld   $55
              dcd7 00f0  ld   $f0
              dcd8 004d  ld   $4d
              dcd9 009c  ld   $9c
              dcda 0060  ld   $60
              dcdb 00b5  ld   $b5
              dcdc 0066  ld   $66
              dcdd 0091  ld   $91
              dcde 0065  ld   $65
              dcdf 0019  ld   $19
              dce0 0069  ld   $69
              dce1 00d9  ld   $d9
              dce2 007c  ld   $7c
              dce3 0051  ld   $51
              dce4 0070  ld   $70
              dce5 00e9  ld   $e9
              dce6 00a4  ld   $a4
              dce7 0054  ld   $54
              dce8 0087  ld   $87
              dce9 0099  ld   $99         ;0392 ADDW
              dcea 0046  ld   $46         ;0392 'MenuItem'
              dceb 0099  ld   $99         ;0394 ADDW
              dcec 0046  ld   $46         ;0394 'MenuItem'
              dced 00f6  ld   $f6         ;0396 DEEK
              dcee 002b  ld   $2b         ;0397 STW
              dcef 004c  ld   $4c         ;0397 'Program'
              dcf0 0063  ld   $63         ;0399 POP
              dcf1 00ff  ld   $ff         ;039a RET
              dcf2 002b  ld   $2b         ;039b STW
              dcf3 004e  ld   $4e         ;039b 'SelectMenu'
              dcf4 0093  ld   $93         ;039d INC
              dcf5 001b  ld   $1b         ;039d '_vLR'+1
              dcf6 00ff  ld   $ff         ;039f RET
              dcf7 0004  ld   $04         ;| RAM segment address (high byte first)
              dcf8 0000  ld   $00         ;|
              dcf9 00c0  ld   $c0         ;| Length (1..256)
              dcfa 00cd  ld   $cd         ;0400 DEF
              dcfb fe00  bra  ac          ;+-----------------------------------+
              dcfc fcfd  bra  $dcfd       ;|                                   |
              dcfd 1418  ld   $18,y       ;| Trampoline for page $dc00 lookups |
              dcfe e006  jmp  y,$06       ;|                                   |
              dcff c218  st   [$18]       ;+-----------------------------------+
              dd00 000b  ld   $0b
              dd01 001a  ld   $1a         ;0402 LD
              dd02 0039  ld   $39         ;0402 'Pos'+1
              dd03 00e3  ld   $e3         ;0404 ADDI
              dd04 0008  ld   $08
              dd05 005e  ld   $5e         ;0406 ST
              dd06 0039  ld   $39         ;0406 'Pos'+1
              dd07 0059  ld   $59         ;0408 LDI
              dd08 0002  ld   $02
              dd09 005e  ld   $5e         ;040a ST
              dd0a 0038  ld   $38         ;040a 'Pos'
              dd0b 00ff  ld   $ff         ;040c RET
              dd0c 002b  ld   $2b         ;040d STW
              dd0d 003e  ld   $3e         ;040d 'Newline'
              dd0e 00cd  ld   $cd         ;040f DEF
              dd0f 006b  ld   $6b
              dd10 0009  ld   $09         ;0411 9
              dd11 0053  ld   $53         ;0412 'S'
              dd12 0044  ld   $44         ;0413 'D'
              dd13 0043  ld   $43         ;0414 'C'
              dd14 0061  ld   $61         ;0415 'a'
              dd15 0072  ld   $72         ;0416 'r'
              dd16 0064  ld   $64         ;0417 'd'
              dd17 0009  ld   $09         ;0418 9
              dd18 0020  ld   $20         ;0419 ' '
              dd19 0009  ld   $09         ;041a 9
              dd1a 0053  ld   $53         ;041b 'S'
              dd1b 006e  ld   $6e         ;041c 'n'
              dd1c 0061  ld   $61         ;041d 'a'
              dd1d 006b  ld   $6b         ;041e 'k'
              dd1e 0065  ld   $65         ;041f 'e'
              dd1f 000a  ld   $0a         ;0420 10
              dd20 0009  ld   $09         ;0421 9
              dd21 0052  ld   $52         ;0422 'R'
              dd22 0061  ld   $61         ;0423 'a'
              dd23 0063  ld   $63         ;0424 'c'
              dd24 0065  ld   $65         ;0425 'e'
              dd25 0072  ld   $72         ;0426 'r'
              dd26 0009  ld   $09         ;0427 9
              dd27 0020  ld   $20         ;0428 ' '
              dd28 0020  ld   $20         ;0429 ' '
              dd29 0009  ld   $09         ;042a 9
              dd2a 0054  ld   $54         ;042b 'T'
              dd2b 0069  ld   $69         ;042c 'i'
              dd2c 0063  ld   $63         ;042d 'c'
              dd2d 0054  ld   $54         ;042e 'T'
              dd2e 0061  ld   $61         ;042f 'a'
              dd2f 0063  ld   $63         ;0430 'c'
              dd30 0054  ld   $54         ;0431 'T'
              dd31 006f  ld   $6f         ;0432 'o'
              dd32 0065  ld   $65         ;0433 'e'
              dd33 000a  ld   $0a         ;0434 10
              dd34 0009  ld   $09         ;0435 9
              dd35 004d  ld   $4d         ;0436 'M'
              dd36 0061  ld   $61         ;0437 'a'
              dd37 006e  ld   $6e         ;0438 'n'
              dd38 0064  ld   $64         ;0439 'd'
              dd39 0065  ld   $65         ;043a 'e'
              dd3a 006c  ld   $6c         ;043b 'l'
              dd3b 0062  ld   $62         ;043c 'b'
              dd3c 0072  ld   $72         ;043d 'r'
              dd3d 006f  ld   $6f         ;043e 'o'
              dd3e 0074  ld   $74         ;043f 't'
              dd3f 0009  ld   $09         ;0440 9
              dd40 0042  ld   $42         ;0441 'B'
              dd41 0041  ld   $41         ;0442 'A'
              dd42 0053  ld   $53         ;0443 'S'
              dd43 0049  ld   $49         ;0444 'I'
              dd44 0043  ld   $43         ;0445 'C'
              dd45 000a  ld   $0a         ;0446 10
              dd46 0009  ld   $09         ;0447 9
              dd47 0043  ld   $43         ;0448 'C'
              dd48 0072  ld   $72         ;0449 'r'
              dd49 0065  ld   $65         ;044a 'e'
              dd4a 0064  ld   $64         ;044b 'd'
              dd4b 0069  ld   $69         ;044c 'i'
              dd4c 0074  ld   $74         ;044d 't'
              dd4d 0073  ld   $73         ;044e 's'
              dd4e 0009  ld   $09         ;044f 9
              dd4f 0009  ld   $09         ;0450 9
              dd50 004d  ld   $4d         ;0451 'M'
              dd51 0053  ld   $53         ;0452 'S'
              dd52 0020  ld   $20         ;0453 ' '
              dd53 0042  ld   $42         ;0454 'B'
              dd54 0041  ld   $41         ;0455 'A'
              dd55 0053  ld   $53         ;0456 'S'
              dd56 0049  ld   $49         ;0457 'I'
              dd57 0043  ld   $43         ;0458 'C'
              dd58 000a  ld   $0a         ;0459 10
              dd59 0009  ld   $09         ;045a 9
              dd5a 004c  ld   $4c         ;045b 'L'
              dd5b 006f  ld   $6f         ;045c 'o'
              dd5c 0061  ld   $61         ;045d 'a'
              dd5d 0064  ld   $64         ;045e 'd'
              dd5e 0065  ld   $65         ;045f 'e'
              dd5f 0072  ld   $72         ;0460 'r'
              dd60 0009  ld   $09         ;0461 9
              dd61 0020  ld   $20         ;0462 ' '
              dd62 0009  ld   $09         ;0463 9
              dd63 0041  ld   $41         ;0464 'A'
              dd64 0070  ld   $70         ;0465 'p'
              dd65 0070  ld   $70         ;0466 'p'
              dd66 006c  ld   $6c         ;0467 'l'
              dd67 0065  ld   $65         ;0468 'e'
              dd68 002d  ld   $2d         ;0469 '-'
              dd69 0031  ld   $31         ;046a '1'
              dd6a 000a  ld   $0a         ;046b 10
              dd6b 0000  ld   $00         ;046c 0
              dd6c 002b  ld   $2b         ;046d STW
              dd6d 0050  ld   $50         ;046d 'MainMenu'
              dd6e 00cd  ld   $cd         ;046f DEF
              dd6f 00b9  ld   $b9
              dd70 0055  ld   $55         ;0471 'U'
              dd71 0073  ld   $73         ;0472 's'
              dd72 0065  ld   $65         ;0473 'e'
              dd73 0020  ld   $20         ;0474 ' '
              dd74 005b  ld   $5b         ;0475 91
              dd75 0041  ld   $41         ;0476 'A'
              dd76 0072  ld   $72         ;0477 'r'
              dd77 0072  ld   $72         ;0478 'r'
              dd78 006f  ld   $6f         ;0479 'o'
              dd79 0077  ld   $77         ;047a 'w'
              dd7a 0073  ld   $73         ;047b 's'
              dd7b 005d  ld   $5d         ;047c 93
              dd7c 0020  ld   $20         ;047d ' '
              dd7d 0074  ld   $74         ;047e 't'
              dd7e 006f  ld   $6f         ;047f 'o'
              dd7f 0020  ld   $20         ;0480 ' '
              dd80 0073  ld   $73         ;0481 's'
              dd81 0065  ld   $65         ;0482 'e'
              dd82 006c  ld   $6c         ;0483 'l'
              dd83 0065  ld   $65         ;0484 'e'
              dd84 0063  ld   $63         ;0485 'c'
              dd85 0074  ld   $74         ;0486 't'
              dd86 000a  ld   $0a         ;0487 10
              dd87 0050  ld   $50         ;0488 'P'
              dd88 0072  ld   $72         ;0489 'r'
              dd89 0065  ld   $65         ;048a 'e'
              dd8a 0073  ld   $73         ;048b 's'
              dd8b 0073  ld   $73         ;048c 's'
              dd8c 0020  ld   $20         ;048d ' '
              dd8d 005b  ld   $5b         ;048e 91
              dd8e 0041  ld   $41         ;048f 'A'
              dd8f 005d  ld   $5d         ;0490 93
              dd90 0020  ld   $20         ;0491 ' '
              dd91 0074  ld   $74         ;0492 't'
              dd92 006f  ld   $6f         ;0493 'o'
              dd93 0020  ld   $20         ;0494 ' '
              dd94 0073  ld   $73         ;0495 's'
              dd95 0074  ld   $74         ;0496 't'
              dd96 0061  ld   $61         ;0497 'a'
              dd97 0072  ld   $72         ;0498 'r'
              dd98 0074  ld   $74         ;0499 't'
              dd99 0020  ld   $20         ;049a ' '
              dd9a 0070  ld   $70         ;049b 'p'
              dd9b 0072  ld   $72         ;049c 'r'
              dd9c 006f  ld   $6f         ;049d 'o'
              dd9d 0067  ld   $67         ;049e 'g'
              dd9e 0072  ld   $72         ;049f 'r'
              dd9f 0061  ld   $61         ;04a0 'a'
              dda0 006d  ld   $6d         ;04a1 'm'
              dda1 000a  ld   $0a         ;04a2 10
              dda2 000a  ld   $0a         ;04a3 10
              dda3 0048  ld   $48         ;04a4 'H'
              dda4 006f  ld   $6f         ;04a5 'o'
              dda5 006c  ld   $6c         ;04a6 'l'
              dda6 0064  ld   $64         ;04a7 'd'
              dda7 0020  ld   $20         ;04a8 ' '
              dda8 005b  ld   $5b         ;04a9 91
              dda9 0053  ld   $53         ;04aa 'S'
              ddaa 0074  ld   $74         ;04ab 't'
              ddab 0061  ld   $61         ;04ac 'a'
              ddac 0072  ld   $72         ;04ad 'r'
              ddad 0074  ld   $74         ;04ae 't'
              ddae 005d  ld   $5d         ;04af 93
              ddaf 0020  ld   $20         ;04b0 ' '
              ddb0 0066  ld   $66         ;04b1 'f'
              ddb1 006f  ld   $6f         ;04b2 'o'
              ddb2 0072  ld   $72         ;04b3 'r'
              ddb3 0020  ld   $20         ;04b4 ' '
              ddb4 0072  ld   $72         ;04b5 'r'
              ddb5 0065  ld   $65         ;04b6 'e'
              ddb6 0073  ld   $73         ;04b7 's'
              ddb7 0065  ld   $65         ;04b8 'e'
              ddb8 0074  ld   $74         ;04b9 't'
              ddb9 0000  ld   $00         ;04ba 0
              ddba 002b  ld   $2b         ;04bb STW
              ddbb 0052  ld   $52         ;04bb 'HelpText'
              ddbc 0093  ld   $93         ;04bd INC
              ddbd 001b  ld   $1b         ;04bd '_vLR'+1
              ddbe 00ff  ld   $ff         ;04bf RET
              ddbf 0005  ld   $05         ;| RAM segment address (high byte first)
              ddc0 0000  ld   $00         ;|
              ddc1 00b7  ld   $b7         ;| Length (1..256)
              ddc2 00cd  ld   $cd         ;0500 DEF
              ddc3 0011  ld   $11
              ddc4 0075  ld   $75         ;0502 PUSH
              ddc5 0021  ld   $21         ;0503 LDW
              ddc6 0038  ld   $38         ;0503 'Pos'
              ddc7 00e6  ld   $e6         ;0505 SUBI
              ddc8 000c  ld   $0c
              ddc9 002b  ld   $2b         ;0507 STW
              ddca 0038  ld   $38         ;0507 'Pos'
              ddcb 0059  ld   $59         ;0509 LDI
              ddcc 0020  ld   $20
              ddcd 002b  ld   $2b         ;050b STW
              ddce 0030  ld   $30         ;050b 'Char'
              ddcf 00cf  ld   $cf         ;050d CALL
              ddd0 003a  ld   $3a         ;050d 'PrintChar'
              ddd1 00cf  ld   $cf         ;050f CALL
              ddd2 003a  ld   $3a         ;050f 'PrintChar'
              ddd3 0063  ld   $63         ;0511 POP
              ddd4 00ff  ld   $ff         ;0512 RET
              ddd5 002b  ld   $2b         ;0513 STW
              ddd6 004a  ld   $4a         ;0513 'WipeOutArrow'
              ddd7 00cd  ld   $cd         ;0515 DEF
              ddd8 0030  ld   $30
              ddd9 0075  ld   $75         ;0517 PUSH
              ddda 0059  ld   $59         ;0518 LDI
              dddb 002a  ld   $2a
              dddc 002b  ld   $2b         ;051a STW
              dddd 0036  ld   $36         ;051a 'Color'
              ddde 00cf  ld   $cf         ;051c CALL
              dddf 0044  ld   $44         ;051c 'PrintDivider'
              dde0 0059  ld   $59         ;051e LDI
              dde1 000f  ld   $0f
              dde2 002b  ld   $2b         ;0520 STW
              dde3 0036  ld   $36         ;0520 'Color'
              dde4 0021  ld   $21         ;0522 LDW
              dde5 0050  ld   $50         ;0522 'MainMenu'
              dde6 00cf  ld   $cf         ;0524 CALL
              dde7 0040  ld   $40         ;0524 'PrintText'
              dde8 0059  ld   $59         ;0526 LDI
              dde9 002a  ld   $2a
              ddea 002b  ld   $2b         ;0528 STW
              ddeb 0036  ld   $36         ;0528 'Color'
              ddec 00cf  ld   $cf         ;052a CALL
              dded 0044  ld   $44         ;052a 'PrintDivider'
              ddee 0021  ld   $21         ;052c LDW
              ddef 0052  ld   $52         ;052c 'HelpText'
              ddf0 00cf  ld   $cf         ;052e CALL
              ddf1 0040  ld   $40         ;052e 'PrintText'
              ddf2 0063  ld   $63         ;0530 POP
              ddf3 00ff  ld   $ff         ;0531 RET
              ddf4 002b  ld   $2b         ;0532 STW
              ddf5 0054  ld   $54         ;0532 'PrintMenu'
              ddf6 001a  ld   $1a         ;0534 LD
              ddf7 0021  ld   $21
              ddf8 0088  ld   $88         ;0536 ORI
              ddf9 0003  ld   $03
              ddfa 005e  ld   $5e         ;0538 ST
              ddfb fe00  bra  ac          ;+-----------------------------------+
              ddfc fcfd  bra  $ddfd       ;|                                   |
              ddfd 1418  ld   $18,y       ;| Trampoline for page $dd00 lookups |
              ddfe e006  jmp  y,$06       ;|                                   |
              ddff c218  st   [$18]       ;+-----------------------------------+
              de00 0021  ld   $21
              de01 0059  ld   $59         ;053a LDI
              de02 005a  ld   $5a
              de03 005e  ld   $5e         ;053c ST
              de04 002c  ld   $2c
              de05 0011  ld   $11         ;053e LDWI
              de06 0002  ld   $02
              de07 0020  ld   $20
              de08 002b  ld   $2b         ;0541 STW
              de09 0038  ld   $38         ;0541 'Pos'
              de0a 00cf  ld   $cf         ;0543 CALL
              de0b 0054  ld   $54         ;0543 'PrintMenu'
              de0c 0059  ld   $59         ;0545 LDI
              de0d 0000  ld   $00
              de0e 002b  ld   $2b         ;0547 STW
              de0f 0046  ld   $46         ;0547 'MenuItem'
              de10 00cf  ld   $cf         ;0549 CALL
              de11 004e  ld   $4e         ;0549 'SelectMenu'
              de12 0011  ld   $11         ;054b LDWI
              de13 0000  ld   $00
              de14 0008  ld   $08
              de15 002b  ld   $2b         ;054e STW
              de16 0028  ld   $28         ;054e '_sysArgs4'
              de17 0011  ld   $11         ;0550 LDWI
              de18 0001  ld   $01
              de19 0088  ld   $88
              de1a 002b  ld   $2b         ;0553 STW
              de1b 0032  ld   $32         ;0553 'i'
              de1c 0011  ld   $11         ;0555 LDWI
              de1d 0080  ld   $80
              de1e 00ff  ld   $ff
              de1f 002b  ld   $2b         ;0558 STW
              de20 0042  ld   $42         ;0558 'j'
              de21 0021  ld   $21         ;055a LDW
              de22 0038  ld   $38         ;055a 'Pos'
              de23 00e3  ld   $e3         ;055c ADDI
              de24 0030  ld   $30
              de25 00f8  ld   $f8         ;055e ANDW
              de26 0042  ld   $42         ;055e 'j'
              de27 002b  ld   $2b         ;0560 STW
              de28 0056  ld   $56         ;0560 'q'
              de29 0011  ld   $11         ;0562 LDWI
              de2a 00e1  ld   $e1
              de2b 0004  ld   $04
              de2c 002b  ld   $2b         ;0565 STW
              de2d 0022  ld   $22         ;0565 '_sysFn'
              de2e 0059  ld   $59         ;0567 LDI
              de2f 0020  ld   $20
              de30 005e  ld   $5e         ;0569 ST
              de31 0024  ld   $24
              de32 005e  ld   $5e         ;056b ST
              de33 0025  ld   $25
              de34 0021  ld   $21         ;056d LDW
              de35 0028  ld   $28         ;056d '_sysArgs4'
              de36 00e3  ld   $e3         ;056f ADDI
              de37 0030  ld   $30
              de38 00f8  ld   $f8         ;0571 ANDW
              de39 0042  ld   $42         ;0571 'j'
              de3a 00fc  ld   $fc         ;0573 XORW
              de3b 0056  ld   $56         ;0573 'q'
              de3c 0035  ld   $35         ;0575 BCC
              de3d 003f  ld   $3f         ;0576 EQ
              de3e 007f  ld   $7f
              de3f 001a  ld   $1a         ;0578 LD
              de40 0059  ld   $59         ;0578 'p'+1
              de41 008c  ld   $8c         ;057a XORI
              de42 0078  ld   $78
              de43 0035  ld   $35         ;057c BCC
              de44 003f  ld   $3f         ;057d EQ
              de45 007f  ld   $7f
              de46 00b4  ld   $b4         ;057f SYS
              de47 00cc  ld   $cc
              de48 0011  ld   $11         ;0581 LDWI
              de49 0000  ld   $00
              de4a 0008  ld   $08
              de4b 0099  ld   $99         ;0584 921
              de4c 0028  ld   $28         ;0585 40
              de4d 002b  ld   $2b         ;0586 STW
              de4e 0028  ld   $28
              de4f 0035  ld   $35         ;0588 BCC
              de50 004d  ld   $4d         ;0589 GT
              de51 006d  ld   $6d
              de52 0099  ld   $99         ;058b ADDW
              de53 0032  ld   $32         ;058b 'i'
              de54 002b  ld   $2b         ;058d STW
              de55 0028  ld   $28
              de56 0082  ld   $82         ;058f ANDI
              de57 00ff  ld   $ff
              de58 008c  ld   $8c         ;0591 XORI
              de59 00a0  ld   $a0
              de5a 0035  ld   $35         ;0593 BCC
              de5b 0072  ld   $72         ;0594 NE
              de5c 006b  ld   $6b
              de5d 0059  ld   $59         ;0596 LDI
              de5e 00ad  ld   $ad
              de5f 002b  ld   $2b         ;0598 STW
              de60 0022  ld   $22         ;0598 '_sysFn'
              de61 0021  ld   $21         ;059a LDW
              de62 004c  ld   $4c         ;059a 'Program'
              de63 002b  ld   $2b         ;059c STW
              de64 0024  ld   $24         ;059c '_sysArgs0'
              de65 0011  ld   $11         ;059e LDWI
              de66 0000  ld   $00
              de67 0002  ld   $02
              de68 002b  ld   $2b         ;05a1 STW
              de69 001a  ld   $1a         ;05a1 '_vLR'
              de6a 0021  ld   $21         ;05a3 LDW
              de6b 0046  ld   $46         ;05a3 'MenuItem'
              de6c 00e6  ld   $e6         ;05a5 SUBI
              de6d 0008  ld   $08
              de6e 0035  ld   $35         ;05a7 BCC
              de6f 003f  ld   $3f         ;05a8 EQ
              de70 00aa  ld   $aa
              de71 00e6  ld   $e6         ;05aa SUBI
              de72 0001  ld   $01
              de73 0035  ld   $35         ;05ac BCC
              de74 0072  ld   $72         ;05ad NE
              de75 00b3  ld   $b3
              de76 001a  ld   $1a         ;05af LD
              de77 0021  ld   $21
              de78 0082  ld   $82         ;05b1 ANDI
              de79 00f8  ld   $f8
              de7a 005e  ld   $5e         ;05b3 ST
              de7b 0021  ld   $21
              de7c 00b4  ld   $b4         ;05b5 SYS
              de7d 00e3  ld   $e3
              de7e 0000  ld   $00         ;End of Apps/MainMenu/MainMenu_vX0.gcl, size 784
                                          ;+-----------------------------------+
                                          ;| Core/Reset_vX0.gcl                |
                                          ;+-----------------------------------+
              de7f dc4d  st   $4d,[y,x++] ;'M'
              de80 dc61  st   $61,[y,x++] ;'a'
              de81 dc69  st   $69,[y,x++] ;'i'
              de82 dc6e  st   $6e,[y,x++] ;'n'
              de83 dc00  st   $00,[y,x++] ;'\x00'
              de84 dc00  st   $00,[y,x++] ;'\x00'
              de85 dc00  st   $00,[y,x++] ;'\x00'
              de86 dc00  st   $00,[y,x++] ;'\x00'
              de87 006f  ld   $6f
              de88 c218  st   [$18]
              de89 00db  ld   $db
              de8a 14e1  ld   $e1,y
              de8b e071  jmp  y,$71
              de8c c219  st   [$19]
Reset:        de8d 0002  ld   $02         ;| RAM segment address (high byte first)
              de8e 0000  ld   $00         ;|
              de8f 00f3  ld   $f3         ;| Length (1..256)
              de90 0011  ld   $11         ;0200 LDWI
              de91 00f8  ld   $f8
              de92 0001  ld   $01
              de93 002b  ld   $2b         ;0203 STW
              de94 0030  ld   $30         ;0203 'CtrlBits'
              de95 00cd  ld   $cd         ;0205 DEF
              de96 0075  ld   $75
              de97 0075  ld   $75         ;0207 PUSH
              de98 001a  ld   $1a         ;0208 LD
              de99 0001  ld   $01
              de9a 00e6  ld   $e6         ;020a SUBI
              de9b 0001  ld   $01
              de9c 0082  ld   $82         ;020c ANDI
              de9d 00ff  ld   $ff
              de9e 00e3  ld   $e3         ;020e ADDI
              de9f 0001  ld   $01
              dea0 002b  ld   $2b         ;0210 STW
              dea1 0032  ld   $32         ;0210 'i'
              dea2 0011  ld   $11         ;0212 LDWI
              dea3 0009  ld   $09
              dea4 000b  ld   $0b
              dea5 002b  ld   $2b         ;0215 STW
              dea6 0022  ld   $22         ;0215 '_sysFn'
              dea7 0059  ld   $59         ;0217 LDI
              dea8 00aa  ld   $aa
              dea9 005e  ld   $5e         ;0219 ST
              deaa 007c  ld   $7c
              deab 0059  ld   $59         ;021b LDI
              deac 007c  ld   $7c
              dead 00b4  ld   $b4         ;021d SYS
              deae 00fb  ld   $fb
              deaf 001a  ld   $1a         ;021f LD
              deb0 007c  ld   $7c
              deb1 008c  ld   $8c         ;0221 XORI
              deb2 00aa  ld   $aa
              deb3 0035  ld   $35         ;0223 BCC
              deb4 003f  ld   $3f         ;0224 EQ
              deb5 002a  ld   $2a
              deb6 0059  ld   $59         ;0226 LDI
              deb7 0000  ld   $00
              deb8 00f0  ld   $f0         ;0228 POKE
              deb9 0030  ld   $30         ;0228 'CtrlBits'
              deba 0090  ld   $90         ;022a BRA
              debb 0054  ld   $54
              debc 0011  ld   $11         ;022c LDWI
              debd 0024  ld   $24
              debe 0080  ld   $80
              debf 002b  ld   $2b         ;022f STW
              dec0 0034  ld   $34         ;022f 'q'
              dec1 0059  ld   $59         ;0231 LDI
              dec2 00bc  ld   $bc
              dec3 00b4  ld   $b4         ;0233 SYS
              dec4 00fb  ld   $fb
              dec5 0021  ld   $21         ;0235 LDW
              dec6 0034  ld   $34         ;0235 'q'
              dec7 00ad  ld   $ad         ;0237 PEEK
              dec8 008c  ld   $8c         ;0238 XORI
              dec9 00ff  ld   $ff
              deca 00f0  ld   $f0         ;023a POKE
              decb 0034  ld   $34         ;023a 'q'
              decc 002b  ld   $2b         ;023c STW
              decd 0024  ld   $24         ;023c '_sysArgs0'
              dece 008c  ld   $8c         ;023e XORI
              decf 00ff  ld   $ff
              ded0 00f0  ld   $f0         ;0240 POKE
              ded1 0034  ld   $34         ;0240 'q'
              ded2 00fc  ld   $fc         ;0242 XORW
              ded3 0024  ld   $24         ;0242 '_sysArgs0'
              ded4 0035  ld   $35         ;0244 BCC
              ded5 003f  ld   $3f         ;0245 EQ
              ded6 004f  ld   $4f
              ded7 0059  ld   $59         ;0247 LDI
              ded8 0031  ld   $31
              ded9 002b  ld   $2b         ;0249 STW
              deda 0036  ld   $36         ;0249 'Char'
              dedb 00cf  ld   $cf         ;024b CALL
              dedc 0038  ld   $38         ;024b 'PrintChar'
              dedd 0059  ld   $59         ;024d LDI
              dede 0070  ld   $70
              dedf 002b  ld   $2b         ;024f STW
              dee0 0032  ld   $32         ;024f 'i'
              dee1 0011  ld   $11         ;0251 LDWI
              dee2 007c  ld   $7c
              dee3 0080  ld   $80
              dee4 00b4  ld   $b4         ;0254 SYS
              dee5 00fb  ld   $fb
              dee6 0011  ld   $11         ;0256 LDWI
              dee7 002f  ld   $2f
              dee8 002f  ld   $2f
              dee9 002b  ld   $2b         ;0259 STW
              deea 0036  ld   $36         ;0259 'Char'
              deeb 0021  ld   $21         ;025b LDW
              deec 0032  ld   $32         ;025b 'i'
              deed 0093  ld   $93         ;025d INC
              deee 0036  ld   $36         ;025d 'Char'
              deef 00e6  ld   $e6         ;025f SUBI
              def0 0028  ld   $28
              def1 0035  ld   $35         ;0261 BCC
              def2 0053  ld   $53         ;0262 GE
              def3 005b  ld   $5b
              def4 00e3  ld   $e3         ;0264 ADDI
              def5 0028  ld   $28
              def6 0093  ld   $93         ;0266 INC
              def7 0037  ld   $37         ;0266 'Char'+1
              def8 00e6  ld   $e6         ;0268 SUBI
              def9 0004  ld   $04
              defa 0035  ld   $35         ;026a BCC
              defb fe00  bra  ac          ;+-----------------------------------+
              defc fcfd  bra  $defd       ;|                                   |
              defd 1418  ld   $18,y       ;| Trampoline for page $de00 lookups |
              defe e006  jmp  y,$06       ;|                                   |
              deff c218  st   [$18]       ;+-----------------------------------+
              df00 0053  ld   $53         ;026b GE
              df01 0064  ld   $64
              df02 00cf  ld   $cf         ;026d CALL
              df03 0038  ld   $38         ;026d 'PrintChar'
              df04 001a  ld   $1a         ;026f LD
              df05 0037  ld   $37         ;026f 'Char'+1
              df06 002b  ld   $2b         ;0271 STW
              df07 0036  ld   $36         ;0271 'Char'
              df08 00cf  ld   $cf         ;0273 CALL
              df09 0038  ld   $38         ;0273 'PrintChar'
              df0a 0063  ld   $63         ;0275 POP
              df0b 00ff  ld   $ff         ;0276 RET
              df0c 002b  ld   $2b         ;0277 STW
              df0d 003a  ld   $3a         ;0277 'CheckMemory'
              df0e 00cd  ld   $cd         ;0279 DEF
              df0f 009d  ld   $9d
              df10 0075  ld   $75         ;027b PUSH
              df11 002b  ld   $2b         ;027c STW
              df12 003c  ld   $3c         ;027c 'Text'
              df13 0021  ld   $21         ;027e LDW
              df14 003c  ld   $3c         ;027e 'Text'
              df15 00ad  ld   $ad         ;0280 PEEK
              df16 0035  ld   $35         ;0281 BCC
              df17 003f  ld   $3f         ;0282 EQ
              df18 009b  ld   $9b
              df19 002b  ld   $2b         ;0284 STW
              df1a 0036  ld   $36         ;0284 'Char'
              df1b 008c  ld   $8c         ;0286 XORI
              df1c 000a  ld   $0a
              df1d 0035  ld   $35         ;0288 BCC
              df1e 003f  ld   $3f         ;0289 EQ
              df1f 008d  ld   $8d
              df20 00cf  ld   $cf         ;028b CALL
              df21 0038  ld   $38         ;028b 'PrintChar'
              df22 0090  ld   $90         ;028d BRA
              df23 0097  ld   $97
              df24 0059  ld   $59         ;028f LDI
              df25 0002  ld   $02
              df26 005e  ld   $5e         ;0291 ST
              df27 003e  ld   $3e         ;0291 'Pos'
              df28 001a  ld   $1a         ;0293 LD
              df29 003f  ld   $3f         ;0293 'Pos'+1
              df2a 00e3  ld   $e3         ;0295 ADDI
              df2b 0008  ld   $08
              df2c 005e  ld   $5e         ;0297 ST
              df2d 003f  ld   $3f         ;0297 'Pos'+1
              df2e 0093  ld   $93         ;0299 INC
              df2f 003c  ld   $3c         ;0299 'Text'
              df30 0090  ld   $90         ;029b BRA
              df31 007c  ld   $7c
              df32 0063  ld   $63         ;029d POP
              df33 00ff  ld   $ff         ;029e RET
              df34 002b  ld   $2b         ;029f STW
              df35 0040  ld   $40         ;029f 'PrintS'
              df36 00cd  ld   $cd         ;02a1 DEF
              df37 00ec  ld   $ec
              df38 001a  ld   $1a         ;02a3 LD
              df39 0036  ld   $36         ;02a3 'Char'
              df3a 00e6  ld   $e6         ;02a5 SUBI
              df3b 0052  ld   $52
              df3c 0035  ld   $35         ;02a7 BCC
              df3d 0053  ld   $53         ;02a8 GE
              df3e 00b1  ld   $b1
              df3f 00e3  ld   $e3         ;02aa ADDI
              df40 0032  ld   $32
              df41 002b  ld   $2b         ;02ac STW
              df42 0032  ld   $32         ;02ac 'i'
              df43 0011  ld   $11         ;02ae LDWI
              df44 0000  ld   $00
              df45 0007  ld   $07
              df46 0090  ld   $90         ;02b1 BRA
              df47 00b6  ld   $b6
              df48 002b  ld   $2b         ;02b3 STW
              df49 0032  ld   $32         ;02b3 'i'
              df4a 0011  ld   $11         ;02b5 LDWI
              df4b 0000  ld   $00
              df4c 0008  ld   $08
              df4d 002b  ld   $2b         ;02b8 STW
              df4e 0042  ld   $42         ;02b8 'j'
              df4f 0021  ld   $21         ;02ba LDW
              df50 0032  ld   $32         ;02ba 'i'
              df51 00e9  ld   $e9         ;02bc LSLW
              df52 00e9  ld   $e9         ;02bd LSLW
              df53 0099  ld   $99         ;02be ADDW
              df54 0032  ld   $32         ;02be 'i'
              df55 0099  ld   $99         ;02c0 ADDW
              df56 0042  ld   $42         ;02c0 'j'
              df57 002b  ld   $2b         ;02c2 STW
              df58 0042  ld   $42         ;02c2 'j'
              df59 0011  ld   $11         ;02c4 LDWI
              df5a 00e1  ld   $e1
              df5b 0004  ld   $04
              df5c 002b  ld   $2b         ;02c7 STW
              df5d 0022  ld   $22         ;02c7 '_sysFn'
              df5e 0011  ld   $11         ;02c9 LDWI
              df5f 0020  ld   $20
              df60 003f  ld   $3f
              df61 002b  ld   $2b         ;02cc STW
              df62 0024  ld   $24
              df63 0021  ld   $21         ;02ce LDW
              df64 003e  ld   $3e         ;02ce 'Pos'
              df65 002b  ld   $2b         ;02d0 STW
              df66 0028  ld   $28
              df67 00e3  ld   $e3         ;02d2 ADDI
              df68 0006  ld   $06
              df69 002b  ld   $2b         ;02d4 STW
              df6a 003e  ld   $3e         ;02d4 'Pos'
              df6b 0059  ld   $59         ;02d6 LDI
              df6c 0005  ld   $05
              df6d 002b  ld   $2b         ;02d8 STW
              df6e 0032  ld   $32         ;02d8 'i'
              df6f 0021  ld   $21         ;02da LDW
              df70 0042  ld   $42         ;02da 'j'
              df71 007f  ld   $7f         ;02dc LUP
              df72 0000  ld   $00
              df73 005e  ld   $5e         ;02de ST
              df74 0026  ld   $26
              df75 00b4  ld   $b4         ;02e0 SYS
              df76 00cc  ld   $cc
              df77 0093  ld   $93         ;02e2 INC
              df78 0042  ld   $42         ;02e2 'j'
              df79 0093  ld   $93         ;02e4 INC
              df7a 0028  ld   $28
              df7b 0021  ld   $21         ;02e6 LDW
              df7c 0032  ld   $32         ;02e6 'i'
              df7d 00e6  ld   $e6         ;02e8 SUBI
              df7e 0001  ld   $01
              df7f 0035  ld   $35         ;02ea BCC
              df80 004d  ld   $4d         ;02eb GT
              df81 00d6  ld   $d6
              df82 00ff  ld   $ff         ;02ed RET
              df83 002b  ld   $2b         ;02ee STW
              df84 0038  ld   $38         ;02ee 'PrintChar'
              df85 0093  ld   $93         ;02f0 INC
              df86 001b  ld   $1b
              df87 00ff  ld   $ff         ;02f2 RET
              df88 0003  ld   $03         ;| RAM segment address (high byte first)
              df89 0000  ld   $00         ;|
              df8a 00ea  ld   $ea         ;| Length (1..256)
              df8b 00cd  ld   $cd         ;0300 DEF
              df8c 0037  ld   $37
              df8d 002b  ld   $2b         ;0302 STW
              df8e 0032  ld   $32         ;0302 'i'
              df8f 0088  ld   $88         ;0304 ORI
              df90 00ff  ld   $ff
              df91 008c  ld   $8c         ;0306 XORI
              df92 00ff  ld   $ff
              df93 0088  ld   $88         ;0308 ORI
              df94 00fa  ld   $fa
              df95 002b  ld   $2b         ;030a STW
              df96 0044  ld   $44         ;030a 'p'
              df97 001a  ld   $1a         ;030c LD
              df98 0032  ld   $32         ;030c 'i'
              df99 002b  ld   $2b         ;030e STW
              df9a 0032  ld   $32         ;030e 'i'
              df9b 0059  ld   $59         ;0310 LDI
              df9c 0000  ld   $00
              df9d 00f0  ld   $f0         ;0312 POKE
              df9e 0044  ld   $44         ;0312 'p'
              df9f 0093  ld   $93         ;0314 INC
              dfa0 0044  ld   $44         ;0314 'p'
              dfa1 0059  ld   $59         ;0316 LDI
              dfa2 0003  ld   $03
              dfa3 00f0  ld   $f0         ;0318 POKE
              dfa4 0044  ld   $44         ;0318 'p'
              dfa5 0093  ld   $93         ;031a INC
              dfa6 0044  ld   $44         ;031a 'p'
              dfa7 0011  ld   $11         ;031c LDWI
              dfa8 0000  ld   $00
              dfa9 0009  ld   $09
              dfaa 0099  ld   $99         ;031f ADDW
              dfab 0032  ld   $32         ;031f 'i'
              dfac 007f  ld   $7f         ;0321 LUP
              dfad 0000  ld   $00
              dfae 00f0  ld   $f0         ;0323 POKE
              dfaf 0044  ld   $44         ;0323 'p'
              dfb0 0093  ld   $93         ;0325 INC
              dfb1 0044  ld   $44         ;0325 'p'
              dfb2 0011  ld   $11         ;0327 LDWI
              dfb3 0000  ld   $00
              dfb4 0009  ld   $09
              dfb5 0099  ld   $99         ;032a ADDW
              dfb6 0032  ld   $32         ;032a 'i'
              dfb7 007f  ld   $7f         ;032c LUP
              dfb8 0001  ld   $01
              dfb9 00f0  ld   $f0         ;032e POKE
              dfba 0044  ld   $44         ;032e 'p'
              dfbb 0093  ld   $93         ;0330 INC
              dfbc 0044  ld   $44         ;0330 'p'
              dfbd 00f0  ld   $f0         ;0332 POKE
              dfbe 0044  ld   $44         ;0332 'p'
              dfbf 0093  ld   $93         ;0334 INC
              dfc0 0044  ld   $44         ;0334 'p'
              dfc1 00f0  ld   $f0         ;0336 POKE
              dfc2 0044  ld   $44         ;0336 'p'
              dfc3 00ff  ld   $ff         ;0338 RET
              dfc4 002b  ld   $2b         ;0339 STW
              dfc5 0046  ld   $46         ;0339 'SetupChannel'
              dfc6 00cd  ld   $cd         ;033b DEF
              dfc7 00c9  ld   $c9
              dfc8 0075  ld   $75         ;033d PUSH
              dfc9 0059  ld   $59         ;033e LDI
              dfca 0010  ld   $10
              dfcb 002b  ld   $2b         ;0340 STW
              dfcc 0042  ld   $42         ;0340 'j'
              dfcd 0059  ld   $59         ;0342 LDI
              dfce 000a  ld   $0a
              dfcf 002b  ld   $2b         ;0344 STW
              dfd0 0032  ld   $32         ;0344 'i'
              dfd1 00cf  ld   $cf         ;0346 CALL
              dfd2 0048  ld   $48         ;0346 'SendOnesToCard'
              dfd3 0021  ld   $21         ;0348 LDW
              dfd4 0032  ld   $32         ;0348 'i'
              dfd5 00e6  ld   $e6         ;034a SUBI
              dfd6 0001  ld   $01
              dfd7 0035  ld   $35         ;034c BCC
              dfd8 004d  ld   $4d         ;034d GT
              dfd9 0042  ld   $42
              dfda 0011  ld   $11         ;034f LDWI
              dfdb 0009  ld   $09
              dfdc 000b  ld   $0b
              dfdd 002b  ld   $2b         ;0352 STW
              dfde 0022  ld   $22         ;0352 '_sysFn'
              dfdf 0011  ld   $11         ;0354 LDWI
              dfe0 0078  ld   $78
              dfe1 0080  ld   $80
              dfe2 00b4  ld   $b4         ;0357 SYS
              dfe3 00fb  ld   $fb
              dfe4 00cd  ld   $cd         ;0359 DEF
              dfe5 0061  ld   $61
              dfe6 00ff  ld   $ff         ;035b 255
              dfe7 00ff  ld   $ff         ;035c 255
              dfe8 0040  ld   $40         ;035d 64
              dfe9 0000  ld   $00         ;035e 0
              dfea 0000  ld   $00         ;035f 0
              dfeb 0000  ld   $00         ;0360 0
              dfec 0000  ld   $00         ;0361 0
              dfed 0095  ld   $95         ;0362 149
              dfee 002b  ld   $2b         ;0363 STW
              dfef 0044  ld   $44         ;0363 'p'
              dff0 0059  ld   $59         ;0365 LDI
              dff1 0081  ld   $81
              dff2 002b  ld   $2b         ;0367 STW
              dff3 0034  ld   $34         ;0367 'q'
              dff4 0059  ld   $59         ;0369 LDI
              dff5 0008  ld   $08
              dff6 002b  ld   $2b         ;036b STW
              dff7 0032  ld   $32         ;036b 'i'
              dff8 0021  ld   $21         ;036d LDW
              dff9 0044  ld   $44         ;036d 'p'
              dffa 00ad  ld   $ad         ;036f PEEK
              dffb fe00  bra  ac          ;+-----------------------------------+
              dffc fcfd  bra  $dffd       ;|                                   |
              dffd 1418  ld   $18,y       ;| Trampoline for page $df00 lookups |
              dffe e006  jmp  y,$06       ;|                                   |
              dfff c218  st   [$18]       ;+-----------------------------------+
              e000 0093  ld   $93         ;0370 INC
              e001 0044  ld   $44         ;0370 'p'
              e002 00f0  ld   $f0         ;0372 POKE
              e003 0034  ld   $34         ;0372 'q'
              e004 0093  ld   $93         ;0374 INC
              e005 0034  ld   $34         ;0374 'q'
              e006 0021  ld   $21         ;0376 LDW
              e007 0032  ld   $32         ;0376 'i'
              e008 00e6  ld   $e6         ;0378 SUBI
              e009 0001  ld   $01
              e00a 0035  ld   $35         ;037a BCC
              e00b 004d  ld   $4d         ;037b GT
              e00c 0069  ld   $69
              e00d 0059  ld   $59         ;037d LDI
              e00e 0081  ld   $81
              e00f 002b  ld   $2b         ;037f STW
              e010 0024  ld   $24         ;037f '_sysArgs0'
              e011 00e3  ld   $e3         ;0381 ADDI
              e012 0008  ld   $08
              e013 002b  ld   $2b         ;0383 STW
              e014 0026  ld   $26         ;0383 '_sysArgs2'
              e015 0011  ld   $11         ;0385 LDWI
              e016 0015  ld   $15
              e017 000b  ld   $0b
              e018 002b  ld   $2b         ;0388 STW
              e019 0022  ld   $22         ;0388 '_sysFn'
              e01a 00b4  ld   $b4         ;038a SYS
              e01b 00cc  ld   $cc
              e01c 0059  ld   $59         ;038c LDI
              e01d 0010  ld   $10
              e01e 002b  ld   $2b         ;038e STW
              e01f 0032  ld   $32         ;038e 'i'
              e020 00cf  ld   $cf         ;0390 CALL
              e021 0048  ld   $48         ;0390 'SendOnesToCard'
              e022 0082  ld   $82         ;0392 ANDI
              e023 0080  ld   $80
              e024 0035  ld   $35         ;0394 BCC
              e025 003f  ld   $3f         ;0395 EQ
              e026 009c  ld   $9c
              e027 0021  ld   $21         ;0397 LDW
              e028 0032  ld   $32         ;0397 'i'
              e029 00e6  ld   $e6         ;0399 SUBI
              e02a 0001  ld   $01
              e02b 0035  ld   $35         ;039b BCC
              e02c 004d  ld   $4d         ;039c GT
              e02d 008c  ld   $8c
              e02e 0011  ld   $11         ;039e LDWI
              e02f 0009  ld   $09
              e030 000b  ld   $0b
              e031 002b  ld   $2b         ;03a1 STW
              e032 0022  ld   $22         ;03a1 '_sysFn'
              e033 0011  ld   $11         ;03a3 LDWI
              e034 007c  ld   $7c
              e035 0080  ld   $80
              e036 00b4  ld   $b4         ;03a6 SYS
              e037 00fb  ld   $fb
              e038 001a  ld   $1a         ;03a8 LD
              e039 002a  ld   $2a
              e03a 0035  ld   $35         ;03aa BCC
              e03b 003f  ld   $3f         ;03ab EQ
              e03c 00c7  ld   $c7
              e03d 008c  ld   $8c         ;03ad XORI
              e03e 0001  ld   $01
              e03f 0035  ld   $35         ;03af BCC
              e040 0072  ld   $72         ;03b0 NE
              e041 00c0  ld   $c0
              e042 0011  ld   $11         ;03b2 LDWI
              e043 00f7  ld   $f7
              e044 00cf  ld   $cf
              e045 002b  ld   $2b         ;03b5 STW
              e046 0024  ld   $24         ;03b5 '_sysArgs0'
              e047 0011  ld   $11         ;03b7 LDWI
              e048 0000  ld   $00
              e049 0002  ld   $02
              e04a 002b  ld   $2b         ;03ba STW
              e04b 001a  ld   $1a         ;03ba '_vLR'
              e04c 0059  ld   $59         ;03bc LDI
              e04d 00ad  ld   $ad
              e04e 002b  ld   $2b         ;03be STW
              e04f 0022  ld   $22         ;03be '_sysFn'
              e050 00b4  ld   $b4         ;03c0 SYS
              e051 00e3  ld   $e3
              e052 0021  ld   $21         ;03c2 LDW
              e053 0042  ld   $42         ;03c2 'j'
              e054 00e6  ld   $e6         ;03c4 SUBI
              e055 0001  ld   $01
              e056 0035  ld   $35         ;03c6 BCC
              e057 004d  ld   $4d         ;03c7 GT
              e058 003e  ld   $3e
              e059 0063  ld   $63         ;03c9 POP
              e05a 00ff  ld   $ff         ;03ca RET
              e05b 002b  ld   $2b         ;03cb STW
              e05c 004a  ld   $4a         ;03cb 'CheckCard'
              e05d 00cd  ld   $cd         ;03cd DEF
              e05e 00e3  ld   $e3
              e05f 0059  ld   $59         ;03cf LDI
              e060 00ff  ld   $ff
              e061 005e  ld   $5e         ;03d1 ST
              e062 002a  ld   $2a
              e063 0059  ld   $59         ;03d3 LDI
              e064 002a  ld   $2a
              e065 002b  ld   $2b         ;03d5 STW
              e066 0024  ld   $24         ;03d5 '_sysArgs0'
              e067 00e3  ld   $e3         ;03d7 ADDI
              e068 0001  ld   $01
              e069 002b  ld   $2b         ;03d9 STW
              e06a 0026  ld   $26         ;03d9 '_sysArgs2'
              e06b 0011  ld   $11         ;03db LDWI
              e06c 0015  ld   $15
              e06d 000b  ld   $0b
              e06e 002b  ld   $2b         ;03de STW
              e06f 0022  ld   $22         ;03de '_sysFn'
              e070 00b4  ld   $b4         ;03e0 SYS
              e071 00cc  ld   $cc
              e072 001a  ld   $1a         ;03e2 LD
              e073 002a  ld   $2a
              e074 00ff  ld   $ff         ;03e4 RET
              e075 002b  ld   $2b         ;03e5 STW
              e076 0048  ld   $48         ;03e5 'SendOnesToCard'
              e077 0093  ld   $93         ;03e7 INC
              e078 001b  ld   $1b
              e079 00ff  ld   $ff         ;03e9 RET
              e07a 0004  ld   $04         ;| RAM segment address (high byte first)
              e07b 0000  ld   $00         ;|
              e07c 00d5  ld   $d5         ;| Length (1..256)
              e07d 0011  ld   $11         ;0400 LDWI
              e07e 000f  ld   $0f
              e07f 000b  ld   $0b
              e080 002b  ld   $2b         ;0403 STW
              e081 0022  ld   $22
              e082 0059  ld   $59         ;0405 LDI
              e083 0000  ld   $00
              e084 00b4  ld   $b4         ;0407 SYS
              e085 00f6  ld   $f6
              e086 0011  ld   $11         ;0409 LDWI
              e087 0012  ld   $12
              e088 000b  ld   $0b
              e089 002b  ld   $2b         ;040c STW
              e08a 0022  ld   $22
              e08b 0059  ld   $59         ;040e LDI
              e08c 0000  ld   $00
              e08d 00b4  ld   $b4         ;0410 SYS
              e08e 00f8  ld   $f8
              e08f 00b4  ld   $b4         ;0412 SYS
              e090 00f8  ld   $f8
              e091 00b4  ld   $b4         ;0414 SYS
              e092 00f8  ld   $f8
              e093 00b4  ld   $b4         ;0416 SYS
              e094 00f8  ld   $f8
              e095 0011  ld   $11         ;0418 LDWI
              e096 0058  ld   $58
              e097 0001  ld   $01
              e098 00cf  ld   $cf         ;041b CALL
              e099 0046  ld   $46         ;041b 'SetupChannel'
              e09a 0011  ld   $11         ;041d LDWI
              e09b 0070  ld   $70
              e09c 0002  ld   $02
              e09d 00cf  ld   $cf         ;0420 CALL
              e09e 0046  ld   $46         ;0420 'SetupChannel'
              e09f 0011  ld   $11         ;0422 LDWI
              e0a0 0078  ld   $78
              e0a1 0003  ld   $03
              e0a2 00cf  ld   $cf         ;0425 CALL
              e0a3 0046  ld   $46         ;0425 'SetupChannel'
              e0a4 0011  ld   $11         ;0427 LDWI
              e0a5 007e  ld   $7e
              e0a6 0004  ld   $04
              e0a7 00cf  ld   $cf         ;042a CALL
              e0a8 0046  ld   $46         ;042a 'SetupChannel'
              e0a9 0011  ld   $11         ;042c LDWI
              e0aa 0000  ld   $00
              e0ab 0001  ld   $01
              e0ac 002b  ld   $2b         ;042f STW
              e0ad 0044  ld   $44         ;042f 'p'
              e0ae 0011  ld   $11         ;0431 LDWI
              e0af 0000  ld   $00
              e0b0 0008  ld   $08
              e0b1 002b  ld   $2b         ;0434 STW
              e0b2 0034  ld   $34         ;0434 'q'
              e0b3 001a  ld   $1a         ;0436 LD
              e0b4 0035  ld   $35         ;0436 'q'+1
              e0b5 00f0  ld   $f0         ;0438 POKE
              e0b6 0044  ld   $44         ;0438 'p'
              e0b7 0093  ld   $93         ;043a INC
              e0b8 0044  ld   $44         ;043a 'p'
              e0b9 0059  ld   $59         ;043c LDI
              e0ba 0000  ld   $00
              e0bb 00f0  ld   $f0         ;043e POKE
              e0bc 0044  ld   $44         ;043e 'p'
              e0bd 0093  ld   $93         ;0440 INC
              e0be 0044  ld   $44         ;0440 'p'
              e0bf 0093  ld   $93         ;0442 INC
              e0c0 0035  ld   $35         ;0442 'q'+1
              e0c1 0021  ld   $21         ;0444 LDW
              e0c2 0034  ld   $34         ;0444 'q'
              e0c3 0035  ld   $35         ;0446 BCC
              e0c4 004d  ld   $4d         ;0447 GT
              e0c5 0034  ld   $34
              e0c6 0011  ld   $11         ;0449 LDWI
              e0c7 0003  ld   $03
              e0c8 000b  ld   $0b
              e0c9 002b  ld   $2b         ;044c STW
              e0ca 0022  ld   $22         ;044c '_sysFn'
              e0cb 0059  ld   $59         ;044e LDI
              e0cc 0020  ld   $20
              e0cd 005e  ld   $5e         ;0450 ST
              e0ce 0025  ld   $25
              e0cf 0011  ld   $11         ;0452 LDWI
              e0d0 0000  ld   $00
              e0d1 0008  ld   $08
              e0d2 002b  ld   $2b         ;0455 STW
              e0d3 0044  ld   $44         ;0455 'p'
              e0d4 002b  ld   $2b         ;0457 STW
              e0d5 0026  ld   $26         ;0457 '_sysArgs2'
              e0d6 0059  ld   $59         ;0459 LDI
              e0d7 00a0  ld   $a0
              e0d8 005e  ld   $5e         ;045b ST
              e0d9 0024  ld   $24
              e0da 00b4  ld   $b4         ;045d SYS
              e0db 00f4  ld   $f4
              e0dc 0011  ld   $11         ;045f LDWI
              e0dd 0000  ld   $00
              e0de 0001  ld   $01
              e0df 0099  ld   $99         ;0462 ADDW
              e0e0 0044  ld   $44         ;0462 'p'
              e0e1 0035  ld   $35         ;0464 BCC
              e0e2 004d  ld   $4d         ;0465 GT
              e0e3 0053  ld   $53
              e0e4 001a  ld   $1a         ;0467 LD
              e0e5 002e  ld   $2e
              e0e6 0082  ld   $82         ;0469 ANDI
              e0e7 0080  ld   $80
              e0e8 0035  ld   $35         ;046b BCC
              e0e9 0072  ld   $72         ;046c NE
              e0ea 0070  ld   $70
              e0eb 005e  ld   $5e         ;046e ST
              e0ec 002e  ld   $2e
              e0ed 005e  ld   $5e         ;0470 ST
              e0ee 002d  ld   $2d
              e0ef 0059  ld   $59         ;0472 LDI
              e0f0 0009  ld   $09
              e0f1 005e  ld   $5e         ;0474 ST
              e0f2 002f  ld   $2f
              e0f3 0011  ld   $11         ;0476 LDWI
              e0f4 0014  ld   $14
              e0f5 0008  ld   $08
              e0f6 002b  ld   $2b         ;0479 STW
              e0f7 003e  ld   $3e         ;0479 'Pos'
              e0f8 00cd  ld   $cd         ;047b DEF
              e0f9 0089  ld   $89
              e0fa 002a  ld   $2a         ;047d '*'
              e0fb fe00  bra  ac          ;+-----------------------------------+
              e0fc fcfd  bra  $e0fd       ;|                                   |
              e0fd 1418  ld   $18,y       ;| Trampoline for page $e000 lookups |
              e0fe e006  jmp  y,$06       ;|                                   |
              e0ff c218  st   [$18]       ;+-----------------------------------+
              e100 002a  ld   $2a         ;047e '*'
              e101 002a  ld   $2a         ;047f '*'
              e102 0020  ld   $20         ;0480 ' '
              e103 0047  ld   $47         ;0481 'G'
              e104 0069  ld   $69         ;0482 'i'
              e105 0067  ld   $67         ;0483 'g'
              e106 0061  ld   $61         ;0484 'a'
              e107 0074  ld   $74         ;0485 't'
              e108 0072  ld   $72         ;0486 'r'
              e109 006f  ld   $6f         ;0487 'o'
              e10a 006e  ld   $6e         ;0488 'n'
              e10b 0020  ld   $20         ;0489 ' '
              e10c 0000  ld   $00         ;048a 0
              e10d 00cf  ld   $cf         ;048b CALL
              e10e 0040  ld   $40         ;048b 'PrintS'
              e10f 00cf  ld   $cf         ;048d CALL
              e110 003a  ld   $3a         ;048d 'CheckMemory'
              e111 00cd  ld   $cd         ;048f DEF
              e112 00b0  ld   $b0
              e113 004b  ld   $4b         ;0491 'K'
              e114 0020  ld   $20         ;0492 ' '
              e115 002a  ld   $2a         ;0493 '*'
              e116 002a  ld   $2a         ;0494 '*'
              e117 002a  ld   $2a         ;0495 '*'
              e118 0020  ld   $20         ;0496 ' '
              e119 000a  ld   $0a         ;0497 10
              e11a 0020  ld   $20         ;0498 ' '
              e11b 0054  ld   $54         ;0499 'T'
              e11c 0054  ld   $54         ;049a 'T'
              e11d 004c  ld   $4c         ;049b 'L'
              e11e 0020  ld   $20         ;049c ' '
              e11f 006d  ld   $6d         ;049d 'm'
              e120 0069  ld   $69         ;049e 'i'
              e121 0063  ld   $63         ;049f 'c'
              e122 0072  ld   $72         ;04a0 'r'
              e123 006f  ld   $6f         ;04a1 'o'
              e124 0063  ld   $63         ;04a2 'c'
              e125 006f  ld   $6f         ;04a3 'o'
              e126 006d  ld   $6d         ;04a4 'm'
              e127 0070  ld   $70         ;04a5 'p'
              e128 0075  ld   $75         ;04a6 'u'
              e129 0074  ld   $74         ;04a7 't'
              e12a 0065  ld   $65         ;04a8 'e'
              e12b 0072  ld   $72         ;04a9 'r'
              e12c 0020  ld   $20         ;04aa ' '
              e12d 0052  ld   $52         ;04ab 'R'
              e12e 004f  ld   $4f         ;04ac 'O'
              e12f 004d  ld   $4d         ;04ad 'M'
              e130 0076  ld   $76         ;04ae 'v'
              e131 0058  ld   $58         ;04af 'X'
              e132 0030  ld   $30         ;04b0 '0'
              e133 0000  ld   $00         ;04b1 0
              e134 00cf  ld   $cf         ;04b2 CALL
              e135 0040  ld   $40         ;04b2 'PrintS'
              e136 0011  ld   $11         ;04b4 LDWI
              e137 0000  ld   $00
              e138 000b  ld   $0b
              e139 002b  ld   $2b         ;04b7 STW
              e13a 0022  ld   $22         ;04b7 '_sysFn'
              e13b 0059  ld   $59         ;04b9 LDI
              e13c 0001  ld   $01
              e13d 00b4  ld   $b4         ;04bb SYS
              e13e 00e7  ld   $e7
              e13f 0021  ld   $21         ;04bd LDW
              e140 0030  ld   $30         ;04bd 'CtrlBits'
              e141 00ad  ld   $ad         ;04bf PEEK
              e142 0035  ld   $35         ;04c0 BCC
              e143 003f  ld   $3f         ;04c1 EQ
              e144 00c3  ld   $c3
              e145 00cf  ld   $cf         ;04c3 CALL
              e146 004a  ld   $4a         ;04c3 'CheckCard'
              e147 0011  ld   $11         ;04c5 LDWI
              e148 006f  ld   $6f
              e149 00db  ld   $db
              e14a 002b  ld   $2b         ;04c8 STW
              e14b 0024  ld   $24         ;04c8 '_sysArgs0'
              e14c 0011  ld   $11         ;04ca LDWI
              e14d 0000  ld   $00
              e14e 0002  ld   $02
              e14f 002b  ld   $2b         ;04cd STW
              e150 001a  ld   $1a         ;04cd '_vLR'
              e151 0059  ld   $59         ;04cf LDI
              e152 00ad  ld   $ad
              e153 002b  ld   $2b         ;04d1 STW
              e154 0022  ld   $22         ;04d1 '_sysFn'
              e155 00b4  ld   $b4         ;04d3 SYS
              e156 00e3  ld   $e3
              e157 0000  ld   $00         ;End of Core/Reset_vX0.gcl, size 715
sys_ReadRomDir:
              e158 f05e  beq  .sysDir#20
              e159 1024  ld   $24,x
              e15a 1600  ld   ac,y
              e15b 0118  ld   [$18]
              e15c a00e  suba $0e
              e15d e200  jmp  y,ac
.sysDir#20:   e15e 1400  ld   $00,y
              e15f 0063  ld   $63
              e160 14e1  ld   $e1,y
              e161 e200  jmp  y,ac
              e162 1400  ld   $00,y
.sysDir#25:   e163 dc52  st   $52,[y,x++] ;'R'
              e164 dc65  st   $65,[y,x++] ;'e'
              e165 dc73  st   $73,[y,x++] ;'s'
              e166 dc65  st   $65,[y,x++] ;'e'
              e167 dc74  st   $74,[y,x++] ;'t'
              e168 dc00  st   $00,[y,x++] ;'\x00'
              e169 dc00  st   $00,[y,x++] ;'\x00'
              e16a dc00  st   $00,[y,x++] ;'\x00'
              e16b 008d  ld   $8d
              e16c c218  st   [$18]
              e16d 00de  ld   $de
              e16e 14e1  ld   $e1,y
              e16f e071  jmp  y,$71
              e170 c219  st   [$19]
.sysDir#39:   e171 1403  ld   $03,y
              e172 e0cb  jmp  y,$cb
              e173 00ea  ld   $ea
              e174 0200  nop              ;135 fillers
              e175 0200  nop
              e176 0200  nop
              * 135 times
              e1fb fe00  bra  ac          ;+-----------------------------------+
              e1fc fcfd  bra  $e1fd       ;|                                   |
              e1fd 1418  ld   $18,y       ;| Trampoline for page $e100 lookups |
              e1fe e006  jmp  y,$06       ;|                                   |
              e1ff c218  st   [$18]       ;+-----------------------------------+
              e200
